import imports
lemma new_lemma_48000 (h1 : function.extfun Type list) : list.nodup (function.extfun_app h1 (linear_ordered_add_comm_group string_imp)) := sorry --non-trivial
lemma new_lemma_48001 (h0 : not (topological_space (random_gen (semiring congr_arg_kind)) -> false)) : @totally_disconnected_space.{0} (random_gen.{0} (semiring.{0} congr_arg_kind)) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} (semiring.{0} congr_arg_kind))) h0)  := sorry --non-trivial
lemma new_lemma_48002 (h0 : topological_space (add_comm_monoid (has_add (has_add Type)))) : preirreducible_space (add_comm_monoid (has_add (has_add Type))) := sorry --non-trivial
lemma new_lemma_48003 (h0 : topological_space (has_bot name)) : sequential_space (has_bot name) := sorry --non-trivial
lemma new_lemma_48004 (h0 : not (topological_space (with_bot linarith.comp) -> false)) : @preirreducible_space.{0} (with_bot.{0} linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (with_bot.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_48005 (h0 : not (complete_lattice (has_norm num) -> false)) : @is_atomistic.{0} (has_norm.{0} num) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_norm.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_48006 (h0 : functor.add_const (ring (monoid unsigned)) empty) : @strong_rank_condition.{0} (monoid.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (monoid.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_48007 (h0 : list (generalized_boolean_algebra (ring Type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_48008 (h0 : topological_space (rel reducibility_hints string_imp)) : t0_space (rel reducibility_hints string_imp) := sorry --non-trivial
lemma new_lemma_48009 (h0 : not (topological_space nnreal -> false)) : totally_separated_space nnreal := sorry --non-trivial
lemma new_lemma_48010 (h0 : group (filter unsigned)) : normalizer_condition (filter unsigned) := sorry --non-trivial
lemma new_lemma_48011 (h0 : function.extfun (finset Type) (has_mem.mem (has_top num))) : @is_domain.{0} (has_top.{0} num) (@finset.pi.empty.{1 0} Type ring.{0} (has_top.{0} num) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_top.{0} num)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_48012 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (measurable_space.{0} (semiring.{0} empty)) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (measurable_space.{0} (semiring.{0} empty)))  := sorry --non-trivial
lemma new_lemma_48013 (h0 : functor.add_const (ring (normed_linear_ordered_group congr_arg_kind)) unsigned) : @is_domain.{0} (normed_linear_ordered_group.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (ring.{0} (normed_linear_ordered_group.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48014 (h0 : preorder (add_comm_semigroup ereal)) (h1 : set (add_comm_semigroup ereal)) : set.is_pwo h1 := sorry --non-trivial
lemma new_lemma_48015 (h0 : uniform_space (cancel_monoid unsigned)) : complete_space (cancel_monoid unsigned) := sorry --non-trivial
lemma new_lemma_48016 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (complete_linear_order.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (complete_linear_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48017 (h1 : monoid (denumerable (random_gen string_imp))) : monoid.fg (denumerable (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_48018 (h0 : cancel_comm_monoid_with_zero (complete_semilattice_Sup (has_top empty))) : unique_factorization_monoid (complete_semilattice_Sup (has_top empty)) := sorry --non-trivial
lemma new_lemma_48019 (h0 : not (function.extfun Type add_group -> false)) : @is_add_cyclic.{0} (random_gen.{0} num) (@function.extfun_app.{2 1} Type add_group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_group.{0}) h0) (random_gen.{0} num))  := sorry --non-trivial
lemma new_lemma_48020 (h0 : add_group (add_cancel_monoid (has_Inf (has_Inf pos)))) : is_add_cyclic (add_cancel_monoid (has_Inf (has_Inf pos))) := sorry --non-trivial
lemma new_lemma_48021 (h0 : ordered_comm_monoid (linear_ordered_field congr_arg_kind)) : has_exists_mul_of_le (linear_ordered_field congr_arg_kind) := sorry --non-trivial
lemma new_lemma_48022 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (bin_tree.{0} empty) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (bin_tree.{0} empty))  := sorry --non-trivial
lemma new_lemma_48023 (h0 : ordered_add_comm_monoid (has_to_string (boolean_algebra Type))) : archimedean (has_to_string (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_48024 (h0 : functor.add_const (semiring (ordered_ring congr_arg_kind)) congr_arg_kind) : @is_noetherian_ring.{0} (ordered_ring.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (semiring.{0} (ordered_ring.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_48025 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_noetherian_ring.{0} (has_neg.{0} num) (@function.extfun_app.{2 1} Type semiring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 semiring.{0}) (has_neg.{0} num))  := sorry --non-trivial
lemma new_lemma_48026 (h0 : topological_space (complete_distrib_lattice (has_add (has_add (has_add Type))))) : locally_compact_space (complete_distrib_lattice (has_add (has_add (has_add Type)))) := sorry --non-trivial
lemma new_lemma_48027 (h0 : not (topological_space (complete_semilattice_Sup empty) -> false)) : @t0_space.{0} (complete_semilattice_Sup.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (complete_semilattice_Sup.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_48028 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @normalizer_condition.{1} (add_cancel_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 group.{1}) (add_cancel_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_48029 (h0 : add_group (add_right_cancel_monoid (semiring unsigned))) : is_add_cyclic (add_right_cancel_monoid (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_48030 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (canonically_ordered_comm_semiring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (canonically_ordered_comm_semiring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_48031 (h0 : not (function.extfun Type filter -> false)) : filter.ne_bot (function.extfun_app (classical.by_contradiction' h0) (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_48032 (h0 : finset (add_comm_monoid Type)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_48033 (h0 : functor.add_const (topological_space (complete_linear_order unsigned)) congr_arg_kind) : @topological_space.separable_space.{0} (complete_linear_order.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_linear_order.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_48034 (h0 : prod (monoid_with_zero pos) (monoid_with_zero pos)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_48035 (h0 : ordered_add_comm_monoid (semiring congr_arg_kind)) : archimedean (semiring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_48036 (h0 : topological_space (monoid (option (option unsigned)))) : totally_disconnected_space (monoid (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_48037 (h0 : ring (normed_field linarith.comp_source)) : is_domain (normed_field linarith.comp_source) := sorry --non-trivial
lemma new_lemma_48038 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (has_neg_part.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_neg_part.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48039 (h0 : topological_space (linear_ordered_add_comm_monoid_with_top num)) : preconnected_space (linear_ordered_add_comm_monoid_with_top num) := sorry --non-trivial
lemma new_lemma_48040 (h0 : ring (has_nndist (has_to_string (has_to_string (has_to_string pos))))) : strong_rank_condition (has_nndist (has_to_string (has_to_string (has_to_string pos)))) := sorry --non-trivial
lemma new_lemma_48041 (h0 : group (add_comm_monoid (option pos))) : is_cyclic (add_comm_monoid (option pos)) := sorry --non-trivial
lemma new_lemma_48042 (h0 : topological_space (has_inter unsigned)) : t0_space (has_inter unsigned) := sorry --non-trivial
lemma new_lemma_48043 (h0 : fin has_zero.zero) : @Lim.{0} Prop sierpinski_space (@nonempty_of_inhabited.{1} Prop sort.inhabited.{0}) (@matrix.vec_empty.{0} (filter.{0} Prop) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_48044 (h0 : monoid (generalized_boolean_algebra (has_pos_part (has_Inf (has_add linarith.comp))))) : monoid.fg (generalized_boolean_algebra (has_pos_part (has_Inf (has_add linarith.comp)))) := sorry --non-trivial
lemma new_lemma_48045 (h0 : ring (measurable_space (has_norm fun_info))) : strong_rank_condition (measurable_space (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_48046 (h0 : uniform_space (has_neg (option congr_arg_kind))) : complete_space (has_neg (option congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_48047 (h0 : topological_space (topological_space num)) : irreducible_space (topological_space num) := sorry --non-trivial
lemma new_lemma_48048 (h0 : functor.comp topological_space add_cancel_monoid unsigned) : @normal_space.{0} (add_cancel_monoid.{0} unsigned) (@functor.comp.run.{0 0 0} topological_space.{0} add_cancel_monoid.{0} unsigned h0)  := sorry --non-trivial
lemma new_lemma_48049 (h0 : functor.add_const (group (has_to_string pos)) (boolean_algebra name)) : @normalizer_condition.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_to_string.{0} pos)) (boolean_algebra.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_48050 (h0 : fin has_zero.zero) : @locally_compact_space.{0} (ordered_comm_monoid.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (ordered_comm_monoid.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_48051 (h0 : functor.add_const (group (has_nndist name)) Type) : @normalizer_condition.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 1} (group.{0} (has_nndist.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_48052 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (normed_comm_ring.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_comm_ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48053 (h0 : complete_lattice (semiring (semiring empty))) : is_compactly_generated (semiring (semiring empty)) := sorry --non-trivial
lemma new_lemma_48054 (h0 : functor.add_const (ring (finset unsigned)) Type) : @is_principal_ideal_ring.{0} (finset.{0} unsigned) (@functor.add_const.run.{0 1} (ring.{0} (finset.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_48055 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (add_cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_group.{0} h0 (add_cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48056 (h0 : functor.add_const (topological_space (add_cancel_monoid Type)) (has_neg (has_add Type))) : @preconnected_space.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (add_cancel_monoid.{1} Type)) (has_neg.{1} (has_add.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_48057 (h0 : topological_space (linear_ordered_add_comm_group (has_nnnorm linarith.ineq))) : path_connected_space (linear_ordered_add_comm_group (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_48058 (h0 : ring (has_emptyc (semiring (has_norm (semiring congr_arg_kind))))) : is_domain (has_emptyc (semiring (has_norm (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_48059 (h0 : functor.add_const (topological_space (add_comm_monoid name)) (boolean_algebra Type)) : @t0_space.{0} (add_comm_monoid.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (add_comm_monoid.{0} name)) (boolean_algebra.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_48060 (h0 : function.extfun Type group) : @normalizer_condition.{0} (boolean_algebra.core.{0} pos) (@function.extfun_app.{2 1} Type group.{0} h0 (boolean_algebra.core.{0} pos))  := sorry --non-trivial
lemma new_lemma_48061 (h0 : topological_space (has_add (has_neg (has_neg name)))) : discrete_topology (has_add (has_neg (has_neg name))) := sorry --non-trivial
lemma new_lemma_48062 (h1 : topological_space (distrib_lattice char)) : path_connected_space (distrib_lattice char) := sorry --non-trivial
lemma new_lemma_48063 (h0 : not (has_mem.mem (linear_ordered_add_comm_group linarith.ineq) has_emptyc.emptyc -> false)) : @irreducible_space.{0} (linear_ordered_add_comm_group.{0} linarith.ineq) (@finset.pi.empty.{1 0} Type topological_space.{0} (linear_ordered_add_comm_group.{0} linarith.ineq) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (linear_ordered_add_comm_group.{0} linarith.ineq) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_48064 (h0 : functor.add_const (function.extfun (Type 1) ring) Type) : @rank_condition.{1} (has_to_string.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) ring.{1}) Type h0) (has_to_string.{1} Type))  := sorry --non-trivial
lemma new_lemma_48065 (h0 : set (monoid string.iterator_imp)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_48066 (h1 : add_comm_semigroup (add_comm_semigroup enat) -> add_comm_semigroup (add_comm_semigroup enat)) (h2 : add_comm_semigroup (add_comm_semigroup enat)) : function.is_fixed_pt h1 h2 := sorry --non-trivial
lemma new_lemma_48067 (h0 : has_lt (has_compl to_additive.value_type)) : no_max_order (has_compl to_additive.value_type) := sorry --non-trivial
lemma new_lemma_48068 (h0 : add_monoid (has_norm (has_top linarith.comp))) : add_monoid.fg (has_norm (has_top linarith.comp)) := sorry --non-trivial
lemma new_lemma_48069 (h0 : topological_space (ordered_comm_ring (has_Inf real))) : discrete_topology (ordered_comm_ring (has_Inf real)) := sorry --non-trivial
lemma new_lemma_48070 (h0 : topological_space (ordered_comm_monoid Type)) : topological_space.separable_space (ordered_comm_monoid Type) := sorry --non-trivial
lemma new_lemma_48071 (h0 : topological_space (has_dist (comm_group (has_neg_part Type)))) : locally_compact_space (has_dist (comm_group (has_neg_part Type))) := sorry --non-trivial
lemma new_lemma_48072 (h0 : ring (ordered_cancel_add_comm_monoid (option unsigned))) : is_principal_ideal_ring (ordered_cancel_add_comm_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_48073 (h0 : not (ring (random_gen (has_ssubset (mul_one_class reducibility_hints))) -> false)) : @rank_condition.{0} (random_gen.{0} (has_ssubset.{0} (mul_one_class.{0} reducibility_hints))) (@classical.by_contradiction'.{1} (ring.{0} (random_gen.{0} (has_ssubset.{0} (mul_one_class.{0} reducibility_hints)))) h0)  := sorry --non-trivial
lemma new_lemma_48074 (h0 : function.extfun Type group) : @normalizer_condition.{0} (ordered_comm_monoid.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (ordered_comm_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_48075 (h0 : ring (has_union congr_arg_kind)) : rank_condition (has_union congr_arg_kind) := sorry --non-trivial
lemma new_lemma_48076 (h0 : ring (boolean_algebra (has_Inf (has_neg (has_Inf name))))) : is_domain (boolean_algebra (has_Inf (has_neg (has_Inf name)))) := sorry --non-trivial
lemma new_lemma_48077 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (linear_ordered_field.{0} empty) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (linear_ordered_field.{0} empty))  := sorry --non-trivial
lemma new_lemma_48078 (h0 : functor.add_const (ring (left_cancel_monoid unsigned)) unsigned) : @is_domain.{0} (left_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (left_cancel_monoid.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48079 (h1 : uniform_space (normed_field environment.projection_info)) : complete_space (normed_field environment.projection_info) := sorry --non-trivial
lemma new_lemma_48080 (h0 : topological_space (has_union (has_norm (has_norm (has_norm (has_norm (has_norm empty))))))) : preirreducible_space (has_union (has_norm (has_norm (has_norm (has_norm (has_norm empty)))))) := sorry --non-trivial
lemma new_lemma_48081 (h0 : functor.add_const (fin has_zero.zero) Type) : @is_atomistic.{0} (ordered_comm_ring.{0} real) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type complete_lattice.{0}) (@functor.add_const.run.{0 1} (fin (@has_zero.zero.{0} nat nat.has_zero)) Type h0)) (ordered_comm_ring.{0} real))  := sorry --non-trivial
lemma new_lemma_48082 (h0 : add_group (option (semiring unsigned))) : is_add_cyclic (option (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_48083 (h0 : topological_space (has_nndist (ring (has_to_string Type)))) : preirreducible_space (has_nndist (ring (has_to_string Type))) := sorry --non-trivial
lemma new_lemma_48084 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (linear_ordered_cancel_comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_ordered_cancel_comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_48085 (h0 : topological_space (with_zero (has_nnnorm fun_info))) : path_connected_space (with_zero (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_48086 (h0 : group (linear_ordered_add_comm_group string_imp)) : normalizer_condition (linear_ordered_add_comm_group string_imp) := sorry --non-trivial
lemma new_lemma_48087 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (ordered_comm_ring.{0} real) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (ordered_comm_ring.{0} real))  := sorry --non-trivial
lemma new_lemma_48088 (h0 : has_neg (nondiscrete_normed_field char)) (h1 : measurable_space (nondiscrete_normed_field char)) : has_measurable_neg (nondiscrete_normed_field char) := sorry --non-trivial
lemma new_lemma_48089 (h0 : complete_lattice (id string_imp)) : complete_lattice.is_Sup_finite_compact (id string_imp) := sorry --non-trivial
lemma new_lemma_48090 (h0 : uniform_space (linear_ordered_comm_group_with_zero char)) : complete_space (linear_ordered_comm_group_with_zero char) := sorry --non-trivial
lemma new_lemma_48091 (h1 : not (topological_space (has_norm num) -> false)) : @t0_space.{0} (has_norm.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (has_norm.{0} num)) h1)  := sorry --non-trivial
lemma new_lemma_48092 (h0 : add_monoid (has_zero (ring environment.implicit_infer_kind))) : add_monoid.fg (has_zero (ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_48093 (h0 : topological_space (has_union (has_norm linarith.comp))) : preirreducible_space (has_union (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_48094 (h0 : functor.add_const (function.extfun Type uniform_space) name) : @separated_space.{0} (boolean_algebra.core.{0} name) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) name h0) (boolean_algebra.core.{0} name))  := sorry --non-trivial
lemma new_lemma_48095 (h0 : topological_space (random_gen (has_norm (semiring num)))) : totally_separated_space (random_gen (has_norm (semiring num))) := sorry --non-trivial
lemma new_lemma_48096 (h0 : function.extfun nat fin) : @complete_space.{0} (canonically_ordered_monoid.{0} pos) (@matrix.vec_empty.{0} (uniform_space.{0} (canonically_ordered_monoid.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_48097 (h0 : group (has_norm (has_norm (has_norm linarith.ineq)))) : normalizer_condition (has_norm (has_norm (has_norm linarith.ineq))) := sorry --non-trivial
lemma new_lemma_48098 (h0 : topological_space (boolean_algebra (finset (finset linarith.comp)))) : path_connected_space (boolean_algebra (finset (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_48099 (h0 : group (simple_graph (finset (has_add linarith.comp)))) : group.fg (simple_graph (finset (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_48100 (h0 : uniform_space (linear_order empty)) : complete_space (linear_order empty) := sorry --non-trivial
lemma new_lemma_48101 (h0 : topological_space (comm_group (has_neg_part (has_to_string (ring pos))))) : loc_path_connected_space (comm_group (has_neg_part (has_to_string (ring pos)))) := sorry --non-trivial
lemma new_lemma_48102 (h0 : complete_lattice (normed_field reducibility_hints)) : complete_lattice.is_Sup_finite_compact (normed_field reducibility_hints) := sorry --non-trivial
lemma new_lemma_48103 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (has_inter.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (has_inter.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48104 (h0 : functor.add_const (fin has_zero.zero) (add_comm_monoid Type)) : @is_add_cyclic.{0} (add_comm_monoid.{0} real) (@matrix.vec_empty.{0} (add_group.{0} (add_comm_monoid.{0} real)) (@functor.add_const.run.{0 1} (fin (@has_zero.zero.{0} nat nat.has_zero)) (add_comm_monoid.{1} Type) h0))  := sorry --non-trivial
lemma new_lemma_48105 (h0 : functor.add_const (cancel_comm_monoid_with_zero (add_comm_monoid pos)) linarith.comp) : @unique_factorization_monoid.{0} (add_comm_monoid.{0} pos) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (add_comm_monoid.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_48106 (h0 : ordered_comm_monoid (ring (has_add (has_neg_part name)))) : has_exists_mul_of_le (ring (has_add (has_neg_part name))) := sorry --non-trivial
lemma new_lemma_48107 (h0 : functor.add_const (topological_space (has_add environment.implicit_infer_kind)) name) : @locally_compact_space.{0} (has_add.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_48108 (h0 : topological_space (has_norm (has_norm num))) : locally_compact_space (has_norm (has_norm num)) := sorry --non-trivial
lemma new_lemma_48109 (h0 : int) : int.nonneg (int.neg h0) := sorry --non-trivial
lemma new_lemma_48110 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @topological_space.separable_space.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_48111 (h0 : not (topological_space (random_gen fun_info) -> false)) : @totally_disconnected_space.{0} (random_gen.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_48112 (h0 : list (generalized_boolean_algebra (ring linarith.comp))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_48113 (h0 : complete_lattice (random_gen (measurable_space linarith.ineq))) : is_atomistic (random_gen (measurable_space linarith.ineq)) := sorry --non-trivial
lemma new_lemma_48114 (h0 : topological_space (id (has_norm congr_arg_kind))) : totally_separated_space (id (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_48115 (h0 : topological_space (with_one (comm_ring fun_info))) : totally_disconnected_space (with_one (comm_ring fun_info)) := sorry --non-trivial
lemma new_lemma_48116 (h0 : complete_lattice (pseudo_metric_space (option (option (option (option unsigned)))))) : is_compactly_generated (pseudo_metric_space (option (option (option (option unsigned))))) := sorry --non-trivial
lemma new_lemma_48117 (h0 : topological_space (comm_group (semigroup name))) : regular_space (comm_group (semigroup name)) := sorry --non-trivial
lemma new_lemma_48118 (h0 : functor.add_const (function.extfun Type ordered_comm_monoid) unsigned) : @has_exists_mul_of_le.{0} (comm_group.{0} pos) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) unsigned h0) (comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_48119 (h0 : function.extfun nat fin) : irreducible_space real := sorry --non-trivial
lemma new_lemma_48120 (h0 : topological_space (filter unsigned)) : t0_space (filter unsigned) := sorry --non-trivial
lemma new_lemma_48121 (h0 : function.extfun nat fin) : @rank_condition.{0} (has_pos_part.{0} real) (@function.extfun_app.{2 1} Type ring.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type ring.{0}) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero))) (has_pos_part.{0} real))  := sorry --non-trivial
lemma new_lemma_48122 (h0 : functor.add_const (function.extfun Type group) Type) : @is_simple_group.{0} (has_to_string.{0} name) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type group.{0}) Type h0) (has_to_string.{0} name))  := sorry --non-trivial
lemma new_lemma_48123 (h0 : complete_lattice (complete_semilattice_Sup num)) : is_atomistic (complete_semilattice_Sup num) := sorry --non-trivial
lemma new_lemma_48124 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (complete_linear_order.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_linear_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48125 (h0 : functor.add_const (complete_lattice (comm_group Type)) (has_add Type)) : @is_atomistic.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 1} (complete_lattice.{1} (comm_group.{1} Type)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_48126 (h0 : functor.add_const (topological_space (has_star congr_arg_kind)) congr_arg_kind) : @discrete_topology.{0} (has_star.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_star.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_48127 (h0 : has_lt (simple_graph (mul_one_class enat))) : no_max_order (simple_graph (mul_one_class enat)) := sorry --non-trivial
lemma new_lemma_48128 (h0 : prod (add_cancel_monoid unsigned) (add_cancel_monoid unsigned)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_48129 (h0 : ring (finset (ring pos))) : is_principal_ideal_ring (finset (ring pos)) := sorry --non-trivial
lemma new_lemma_48130 (h0 : topological_space (has_nnnorm (random_gen char))) : totally_disconnected_space (has_nnnorm (random_gen char)) := sorry --non-trivial
lemma new_lemma_48131 (h0 : functor.add_const (group (finset empty)) empty) : @normalizer_condition.{0} (finset.{0} empty) (@functor.add_const.run.{0 0} (group.{0} (finset.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_48132 (h0 : functor.add_const (add_group (has_star unsigned)) empty) : @is_add_cyclic.{0} (has_star.{0} unsigned) (@functor.add_const.run.{0 0} (add_group.{0} (has_star.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_48133 (h0 : list (add_cancel_monoid (option (option ennreal)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_48134 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : finset.nonempty (function.extfun_app (function.extfun_app h0 finset) (plift num)) := sorry --non-trivial
lemma new_lemma_48135 (h0 : topological_space (linear_ordered_comm_ring (semiring (semiring (semiring (semiring empty)))))) : discrete_topology (linear_ordered_comm_ring (semiring (semiring (semiring (semiring empty))))) := sorry --non-trivial
lemma new_lemma_48136 (h0 : ring (measure_theory.measure_space (semiring (semiring (semiring congr_arg_kind))))) : strong_rank_condition (measure_theory.measure_space (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_48137 (h0 : fin has_zero.zero) : @is_add_cyclic.{1} (canonically_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (add_group.{1} (canonically_ordered_monoid.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_48138 (h0 : prod (filter empty) (filter empty)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_48139 (h0 : topological_space (has_star (ordered_ring (ordered_ring empty)))) : loc_path_connected_space (has_star (ordered_ring (ordered_ring empty))) := sorry --non-trivial
lemma new_lemma_48140 (h1 : group (has_ssubset linarith.ineq)) : group.fg (has_ssubset linarith.ineq) := sorry --non-trivial
lemma new_lemma_48141 (h0 : topological_space (with_one (semiring empty))) : irreducible_space (with_one (semiring empty)) := sorry --non-trivial
lemma new_lemma_48142 (h0 : functor.comp topological_space boolean_algebra Type) : @sequential_space.{1} (boolean_algebra.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} boolean_algebra.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_48143 (h0 : uniform_space (normed_lattice_add_comm_group pos)) : complete_space (normed_lattice_add_comm_group pos) := sorry --non-trivial
lemma new_lemma_48144 (h0 : group string_imp) : is_cyclic string_imp := sorry --non-trivial
lemma new_lemma_48145 (h0 : complete_lattice (boolean_algebra.core (ring (ring linarith.comp)))) : is_atomistic (boolean_algebra.core (ring (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_48146 (h0 : topological_space (measure_theory.measure_space empty)) : totally_separated_space (measure_theory.measure_space empty) := sorry --non-trivial
lemma new_lemma_48147 (h0 : complete_lattice (linear_ordered_comm_ring num)) : is_compactly_generated (linear_ordered_comm_ring num) := sorry --non-trivial
lemma new_lemma_48148 (h0 : topological_space (normed_lattice_add_comm_group (sub_neg_monoid real))) : preconnected_space (normed_lattice_add_comm_group (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_48149 (h0 : function.extfun (finset Type) (has_mem.mem (semiring empty))) : @add_monoid.fg.{0} (semiring.{0} empty) (@finset.pi.empty.{1 0} Type add_monoid.{0} (semiring.{0} empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (semiring.{0} empty)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_48150 (h0 : ring (omega_complete_partial_order (option unsigned))) : is_principal_ideal_ring (omega_complete_partial_order (option unsigned)) := sorry --non-trivial
lemma new_lemma_48151 (h0 : cancel_comm_monoid_with_zero (has_neg name)) : unique_factorization_monoid (has_neg name) := sorry --non-trivial
lemma new_lemma_48152 (h0 : ring (semigroup (option pos))) : is_principal_ideal_ring (semigroup (option pos)) := sorry --non-trivial
lemma new_lemma_48153 (h0 : list (normed_comm_ring name)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_48154 (h1 : set (add_comm_semigroup fun_info -> fun_info)) : set.separates_points h1 := sorry --non-trivial
lemma new_lemma_48155 (h0 : functor.add_const (monoid (has_to_string linarith.comp)) (ring Type)) : @monoid.fg.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 1} (monoid.{0} (has_to_string.{0} linarith.comp)) (ring.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_48156 (h0 : list (has_Inf (ring (has_Inf (has_add Type))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_48157 (h0 : topological_space (complete_semilattice_Sup (has_top linarith.ineq))) : irreducible_space (complete_semilattice_Sup (has_top linarith.ineq)) := sorry --non-trivial
lemma new_lemma_48158 (h0 : functor.add_const (function.extfun (Type 1) topological_space) (has_add pos)) : @locally_compact_space.{1} (has_Inf.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) (has_add.{0} pos) h0) (has_Inf.{1} Type))  := sorry --non-trivial
lemma new_lemma_48159 (h0 : functor.add_const (ordered_comm_monoid (has_zero unsigned)) name) : @has_exists_mul_of_le.{0} (has_zero.{0} unsigned) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (has_zero.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_48160 (h0 : complete_lattice (add_comm_monoid (option unsigned))) : is_atomistic (add_comm_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_48161 (h1 : filter (div_inv_monoid (normed_field char))) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_48162 (h0 : topological_space (with_bot (semiring empty))) : normal_space (with_bot (semiring empty)) := sorry --non-trivial
lemma new_lemma_48163 (h0 : topological_space (has_neg (boolean_algebra Type))) : path_connected_space (has_neg (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_48164 (h0 : topological_space (has_Inf (has_add (has_add (ordered_comm_ring Type))))) : normal_space (has_Inf (has_add (has_add (ordered_comm_ring Type)))) := sorry --non-trivial
lemma new_lemma_48165 (h0 : uniform_space (option (semiring (semiring congr_arg_kind)))) : separated_space (option (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_48166 (h0 : topological_space (add_right_cancel_monoid (semiring unsigned))) : normal_space (add_right_cancel_monoid (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_48167 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (ordered_cancel_add_comm_monoid ennreal)) := sorry --non-trivial
lemma new_lemma_48168 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring ennreal)) unsigned) : @irreducible_space.{0} (canonically_ordered_comm_semiring.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_comm_semiring.{0} ennreal)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48169 (h0 : function.extfun nat fin) : @regular_space.{0} (ordered_comm_monoid.{0} name) (@matrix.vec_empty.{0} (topological_space.{0} (ordered_comm_monoid.{0} name)) (@function.extfun_app.{1 1} nat fin (@matrix.vec_empty.{0} (function.extfun.{1 1} nat fin) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero))) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_48170 (h0 : complete_lattice (add_left_cancel_monoid char)) : complete_lattice.is_Sup_finite_compact (add_left_cancel_monoid char) := sorry --non-trivial
lemma new_lemma_48171 (h0 : complete_lattice (with_one (has_inv (has_inv fun_info)))) : is_atomistic (with_one (has_inv (has_inv fun_info))) := sorry --non-trivial
lemma new_lemma_48172 (h0 : functor.add_const (complete_lattice (has_dist unsigned)) unsigned) : @is_compactly_generated.{0} (has_dist.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_dist.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48173 (h0 : topological_space (normed_lattice_add_comm_group (has_bot (has_bot real)))) : totally_separated_space (normed_lattice_add_comm_group (has_bot (has_bot real))) := sorry --non-trivial
lemma new_lemma_48174 (h0 : functor.add_const (add_monoid (has_Inf name)) name) : @add_monoid.fg.{0} (has_Inf.{0} name) (@functor.add_const.run.{0 0} (add_monoid.{0} (has_Inf.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_48175 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preconnected_space.{0} (group_with_zero.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (group_with_zero.{0} empty))  := sorry --non-trivial
lemma new_lemma_48176 (h0 : function.extfun Type group) : @group.fg.{0} (has_norm.{0} znum) (@function.extfun_app.{2 1} Type group.{0} h0 (has_norm.{0} znum))  := sorry --non-trivial
lemma new_lemma_48177 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (has_dist.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_dist.{0} num))  := sorry --non-trivial
lemma new_lemma_48178 (h0 : functor.add_const (semiring (has_add linarith.comp)) pos) : @is_noetherian_ring.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 0} (semiring.{0} (has_add.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_48179 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (has_one.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_one.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48180 (h0 : add_monoid (random_gen (semiring linarith.comp))) : add_monoid.fg (random_gen (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_48181 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (has_bot.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_bot.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_48182 (h0 : cancel_comm_monoid_with_zero (normed_group unsigned)) : unique_factorization_monoid (normed_group unsigned) := sorry --non-trivial
lemma new_lemma_48183 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (monoid_with_zero.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (monoid_with_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_48184 (h0 : group (topological_space (has_top (has_top char)))) : group.fg (topological_space (has_top (has_top char))) := sorry --non-trivial
lemma new_lemma_48185 (h0 : topological_space (simple_graph Type)) : sequential_space (simple_graph Type) := sorry --non-trivial
lemma new_lemma_48186 (h0 : functor.add_const (topological_space (ring environment.implicit_infer_kind)) linarith.comp) : @preirreducible_space.{0} (ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_48187 (h0 : topological_space (has_norm (random_gen linarith.comp_source))) : totally_separated_space (has_norm (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_48188 (h0 : function.extfun Type topological_space) : @t0_space.{0} (has_nndist.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_nndist.{0} pos))  := sorry --non-trivial
lemma new_lemma_48189 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (random_gen.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (random_gen.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_48190 (h0 : complete_lattice (normed_comm_ring (has_neg_part Type))) : is_atomistic (normed_comm_ring (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_48191 (h0 : topological_space (has_inter (option empty))) : locally_compact_space (has_inter (option empty)) := sorry --non-trivial
lemma new_lemma_48192 (h0 : add_monoid (normed_group fun_info)) : add_monoid.fg (normed_group fun_info) := sorry --non-trivial
lemma new_lemma_48193 (h0 : functor.add_const (topological_space (has_zero ennreal)) (option name)) : @normal_space.{0} (has_zero.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} ennreal)) (option.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_48194 (h0 : add_group (normed_lattice_add_comm_group name)) : is_add_cyclic (normed_lattice_add_comm_group name) := sorry --non-trivial
lemma new_lemma_48195 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (has_ssubset.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_ssubset.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_48196 (h0 : topological_space (normed_linear_ordered_group (semiring (semiring congr_arg_kind)))) : irreducible_space (normed_linear_ordered_group (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_48197 (h0 : functor.add_const (topological_space (boolean_algebra name)) name) : @t1_space.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_48198 (h0 : filter (semi_normed_comm_ring to_additive.value_type)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_48199 (h1 : not (monoid (has_top linarith.comp) -> false)) : @monoid.fg.{0} (has_top.{0} linarith.comp) (@classical.by_contradiction'.{1} (monoid.{0} (has_top.{0} linarith.comp)) h1)  := sorry --non-trivial
lemma new_lemma_48200 (h0 : group (linear_ordered_field ennreal)) : group.fg (linear_ordered_field ennreal) := sorry --non-trivial
lemma new_lemma_48201 (h0 : rel empty (measure_theory.measure_space num)) (h1 : empty) : rel.dom h0 h1 := sorry --non-trivial
lemma new_lemma_48202 (h0 : topological_space (left_cancel_monoid (semiring (semiring num)))) : t1_space (left_cancel_monoid (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_48203 (h0 : topological_space (has_neg_part (comm_group ennreal))) : topological_space.separable_space (has_neg_part (comm_group ennreal)) := sorry --non-trivial
lemma new_lemma_48204 (h0 : group (has_add (ring (finset pos)))) : normalizer_condition (has_add (ring (finset pos))) := sorry --non-trivial
lemma new_lemma_48205 (h0 : functor.add_const (ring (has_neg_part environment.implicit_infer_kind)) pos) : @strong_rank_condition.{0} (has_neg_part.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (has_neg_part.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_48206 (h0 : add_group (has_dist empty)) : is_add_cyclic (has_dist empty) := sorry --non-trivial
lemma new_lemma_48207 (h0 : complete_lattice (has_zero name)) : is_atomistic (has_zero name) := sorry --non-trivial
lemma new_lemma_48208 (h1 : topological_space (has_add string_imp)) : t0_space (has_add string_imp) := sorry --non-trivial
lemma new_lemma_48209 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (canonically_ordered_comm_semiring empty)) := sorry --non-trivial
lemma new_lemma_48210 (h0 : has_zero ennreal -> has_zero ennreal -> Prop) : is_symm (has_zero ennreal) h0 := sorry --non-trivial
lemma new_lemma_48211 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (has_norm.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_norm.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_48212 (h0 : topological_space (add_cancel_monoid (finset (has_neg Type)))) : normal_space (add_cancel_monoid (finset (has_neg Type))) := sorry --non-trivial
lemma new_lemma_48213 (h0 : finset (has_star (semiring (semiring (semiring (semiring congr_arg_kind)))))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_48214 (h0 : topological_space (linear_ordered_add_comm_group (has_norm linarith.ineq))) : totally_disconnected_space (linear_ordered_add_comm_group (has_norm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_48215 (h0 : ring (has_zero (comm_group (comm_group Type)))) : rank_condition (has_zero (comm_group (comm_group Type))) := sorry --non-trivial
lemma new_lemma_48216 (h0 : functor.comp ring has_neg_part Type) : @rank_condition.{1} (has_neg_part.{1} Type) (@functor.comp.run.{1 1 1} ring.{1} has_neg_part.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_48217 (h0 : not (ring (has_sub num) -> false)) : @is_principal_ideal_ring.{0} (has_sub.{0} num) (@classical.by_contradiction'.{1} (ring.{0} (has_sub.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_48218 (h0 : complete_lattice (div_inv_monoid linarith.comp_source)) : is_compactly_generated (div_inv_monoid linarith.comp_source) := sorry --non-trivial
lemma new_lemma_48219 (h1 h2 : multiset (normed_field linarith.ineq)) : multiset.disjoint h1 h2 := sorry --non-trivial
lemma new_lemma_48220 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (add_cancel_monoid congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_48221 (h0 : function.extfun Type topological_space) : @t0_space.{0} (ordered_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_48222 (h0 : not (topological_space (with_one linarith.comp) -> false)) : @totally_disconnected_space.{0} (with_one.{0} linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (with_one.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_48223 (h0 : function.extfun Type ordered_comm_monoid) : @has_exists_mul_of_le.{0} (has_add.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} h0 (has_add.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_48224 (h0 : topological_space (has_nnnorm (mul_one_class linarith.ineq))) : path_connected_space (has_nnnorm (mul_one_class linarith.ineq)) := sorry --non-trivial
lemma new_lemma_48225 (h0 : complete_lattice (mul_zero_class (option (option (option ennreal))))) : complete_lattice.is_Sup_finite_compact (mul_zero_class (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_48226 (h0 : list (has_inv (random_gen (has_norm to_additive.value_type)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_48227 (h0 : not (uniform_space (has_norm linarith.comp_source) -> false)) : @complete_space.{0} (has_norm.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (uniform_space.{0} (has_norm.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_48228 (h0 : topological_space (has_neg linarith.comp)) : totally_separated_space (has_neg linarith.comp) := sorry --non-trivial
lemma new_lemma_48229 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (ordered_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type semiring.{0} h0 (ordered_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_48230 (h0 : function.extfun Type (functor.add_const Prop)) : functor.add_const.run (function.extfun_app h0 pos) := sorry --non-trivial
lemma new_lemma_48231 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (has_norm.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_norm.{0} empty))  := sorry --non-trivial
lemma new_lemma_48232 (h0 : ring (nondiscrete_normed_field (mul_one_class environment.projection_info))) : strong_rank_condition (nondiscrete_normed_field (mul_one_class environment.projection_info)) := sorry --non-trivial
lemma new_lemma_48233 (h0 : function.extfun Type (functor.add_const (uniform_space (add_left_cancel_semigroup empty)))) : @complete_space.{0} (add_left_cancel_semigroup.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (add_left_cancel_semigroup.{0} empty)) (option.{0} empty) (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (uniform_space.{0} (add_left_cancel_semigroup.{0} empty))) h0 (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_48234 (h0 : functor.comp add_group boolean_algebra.core name) : @is_add_cyclic.{0} (boolean_algebra.core.{0} name) (@functor.comp.run.{0 0 0} add_group.{0} boolean_algebra.core.{0} name h0)  := sorry --non-trivial
lemma new_lemma_48235 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (option.{0} ennreal) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (option.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_48236 (h0 : functor.add_const (group (cancel_monoid environment.implicit_infer_kind)) Type) : @group.fg.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (group.{0} (cancel_monoid.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_48237 (h0 : function.extfun Type group) : @group.fg.{0} nnreal (@function.extfun_app.{2 1} Type group.{0} h0 nnreal)  := sorry --non-trivial
lemma new_lemma_48238 (h0 : group (encodable char)) : group.fg (encodable char) := sorry --non-trivial
lemma new_lemma_48239 (h0 : filter (add_comm_monoid name)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_48240 (h0 : topological_space (partial_order (semiring (semiring empty)))) : t0_space (partial_order (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_48241 (h0 : function.extfun Type has_top) (h1 : has_top (distrib_lattice linarith.comp_source)) : eq (function.extfun_app h0 (distrib_lattice linarith.comp_source)) h1 := sorry --non-trivial
lemma new_lemma_48242 (h0 : topological_space (finset pos)) : regular_space (finset pos) := sorry --non-trivial
lemma new_lemma_48243 (h2 : set enat) : set.finite h2 := sorry --non-trivial
lemma new_lemma_48244 (h0 : function.extfun (finset Type) (has_mem.mem (has_one linarith.comp))) : @discrete_topology.{0} (has_one.{0} linarith.comp) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_one.{0} linarith.comp) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_one.{0} linarith.comp)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_48245 (h0 : topological_space (comm_semigroup pos)) : regular_space (comm_semigroup pos) := sorry --non-trivial
lemma new_lemma_48246 (h0 : functor.add_const (function.extfun (Type 1) add_group) Type) : @is_add_cyclic.{1} (boolean_algebra.core.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_group.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) add_group.{1}) Type h0) (boolean_algebra.core.{1} Type))  := sorry --non-trivial
lemma new_lemma_48247 (h1 : not (ring (linear_ordered_add_comm_group fun_info) -> false)) : @rank_condition.{0} (linear_ordered_add_comm_group.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (linear_ordered_add_comm_group.{0} fun_info)) h1)  := sorry --non-trivial
lemma new_lemma_48248 (h0 : functor.comp topological_space add_comm_monoid Type) : @totally_disconnected_space.{1} (add_comm_monoid.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} add_comm_monoid.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_48249 (h0 : ring (ordered_comm_ring (boolean_algebra Type))) : rank_condition (ordered_comm_ring (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_48250 (h0 : finset (linear_ordered_field pos)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_48251 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_48252 (h0 : topological_space (preorder (semiring empty))) : preirreducible_space (preorder (semiring empty)) := sorry --non-trivial
lemma new_lemma_48253 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @is_domain.{0} (has_inv.{0} linarith.ineq) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) ring.{0}) (has_inv.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_48254 (h1 : ring (has_add char)) : strong_rank_condition (has_add char) := sorry --non-trivial
lemma new_lemma_48255 (h0 : ring (fintype (random_gen linarith.ineq))) : strong_rank_condition (fintype (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_48256 (h0 : ring (has_Inf (has_neg (has_neg Type)))) : is_principal_ideal_ring (has_Inf (has_neg (has_neg Type))) := sorry --non-trivial
lemma new_lemma_48257 (h1 : complete_lattice nnreal) : complete_lattice.is_Sup_finite_compact nnreal := sorry --non-trivial
lemma new_lemma_48258 (h1 : topological_space (with_zero linarith.ineq)) : totally_disconnected_space (with_zero linarith.ineq) := sorry --non-trivial
lemma new_lemma_48259 (h0 : functor.add_const (topological_space (normed_linear_ordered_group congr_arg_kind)) unsigned) : @t0_space.{0} (normed_linear_ordered_group.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_linear_ordered_group.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48260 (h0 : topological_space (normed_group (semiring linarith.comp))) : totally_separated_space (normed_group (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_48261 (h0 : (topological_space (has_ssubset to_additive.value_type) -> false) -> false) (h1 : topological_space (has_ssubset to_additive.value_type) -> false) (h2 : not (false -> false)) : @t0_space.{0} (has_ssubset.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (has_ssubset.{0} to_additive.value_type)) (@function.update.{0 0} (topological_space.{0} (has_ssubset.{0} to_additive.value_type) → false) (λ (a : topological_space.{0} (has_ssubset.{0} to_additive.value_type) → false), false) (λ (a b : topological_space.{0} (has_ssubset.{0} to_additive.value_type) → false), @decidable_eq_of_subsingleton.{0} (topological_space.{0} (has_ssubset.{0} to_additive.value_type) → false) (@pi.subsingleton.{1 0} (topological_space.{0} (has_ssubset.{0} to_additive.value_type)) (λ (ᾰ : topological_space.{0} (has_ssubset.{0} to_additive.value_type)), false) (λ (a : topological_space.{0} (has_ssubset.{0} to_additive.value_type)), subsingleton_prop false)) a b) h0 h1 (@classical.by_contradiction'.{0} false h2)))  := sorry --trivial
lemma new_lemma_48262 (h0 : functor.add_const (topological_space (comm_group unsigned)) name) : @t1_space.{0} (comm_group.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_48263 (h0 : topological_space (cancel_monoid (finset pos))) : t1_space (cancel_monoid (finset pos)) := sorry --non-trivial
lemma new_lemma_48264 (h0 : functor.comp topological_space add_cancel_monoid pos) : @normal_space.{0} (add_cancel_monoid.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} add_cancel_monoid.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_48265 (h0 : functor.add_const (ring (has_nndist Type)) linarith.comp) : @strong_rank_condition.{1} (has_nndist.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_nndist.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_48266 (h0 : group (pseudo_metric_space (option name))) : is_cyclic (pseudo_metric_space (option name)) := sorry --non-trivial
lemma new_lemma_48267 (h3 : complete_lattice (comm_ring fun_info)) : is_compactly_generated (comm_ring fun_info) := sorry --non-trivial
lemma new_lemma_48268 (h2 : uniform_space (with_zero to_additive.value_type)) : complete_space (with_zero to_additive.value_type) := sorry --non-trivial
lemma new_lemma_48269 (h0 : topological_space (has_ssubset (mul_one_class reducibility_hints))) : path_connected_space (has_ssubset (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_48270 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (has_star.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_star.{0} empty))  := sorry --non-trivial
lemma new_lemma_48271 (h0 : functor.add_const (semiring (complete_distrib_lattice pos)) name) : @is_noetherian_ring.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (semiring.{0} (complete_distrib_lattice.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_48272 (h0 : uniform_space (random_gen (has_ssubset linarith.ineq))) : complete_space (random_gen (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_48273 (h0 : topological_space (comm_group (boolean_algebra.core Type))) : locally_compact_space (comm_group (boolean_algebra.core Type)) := sorry --non-trivial
lemma new_lemma_48274 (h0 : topological_space (boolean_algebra.core ennreal)) : t0_space (boolean_algebra.core ennreal) := sorry --non-trivial
lemma new_lemma_48275 (h0 : semiring (canonically_ordered_comm_semiring (option num))) : is_noetherian_ring (canonically_ordered_comm_semiring (option num)) := sorry --non-trivial
lemma new_lemma_48276 (h0 : functor.add_const (filter (has_neg linarith.comp)) Type) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_48277 (h0 : topological_space (ring (has_add Type))) : t1_space (ring (has_add Type)) := sorry --non-trivial
lemma new_lemma_48278 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (has_star.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (has_star.{0} empty))  := sorry --non-trivial
lemma new_lemma_48279 (h0 : complete_lattice (has_div (mul_one_class fun_info))) : is_compactly_generated (has_div (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_48280 (h0 : functor.add_const (list (has_neg Type)) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_48281 (h0 : ring (has_nndist (option empty))) : is_domain (has_nndist (option empty)) := sorry --non-trivial
lemma new_lemma_48282 (h0 : topological_space (has_sub empty)) : t0_space (has_sub empty) := sorry --non-trivial
lemma new_lemma_48283 (h0 : functor.add_const (filter (omega_complete_partial_order unsigned)) empty) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_48284 (h0 : function.extfun Type ring) : @is_domain.{0} (@id.{2} Type num) (@function.extfun_app.{2 1} Type ring.{0} h0 (@id.{2} Type num))  := sorry --non-trivial
lemma new_lemma_48285 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (ordered_cancel_add_comm_monoid.{0} (option.{0} ennreal)) (@function.extfun_app.{2 1} Type add_group.{0} h0 (ordered_cancel_add_comm_monoid.{0} (option.{0} ennreal)))  := sorry --non-trivial
lemma new_lemma_48286 (h0 : not (uniform_space (has_sub num) -> false)) : @complete_space.{0} (has_sub.{0} num) (@classical.by_contradiction'.{1} (uniform_space.{0} (has_sub.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_48287 (h0 : functor.add_const (topological_space (comm_group environment.implicit_infer_kind)) name) : @path_connected_space.{0} (comm_group.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_48288 (h0 : topological_space (normed_group (has_norm (has_norm (has_norm (has_norm linarith.comp)))))) : totally_separated_space (normed_group (has_norm (has_norm (has_norm (has_norm linarith.comp))))) := sorry --non-trivial
lemma new_lemma_48289 (h0 : finset (generalized_boolean_algebra (boolean_algebra.core (boolean_algebra.core linarith.comp)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_48290 (h0 : functor.add_const (ring (finset pos)) Type) : @is_domain.{0} (finset.{0} pos) (@functor.add_const.run.{0 1} (ring.{0} (finset.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_48291 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (linear_ordered_add_comm_group string_imp)) := sorry --non-trivial
lemma new_lemma_48292 (h0 : set (std_gen -> char)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_48293 (h0 : semiring (with_one (semiring unsigned))) : is_noetherian_ring (with_one (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_48294 (h0 : functor.add_const (topological_space (has_add unsigned)) name) : @discrete_topology.{0} (has_add.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_48295 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (normed_group.{0} linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (normed_group.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_48296 (h0 : topological_space (add_comm_monoid (has_add Type))) : regular_space (add_comm_monoid (has_add Type)) := sorry --non-trivial
lemma new_lemma_48297 (h0 : uniform_space (ordered_comm_ring (finset (has_neg (has_neg (has_neg (has_neg name))))))) : separated_space (ordered_comm_ring (finset (has_neg (has_neg (has_neg (has_neg name)))))) := sorry --non-trivial
lemma new_lemma_48298 (h0 : complete_lattice (non_assoc_semiring (semiring num))) : is_atomistic (non_assoc_semiring (semiring num)) := sorry --non-trivial
lemma new_lemma_48299 (h0 : functor.add_const (topological_space (comm_group linarith.comp)) name) : @discrete_topology.{0} (comm_group.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_48300 (h0 : ring (add_cancel_monoid (normed_comm_ring pos))) : is_principal_ideal_ring (add_cancel_monoid (normed_comm_ring pos)) := sorry --non-trivial
lemma new_lemma_48301 (h4 : complete_lattice (random_gen string_imp)) : is_compactly_generated (random_gen string_imp) := sorry --non-trivial
lemma new_lemma_48302 (h0 : topological_space (finset (has_add (has_neg (has_zero (ring (ring Type))))))) : t1_space (finset (has_add (has_neg (has_zero (ring (ring Type)))))) := sorry --non-trivial
lemma new_lemma_48303 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (has_Inf.{0} name) (@function.extfun_app.{2 1} Type semiring.{0} h0 (has_Inf.{0} name))  := sorry --non-trivial
lemma new_lemma_48304 (h0 : group (normed_lattice_add_comm_group (has_Inf Type))) : is_simple_group (normed_lattice_add_comm_group (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_48305 (h0 : functor.add_const (topological_space (canonically_ordered_add_monoid empty)) empty) : @locally_compact_space.{0} (canonically_ordered_add_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_add_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_48306 (h0 : function.extfun Type (functor.add_const (list (linear_ordered_cancel_comm_monoid empty)))) : list.nodup (functor.add_const.run (function.extfun_app h0 unsigned)) := sorry --non-trivial
lemma new_lemma_48307 (h0 : filter (add_cancel_monoid (has_Inf name))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_48308 (h0 : list (with_bot (fin has_zero.zero))) (h1 : ne (list.head h0) has_bot.bot) : matrix.vec_empty (matrix.vec_empty (matrix.vec_empty (with_bot.unbot (list.head h0) h1))) := sorry --non-trivial
lemma new_lemma_48309 (h0 : function.extfun Type ring) : @rank_condition.{0} (with_bot.{0} linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} h0 (with_bot.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_48310 (h0 : topological_space (boolean_algebra.core (ring pos))) : totally_separated_space (boolean_algebra.core (ring pos)) := sorry --non-trivial
lemma new_lemma_48311 (h0 : functor.comp monoid canonically_ordered_comm_semiring name) : @monoid.fg.{0} (canonically_ordered_comm_semiring.{0} name) (@functor.comp.run.{0 0 0} monoid.{0} canonically_ordered_comm_semiring.{0} name h0)  := sorry --non-trivial
lemma new_lemma_48312 (h0 : topological_space (boolean_algebra (has_add (has_add pos)))) : discrete_topology (boolean_algebra (has_add (has_add pos))) := sorry --non-trivial
lemma new_lemma_48313 (h0 : topological_space (ring (option unsigned))) : t1_space (ring (option unsigned)) := sorry --non-trivial
lemma new_lemma_48314 (h0 : topological_space (semigroup (finset Type))) : sequential_space (semigroup (finset Type)) := sorry --non-trivial
lemma new_lemma_48315 (h0 : group (has_add (finset pos))) : group.fg (has_add (finset pos)) := sorry --non-trivial
lemma new_lemma_48316 (h0 : ring (ring (division_ring name))) : is_principal_ideal_ring (ring (division_ring name)) := sorry --non-trivial
lemma new_lemma_48317 (h0 : ordered_add_comm_monoid (plift (semiring (semiring (semiring empty))))) : archimedean (plift (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_48318 (h0 : finset (has_neg congr_arg_kind)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_48319 (h0 : functor.add_const (list (add_cancel_monoid linarith.comp)) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_48320 (h0 : uniform_space (normed_linear_ordered_group (semiring empty))) : separated_space (normed_linear_ordered_group (semiring empty)) := sorry --non-trivial
lemma new_lemma_48321 (h0 : topological_space (semigroup (ring (comm_group Type)))) : locally_compact_space (semigroup (ring (comm_group Type))) := sorry --non-trivial
lemma new_lemma_48322 (h0 : function.extfun Type (functor.add_const (complete_lattice znum))) : @is_compactly_generated.{0} znum (@functor.add_const.run.{0 0} (complete_lattice.{0} znum) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (complete_lattice.{0} znum)) h0 empty))  := sorry --non-trivial
lemma new_lemma_48323 (h0 : function.extfun Type (functor.add_const (topological_space (omega_complete_partial_order unsigned)))) : @path_connected_space.{0} (omega_complete_partial_order.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (omega_complete_partial_order.{0} unsigned)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (omega_complete_partial_order.{0} unsigned))) h0 empty))  := sorry --non-trivial
lemma new_lemma_48324 (h0 : topological_space (complete_linear_order num)) : topological_space.separable_space (complete_linear_order num) := sorry --non-trivial
lemma new_lemma_48325 (h0 : group (option empty)) (h1 : ordered_add_comm_monoid (group_topology (option empty))) : archimedean (group_topology (option empty)) := sorry --non-trivial
lemma new_lemma_48326 (h0 : topological_space (add_cancel_monoid name)) : topological_space.separable_space (add_cancel_monoid name) := sorry --non-trivial
lemma new_lemma_48327 (h0 : functor.add_const (function.extfun (Type 1) group) Type) : @normalizer_condition.{1} (add_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) group.{1}) Type h0) (add_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_48328 (h0 : fin has_zero.zero) : @t1_space.{1} (ordered_comm_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (ordered_comm_monoid.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_48329 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (has_add.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_add.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48330 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @discrete_topology.{0} (linear_ordered_semiring.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (linear_ordered_semiring.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_48331 (h0 : not (function.extfun Type topological_space -> false)) : @normal_space.{0} (random_gen.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (random_gen.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_48332 (h0 : functor.add_const (ring (has_neg linarith.comp)) Type) : @rank_condition.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 1} (ring.{0} (has_neg.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_48333 (h4 : topological_space string_imp) : totally_disconnected_space string_imp := sorry --non-trivial
lemma new_lemma_48334 (h0 : function.extfun Type group) : @normalizer_condition.{0} (@id.{2} Type fun_info) (@function.extfun_app.{2 1} Type group.{0} h0 (@id.{2} Type fun_info))  := sorry --non-trivial
lemma new_lemma_48335 (h1 : topological_space (encodable (random_gen string_imp))) : t0_space (encodable (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_48336 (h0 : functor.add_const (add_group (has_zero Type)) (has_to_string Type)) : @is_add_cyclic.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 1} (add_group.{1} (has_zero.{1} Type)) (has_to_string.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_48337 (h0 : topological_space (has_top (has_inv linarith.ineq))) : totally_disconnected_space (has_top (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_48338 (h0 : functor.add_const (ring (has_neg name)) (finset Type)) : @is_domain.{0} (has_neg.{0} name) (@functor.add_const.run.{0 1} (ring.{0} (has_neg.{0} name)) (finset.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_48339 (h0 : functor.add_const (add_group (has_neg environment.implicit_infer_kind)) environment.implicit_infer_kind) : @is_add_cyclic.{0} (has_neg.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (add_group.{0} (has_neg.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_48340 (h0 : ring (canonically_ordered_comm_semiring (semigroup name))) : rank_condition (canonically_ordered_comm_semiring (semigroup name)) := sorry --non-trivial
lemma new_lemma_48341 (h0 : group (has_Inf (has_add (finset pos)))) : is_cyclic (has_Inf (has_add (finset pos))) := sorry --non-trivial
lemma new_lemma_48342 (h0 : functor.add_const (ordered_comm_monoid (has_add pos)) environment.implicit_infer_kind) : @has_exists_mul_of_le.{0} (has_add.{0} pos) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (has_add.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_48343 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (generalized_boolean_algebra.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (generalized_boolean_algebra.{0} name))  := sorry --non-trivial
lemma new_lemma_48344 (h0 : function.extfun Type group) : @is_simple_group.{0} (ring.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48345 (h0 : functor.comp topological_space has_nndist Type) : @totally_disconnected_space.{1} (has_nndist.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} has_nndist.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_48346 (h0 : functor.add_const (topological_space name) empty) : @topological_space.separable_space.{0} name (@functor.add_const.run.{0 0} (topological_space.{0} name) empty h0)  := sorry --non-trivial
lemma new_lemma_48347 (h0 : function.extfun (finset Type) (has_mem.mem congr_arg_kind)) : @totally_separated_space.{0} congr_arg_kind (@finset.pi.empty.{1 0} Type topological_space.{0} congr_arg_kind (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) congr_arg_kind) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_48348 (h0 : group (measurable_space.dynkin_system (semiring unsigned))) : normalizer_condition (measurable_space.dynkin_system (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_48349 (h1 : has_coe (mul_one_class char) Prop) (h2 : mul_one_class char) : @coe_b.{1 1} (mul_one_class.{0} char) Prop h1 h2  := sorry --non-trivial
lemma new_lemma_48350 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @is_cyclic.{0} (complete_semilattice_Sup.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) group.{0}) (complete_semilattice_Sup.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_48351 (h0 : function.extfun Type (functor.add_const (finset (linear_ordered_cancel_comm_monoid empty)))) : finset.nonempty (functor.add_const.run (function.extfun_app h0 empty)) := sorry --non-trivial
lemma new_lemma_48352 (h0 : not (monoid (metric_space empty) -> false)) : @monoid.fg.{0} (metric_space.{0} empty) (@classical.by_contradiction'.{1} (monoid.{0} (metric_space.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_48353 (h0 : complete_lattice (has_neg_part (add_comm_monoid (comm_group name)))) : is_atomistic (has_neg_part (add_comm_monoid (comm_group name))) := sorry --non-trivial
lemma new_lemma_48354 (h0 : topological_space (has_add (ring environment.implicit_infer_kind))) : discrete_topology (has_add (ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_48355 (h0 : functor.add_const (ring (comm_group linarith.comp)) environment.implicit_infer_kind) : @rank_condition.{0} (comm_group.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (comm_group.{0} linarith.comp)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_48356 (h0 : topological_space (has_norm (has_nnnorm (random_gen (random_gen (has_nnnorm fun_info)))))) : locally_compact_space (has_norm (has_nnnorm (random_gen (random_gen (has_nnnorm fun_info))))) := sorry --non-trivial
lemma new_lemma_48357 (h0 : topological_space (linear_ordered_comm_group_with_zero string.iterator_imp)) (h1 : preorder (linear_ordered_comm_group_with_zero string.iterator_imp)) : order_topology (linear_ordered_comm_group_with_zero string.iterator_imp) := sorry --non-trivial
lemma new_lemma_48358 (h0 : add_monoid name) : add_monoid.fg name := sorry --non-trivial
lemma new_lemma_48359 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (has_zero.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_zero.{0} name))  := sorry --non-trivial
lemma new_lemma_48360 (h0 : topological_space (has_top string_imp)) : totally_separated_space (has_top string_imp) := sorry --non-trivial
lemma new_lemma_48361 (h0 : uniform_space (complete_semilattice_Sup (semiring (semiring congr_arg_kind)))) : separated_space (complete_semilattice_Sup (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_48362 (h1 : function.extfun Type monoid) : @monoid.fg.{0} to_additive.value_type (@function.extfun_app.{2 1} Type monoid.{0} h1 to_additive.value_type)  := sorry --non-trivial
lemma new_lemma_48363 (h0 : functor.add_const (topological_space (has_nndist Type)) pos) : @normal_space.{1} (has_nndist.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_nndist.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_48364 (h0 : topological_space (boolean_algebra (cancel_monoid environment.implicit_infer_kind))) : loc_path_connected_space (boolean_algebra (cancel_monoid environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_48365 (h0 : topological_space (canonically_ordered_comm_semiring unsigned)) : totally_separated_space (canonically_ordered_comm_semiring unsigned) := sorry --non-trivial
lemma new_lemma_48366 (h0 : topological_space (with_one (linear_ordered_semiring (has_top num)))) : path_connected_space (with_one (linear_ordered_semiring (has_top num))) := sorry --non-trivial
lemma new_lemma_48367 (h0 : add_monoid (ordered_comm_group (option (option (option empty))))) : add_monoid.fg (ordered_comm_group (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_48368 (h0 : functor.add_const (ordered_comm_monoid (has_add linarith.comp)) (has_zero Type)) : @has_exists_mul_of_le.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (has_add.{0} linarith.comp)) (has_zero.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_48369 (h0 : ordered_add_comm_monoid (finset unsigned)) : archimedean (finset unsigned) := sorry --non-trivial
lemma new_lemma_48370 (h0 : monoid (with_bot (random_gen (has_inv fun_info)))) : monoid.fg (with_bot (random_gen (has_inv fun_info))) := sorry --non-trivial
lemma new_lemma_48371 (h0 : topological_space (add_comm_monoid unsigned)) : locally_compact_space (add_comm_monoid unsigned) := sorry --non-trivial
lemma new_lemma_48372 (h1 : topological_space (has_compl (has_nnnorm string_imp))) : t0_space (has_compl (has_nnnorm string_imp)) := sorry --non-trivial
lemma new_lemma_48373 (h0 : group (comm_ring (comm_ring (random_gen linarith.ineq)))) : is_cyclic (comm_ring (comm_ring (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_48374 (h0 : topological_space (ring (has_add (has_Inf Type)))) : irreducible_space (ring (has_add (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_48375 (h0 : group (add_cancel_monoid (has_neg linarith.comp))) : normalizer_condition (add_cancel_monoid (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_48376 (h0 : group (normed_comm_ring pos)) : group.fg (normed_comm_ring pos) := sorry --non-trivial
lemma new_lemma_48377 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (left_cancel_semigroup.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (left_cancel_semigroup.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48378 (h0 : not (function.extfun (set num) (fun (x : set num), Prop) -> false)) : is_countably_spanning (function.extfun_app (classical.by_contradiction' h0)) := sorry --non-trivial
lemma new_lemma_48379 (h0 : uniform_space (normed_comm_ring (has_neg_part (has_neg_part Type)))) : complete_space (normed_comm_ring (has_neg_part (has_neg_part Type))) := sorry --non-trivial
lemma new_lemma_48380 (h1 : functor.comp topological_space normed_comm_ring pos) : @preconnected_space.{0} (normed_comm_ring.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} normed_comm_ring.{0} pos h1)  := sorry --non-trivial
lemma new_lemma_48381 (h0 : add_group (has_norm (semiring empty))) : is_add_cyclic (has_norm (semiring empty)) := sorry --non-trivial
lemma new_lemma_48382 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (canonically_linear_ordered_monoid name)) := sorry --non-trivial
lemma new_lemma_48383 (h0 : fin has_zero.zero) : @complete_space.{0} (has_Inf.{0} name) (@function.extfun_app.{2 1} Type uniform_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type uniform_space.{0}) h0) (has_Inf.{0} name))  := sorry --non-trivial
lemma new_lemma_48384 (h0 : complete_lattice (has_neg (has_pos_part (has_Inf linarith.comp)))) : is_compactly_generated (has_neg (has_pos_part (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_48385 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (measurable_space.dynkin_system.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measurable_space.dynkin_system.{0} num))  := sorry --non-trivial
lemma new_lemma_48386 (h0 : ordered_add_comm_monoid (has_add (has_add (has_add unsigned)))) : archimedean (has_add (has_add (has_add unsigned))) := sorry --non-trivial
lemma new_lemma_48387 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_Inf linarith.comp)) linarith.comp) : @unique_factorization_monoid.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (has_Inf.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_48388 (h0 : complete_lattice (partial_order (semiring unsigned))) : is_compactly_generated (partial_order (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_48389 (h0 : fin has_zero.zero) : @is_noetherian_ring.{0} (add_comm_monoid.{0} real) (@matrix.vec_empty.{0} (semiring.{0} (add_comm_monoid.{0} real)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_48390 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @group.fg.{0} (add_group.{0} (has_norm.{0} (has_top.{0} (semiring.{0} (has_top.{0} congr_arg_kind))))) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) group.{0}) (add_group.{0} (has_norm.{0} (has_top.{0} (semiring.{0} (has_top.{0} congr_arg_kind))))))  := sorry --non-trivial
lemma new_lemma_48391 (h0 : functor.add_const (function.extfun (Type 1) ordered_comm_monoid) pos) : @has_exists_mul_of_le.{1} (generalized_boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) ordered_comm_monoid.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) ordered_comm_monoid.{1}) pos h0) (generalized_boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_48392 (h0 : set (linear_ordered_comm_group_with_zero reducibility_hints)) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_48393 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (add_right_cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (add_right_cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48394 (h0 : monoid (add_cancel_comm_monoid (option empty))) : monoid.fg (add_cancel_comm_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_48395 (h0 : functor.add_const (group (add_comm_monoid unsigned)) pos) : @is_cyclic.{0} (add_comm_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (add_comm_monoid.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_48396 (h1 : not (group (add_cancel_comm_monoid char) -> false)) : @is_cyclic.{0} (add_cancel_comm_monoid.{0} char) (@classical.by_contradiction'.{1} (group.{0} (add_cancel_comm_monoid.{0} char)) h1)  := sorry --non-trivial
lemma new_lemma_48397 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} empty (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 empty)  := sorry --non-trivial
lemma new_lemma_48398 (h0 : topological_space (linear_ordered_field pos)) : preirreducible_space (linear_ordered_field pos) := sorry --non-trivial
lemma new_lemma_48399 (h0 : uniform_space (with_bot (has_inv (random_gen linarith.ineq)))) : complete_space (with_bot (has_inv (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_48400 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (semigroup.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_48401 (h0 : topological_space (ordered_comm_ring (has_bot (has_bot real)))) : totally_separated_space (ordered_comm_ring (has_bot (has_bot real))) := sorry --non-trivial
lemma new_lemma_48402 (h0 : functor.add_const (function.extfun Type ring) pos) : @rank_condition.{0} (has_pos_part.{0} name) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) pos h0) (has_pos_part.{0} name))  := sorry --non-trivial
lemma new_lemma_48403 (h0 : functor.add_const (topological_space (has_nndist unsigned)) (option pos)) : @t0_space.{0} (has_nndist.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} unsigned)) (option.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_48404 (h0 : monoid (monoid unsigned)) : monoid.fg (monoid unsigned) := sorry --non-trivial
lemma new_lemma_48405 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (left_cancel_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (left_cancel_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48406 (h0 : monoid (has_inter (option (option (option empty))))) : monoid.fg (has_inter (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_48407 (h0 : complete_lattice (with_bot (has_top linarith.ineq))) : complete_lattice.is_Sup_finite_compact (with_bot (has_top linarith.ineq)) := sorry --non-trivial
lemma new_lemma_48408 (h0 : complete_lattice (complete_semilattice_Sup to_additive.value_type)) : is_compactly_generated (complete_semilattice_Sup to_additive.value_type) := sorry --non-trivial
lemma new_lemma_48409 (h0 : uniform_space (add_comm_monoid name)) : complete_space (add_comm_monoid name) := sorry --non-trivial
lemma new_lemma_48410 (h0 : not (group (has_star congr_arg_kind) -> false)) : @is_cyclic.{0} (has_star.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (group.{0} (has_star.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_48411 (h0 : topological_space (linear_ordered_semiring (semiring congr_arg_kind))) : path_connected_space (linear_ordered_semiring (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_48412 (h0 : topological_space (metric_space unsigned)) : preirreducible_space (metric_space unsigned) := sorry --non-trivial
lemma new_lemma_48413 (h0 : topological_space (has_top empty)) : irreducible_space (has_top empty) := sorry --non-trivial
lemma new_lemma_48414 (h0 : topological_space (ordered_ring unsigned)) : loc_path_connected_space (ordered_ring unsigned) := sorry --non-trivial
lemma new_lemma_48415 (h0 : list (mul_zero_class unsigned)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_48416 (h0 : ring string_imp) : strong_rank_condition string_imp := sorry --non-trivial
lemma new_lemma_48417 (h0 : list (complete_distrib_lattice linarith.comp)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_48418 (h0 : topological_space (ordered_cancel_add_comm_monoid (monoid_with_zero pos))) : preconnected_space (ordered_cancel_add_comm_monoid (monoid_with_zero pos)) := sorry --non-trivial
lemma new_lemma_48419 (h0 : topological_space (with_bot linarith.comp)) : normal_space (with_bot linarith.comp) := sorry --non-trivial
lemma new_lemma_48420 (h0 : group (has_to_string (finset linarith.comp))) : is_cyclic (has_to_string (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_48421 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (linear_ordered_field.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (linear_ordered_field.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_48422 (h0 : functor.add_const (ring (cancel_monoid unsigned)) name) : @strong_rank_condition.{0} (cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (cancel_monoid.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_48423 (h0 : filter (has_inter (option ennreal))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_48424 (h0 : fin has_zero.zero) : @locally_compact_space.{1} (sub_neg_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (sub_neg_monoid.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_48425 (h0 : functor.add_const (topological_space (semigroup unsigned)) empty) : @irreducible_space.{0} (semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_48426 (h0 : ring (monoid (option (option (option (option empty)))))) : is_domain (monoid (option (option (option (option empty))))) := sorry --non-trivial
lemma new_lemma_48427 (h0 : topological_space (has_norm (random_gen to_additive.value_type))) : irreducible_space (has_norm (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_48428 (h0 : not (ring (denumerable (has_nnnorm fun_info)) -> false)) : @rank_condition.{0} (denumerable.{0} (has_nnnorm.{0} fun_info)) (@classical.by_contradiction'.{1} (ring.{0} (denumerable.{0} (has_nnnorm.{0} fun_info))) h0)  := sorry --non-trivial
lemma new_lemma_48429 (h0 : functor.add_const (topological_space (boolean_algebra.core linarith.comp)) linarith.comp) : @t1_space.{0} (boolean_algebra.core.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_48430 (h0 : functor.add_const (monoid (add_comm_monoid num)) unsigned) : @monoid.fg.{0} (add_comm_monoid.{0} num) (@functor.add_const.run.{0 0} (monoid.{0} (add_comm_monoid.{0} num)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48431 (h0 : function.extfun Type group) : @is_cyclic.{0} (complete_semilattice_Sup.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} h0 (complete_semilattice_Sup.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_48432 (h0 : topological_space (ordered_cancel_add_comm_monoid (option pos))) : preirreducible_space (ordered_cancel_add_comm_monoid (option pos)) := sorry --non-trivial
lemma new_lemma_48433 (h0 : functor.add_const (ordered_add_comm_monoid (add_comm_monoid linarith.comp)) Type) : @archimedean.{0} (add_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 1} (ordered_add_comm_monoid.{0} (add_comm_monoid.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_48434 (h0 : function.extfun Type group) : @is_cyclic.{0} (add_semigroup.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (add_semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_48435 (h0 : topological_space (ring real)) : topological_space.separable_space (ring real) := sorry --non-trivial
lemma new_lemma_48436 (h0 : filter (finset ennreal)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_48437 (h0 : uniform_space (cancel_monoid (option empty))) : separated_space (cancel_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_48438 (h0 : ordered_comm_monoid (has_zero environment.implicit_infer_kind)) : has_exists_mul_of_le (has_zero environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_48439 (h0 : functor.comp semiring add_comm_monoid Type) : @is_noetherian_ring.{1} (add_comm_monoid.{1} Type) (@functor.comp.run.{1 1 1} semiring.{1} add_comm_monoid.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_48440 (h0 : cancel_comm_monoid_with_zero (canonically_ordered_monoid (has_bot (has_bot Type)))) : unique_factorization_monoid (canonically_ordered_monoid (has_bot (has_bot Type))) := sorry --non-trivial
lemma new_lemma_48441 (h0 : fin has_zero.zero) : @monoid.fg.{0} (has_Inf.{0} pos) (@function.extfun_app.{2 1} Type monoid.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type monoid.{0}) h0) (has_Inf.{0} pos))  := sorry --non-trivial
lemma new_lemma_48442 (h0 : filter (with_zero (has_nnnorm (has_nnnorm linarith.ineq)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_48443 (h0 : ring (finset (finset (has_to_string (has_to_string (has_to_string unsigned)))))) : is_domain (finset (finset (has_to_string (has_to_string (has_to_string unsigned))))) := sorry --non-trivial
lemma new_lemma_48444 (h0 : topological_space (semigroup (has_to_string (has_to_string unsigned)))) : totally_disconnected_space (semigroup (has_to_string (has_to_string unsigned))) := sorry --non-trivial
lemma new_lemma_48445 (h0 : add_monoid (with_bot (has_norm (has_norm linarith.comp)))) : add_monoid.fg (with_bot (has_norm (has_norm linarith.comp))) := sorry --non-trivial
lemma new_lemma_48446 (h0 : topological_space (ordered_cancel_add_comm_monoid (option empty))) : totally_separated_space (ordered_cancel_add_comm_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_48447 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (with_bot.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (with_bot.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48448 (h0 : not (function.extfun Type topological_space -> false)) : @totally_disconnected_space.{0} (has_norm.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_norm.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_48449 (h0 : group (canonically_ordered_monoid (has_add pos))) : group.fg (canonically_ordered_monoid (has_add pos)) := sorry --non-trivial
lemma new_lemma_48450 (h0 : topological_space (has_top (semiring (semiring congr_arg_kind)))) : totally_disconnected_space (has_top (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_48451 (h0 : functor.add_const (function.extfun Type group) linarith.comp) : @normalizer_condition.{0} linarith.comp (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) linarith.comp h0) linarith.comp)  := sorry --non-trivial
lemma new_lemma_48452 (h2 : complete_lattice (has_ssubset (with_zero (has_inv char)))) : is_compactly_generated (has_ssubset (with_zero (has_inv char))) := sorry --non-trivial
lemma new_lemma_48453 (h0 : functor.add_const (topological_space (cancel_monoid environment.implicit_infer_kind)) name) : @locally_compact_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_48454 (h0 : functor.add_const (semiring (mul_zero_class num)) empty) : @is_noetherian_ring.{0} (mul_zero_class.{0} num) (@functor.add_const.run.{0 0} (semiring.{0} (mul_zero_class.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_48455 (h0 : topological_space (has_sub (has_sub congr_arg_kind))) : totally_separated_space (has_sub (has_sub congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_48456 (h0 : functor.add_const (function.extfun Type topological_space) Type) : @totally_disconnected_space.{0} (has_to_string.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) Type h0) (has_to_string.{0} pos))  := sorry --non-trivial
lemma new_lemma_48457 (h0 : function.extfun Type topological_space) : @normal_space.{0} (ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48458 (h0 : add_monoid (ordered_comm_monoid (ring pos))) : add_monoid.fg (ordered_comm_monoid (ring pos)) := sorry --non-trivial
lemma new_lemma_48459 (h0 : topological_space (generalized_boolean_algebra (ring (ring linarith.comp)))) : sequential_space (generalized_boolean_algebra (ring (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_48460 (h0 : add_group (with_one (has_one linarith.comp))) : is_add_cyclic (with_one (has_one linarith.comp)) := sorry --non-trivial
lemma new_lemma_48461 (h0 : topological_space (has_Inf real)) : topological_space.separable_space (has_Inf real) := sorry --non-trivial
lemma new_lemma_48462 (h0 : uniform_space (normed_lattice_add_comm_group (has_add pos))) : separated_space (normed_lattice_add_comm_group (has_add pos)) := sorry --non-trivial
lemma new_lemma_48463 (h0 : functor.add_const (function.extfun Type list) (option Type)) : palindrome (function.extfun_app (functor.add_const.run h0) (normed_comm_ring (finset name))) := sorry --non-trivial
lemma new_lemma_48464 (h0 : fin has_zero.zero) : matrix.vec_empty (id (id (matrix.vec_empty (matrix.vec_empty (matrix.vec_empty h0))))) := sorry --non-trivial
lemma new_lemma_48465 (h0 : ordered_add_comm_monoid (has_zero (finset (finset (finset (finset environment.implicit_infer_kind)))))) : archimedean (has_zero (finset (finset (finset (finset environment.implicit_infer_kind))))) := sorry --non-trivial
lemma new_lemma_48466 (h3 : topological_space reducibility_hints) (h4 : preorder reducibility_hints) : order_closed_topology reducibility_hints := sorry --non-trivial
lemma new_lemma_48467 (h0 : has_mem.mem (id linarith.ineq) has_emptyc.emptyc) : @totally_disconnected_space.{0} (@id.{2} Type linarith.ineq) (@finset.pi.empty.{1 0} Type topological_space.{0} (@id.{2} Type linarith.ineq) h0)  := sorry --non-trivial
lemma new_lemma_48468 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (has_one.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 topological_space.{0}) (has_one.{0} empty))  := sorry --non-trivial
lemma new_lemma_48469 (h0 : topological_space (nondiscrete_normed_field std_gen)) : totally_disconnected_space (nondiscrete_normed_field std_gen) := sorry --non-trivial
lemma new_lemma_48470 (h0 : functor.add_const (topological_space (add_comm_monoid environment.implicit_infer_kind)) Type) : @totally_disconnected_space.{0} (add_comm_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (add_comm_monoid.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_48471 (h0 : topological_space (comm_ring (has_ssubset fun_info))) : locally_compact_space (comm_ring (has_ssubset fun_info)) := sorry --non-trivial
lemma new_lemma_48472 (h1 : not (function.extfun Type add_group -> false)) : @is_add_cyclic.{0} (normed_group.{0} fun_info) (@function.extfun_app.{2 1} Type add_group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_group.{0}) h1) (normed_group.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_48473 (h0 : ordered_comm_monoid (has_neg_part (add_cancel_monoid ennreal))) : has_exists_mul_of_le (has_neg_part (add_cancel_monoid ennreal)) := sorry --non-trivial
lemma new_lemma_48474 (h0 : functor.add_const (ordered_add_comm_monoid (has_add Type)) pos) : @archimedean.{1} (has_add.{1} Type) (@functor.add_const.run.{1 0} (ordered_add_comm_monoid.{1} (has_add.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_48475 (h0 : topological_space (has_pos_part (has_Inf (has_Inf (ordered_comm_monoid Type))))) : path_connected_space (has_pos_part (has_Inf (has_Inf (ordered_comm_monoid Type)))) := sorry --non-trivial
lemma new_lemma_48476 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (encodable.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (encodable.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_48477 (h0 : uniform_space (has_nnnorm (random_gen char))) : complete_space (has_nnnorm (random_gen char)) := sorry --non-trivial
lemma new_lemma_48478 (h0 : topological_space (has_to_string (option unsigned))) : t0_space (has_to_string (option unsigned)) := sorry --non-trivial
lemma new_lemma_48479 (h0 : add_monoid (has_add (ring (mul_one_class environment.implicit_infer_kind)))) : add_monoid.fg (has_add (ring (mul_one_class environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_48480 (h0 : monoid (measurable_space to_additive.value_type) -> has_inv to_additive.value_type) (h1 : coe_sort (set.range h0)) : @monoid.fg.{0} (measurable_space.{0} to_additive.value_type) (@set.range_splitting.{0 0} (monoid.{0} (measurable_space.{0} to_additive.value_type)) (has_inv.{0} to_additive.value_type) h0 h1)  := sorry --non-trivial
lemma new_lemma_48481 (h0 : complete_lattice (non_assoc_semiring num)) : is_compactly_generated (non_assoc_semiring num) := sorry --non-trivial
lemma new_lemma_48482 (h2 : topological_space (add_comm_semigroup linarith.ineq)) : topological_space.first_countable_topology (add_comm_semigroup linarith.ineq) := sorry --non-trivial
lemma new_lemma_48483 (h0 : functor.add_const (topological_space (add_cancel_monoid name)) (boolean_algebra (boolean_algebra name))) : @irreducible_space.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} name)) (boolean_algebra.{0} (boolean_algebra.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_48484 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (has_Inf.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_Inf.{0} name))  := sorry --non-trivial
lemma new_lemma_48485 (h0 : topological_space (has_ssubset (random_gen linarith.ineq))) : t0_space (has_ssubset (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_48486 (h0 : functor.add_const (ring (ordered_comm_monoid Type)) linarith.comp) : @is_domain.{1} (ordered_comm_monoid.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (ordered_comm_monoid.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_48487 (h0 : uniform_space (mul_zero_class (option empty))) : separated_space (mul_zero_class (option empty)) := sorry --non-trivial
lemma new_lemma_48488 (h1 : topological_space (comm_ring (has_ssubset reducibility_hints))) : t0_space (comm_ring (has_ssubset reducibility_hints)) := sorry --non-trivial
lemma new_lemma_48489 (h0 : semiring (has_one (has_top congr_arg_kind))) : is_noetherian_ring (has_one (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_48490 (h0 h1 : multiset (normed_field std_gen)) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_48491 (h0 : topological_space (dlist char)) : path_connected_space (dlist char) := sorry --non-trivial
lemma new_lemma_48492 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (add_group.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (add_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48493 (h0 : semiring (has_to_string (has_zero linarith.comp))) : is_noetherian_ring (has_to_string (has_zero linarith.comp)) := sorry --non-trivial
lemma new_lemma_48494 (h0 : functor.add_const (functor.comp add_group semigroup pos) pos) : @is_add_cyclic.{0} (semigroup.{0} pos) (@functor.add_const.run.{0 0} (add_group.{0} (semigroup.{0} pos)) unsigned (@functor.comp.run.{0 0 0} add_group.{0} semigroup.{0} pos (@functor.add_const.run.{0 0} (functor.comp.{0 0 0} add_group.{0} semigroup.{0} pos) pos h0)))  := sorry --non-trivial
lemma new_lemma_48495 (h0 : functor.add_const (group (boolean_algebra pos)) (has_neg pos)) : @group.fg.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (boolean_algebra.{0} pos)) (has_neg.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_48496 (h0 : uniform_space (ordered_comm_ring (has_Inf (has_Inf (finset linarith.comp))))) : separated_space (ordered_comm_ring (has_Inf (has_Inf (finset linarith.comp)))) := sorry --non-trivial
lemma new_lemma_48497 (h0 : complete_lattice (linear_ordered_add_comm_group linarith.ineq)) : complete_lattice.is_Sup_finite_compact (linear_ordered_add_comm_group linarith.ineq) := sorry --non-trivial
lemma new_lemma_48498 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @sequential_space.{0} (add_cancel_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (add_cancel_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_48499 (h0 : ring (normed_comm_ring (finset Type))) : strong_rank_condition (normed_comm_ring (finset Type)) := sorry --non-trivial
lemma new_lemma_48500 (h1 : topological_space empty) : discrete_topology empty := sorry --non-trivial
lemma new_lemma_48501 (h0 : fin has_zero.zero) : @is_simple_group.{0} (simple_graph.{0} name) (@function.extfun_app.{2 1} Type group.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type group.{0}) h0) (simple_graph.{0} name))  := sorry --non-trivial
lemma new_lemma_48502 (h0 : not (topological_space (random_gen linarith.comp_source) -> false)) : @t0_space.{0} (random_gen.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_48503 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (has_inv.{0} string_imp) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_inv.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_48504 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (ordered_cancel_add_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_cancel_add_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_48505 (h0 : topological_space (canonically_linear_ordered_monoid (option (option (option ennreal))))) : preconnected_space (canonically_linear_ordered_monoid (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_48506 (h1 : not (ring (has_div linarith.comp_source) -> false)) : @rank_condition.{0} (has_div.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (ring.{0} (has_div.{0} linarith.comp_source)) h1)  := sorry --non-trivial
lemma new_lemma_48507 (h0 : topological_space (ordered_comm_ring (has_pos_part (has_pos_part (has_pos_part Type))))) : totally_separated_space (ordered_comm_ring (has_pos_part (has_pos_part (has_pos_part Type)))) := sorry --non-trivial
lemma new_lemma_48508 (h0 : ring (has_edist unsigned)) : is_principal_ideal_ring (has_edist unsigned) := sorry --non-trivial
lemma new_lemma_48509 (h0 : topological_space (has_lt (boolean_algebra.core string.iterator_imp))) : path_connected_space (has_lt (boolean_algebra.core string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_48510 (h0 : functor.add_const (topological_space (cancel_monoid linarith.comp)) name) : @sequential_space.{0} (cancel_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_48511 (h0 : functor.comp add_monoid has_nndist environment.implicit_infer_kind) : @add_monoid.fg.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} add_monoid.{0} has_nndist.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_48512 (h0 : topological_space (has_to_string (has_neg_part ennreal))) : irreducible_space (has_to_string (has_neg_part ennreal)) := sorry --non-trivial
lemma new_lemma_48513 (h0 : set (add_comm_semigroup (add_comm_semigroup enat) -> char)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_48514 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : filter.ne_bot (function.extfun_app (function.extfun_app h0 filter) (has_one unsigned)) := sorry --non-trivial
lemma new_lemma_48515 (h0 : semiring (preorder (semiring empty))) : is_noetherian_ring (preorder (semiring empty)) := sorry --non-trivial
lemma new_lemma_48516 (h0 : fin has_zero.zero) : @preconnected_space.{0} (has_nndist.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (has_nndist.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_48517 (h0 : function.extfun Type ring) : @is_domain.{0} (complete_distrib_lattice.{0} name) (@function.extfun_app.{2 1} Type ring.{0} h0 (complete_distrib_lattice.{0} name))  := sorry --non-trivial
lemma new_lemma_48518 (h0 : has_mem.mem monoid has_emptyc.emptyc) : @monoid.fg.{0} (has_norm.{0} linarith.ineq) (@function.extfun_app.{2 1} Type monoid.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) monoid.{0} h0) (has_norm.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_48519 (h0 : function.extfun (Type 1) (functor.comp topological_space ring)) : @regular_space.{1} (ring.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} ring.{1} Type (@function.extfun_app.{3 2} (Type 1) (functor.comp.{1 1 1} topological_space.{1} ring.{1}) h0 Type))  := sorry --non-trivial
lemma new_lemma_48520 (h0 : group (comm_ring (has_norm (has_inv string_imp)))) : group.fg (comm_ring (has_norm (has_inv string_imp))) := sorry --non-trivial
lemma new_lemma_48521 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @sequential_space.{0} (finset.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (finset.{0} name))  := sorry --non-trivial
lemma new_lemma_48522 (h0 : complete_lattice (sub_neg_monoid num)) : complete_lattice.is_Sup_finite_compact (sub_neg_monoid num) := sorry --non-trivial
lemma new_lemma_48523 (h0 : uniform_space (add_right_cancel_monoid (semiring (semiring (has_norm (semiring congr_arg_kind)))))) : complete_space (add_right_cancel_monoid (semiring (semiring (has_norm (semiring congr_arg_kind))))) := sorry --non-trivial
lemma new_lemma_48524 (h0 : topological_space (semigroup (finset Type))) : loc_path_connected_space (semigroup (finset Type)) := sorry --non-trivial
lemma new_lemma_48525 (h0 : complete_lattice (normed_group (has_norm (has_norm (has_norm unsigned))))) : is_atomistic (normed_group (has_norm (has_norm (has_norm unsigned)))) := sorry --non-trivial
lemma new_lemma_48526 (h0 : ring (has_zero (has_neg pos))) : is_domain (has_zero (has_neg pos)) := sorry --non-trivial
lemma new_lemma_48527 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (linear_ordered_comm_ring.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_comm_ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48528 (h0 : complete_lattice (cancel_monoid (option unsigned))) : is_atomistic (cancel_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_48529 (h0 : complete_lattice (has_norm (semiring (semiring unsigned)))) : is_atomistic (has_norm (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_48530 (h0 : functor.add_const (topological_space (add_cancel_monoid name)) environment.implicit_infer_kind) : @t1_space.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_48531 (h0 : topological_space (has_sub num)) : t0_space (has_sub num) := sorry --non-trivial
lemma new_lemma_48532 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (is_R_or_C.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (is_R_or_C.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48533 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (normed_group.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (normed_group.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_48534 (h0 : complete_lattice (with_one (has_top (semiring (semiring (semiring unsigned)))))) : is_compactly_generated (with_one (has_top (semiring (semiring (semiring unsigned))))) := sorry --non-trivial
lemma new_lemma_48535 (h0 : filter (boolean_algebra (has_neg_part (has_neg_part pos)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_48536 (h0 : functor.add_const (topological_space (normed_linear_ordered_group unsigned)) num) : @t0_space.{0} (normed_linear_ordered_group.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_linear_ordered_group.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_48537 (h0 : functor.add_const (ordered_add_comm_monoid (left_cancel_semigroup unsigned)) unsigned) : @archimedean.{0} (left_cancel_semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (left_cancel_semigroup.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48538 (h0 : ring (has_zero (cancel_monoid (add_comm_monoid environment.implicit_infer_kind)))) : rank_condition (has_zero (cancel_monoid (add_comm_monoid environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_48539 (h0 : add_group (add_cancel_monoid pos)) : is_add_cyclic (add_cancel_monoid pos) := sorry --non-trivial
lemma new_lemma_48540 (h1 : ring (has_ssubset reducibility_hints)) : strong_rank_condition (has_ssubset reducibility_hints) := sorry --non-trivial
lemma new_lemma_48541 (h0 : topological_space (mul_zero_class pos)) : preirreducible_space (mul_zero_class pos) := sorry --non-trivial
lemma new_lemma_48542 (h0 : functor.add_const (complete_lattice (normed_comm_ring pos)) linarith.comp) : @complete_lattice.is_Sup_finite_compact.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (normed_comm_ring.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_48543 (h0 : topological_space (add_left_cancel_semigroup (option unsigned))) : totally_disconnected_space (add_left_cancel_semigroup (option unsigned)) := sorry --non-trivial
lemma new_lemma_48544 (h0 : topological_space (has_neg (ordered_ring Type))) : locally_compact_space (has_neg (ordered_ring Type)) := sorry --non-trivial
lemma new_lemma_48545 (h0 : topological_space (normed_lattice_add_comm_group (has_Inf pos))) : locally_compact_space (normed_lattice_add_comm_group (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_48546 (h0 : topological_space (partial_order (semiring empty))) : t0_space (partial_order (semiring empty)) := sorry --non-trivial
lemma new_lemma_48547 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} congr_arg_kind (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) congr_arg_kind)  := sorry --non-trivial
lemma new_lemma_48548 (h0 : topological_space (boolean_algebra.core (boolean_algebra.core pos))) : preirreducible_space (boolean_algebra.core (boolean_algebra.core pos)) := sorry --non-trivial
lemma new_lemma_48549 (h0 : ring (has_pos_part (ring linarith.comp))) : rank_condition (has_pos_part (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_48550 (h0 : ring (canonically_linear_ordered_monoid (has_neg name))) : strong_rank_condition (canonically_linear_ordered_monoid (has_neg name)) := sorry --non-trivial
lemma new_lemma_48551 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (normed_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_48552 (h0 : topological_space (ordered_comm_group (semiring empty))) : preirreducible_space (ordered_comm_group (semiring empty)) := sorry --non-trivial
lemma new_lemma_48553 (h0 : cancel_comm_monoid_with_zero (has_bot congr_arg_kind)) : unique_factorization_monoid (has_bot congr_arg_kind) := sorry --non-trivial
lemma new_lemma_48554 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_48555 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (comm_ring.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (comm_ring.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_48556 (h0 : ordered_add_comm_monoid (has_Inf (has_neg linarith.comp))) : archimedean (has_Inf (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_48557 (h0 : list (has_neg name)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_48558 (h0 : functor.add_const (uniform_space (ordered_cancel_add_comm_monoid environment.implicit_infer_kind)) pos) : @complete_space.{0} (ordered_cancel_add_comm_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (uniform_space.{0} (ordered_cancel_add_comm_monoid.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_48559 (h0 : topological_space (left_cancel_semigroup (semiring (semiring congr_arg_kind)))) : t0_space (left_cancel_semigroup (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_48560 (h0 : add_monoid (has_union (semiring num))) : add_monoid.fg (has_union (semiring num)) := sorry --non-trivial
lemma new_lemma_48561 (h0 : function.extfun Type ordered_comm_monoid) : @has_exists_mul_of_le.{0} (normed_comm_ring.{0} name) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} h0 (normed_comm_ring.{0} name))  := sorry --non-trivial
lemma new_lemma_48562 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (linear_ordered_semiring.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_semiring.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_48563 (h0 : functor.add_const (topological_space (cancel_monoid name)) pos) : @preirreducible_space.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_48564 (h0 : not (topological_space (non_unital_non_assoc_semiring (uniform_space enat)) -> false)) : @totally_disconnected_space.{0} (non_unital_non_assoc_semiring.{0} (uniform_space.{0} enat)) (@classical.by_contradiction'.{1} (topological_space.{0} (non_unital_non_assoc_semiring.{0} (uniform_space.{0} enat))) h0)  := sorry --non-trivial
lemma new_lemma_48565 (h0 : topological_space (has_to_string ennreal)) : preirreducible_space (has_to_string ennreal) := sorry --non-trivial
lemma new_lemma_48566 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (measure_theory.measure_space.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (measure_theory.measure_space.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48567 (h0 : functor.add_const (topological_space (has_bot unsigned)) empty) : @path_connected_space.{0} (has_bot.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_bot.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_48568 (h0 : function.extfun Type (functor.add_const (ordered_add_comm_monoid (measure_theory.measure_space num)))) : @archimedean.{0} (measure_theory.measure_space.{0} num) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (measure_theory.measure_space.{0} num)) congr_arg_kind (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ordered_add_comm_monoid.{0} (measure_theory.measure_space.{0} num))) h0 congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48569 (h0 : has_mem.mem (has_norm linarith.comp) has_emptyc.emptyc) : @group.fg.{0} (has_norm.{0} linarith.comp) (@finset.pi.empty.{1 0} Type group.{0} (has_norm.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_48570 (h0 : has_mem.mem (with_one (has_norm linarith.comp_source)) has_emptyc.emptyc) : @irreducible_space.{0} (with_one.{0} (has_norm.{0} linarith.comp_source)) (@finset.pi.empty.{1 0} Type topological_space.{0} (with_one.{0} (has_norm.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_48571 (h0 : filter (has_norm (has_norm (has_norm linarith.ineq)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_48572 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : filter.ne_bot (function.extfun_app (function.extfun_app h0 filter) (mul_zero_class name)) := sorry --non-trivial
lemma new_lemma_48573 (h0 : functor.add_const (topological_space (boolean_algebra.core environment.implicit_infer_kind)) (comm_group Type)) : @t1_space.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind)) (comm_group.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_48574 (h0 : fin has_zero.zero) : @group.fg.{0} (canonically_ordered_monoid.{0} (sub_neg_monoid.{0} pos)) (@matrix.vec_empty.{0} (group.{0} (canonically_ordered_monoid.{0} (sub_neg_monoid.{0} pos))) h0)  := sorry --non-trivial
lemma new_lemma_48575 (h0 : function.extfun nat fin) : @regular_space.{1} (simple_graph.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (simple_graph.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_48576 (h1 : add_group (has_norm (random_gen linarith.comp))) : is_add_cyclic (has_norm (random_gen linarith.comp)) := sorry --non-trivial
lemma new_lemma_48577 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (add_comm_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_comm_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_48578 (h0 : semiring (simple_graph (option empty))) : is_noetherian_ring (simple_graph (option empty)) := sorry --non-trivial
lemma new_lemma_48579 (h0 : functor.add_const (topological_space (free_add_monoid unsigned)) unsigned) : @t1_space.{0} (free_add_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (free_add_monoid.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48580 (h0 : functor.add_const (complete_lattice (left_cancel_monoid unsigned)) num) : @is_compactly_generated.{0} (left_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (left_cancel_monoid.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_48581 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (has_top linarith.comp)) := sorry --non-trivial
lemma new_lemma_48582 (h0 : function.extfun Type ring) : @rank_condition.{0} (complete_distrib_lattice.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} h0 (complete_distrib_lattice.{0} pos))  := sorry --non-trivial
lemma new_lemma_48583 (h0 : boolean_algebra.core (normed_comm_ring congr_arg_kind) -> Prop) : exists_unique h0 := sorry --non-trivial
lemma new_lemma_48584 (h0 : functor.comp topological_space has_nndist pos) : @topological_space.separable_space.{0} (has_nndist.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} has_nndist.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_48585 (h0 : fin has_zero.zero) : @is_add_cyclic.{1} (has_bot.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_group.{1} (@matrix.vec_empty.{2} (function.extfun.{3 2} (Type 1) add_group.{1}) h0) (has_bot.{1} Type))  := sorry --non-trivial
lemma new_lemma_48586 (h0 : complete_lattice (random_gen linarith.ineq)) : complete_lattice.is_Sup_finite_compact (random_gen linarith.ineq) := sorry --non-trivial
lemma new_lemma_48587 (h0 : function.extfun (Type 1) (functor.add_const (has_neg name))) (h1 : functor.add_const (measurable_space name) name) : @has_measurable_neg.{0} name (@functor.add_const.run.{0 1} (has_neg.{0} name) Type (@function.extfun_app.{3 1} (Type 1) (functor.add_const.{0 1} (has_neg.{0} name)) h0 Type)) (@functor.add_const.run.{0 0} (measurable_space.{0} name) name h1)  := sorry --non-trivial
lemma new_lemma_48588 (h0 : not (has_mem.mem (normed_group linarith.ineq) has_emptyc.emptyc -> false)) : @path_connected_space.{0} (normed_group.{0} linarith.ineq) (@finset.pi.empty.{1 0} Type topological_space.{0} (normed_group.{0} linarith.ineq) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (normed_group.{0} linarith.ineq) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_48589 (h0 : semiring (add_comm_monoid (has_to_string (has_to_string linarith.comp)))) : is_noetherian_ring (add_comm_monoid (has_to_string (has_to_string linarith.comp))) := sorry --non-trivial
lemma new_lemma_48590 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (canonically_ordered_comm_semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (canonically_ordered_comm_semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48591 (h1 : function.extfun Type topological_space) : @sequential_space.{0} (complete_semilattice_Sup.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (complete_semilattice_Sup.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48592 (h0 : topological_space (has_add (has_Inf linarith.comp))) : irreducible_space (has_add (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_48593 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring Type)) linarith.comp) : @path_connected_space.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (canonically_ordered_comm_semiring.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_48594 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_noetherian_ring.{0} (canonically_ordered_comm_semiring.{0} empty) (@function.extfun_app.{2 1} Type semiring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 semiring.{0}) (canonically_ordered_comm_semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_48595 (h0 : ring (boolean_algebra.core empty)) : rank_condition (boolean_algebra.core empty) := sorry --non-trivial
lemma new_lemma_48596 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @sequential_space.{0} (comm_semigroup.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (comm_semigroup.{0} real))  := sorry --non-trivial
lemma new_lemma_48597 (h0 : semiring (boolean_algebra (ring environment.implicit_infer_kind))) : is_noetherian_ring (boolean_algebra (ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_48598 (h0 : ring (measure_theory.measure_space (semiring congr_arg_kind))) : strong_rank_condition (measure_theory.measure_space (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_48599 (h0 : function.extfun Type (functor.comp topological_space has_zero)) : @regular_space.{0} (has_zero.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} ennreal)) name (@functor.comp.run.{0 0 0} topological_space.{0} has_zero.{0} ennreal (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} has_zero.{0}) h0 ennreal)))  := sorry --non-trivial
lemma new_lemma_48600 (h0 : functor.comp ordered_comm_monoid has_neg (has_nndist name)) : @has_exists_mul_of_le.{0} (has_neg.{0} (has_nndist.{0} name)) (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} has_neg.{0} (has_nndist.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_48601 (h0 : semiring (boolean_algebra (has_add (boolean_algebra.core pos)))) : is_noetherian_ring (boolean_algebra (has_add (boolean_algebra.core pos))) := sorry --non-trivial
lemma new_lemma_48602 (h0 : functor.comp topological_space boolean_algebra Type) : @t1_space.{1} (boolean_algebra.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} boolean_algebra.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_48603 (h0 : topological_space (sub_neg_monoid (option (option (option (option unsigned)))))) : t1_space (sub_neg_monoid (option (option (option (option unsigned))))) := sorry --non-trivial
lemma new_lemma_48604 (h0 : functor.add_const (finset (has_inter unsigned)) empty) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_48605 (h0 : topological_space (complete_semilattice_Sup (has_top (has_top linarith.comp_source)))) : locally_compact_space (complete_semilattice_Sup (has_top (has_top linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_48606 (h0 : function.extfun Type ring) : @rank_condition.{0} (add_left_cancel_semigroup.{0} num) (@function.extfun_app.{2 1} Type ring.{0} h0 (add_left_cancel_semigroup.{0} num))  := sorry --non-trivial
lemma new_lemma_48607 (h0 : not (topological_space (has_nnnorm linarith.comp_source) -> false)) : @totally_disconnected_space.{0} (has_nnnorm.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (has_nnnorm.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_48608 (h0 : group (monoid ennreal)) : is_simple_group (monoid ennreal) := sorry --non-trivial
lemma new_lemma_48609 (h0 : uniform_space (semiring (has_top (has_norm linarith.comp)))) : complete_space (semiring (has_top (has_norm linarith.comp))) := sorry --non-trivial
lemma new_lemma_48610 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (has_dist.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_dist.{0} num))  := sorry --non-trivial
lemma new_lemma_48611 (h0 : has_mem.mem (with_bot num) has_emptyc.emptyc) : @separated_space.{0} (with_bot.{0} num) (@finset.pi.empty.{1 0} Type uniform_space.{0} (with_bot.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_48612 (h0 : list (normed_linear_ordered_group unsigned)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_48613 (h0 : topological_space (comm_monoid (add_left_cancel_semigroup (add_left_cancel_semigroup unsigned)))) : locally_compact_space (comm_monoid (add_left_cancel_semigroup (add_left_cancel_semigroup unsigned))) := sorry --non-trivial
lemma new_lemma_48614 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (add_comm_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (add_comm_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_48615 (h1 : uniform_space (div_inv_monoid fun_info)) : complete_space (div_inv_monoid fun_info) := sorry --non-trivial
lemma new_lemma_48616 (h0 : not (add_group Type -> false)) : @is_add_cyclic.{1} Type (@classical.by_contradiction'.{2} (add_group.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_48617 (h0 : topological_space (semiring (has_top (has_top (has_top to_additive.value_type))))) : irreducible_space (semiring (has_top (has_top (has_top to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_48618 (h0 : not (topological_space (linear_ordered_comm_ring num) -> false)) : @irreducible_space.{0} (linear_ordered_comm_ring.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (linear_ordered_comm_ring.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_48619 (h0 : functor.add_const (function.extfun (Type 1) filter) name) : filter.ne_bot (function.extfun_app (functor.add_const.run h0) (has_nndist Type)) := sorry --non-trivial
lemma new_lemma_48620 (h0 : not (filter (linear_ordered_comm_ring num) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_48621 (h2 : semiring (add_comm_semigroup linarith.ineq)) (h3 : ideal (add_comm_semigroup linarith.ineq)) : ideal.is_prime h3 := sorry --non-trivial
lemma new_lemma_48622 (h0 : functor.add_const (list (normed_comm_ring ennreal)) pos) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_48623 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (normed_linear_ordered_group.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_linear_ordered_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_48624 (h0 : topological_space (id (has_inv linarith.comp_source))) : totally_separated_space (id (has_inv linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_48625 (h0 : group (plift (semiring (semiring (semiring (semiring (semiring (semiring (semiring empty))))))))) : is_cyclic (plift (semiring (semiring (semiring (semiring (semiring (semiring (semiring empty)))))))) := sorry --non-trivial
lemma new_lemma_48626 (h0 : not (ring (has_nnnorm char) -> false)) : @strong_rank_condition.{0} (has_nnnorm.{0} char) (@classical.by_contradiction'.{1} (ring.{0} (has_nnnorm.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_48627 (h0 : functor.add_const (topological_space (left_cancel_monoid empty)) congr_arg_kind) : @loc_path_connected_space.{0} (left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_monoid.{0} empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_48628 (h0 : has_mul (has_neg (random_gen string_imp))) (h1 : add_group (has_compl (con (has_neg (random_gen string_imp))))) : is_add_cyclic (has_compl (con (has_neg (random_gen string_imp)))) := sorry --non-trivial
lemma new_lemma_48629 (h0 : topological_space (denumerable (has_nnnorm to_additive.value_type))) : totally_disconnected_space (denumerable (has_nnnorm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_48630 (h0 : complete_lattice (with_one (has_top (has_top linarith.comp_source)))) : is_atomistic (with_one (has_top (has_top linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_48631 (h0 : topological_space (ordered_comm_ring (ring linarith.comp))) : regular_space (ordered_comm_ring (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_48632 (h0 : functor.add_const (semiring (ordered_comm_monoid pos)) (ring (ring (simple_graph (ring (has_neg Type)))))) : @is_noetherian_ring.{0} (ordered_comm_monoid.{0} pos) (@functor.add_const.run.{0 1} (semiring.{0} (ordered_comm_monoid.{0} pos)) (ring.{1} (ring.{1} (simple_graph.{1} (ring.{1} (has_neg.{1} Type))))) h0)  := sorry --non-trivial
lemma new_lemma_48633 (h0 : functor.add_const (function.extfun Type complete_lattice) environment.implicit_infer_kind) : @complete_lattice.is_Sup_finite_compact.{0} (add_comm_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) environment.implicit_infer_kind h0) (add_comm_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_48634 (h0 : complete_lattice (has_emptyc (has_top (has_top (has_top fun_info))))) : complete_lattice.is_Sup_finite_compact (has_emptyc (has_top (has_top (has_top fun_info)))) := sorry --non-trivial
lemma new_lemma_48635 (h0 : group (normed_comm_ring (option unsigned))) : normalizer_condition (normed_comm_ring (option unsigned)) := sorry --non-trivial
lemma new_lemma_48636 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (ordered_comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type monoid.{0} h0 (ordered_comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48637 (h1 : simple_graph (random_gen fun_info)) (h2 : not (simple_graph (random_gen fun_info) -> false)) : simple_graph.is_subgraph h1 (classical.by_contradiction' h2) := sorry --non-trivial
lemma new_lemma_48638 (h0 : function.extfun Type group) : @group.fg.{0} (random_gen.{0} (has_top.{0} linarith.ineq)) (@function.extfun_app.{2 1} Type group.{0} h0 (random_gen.{0} (has_top.{0} linarith.ineq)))  := sorry --non-trivial
lemma new_lemma_48639 (h0 : not (ring (bin_tree num) -> false)) : @is_principal_ideal_ring.{0} (bin_tree.{0} num) (@classical.by_contradiction'.{1} (ring.{0} (bin_tree.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_48640 (h0 : topological_space (add_left_cancel_monoid string_imp)) : t0_space (add_left_cancel_monoid string_imp) := sorry --non-trivial
lemma new_lemma_48641 (h0 : ring (topological_space linarith.ineq)) : strong_rank_condition (topological_space linarith.ineq) := sorry --non-trivial
lemma new_lemma_48642 (h0 : functor.add_const (topological_space (has_neg linarith.comp)) name) : @sequential_space.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_48643 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @irreducible_space.{0} (normed_comm_ring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (normed_comm_ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_48644 (h0 : ring (has_norm (random_gen (random_gen (random_gen (random_gen char)))))) : is_domain (has_norm (random_gen (random_gen (random_gen (random_gen char))))) := sorry --non-trivial
lemma new_lemma_48645 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48646 (h0 : function.extfun Type (prod (semigroup unsigned))) : id_rel (function.extfun_app h0 (semigroup unsigned)) := sorry --non-trivial
lemma new_lemma_48647 (h0 : functor.add_const (complete_lattice (plift num)) num) : @is_atomistic.{1} (plift.{1} num) (@functor.add_const.run.{1 0} (complete_lattice.{1} (plift.{1} num)) num h0)  := sorry --non-trivial
lemma new_lemma_48648 (h0 : ring (nondiscrete_normed_field (mul_one_class (mul_one_class string.iterator_imp)))) : rank_condition (nondiscrete_normed_field (mul_one_class (mul_one_class string.iterator_imp))) := sorry --non-trivial
lemma new_lemma_48649 (h0 : topological_space (has_neg_part (has_add (boolean_algebra environment.implicit_infer_kind)))) : regular_space (has_neg_part (has_add (boolean_algebra environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_48650 (h0 : fin has_zero.zero) : @is_noetherian_ring.{0} (ordered_comm_ring.{0} name) (@function.extfun_app.{2 1} Type semiring.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type semiring.{0}) h0) (ordered_comm_ring.{0} name))  := sorry --non-trivial
lemma new_lemma_48651 (h0 : thunk (has_lt Type)) (h1 : Type) : @covby.{1} Type (@trace_call_stack.{1} (has_lt.{1} Type) h0) h1 string_imp  := sorry --non-trivial
lemma new_lemma_48652 (h0 : group (linear_ordered_cancel_comm_monoid (option (option (option (option (option empty))))))) : group.fg (linear_ordered_cancel_comm_monoid (option (option (option (option (option empty)))))) := sorry --non-trivial
lemma new_lemma_48653 (h0 : topological_space (normed_group linarith.comp_source)) : totally_disconnected_space (normed_group linarith.comp_source) := sorry --non-trivial
lemma new_lemma_48654 (h0 : functor.add_const (topological_space (comm_group name)) Type) : @t0_space.{0} (comm_group.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (comm_group.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_48655 (h0 : filter (has_nndist ennreal)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_48656 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @unique_factorization_monoid.{0} (add_right_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 cancel_comm_monoid_with_zero.{0}) (add_right_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_48657 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (has_neg_part.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_neg_part.{0} name))  := sorry --non-trivial
lemma new_lemma_48658 (h0 : uniform_space (complete_distrib_lattice (comm_group Type))) : complete_space (complete_distrib_lattice (comm_group Type)) := sorry --non-trivial
lemma new_lemma_48659 (h0 : functor.add_const (topological_space (ordered_comm_ring real)) Type) : @normal_space.{0} (ordered_comm_ring.{0} real) (@functor.add_const.run.{0 1} (topological_space.{0} (ordered_comm_ring.{0} real)) Type h0)  := sorry --non-trivial
lemma new_lemma_48660 (h0 : list (normed_comm_ring (ring name))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_48661 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (has_neg.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_neg.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_48662 (h0 : functor.add_const (topological_space (normed_linear_ordered_group unsigned)) unsigned) : @t1_space.{0} (normed_linear_ordered_group.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_linear_ordered_group.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48663 (h0 : topological_space (measure_theory.measure_space (semiring (semiring (semiring congr_arg_kind))))) : irreducible_space (measure_theory.measure_space (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_48664 (h0 : topological_space (has_lt (mul_one_class (mul_one_class (mul_one_class enat))))) : totally_disconnected_space (has_lt (mul_one_class (mul_one_class (mul_one_class enat)))) := sorry --non-trivial
lemma new_lemma_48665 (h0 : finset (add_comm_monoid unsigned)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_48666 (h0 : ring (canonically_ordered_comm_semiring (has_add linarith.comp))) : is_principal_ideal_ring (canonically_ordered_comm_semiring (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_48667 (h0 : set (has_div linarith.ineq)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_48668 (h0 : not (topological_space (distrib linarith.comp_source) -> false)) : @path_connected_space.{0} (distrib.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (distrib.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_48669 (h0 : complete_lattice (preorder num)) : is_atomistic (preorder num) := sorry --non-trivial
lemma new_lemma_48670 (h0 : topological_space (has_add ennreal)) : loc_path_connected_space (has_add ennreal) := sorry --non-trivial
lemma new_lemma_48671 (h0 : function.extfun Type (functor.comp topological_space has_to_string)) : @irreducible_space.{0} (has_to_string.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_to_string.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} has_to_string.{0}) h0 name))  := sorry --non-trivial
lemma new_lemma_48672 (h0 : functor.add_const (semiring (semigroup linarith.comp)) Type) : @is_noetherian_ring.{0} (semigroup.{0} linarith.comp) (@functor.add_const.run.{0 1} (semiring.{0} (semigroup.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_48673 (h0 : functor.add_const (function.extfun Type uniform_space) environment.implicit_infer_kind) : @separated_space.{0} (has_neg.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) environment.implicit_infer_kind h0) (has_neg.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48674 (h0 : fin has_zero.zero) : @normalizer_condition.{0} (has_Inf.{0} name) (@function.extfun_app.{2 1} Type group.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type group.{0}) h0) (has_Inf.{0} name))  := sorry --non-trivial
lemma new_lemma_48675 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (has_nndist.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (has_nndist.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48676 (h0 : functor.add_const (ring (has_add ennreal)) ennreal) : @is_domain.{0} (has_add.{0} ennreal) (@functor.add_const.run.{0 0} (ring.{0} (has_add.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_48677 (h0 : functor.add_const (add_monoid (linear_order empty)) (option (option empty))) : @add_monoid.fg.{0} (linear_order.{0} empty) (@functor.add_const.run.{0 0} (add_monoid.{0} (linear_order.{0} empty)) (option.{0} (option.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_48678 (h0 : topological_space (has_top (has_norm linarith.comp_source))) : path_connected_space (has_top (has_norm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_48679 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_48680 (h0 : topological_space (id (semiring congr_arg_kind))) : normal_space (id (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_48681 (h1 : topological_space (simple_graph linarith.ineq)) (h2 : preorder (simple_graph linarith.ineq)) : order_closed_topology (simple_graph linarith.ineq) := sorry --non-trivial
lemma new_lemma_48682 (h0 : functor.add_const (complete_lattice (has_star unsigned)) empty) : @is_compactly_generated.{0} (has_star.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_star.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_48683 (h0 : topological_space (has_top (has_top (random_gen (has_top fun_info))))) : totally_disconnected_space (has_top (has_top (random_gen (has_top fun_info)))) := sorry --non-trivial
lemma new_lemma_48684 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (option.{0} pos) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (option.{0} pos))  := sorry --non-trivial
lemma new_lemma_48685 (h0 : not (function.extfun (Type 1 -> Type 1) (function.extfun (Type 1)) -> false)) : @unique_factorization_monoid.{1} (plift.{1} unsigned) (@function.extfun_app.{3 2} (Type 1) cancel_comm_monoid_with_zero.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) (@classical.by_contradiction'.{3} (function.extfun.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1))) h0) cancel_comm_monoid_with_zero.{1}) (plift.{1} unsigned))  := sorry --non-trivial
lemma new_lemma_48686 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (has_norm.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_norm.{0} empty))  := sorry --non-trivial
lemma new_lemma_48687 (h3 : measurable_space linarith.ineq) (h4 : filter linarith.ineq) : filter.is_measurably_generated h4 := sorry --non-trivial
lemma new_lemma_48688 (h0 : not (topological_space (bin_tree empty) -> false)) : @preirreducible_space.{0} (bin_tree.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (bin_tree.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_48689 (h0 : topological_space (finset name)) : sequential_space (finset name) := sorry --non-trivial
lemma new_lemma_48690 (h0 : topological_space (semigroup (has_to_string (has_to_string pos)))) : t1_space (semigroup (has_to_string (has_to_string pos))) := sorry --non-trivial
lemma new_lemma_48691 (h0 : topological_space (semigroup (has_add ennreal))) : normal_space (semigroup (has_add ennreal)) := sorry --non-trivial
lemma new_lemma_48692 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (linear_ordered_field.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (linear_ordered_field.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48693 (h0 : group (ordered_ring to_additive.value_type)) : is_cyclic (ordered_ring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_48694 (h0 : group (random_gen (has_nnnorm reducibility_hints))) : is_cyclic (random_gen (has_nnnorm reducibility_hints)) := sorry --non-trivial
lemma new_lemma_48695 (h0 : has_zero ennreal -> has_zero ennreal -> Prop) : reflexive h0 := sorry --non-trivial
lemma new_lemma_48696 (h0 : topological_space (ordered_comm_ring name)) : path_connected_space (ordered_comm_ring name) := sorry --non-trivial
lemma new_lemma_48697 (h0 : topological_space (has_norm (comm_ring (has_inv (has_norm (distrib_lattice char)))))) : locally_compact_space (has_norm (comm_ring (has_inv (has_norm (distrib_lattice char))))) := sorry --non-trivial
lemma new_lemma_48698 (h0 : add_group (generalized_boolean_algebra (has_add real))) : is_add_cyclic (generalized_boolean_algebra (has_add real)) := sorry --non-trivial
lemma new_lemma_48699 (h2 : set (char -> std_gen)) : set.separates_points h2 := sorry --non-trivial
lemma new_lemma_48700 (h0 : uniform_space (id (semiring unsigned))) : separated_space (id (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_48701 (h0 : not (ring (topological_space char) -> false)) : @is_domain.{0} (topological_space.{0} char) (@classical.by_contradiction'.{1} (ring.{0} (topological_space.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_48702 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (with_bot.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_bot.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_48703 (h0 : not (add_group (measure_theory.measure_space empty) -> false)) : @is_add_cyclic.{0} (measure_theory.measure_space.{0} empty) (@classical.by_contradiction'.{1} (add_group.{0} (measure_theory.measure_space.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_48704 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @discrete_topology.{0} (complete_semilattice_Sup.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) topological_space.{0}) (complete_semilattice_Sup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48705 (h0 : ring (has_add (has_add name))) : rank_condition (has_add (has_add name)) := sorry --non-trivial
lemma new_lemma_48706 (h0 : ring (normed_group (random_gen (random_gen (has_inv (random_gen linarith.ineq)))))) : rank_condition (normed_group (random_gen (random_gen (has_inv (random_gen linarith.ineq))))) := sorry --non-trivial
lemma new_lemma_48707 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (group_with_zero.{0} (option.{0} congr_arg_kind)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (group_with_zero.{0} (option.{0} congr_arg_kind)))  := sorry --non-trivial
lemma new_lemma_48708 (h0 : list (has_neg (mul_zero_class unsigned))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_48709 (h0 : ring (has_inter (option num))) : is_domain (has_inter (option num)) := sorry --non-trivial
lemma new_lemma_48710 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_48711 (h0 : not (function.extfun Type topological_space -> false)) : @preirreducible_space.{0} (normed_group.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (normed_group.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_48712 (h0 : not (group (semiring empty) -> false)) : @group.fg.{0} (semiring.{0} empty) (@classical.by_contradiction'.{1} (group.{0} (semiring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_48713 (h0 : ring (uniform_space (mul_one_class reducibility_hints))) : is_domain (uniform_space (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_48714 (h0 : functor.add_const (topological_space (boolean_algebra.core environment.implicit_infer_kind)) name) : @loc_path_connected_space.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_48715 (h0 : ring (normed_comm_ring (comm_group (has_neg_part (add_cancel_monoid unsigned))))) : is_principal_ideal_ring (normed_comm_ring (comm_group (has_neg_part (add_cancel_monoid unsigned)))) := sorry --non-trivial
lemma new_lemma_48716 : nonempty (normed_lattice_add_comm_group ereal) := sorry --non-trivial
lemma new_lemma_48717 (h0 : function.extfun Type topological_space) : @t0_space.{0} (has_dist.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_dist.{0} num))  := sorry --non-trivial
lemma new_lemma_48718 (h0 : group (normed_group (denumerable fun_info))) : group.fg (normed_group (denumerable fun_info)) := sorry --non-trivial
lemma new_lemma_48719 (h0 : functor.add_const (topological_space (boolean_algebra Type)) environment.implicit_infer_kind) : @discrete_topology.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (boolean_algebra.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_48720 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (has_neg_part pos)) := sorry --non-trivial
lemma new_lemma_48721 (h0 : semiring (has_to_string Type)) : is_noetherian_ring (has_to_string Type) := sorry --non-trivial
lemma new_lemma_48722 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (measurable_space.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measurable_space.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_48723 (h0 : topological_space (has_add (mul_one_class Type))) : t1_space (has_add (mul_one_class Type)) := sorry --non-trivial
lemma new_lemma_48724 (h0 : topological_space (has_inner pos num)) : discrete_topology (has_inner pos num) := sorry --non-trivial
lemma new_lemma_48725 (h0 : functor.add_const Prop (has_pos_part pos)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_48726 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (canonically_ordered_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_48727 (h0 : add_group (non_unital_non_assoc_semiring (mul_one_class reducibility_hints))) : is_add_cyclic (non_unital_non_assoc_semiring (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_48728 (h0 : cancel_comm_monoid_with_zero (mul_zero_class (option unsigned))) : unique_factorization_monoid (mul_zero_class (option unsigned)) := sorry --non-trivial
lemma new_lemma_48729 (h0 : not (ring (comm_ring reducibility_hints) -> false)) : @rank_condition.{0} (comm_ring.{0} reducibility_hints) (@classical.by_contradiction'.{1} (ring.{0} (comm_ring.{0} reducibility_hints)) h0)  := sorry --non-trivial
lemma new_lemma_48730 (h0 : cancel_comm_monoid_with_zero (complete_distrib_lattice (has_add (has_add linarith.comp)))) : unique_factorization_monoid (complete_distrib_lattice (has_add (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_48731 (h1 : ring (has_nnnorm reducibility_hints)) : is_domain (has_nnnorm reducibility_hints) := sorry --non-trivial
lemma new_lemma_48732 (h0 : group (has_add (has_neg linarith.comp))) : is_simple_group (has_add (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_48733 (h0 : finset (complete_linear_order (semiring num))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_48734 (h0 : topological_space (normed_lattice_add_comm_group (has_pos_part pos))) : discrete_topology (normed_lattice_add_comm_group (has_pos_part pos)) := sorry --non-trivial
lemma new_lemma_48735 (h0 : functor.add_const (function.extfun (Type 1) group) Type) : @is_cyclic.{1} (add_cancel_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) group.{1}) Type h0) (add_cancel_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_48736 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (with_bot.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 group.{0}) (with_bot.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_48737 (h0 : not (finset string_imp -> false)) (h1 : finset.nonempty (classical.by_contradiction' h0)) (h2 : string_imp -> topological_space (random_gen reducibility_hints)) : @t0_space.{0} (random_gen.{0} reducibility_hints) (@finset.sup'.{0 0} (topological_space.{0} (random_gen.{0} reducibility_hints)) string_imp (@lattice.to_semilattice_sup.{0} (topological_space.{0} (random_gen.{0} reducibility_hints)) (@conditionally_complete_lattice.to_lattice.{0} (topological_space.{0} (random_gen.{0} reducibility_hints)) (@complete_lattice.to_conditionally_complete_lattice.{0} (topological_space.{0} (random_gen.{0} reducibility_hints)) (@topological_space.complete_lattice.{0} (random_gen.{0} reducibility_hints))))) (@classical.by_contradiction'.{1} (finset.{0} string_imp) h0) h1 h2)  := sorry --non-trivial
lemma new_lemma_48738 (h0 : monoid (linear_ordered_add_comm_group to_additive.value_type)) : monoid.fg (linear_ordered_add_comm_group to_additive.value_type) := sorry --non-trivial
lemma new_lemma_48739 (h0 : functor.add_const (complete_lattice pos) unsigned) : @is_atomistic.{0} pos (@functor.add_const.run.{0 0} (complete_lattice.{0} pos) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48740 (h0 : topological_space (has_pos_part (has_add Type))) : loc_path_connected_space (has_pos_part (has_add Type)) := sorry --non-trivial
lemma new_lemma_48741 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} linarith.comp (@function.extfun_app.{2 1} Type add_group.{0} h0 linarith.comp)  := sorry --non-trivial
lemma new_lemma_48742 (h0 : function.extfun Type ring) : @is_domain.{0} (has_zero.{0} name) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_zero.{0} name))  := sorry --non-trivial
lemma new_lemma_48743 (h0 : Prop) (h1 : topological_space (decidable h0)) : compact_space (decidable h0) := sorry --non-trivial
lemma new_lemma_48744 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (random_gen.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (random_gen.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_48745 (h0 : finset (comm_group (option (option name)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_48746 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (canonically_ordered_comm_semiring.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (canonically_ordered_comm_semiring.{0} pos))  := sorry --non-trivial
lemma new_lemma_48747 (h0 : group (has_add (has_neg_part environment.implicit_infer_kind))) : is_simple_group (has_add (has_neg_part environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_48748 (h0 : fin has_zero.zero) : @rank_condition.{1} (canonically_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (canonically_ordered_monoid.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_48749 (h0 : semiring (has_pos_part (has_add (has_add linarith.comp)))) : is_noetherian_ring (has_pos_part (has_add (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_48750 (h0 : prod (linear_ordered_field ennreal) (linear_ordered_field ennreal)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_48751 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (add_group.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_group.{0} num))  := sorry --non-trivial
lemma new_lemma_48752 (h0 : uniform_space (has_Sup (option empty))) : separated_space (has_Sup (option empty)) := sorry --non-trivial
lemma new_lemma_48753 (h0 : functor.add_const (complete_lattice (has_zero Type)) linarith.comp) : @is_compactly_generated.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (complete_lattice.{1} (has_zero.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_48754 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (add_left_cancel_semigroup.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (add_left_cancel_semigroup.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48755 (h0 : filter (has_nndist (boolean_algebra.core Type))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_48756 (h0 : group (linear_ordered_semiring (semiring num))) : normalizer_condition (linear_ordered_semiring (semiring num)) := sorry --non-trivial
lemma new_lemma_48757 (h0 : ring (has_bot unsigned)) : strong_rank_condition (has_bot unsigned) := sorry --non-trivial
lemma new_lemma_48758 (h0 : topological_space (free_add_monoid empty)) : totally_separated_space (free_add_monoid empty) := sorry --non-trivial
lemma new_lemma_48759 (h0 : ring (has_inter congr_arg_kind)) : is_principal_ideal_ring (has_inter congr_arg_kind) := sorry --non-trivial
lemma new_lemma_48760 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @archimedean.{1} (has_pos_part.{1} Type) (@function.extfun_app.{3 2} (Type 1) ordered_add_comm_monoid.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 ordered_add_comm_monoid.{1}) (has_pos_part.{1} Type))  := sorry --non-trivial
lemma new_lemma_48761 (h0 : topological_space (non_unital_semiring num)) : totally_disconnected_space (non_unital_semiring num) := sorry --non-trivial
lemma new_lemma_48762 (h0 : function.extfun (finset Type) (has_mem.mem (measurable_space to_additive.value_type))) : is_atomistic (measurable_space to_additive.value_type) := sorry --non-trivial
lemma new_lemma_48763 (h0 : function.extfun Type (functor.add_const Prop)) : functor.add_const.run (function.extfun_app h0 (linear_ordered_semiring unsigned)) := sorry --non-trivial
lemma new_lemma_48764 (h0 : functor.add_const (ring (has_neg pos)) (has_Inf pos)) : @rank_condition.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (has_neg.{0} pos)) (has_Inf.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_48765 (h0 : functor.add_const (topological_space (boolean_algebra.core Type)) pos) : @preirreducible_space.{1} (boolean_algebra.core.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (boolean_algebra.core.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_48766 (h0 : ring (semi_normed_comm_ring std_gen)) : rank_condition (semi_normed_comm_ring std_gen) := sorry --non-trivial
lemma new_lemma_48767 (h0 : list (non_assoc_semiring congr_arg_kind)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_48768 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (add_cancel_monoid.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_48769 (h0 : functor.add_const (topological_space (has_zero unsigned)) environment.implicit_infer_kind) : @irreducible_space.{0} (has_zero.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} unsigned)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_48770 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (ordered_cancel_add_comm_monoid.{0} num) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (ordered_cancel_add_comm_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_48771 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (has_neg.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_neg.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48772 (h0 : has_mem.mem (has_one empty) has_emptyc.emptyc) : @normalizer_condition.{0} (has_one.{0} empty) (@finset.pi.empty.{1 0} Type group.{0} (has_one.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_48773 (h0 : functor.add_const (filter (boolean_algebra linarith.comp)) environment.implicit_infer_kind) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_48774 (h0 : set (set linarith.comp_source)) (h1 : set linarith.comp_source) : measurable_space.dynkin_system.generate_has h0 h1 := sorry --non-trivial
lemma new_lemma_48775 (h0 : ring (has_zero (finset environment.implicit_infer_kind))) : is_principal_ideal_ring (has_zero (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_48776 (h0 : ring (normed_group (has_inv (has_norm (has_norm to_additive.value_type))))) : is_domain (normed_group (has_inv (has_norm (has_norm to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_48777 (h0 : functor.add_const (ordered_comm_monoid (has_pos_part name)) (ring (semigroup linarith.comp))) : @has_exists_mul_of_le.{0} (has_pos_part.{0} name) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (has_pos_part.{0} name)) (ring.{0} (semigroup.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_48778 (h0 : monoid (has_inv (random_gen linarith.comp_source))) : monoid.fg (has_inv (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_48779 (h0 : has_lt (nondiscrete_normed_field (nondiscrete_normed_field enat))) : no_max_order (nondiscrete_normed_field (nondiscrete_normed_field enat)) := sorry --non-trivial
lemma new_lemma_48780 (h0 : ordered_add_comm_monoid (semigroup (has_add Type))) : archimedean (semigroup (has_add Type)) := sorry --non-trivial
lemma new_lemma_48781 (h0 : cancel_comm_monoid_with_zero (complete_distrib_lattice (comm_group (comm_group ennreal)))) : unique_factorization_monoid (complete_distrib_lattice (comm_group (comm_group ennreal))) := sorry --non-trivial
lemma new_lemma_48782 (h0 : functor.add_const (ordered_comm_monoid (add_cancel_monoid ennreal)) environment.implicit_infer_kind) : @has_exists_mul_of_le.{0} (add_cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (add_cancel_monoid.{0} ennreal)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_48783 (h0 : functor.add_const (filter (has_pos_part pos)) Type) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_48784 (h0 : ring (has_inter (option (option (option (option (option empty))))))) : strong_rank_condition (has_inter (option (option (option (option (option empty)))))) := sorry --non-trivial
lemma new_lemma_48785 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (linear_ordered_comm_monoid_with_zero.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_comm_monoid_with_zero.{0} empty))  := sorry --non-trivial
lemma new_lemma_48786 (h0 : topological_space (linear_ordered_semiring (has_top (has_top num)))) : normal_space (linear_ordered_semiring (has_top (has_top num))) := sorry --non-trivial
lemma new_lemma_48787 (h0 : uniform_space (dlist string_imp)) : complete_space (dlist string_imp) := sorry --non-trivial
lemma new_lemma_48788 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @is_add_cyclic.{0} (has_top.{0} empty) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) add_group.{0}) (has_top.{0} empty))  := sorry --non-trivial
lemma new_lemma_48789 (h0 : ring (has_edist (option (option (option (option (option (option empty)))))))) : strong_rank_condition (has_edist (option (option (option (option (option (option empty))))))) := sorry --non-trivial
lemma new_lemma_48790 (h0 : topological_space (has_norm (has_emptyc linarith.comp))) : totally_separated_space (has_norm (has_emptyc linarith.comp)) := sorry --non-trivial
lemma new_lemma_48791 (h0 : topological_space (semigroup (semiring empty))) : preirreducible_space (semigroup (semiring empty)) := sorry --non-trivial
lemma new_lemma_48792 (h0 : functor.add_const (complete_lattice (semigroup pos)) pos) : @complete_lattice.is_Sup_finite_compact.{0} (semigroup.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (semigroup.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_48793 (h0 : ring (semi_normed_ring (mul_one_class string.iterator_imp))) : is_domain (semi_normed_ring (mul_one_class string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_48794 (h0 : filter (comm_group (has_neg_part Type))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_48795 (h0 : topological_space (linear_ordered_semiring (semiring linarith.comp))) : normal_space (linear_ordered_semiring (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_48796 (h0 : functor.add_const Prop (linear_ordered_semiring (semiring num))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_48797 (h0 : complete_lattice (boolean_algebra.core (has_nndist (finset ennreal)))) : is_compactly_generated (boolean_algebra.core (has_nndist (finset ennreal))) := sorry --non-trivial
lemma new_lemma_48798 (h1 : complete_lattice (has_div to_additive.value_type)) : complete_lattice.is_Sup_finite_compact (has_div to_additive.value_type) := sorry --non-trivial
lemma new_lemma_48799 (h0 : add_monoid (has_bot (semiring (semiring num)))) : add_monoid.fg (has_bot (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_48800 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (add_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (add_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48801 (h0 : prod (has_norm (semiring (semiring (semiring unsigned)))) (has_norm (semiring (semiring (semiring unsigned))))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_48802 (h0 : group (semigroup (has_add Type))) : is_cyclic (semigroup (has_add Type)) := sorry --non-trivial
lemma new_lemma_48803 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (add_semigroup.{0} empty) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (add_semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_48804 (h0 : topological_space (has_one (has_norm (has_norm unsigned)))) : normal_space (has_one (has_norm (has_norm unsigned))) := sorry --non-trivial
lemma new_lemma_48805 (h0 : functor.add_const (complete_lattice (cancel_monoid name)) name) : @is_atomistic.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (cancel_monoid.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_48806 (h0 : monoid (canonically_ordered_add_monoid empty)) : monoid.fg (canonically_ordered_add_monoid empty) := sorry --non-trivial
lemma new_lemma_48807 (h0 : topological_space (filter empty)) : t1_space (filter empty) := sorry --non-trivial
lemma new_lemma_48808 (h0 : ordered_comm_monoid (comm_semigroup Type)) : has_exists_mul_of_le (comm_semigroup Type) := sorry --non-trivial
lemma new_lemma_48809 (h0 : ordered_comm_monoid (sub_neg_monoid (has_Inf Type))) : has_exists_mul_of_le (sub_neg_monoid (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_48810 (h0 : add_group (has_norm (has_top (has_top to_additive.value_type)))) : is_add_cyclic (has_norm (has_top (has_top to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_48811 (h0 : functor.add_const (topological_space (comm_group name)) pos) : @topological_space.separable_space.{0} (comm_group.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_48812 (h0 : function.extfun Type topological_space) : @t0_space.{0} (cancel_monoid.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (cancel_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_48813 (h0 : functor.add_const (topological_space (option unsigned)) unsigned) : @discrete_topology.{0} (option.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (option.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48814 (h0 : functor.add_const (topological_space (has_to_string environment.implicit_infer_kind)) name) : @discrete_topology.{0} (has_to_string.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_48815 (h0 : functor.add_const (ring (comm_group environment.implicit_infer_kind)) Type) : @is_domain.{0} (comm_group.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (ring.{0} (comm_group.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_48816 (h2 : topological_space (has_ssubset ereal)) (h3 : add_group (has_ssubset ereal)) : topological_add_group (has_ssubset ereal) := sorry --non-trivial
lemma new_lemma_48817 (h0 : ring (has_star (ordered_cancel_comm_monoid (option (option unsigned))))) : strong_rank_condition (has_star (ordered_cancel_comm_monoid (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_48818 (h0 : function.extfun Type (functor.add_const (group pos))) : @normalizer_condition.{0} pos (@functor.add_const.run.{0 0} (group.{0} pos) name (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (group.{0} pos)) h0 name))  := sorry --non-trivial
lemma new_lemma_48819 (h0 : functor.add_const (filter (add_cancel_monoid name)) (has_to_string (ring linarith.comp))) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_48820 (h0 : functor.add_const (function.extfun Type cancel_comm_monoid_with_zero) unsigned) : @unique_factorization_monoid.{0} (add_cancel_monoid.{0} num) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type cancel_comm_monoid_with_zero.{0}) unsigned h0) (add_cancel_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_48821 (h0 : add_group (has_nnnorm (mul_one_class linarith.ineq))) : is_add_cyclic (has_nnnorm (mul_one_class linarith.ineq)) := sorry --non-trivial
lemma new_lemma_48822 (h0 : uniform_space (non_unital_non_assoc_semiring (uniform_space (mul_one_class string.iterator_imp)))) : complete_space (non_unital_non_assoc_semiring (uniform_space (mul_one_class string.iterator_imp))) := sorry --non-trivial
lemma new_lemma_48823 (h0 : group (has_pos_part Type)) : normalizer_condition (has_pos_part Type) := sorry --non-trivial
lemma new_lemma_48824 (h0 : topological_space (has_zero (option pos))) : path_connected_space (has_zero (option pos)) := sorry --non-trivial
lemma new_lemma_48825 (h0 : functor.add_const (ring (has_neg pos)) linarith.comp) : @rank_condition.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (has_neg.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_48826 (h0 : list (complete_distrib_lattice (has_add (add_comm_monoid Type)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_48827 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (has_add.{0} (option.{0} num)) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_add.{0} (option.{0} num)))  := sorry --non-trivial
lemma new_lemma_48828 (h0 : functor.add_const (topological_space pos) unsigned) : @preconnected_space.{0} pos (@functor.add_const.run.{0 0} (topological_space.{0} pos) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48829 (h0 : ring (has_bot (has_Inf Type))) : strong_rank_condition (has_bot (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_48830 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (sub_neg_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (sub_neg_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_48831 (h0 : not (function.extfun Type uniform_space -> false)) : @separated_space.{0} linarith.comp (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) linarith.comp)  := sorry --non-trivial
lemma new_lemma_48832 (h3 : ring (linear_ordered_comm_group_with_zero to_additive.value_type)) : rank_condition (linear_ordered_comm_group_with_zero to_additive.value_type) := sorry --non-trivial
lemma new_lemma_48833 (h0 : not (topological_space (normed_field char) -> false)) : @totally_disconnected_space.{0} (normed_field.{0} char) (@classical.by_contradiction'.{1} (topological_space.{0} (normed_field.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_48834 (h0 : function.extfun Type group) : @normalizer_condition.{0} (@id.{2} Type string_imp) (@function.extfun_app.{2 1} Type group.{0} h0 (@id.{2} Type string_imp))  := sorry --non-trivial
lemma new_lemma_48835 (h0 : topological_space (mul_zero_class congr_arg_kind)) : discrete_topology (mul_zero_class congr_arg_kind) := sorry --non-trivial
lemma new_lemma_48836 (h0 : group (has_nndist (ring (complete_semilattice_Sup linarith.comp)))) : normalizer_condition (has_nndist (ring (complete_semilattice_Sup linarith.comp))) := sorry --non-trivial
lemma new_lemma_48837 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @totally_separated_space.{0} num (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) num)  := sorry --non-trivial
lemma new_lemma_48838 (h0 : functor.add_const (filter (has_nndist unsigned)) linarith.comp) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_48839 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (fintype.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (fintype.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48840 (h0 : functor.add_const (topological_space (complete_distrib_lattice empty)) empty) : @loc_path_connected_space.{0} (complete_distrib_lattice.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_48841 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (semigroup.{0} (option.{0} (option.{0} ennreal))) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (semigroup.{0} (option.{0} (option.{0} ennreal))))  := sorry --non-trivial
lemma new_lemma_48842 (h0 : topological_space (has_zero (finset environment.implicit_infer_kind))) : discrete_topology (has_zero (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_48843 (h0 : function.extfun Type topological_space) : @normal_space.{0} (option.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (option.{0} empty))  := sorry --non-trivial
lemma new_lemma_48844 (h0 : function.extfun (finset Type) (has_mem.mem (with_one linarith.ineq))) : @irreducible_space.{0} (with_one.{0} linarith.ineq) (@finset.pi.empty.{1 0} Type topological_space.{0} (with_one.{0} linarith.ineq) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_one.{0} linarith.ineq)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_48845 (h0 : filter (linear_ordered_add_comm_group (has_norm linarith.comp_source))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_48846 (h0 : group (has_neg_part name)) : is_cyclic (has_neg_part name) := sorry --non-trivial
lemma new_lemma_48847 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_48848 (h0 : functor.add_const (monoid (normed_linear_ordered_group empty)) unsigned) : @monoid.fg.{0} (normed_linear_ordered_group.{0} empty) (@functor.add_const.run.{0 0} (monoid.{0} (normed_linear_ordered_group.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48849 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (mul_zero_class.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type monoid.{0} h0 (mul_zero_class.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_48850 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (semiring linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_48851 (h0 : topological_space (measurable_space (has_norm fun_info))) : path_connected_space (measurable_space (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_48852 (h0 : not (monoid (has_top unsigned) -> false)) : @monoid.fg.{0} (has_top.{0} unsigned) (@classical.by_contradiction'.{1} (monoid.{0} (has_top.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_48853 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (semigroup.{0} name) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (semigroup.{0} name))  := sorry --non-trivial
lemma new_lemma_48854 (h0 : ordered_add_comm_monoid (has_to_string (finset (has_add pos)))) : archimedean (has_to_string (finset (has_add pos))) := sorry --non-trivial
lemma new_lemma_48855 (h0 : functor.add_const (topological_space (has_nndist environment.implicit_infer_kind)) pos) : @preconnected_space.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_48856 (h0 : semiring (finset (has_neg (has_neg Type)))) : is_noetherian_ring (finset (has_neg (has_neg Type))) := sorry --non-trivial
lemma new_lemma_48857 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (has_Inf.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_Inf.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_48858 (h0 : topological_space (monoid num)) : normal_space (monoid num) := sorry --non-trivial
lemma new_lemma_48859 (h0 : topological_space (has_to_string (option (has_nndist name)))) : preirreducible_space (has_to_string (option (has_nndist name))) := sorry --non-trivial
lemma new_lemma_48860 (h0 : list (has_to_string (group_with_zero ennreal))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_48861 (h0 : functor.add_const (topological_space (complete_distrib_lattice linarith.comp)) Type) : @preconnected_space.{0} (complete_distrib_lattice.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (complete_distrib_lattice.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_48862 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (pseudo_metric_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (pseudo_metric_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48863 (h0 : topological_space (bin_tree empty)) : totally_separated_space (bin_tree empty) := sorry --non-trivial
lemma new_lemma_48864 (h0 : fin has_zero.zero) : @totally_separated_space.{0} (has_add.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (has_add.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_48865 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (has_to_string.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_to_string.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48866 (h0 : functor.add_const (topological_space (has_neg pos)) (has_neg pos)) : @locally_compact_space.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} pos)) (has_neg.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_48867 (h0 : topological_space (sub_neg_monoid Type)) : sequential_space (sub_neg_monoid Type) := sorry --non-trivial
lemma new_lemma_48868 (h0 : add_group (has_nnnorm (random_gen to_additive.value_type))) : is_add_cyclic (has_nnnorm (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_48869 (h0 : uniform_space (ring (has_add (finset Type)))) : complete_space (ring (has_add (finset Type))) := sorry --non-trivial
lemma new_lemma_48870 (h0 : functor.add_const (ring (boolean_algebra pos)) (ring (ring (ring (ring linarith.comp))))) : @is_domain.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.{0} pos)) (ring.{0} (ring.{0} (ring.{0} (ring.{0} linarith.comp)))) h0)  := sorry --non-trivial
lemma new_lemma_48871 (h0 : monoid (semiring (has_norm (add_group (measurable_space empty))))) : monoid.fg (semiring (has_norm (add_group (measurable_space empty)))) := sorry --non-trivial
lemma new_lemma_48872 (h0 : filter (linear_ordered_field (option (option (option ennreal))))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_48873 (h0 : topological_space (with_bot (with_bot string_imp))) : totally_separated_space (with_bot (with_bot string_imp)) := sorry --non-trivial
lemma new_lemma_48874 (h0 : function.extfun Type (functor.add_const (uniform_space (add_left_cancel_semigroup unsigned)))) : @complete_space.{0} (add_left_cancel_semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (uniform_space.{0} (add_left_cancel_semigroup.{0} unsigned)) unsigned (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (uniform_space.{0} (add_left_cancel_semigroup.{0} unsigned))) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_48875 (h0 : topological_space (normed_comm_ring unsigned)) : irreducible_space (normed_comm_ring unsigned) := sorry --non-trivial
lemma new_lemma_48876 (h0 : group (option num)) : group.fg (option num) := sorry --non-trivial
lemma new_lemma_48877 (h0 : functor.add_const (group (ring Type)) linarith.comp) : @group.fg.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (ring.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_48878 (h0 : functor.add_const (uniform_space (mul_zero_class name)) (mul_zero_class name)) : @complete_space.{0} (mul_zero_class.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (mul_zero_class.{0} name)) (mul_zero_class.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_48879 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (has_emptyc.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_emptyc.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_48880 (h0 : functor.add_const (function.extfun (Type 1) complete_lattice) (has_neg linarith.comp)) : @complete_lattice.is_Sup_finite_compact.{1} (has_neg.{1} Type) (@function.extfun_app.{3 2} (Type 1) complete_lattice.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) complete_lattice.{1}) (has_neg.{0} linarith.comp) h0) (has_neg.{1} Type))  := sorry --non-trivial
lemma new_lemma_48881 (h0 : not (function.extfun Type add_monoid -> false)) : @add_monoid.fg.{0} (has_union.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_monoid.{0}) h0) (has_union.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_48882 (h0 : complete_lattice (has_norm (semiring num))) : is_atomistic (has_norm (semiring num)) := sorry --non-trivial
lemma new_lemma_48883 (h0 : has_mem.mem (id linarith.comp) has_emptyc.emptyc) : @add_monoid.fg.{0} (@id.{2} Type linarith.comp) (@finset.pi.empty.{1 0} Type add_monoid.{0} (@id.{2} Type linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_48884 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (pseudo_metric_space.{0} pos) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (pseudo_metric_space.{0} pos))  := sorry --non-trivial
lemma new_lemma_48885 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : finset.nonempty (function.extfun_app (function.extfun_app h0 finset) (add_cancel_monoid Type)) := sorry --non-trivial
lemma new_lemma_48886 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @sequential_space.{0} (generalized_boolean_algebra.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (generalized_boolean_algebra.{0} name))  := sorry --non-trivial
lemma new_lemma_48887 (h0 : functor.add_const (finset (add_left_cancel_semigroup empty)) unsigned) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_48888 (h0 : uniform_space (has_pos_part name)) : separated_space (has_pos_part name) := sorry --non-trivial
lemma new_lemma_48889 (h1 : set (normed_field (mul_one_class std_gen))) : set.finite h1 := sorry --non-trivial
lemma new_lemma_48890 (h0 : monoid (boolean_algebra (has_add name))) : monoid.fg (boolean_algebra (has_add name)) := sorry --non-trivial
lemma new_lemma_48891 (h0 : functor.add_const (topological_space (finset linarith.comp)) linarith.comp) : @locally_compact_space.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_48892 (h0 : set (nondiscrete_normed_field reducibility_hints)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_48893 (h0 : functor.add_const (group (ring pos)) linarith.comp) : @is_simple_group.{0} (ring.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (ring.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_48894 (h0 : topological_space (with_one (has_norm (has_norm (has_norm linarith.comp_source))))) : irreducible_space (with_one (has_norm (has_norm (has_norm linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_48895 (h0 : has_mem.mem group has_emptyc.emptyc) : @normalizer_condition.{0} (normed_group.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) group.{0} h0) (normed_group.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_48896 (h0 : topological_space (has_emptyc (semiring linarith.comp))) : totally_disconnected_space (has_emptyc (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_48897 (h0 : list (comm_group congr_arg_kind)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_48898 (h0 : topological_space (ring (has_Inf Type))) : discrete_topology (ring (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_48899 (h0 : functor.add_const (function.extfun (Type 1) topological_space) Type) : @loc_path_connected_space.{1} (comm_group.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) topological_space.{1}) Type h0) (comm_group.{1} Type))  := sorry --non-trivial
lemma new_lemma_48900 (h0 : topological_space (has_zero (finset environment.implicit_infer_kind))) : preconnected_space (has_zero (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_48901 (h0 : topological_space (add_cancel_monoid environment.implicit_infer_kind)) : locally_compact_space (add_cancel_monoid environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_48902 (h0 : uniform_space (sub_neg_monoid (has_pos_part (finset linarith.comp)))) : complete_space (sub_neg_monoid (has_pos_part (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_48903 (h0 : fin has_zero.zero) : @Lim.{0} Prop sierpinski_space (@nonempty_of_inhabited.{1} Prop sort.inhabited.{0}) (@id.{1} (filter.{0} Prop) (@matrix.vec_empty.{0} (filter.{0} Prop) (@id.{1} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@id.{1} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))))  := sorry --non-trivial
lemma new_lemma_48904 (h0 : functor.add_const (group (is_R_or_C unsigned)) (semiring (semiring unsigned))) : @is_cyclic.{0} (is_R_or_C.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (is_R_or_C.{0} unsigned)) (semiring.{0} (semiring.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_48905 (h0 : functor.add_const (add_group (complete_distrib_lattice pos)) name) : @is_add_cyclic.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (add_group.{0} (complete_distrib_lattice.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_48906 (h0 : topological_space (pseudo_metric_space pos)) : t0_space (pseudo_metric_space pos) := sorry --non-trivial
lemma new_lemma_48907 (h0 : topological_space (option (option ennreal))) : locally_compact_space (option (option ennreal)) := sorry --non-trivial
lemma new_lemma_48908 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (left_cancel_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_48909 (h0 : functor.add_const (ring (has_neg pos)) pos) : @rank_condition.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (has_neg.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_48910 (h0 : topological_space (has_Inf (ring pos))) : regular_space (has_Inf (ring pos)) := sorry --non-trivial
lemma new_lemma_48911 (h0 : ring (has_compl (random_gen (random_gen (random_gen string_imp))))) : is_domain (has_compl (random_gen (random_gen (random_gen string_imp)))) := sorry --non-trivial
lemma new_lemma_48912 (h0 : functor.add_const (ring (has_star congr_arg_kind)) num) : @rank_condition.{0} (has_star.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (ring.{0} (has_star.{0} congr_arg_kind)) num h0)  := sorry --non-trivial
lemma new_lemma_48913 (h0 : function.extfun nat fin) : @unique_factorization_monoid.{0} (finset.{0} real) (@matrix.vec_empty.{0} (cancel_comm_monoid_with_zero.{0} (finset.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_48914 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @regular_space.{0} (comm_group.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (comm_group.{0} name))  := sorry --non-trivial
lemma new_lemma_48915 (h0 : topological_space (random_gen (linear_ordered_add_comm_monoid_with_top (has_top unsigned)))) : preirreducible_space (random_gen (linear_ordered_add_comm_monoid_with_top (has_top unsigned))) := sorry --non-trivial
lemma new_lemma_48916 (h0 : ring (ordered_comm_monoid (ring linarith.comp))) : rank_condition (ordered_comm_monoid (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_48917 (h0 : topological_space (option (semiring empty))) : topological_space.separable_space (option (semiring empty)) := sorry --non-trivial
lemma new_lemma_48918 (h0 : uniform_space (mul_one_class fun_info)) : complete_space (mul_one_class fun_info) := sorry --non-trivial
lemma new_lemma_48919 (h0 : complete_lattice (add_left_cancel_monoid (has_nnnorm fun_info))) : is_compactly_generated (add_left_cancel_monoid (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_48920 (h0 : topological_space (complete_distrib_lattice (has_neg Type))) : topological_space.separable_space (complete_distrib_lattice (has_neg Type)) := sorry --non-trivial
lemma new_lemma_48921 (h1 : set (set (with_bot (with_bot to_additive.value_type)))) : is_countably_spanning h1 := sorry --non-trivial
lemma new_lemma_48922 (h0 : topological_space (semiring (semiring unsigned))) : discrete_topology (semiring (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_48923 (h0 : functor.add_const (list (finset name)) name) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_48924 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (has_dist.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (has_dist.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48925 (h0 : functor.add_const (topological_space (has_Inf name)) (has_Inf linarith.comp)) : @t0_space.{0} (has_Inf.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} name)) (has_Inf.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_48926 (h0 : ordered_comm_monoid real -> ordered_comm_monoid real -> Prop) : transitive h0 := sorry --non-trivial
lemma new_lemma_48927 (h1 : complete_lattice (has_top fun_info)) : is_atomistic (has_top fun_info) := sorry --non-trivial
lemma new_lemma_48928 (h0 : cancel_comm_monoid_with_zero (ring (ring linarith.comp))) : unique_factorization_monoid (ring (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_48929 (h0 : complete_lattice (measurable_space unsigned)) : complete_lattice.is_Sup_finite_compact (measurable_space unsigned) := sorry --non-trivial
lemma new_lemma_48930 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @is_add_cyclic.{0} (list.{0} char) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) add_group.{0}) (list.{0} char))  := sorry --non-trivial
lemma new_lemma_48931 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @topological_space.separable_space.{1} (add_cancel_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (add_cancel_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_48932 (h0 : topological_space (has_to_string Type)) : preconnected_space (has_to_string Type) := sorry --non-trivial
lemma new_lemma_48933 (h0 : group (comm_group pos)) : is_cyclic (comm_group pos) := sorry --non-trivial
lemma new_lemma_48934 (h0 : topological_space (non_assoc_semiring (semiring num))) : locally_compact_space (non_assoc_semiring (semiring num)) := sorry --non-trivial
lemma new_lemma_48935 (h0 : cancel_comm_monoid_with_zero (add_cancel_monoid (comm_group linarith.comp))) : unique_factorization_monoid (add_cancel_monoid (comm_group linarith.comp)) := sorry --non-trivial
lemma new_lemma_48936 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (distrib_lattice.{0} string_imp) (@function.extfun_app.{2 1} Type add_group.{0} h0 (distrib_lattice.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_48937 (h0 : complete_lattice (preorder (option unsigned))) : is_atomistic (preorder (option unsigned)) := sorry --non-trivial
lemma new_lemma_48938 (h0 : semiring (boolean_algebra (finset (ring Type)))) : is_noetherian_ring (boolean_algebra (finset (ring Type))) := sorry --non-trivial
lemma new_lemma_48939 (h1 : group (id linarith.comp)) : is_cyclic (id linarith.comp) := sorry --non-trivial
lemma new_lemma_48940 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (has_nndist.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_nndist.{0} empty))  := sorry --non-trivial
lemma new_lemma_48941 (h0 : functor.add_const (topological_space (add_cancel_monoid pos)) pos) : @totally_disconnected_space.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_48942 (h0 : group (add_comm_monoid (has_add (has_nndist pos)))) : is_simple_group (add_comm_monoid (has_add (has_nndist pos))) := sorry --non-trivial
lemma new_lemma_48943 (h0 : functor.add_const (ordered_comm_monoid (semigroup pos)) name) : @has_exists_mul_of_le.{0} (semigroup.{0} pos) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (semigroup.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_48944 (h0 : complete_lattice (distrib (has_nnnorm linarith.ineq))) : complete_lattice.is_Sup_finite_compact (distrib (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_48945 (h0 : ring (has_nndist congr_arg_kind)) : strong_rank_condition (has_nndist congr_arg_kind) := sorry --non-trivial
lemma new_lemma_48946 (h0 : ordered_comm_monoid (has_zero (canonically_ordered_monoid (finset Type)))) : has_exists_mul_of_le (has_zero (canonically_ordered_monoid (finset Type))) := sorry --non-trivial
lemma new_lemma_48947 (h0 : functor.add_const (topological_space (left_cancel_monoid unsigned)) num) : @path_connected_space.{0} (left_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_monoid.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_48948 (h0 : topological_space (comm_group (has_to_string (option unsigned)))) : sequential_space (comm_group (has_to_string (option unsigned))) := sorry --non-trivial
lemma new_lemma_48949 (h0 : group (comm_group (finset (has_add pos)))) : is_simple_group (comm_group (finset (has_add pos))) := sorry --non-trivial
lemma new_lemma_48950 (h1 : has_lt (has_nnnorm linarith.ineq)) : no_max_order (has_nnnorm linarith.ineq) := sorry --non-trivial
lemma new_lemma_48951 (h0 : not (topological_space (random_gen fun_info) -> false)) : @locally_compact_space.{0} (random_gen.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_48952 (h0 : functor.comp complete_lattice add_comm_monoid unsigned) : @is_compactly_generated.{0} (add_comm_monoid.{0} unsigned) (@functor.comp.run.{0 0 0} complete_lattice.{0} add_comm_monoid.{0} unsigned h0)  := sorry --non-trivial
lemma new_lemma_48953 (h1 : ring (has_lt std_gen)) : rank_condition (has_lt std_gen) := sorry --non-trivial
lemma new_lemma_48954 (h0 : topological_space (random_gen string_imp)) : locally_compact_space (random_gen string_imp) := sorry --non-trivial
lemma new_lemma_48955 (h1 : complete_lattice (measurable_space linarith.comp)) : is_compactly_generated (measurable_space linarith.comp) := sorry --non-trivial
lemma new_lemma_48956 (h0 : group (has_top (has_norm linarith.ineq))) : group.fg (has_top (has_norm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_48957 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (complete_semilattice_Sup.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (complete_semilattice_Sup.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_48958 (h0 : function.extfun Type (functor.add_const (topological_space (has_bot empty)))) : @locally_compact_space.{0} (has_bot.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_bot.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (has_bot.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_48959 (h0 : ring (ring environment.implicit_infer_kind)) : rank_condition (ring environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_48960 (h0 : topological_space (ring (finset (finset linarith.comp)))) : regular_space (ring (finset (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_48961 (h0 : topological_space (group_with_zero empty)) : preconnected_space (group_with_zero empty) := sorry --non-trivial
lemma new_lemma_48962 (h0 : functor.add_const (function.extfun Type semiring) linarith.comp) : @is_noetherian_ring.{0} (simple_graph.{0} pos) (@function.extfun_app.{2 1} Type semiring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type semiring.{0}) linarith.comp h0) (simple_graph.{0} pos))  := sorry --non-trivial
lemma new_lemma_48963 (h0 : topological_space (has_neg_part (has_neg_part (has_add (option name))))) : sequential_space (has_neg_part (has_neg_part (has_add (option name)))) := sorry --non-trivial
lemma new_lemma_48964 (h0 : semiring (id fun_info)) : is_noetherian_ring (id fun_info) := sorry --non-trivial
lemma new_lemma_48965 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (canonically_ordered_comm_semiring name)) := sorry --non-trivial
lemma new_lemma_48966 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (has_ssubset.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_ssubset.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_48967 (h0 : functor.add_const (function.extfun (Type 1) group) pos) : @normalizer_condition.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) pos h0) (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_48968 (h0 : not (topological_space (partial_order unsigned) -> false)) : @normal_space.{0} (partial_order.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (partial_order.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_48969 (h0 : functor.add_const (topological_space (ring environment.implicit_infer_kind)) environment.implicit_infer_kind) : @locally_compact_space.{0} (ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_48970 (h0 : functor.add_const (ordered_add_comm_monoid (normed_comm_ring name)) unsigned) : @archimedean.{0} (normed_comm_ring.{0} name) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (normed_comm_ring.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_48971 (h1 : ring (has_lt reducibility_hints)) : is_domain (has_lt reducibility_hints) := sorry --non-trivial
lemma new_lemma_48972 (h0 : list (linear_ordered_cancel_comm_monoid unsigned)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_48973 (h0 : functor.add_const (topological_space (has_to_string linarith.comp)) (has_zero linarith.comp)) : @topological_space.separable_space.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} linarith.comp)) (has_zero.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_48974 (h0 : function.extfun Type ring) : @rank_condition.{0} (has_zero.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_48975 (h0 : functor.add_const (topological_space (cancel_monoid environment.implicit_infer_kind)) name) : @t1_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_48976 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (mul_zero_class.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (mul_zero_class.{0} pos))  := sorry --non-trivial
lemma new_lemma_48977 (h0 : monoid (measurable_space.dynkin_system (option (option (option (option empty)))))) : monoid.fg (measurable_space.dynkin_system (option (option (option (option empty))))) := sorry --non-trivial
lemma new_lemma_48978 (h0 : has_mem.mem (with_one (semiring unsigned)) has_emptyc.emptyc) : @is_domain.{0} (with_one.{0} (semiring.{0} unsigned)) (@finset.pi.empty.{1 0} Type ring.{0} (with_one.{0} (semiring.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_48979 (h2 : uniform_space (has_append (comm_ring char))) : complete_space (has_append (comm_ring char)) := sorry --non-trivial
lemma new_lemma_48980 (h0 : monoid (has_Inf (has_pos_part pos))) : monoid.fg (has_Inf (has_pos_part pos)) := sorry --non-trivial
lemma new_lemma_48981 (h0 : add_monoid (has_neg name)) : add_monoid.fg (has_neg name) := sorry --non-trivial
lemma new_lemma_48982 (h0 : functor.add_const (topological_space (ordered_comm_ring pos)) (has_add pos)) : @discrete_topology.{0} (ordered_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_ring.{0} pos)) (has_add.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_48983 (h0 : not (uniform_space (complete_semilattice_Sup linarith.comp) -> false)) : @complete_space.{0} (complete_semilattice_Sup.{0} linarith.comp) (@classical.by_contradiction'.{1} (uniform_space.{0} (complete_semilattice_Sup.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_48984 (h0 : functor.add_const (group (ring unsigned)) pos) : @is_cyclic.{0} (ring.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (ring.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_48985 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (normed_lattice_add_comm_group.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (normed_lattice_add_comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_48986 (h0 : fin has_zero.zero) : @is_principal_ideal_ring.{1} (canonically_linear_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (canonically_linear_ordered_monoid.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_48987 (h0 : not (function.extfun Type uniform_space -> false)) : @separated_space.{0} (normed_group.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (normed_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_48988 (h0 : function.extfun Type (functor.add_const (topological_space pos))) : @totally_disconnected_space.{0} pos (@functor.add_const.run.{0 0} (topological_space.{0} pos) unsigned (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} pos)) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_48989 (h0 : functor.add_const (topological_space (free_add_monoid num)) empty) : @t1_space.{0} (free_add_monoid.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (free_add_monoid.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_48990 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @separated_space.{1} (ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) uniform_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 uniform_space.{1}) (ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_48991 (h0 : uniform_space (normed_group fun_info)) : complete_space (normed_group fun_info) := sorry --non-trivial
lemma new_lemma_48992 (h0 : functor.comp topological_space cancel_monoid name) : @normal_space.{0} (cancel_monoid.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} cancel_monoid.{0} name h0)  := sorry --non-trivial
lemma new_lemma_48993 (h0 : functor.add_const (complete_lattice (has_zero Type)) name) : @is_atomistic.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (complete_lattice.{1} (has_zero.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_48994 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (has_emptyc.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_emptyc.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_48995 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (random_gen.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (random_gen.{0} empty))  := sorry --non-trivial
lemma new_lemma_48996 (h0 : functor.add_const (topological_space (finset linarith.comp)) environment.implicit_infer_kind) : @irreducible_space.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} linarith.comp)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_48997 (h0 : functor.add_const (list (normed_comm_ring pos)) linarith.comp) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_48998 (h0 : functor.comp cancel_comm_monoid_with_zero cancel_monoid name) : @unique_factorization_monoid.{0} (cancel_monoid.{0} name) (@functor.comp.run.{0 0 0} cancel_comm_monoid_with_zero.{0} cancel_monoid.{0} name h0)  := sorry --non-trivial
lemma new_lemma_48999 (h0 : topological_space (with_bot (random_gen (random_gen linarith.ineq)))) : path_connected_space (with_bot (random_gen (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_49000 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (complete_semilattice_Sup.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (complete_semilattice_Sup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49001 (h0 : semiring Type) : is_noetherian_ring Type := sorry --non-trivial
lemma new_lemma_49002 (h0 : function.extfun Type group) : @is_cyclic.{0} (canonically_linear_ordered_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (canonically_linear_ordered_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49003 (h0 : functor.add_const (function.extfun (Type 1) filter) linarith.comp) : countable_Inter_filter (function.extfun_app (functor.add_const.run h0) (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_49004 (h0 : preorder (ordered_cancel_add_comm_monoid empty) -> Prop) : @infi.{0 1} Prop (@conditionally_complete_lattice.to_has_Inf.{0} Prop (@complete_lattice.to_conditionally_complete_lattice.{0} Prop Prop.complete_lattice)) (preorder.{0} (ordered_cancel_add_comm_monoid.{0} empty)) h0  := sorry --non-trivial
lemma new_lemma_49005 (h0 : is_empty (random_gen (has_top string_imp))) (h1 : function.extfun (Type -> Type) (function.extfun Type)) : is_empty.elim' h0 (function.extfun_app (function.extfun_app h1 random_gen) (has_top string_imp)) := sorry --non-trivial
lemma new_lemma_49006 (h0 : functor.add_const (list (has_Inf pos)) pos) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49007 (h0 : topological_space (add_cancel_monoid (has_add pos))) : irreducible_space (add_cancel_monoid (has_add pos)) := sorry --non-trivial
lemma new_lemma_49008 (h0 : topological_space (has_neg_part (has_neg_part (has_add (comm_group (has_add name)))))) : normal_space (has_neg_part (has_neg_part (has_add (comm_group (has_add name))))) := sorry --non-trivial
lemma new_lemma_49009 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (has_neg_part.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (has_neg_part.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49010 (h0 : complete_lattice (complete_distrib_lattice (has_add linarith.comp))) : is_atomistic (complete_distrib_lattice (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_49011 (h0 : topological_space (div_inv_monoid (has_nnnorm (has_nnnorm linarith.ineq)))) : totally_disconnected_space (div_inv_monoid (has_nnnorm (has_nnnorm linarith.ineq))) := sorry --non-trivial
lemma new_lemma_49012 (h0 : functor.add_const (group (add_cancel_monoid pos)) (has_neg_part linarith.comp)) : @group.fg.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (add_cancel_monoid.{0} pos)) (has_neg_part.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_49013 (h0 : has_mem.mem (has_le linarith.ineq) has_zero.zero) : @strong_rank_condition.{0} (has_le.{0} linarith.ineq) (@multiset.pi.empty.{1 0} Type ring.{0} (has_le.{0} linarith.ineq) h0)  := sorry --non-trivial
lemma new_lemma_49014 (h0 : functor.add_const (topological_space (add_comm_monoid environment.implicit_infer_kind)) linarith.comp) : @t1_space.{0} (add_comm_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (add_comm_monoid.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49015 (h0 : has_mul (has_neg ennreal)) (h1 : functor.comp has_neg with_top nnreal) : @is_regular.{0} (has_neg.{0} ennreal) h0 (@functor.comp.run.{0 0 0} has_neg.{0} with_top.{0} nnreal h1)  := sorry --non-trivial
lemma new_lemma_49016 (h0 : topological_space (dlist (has_ssubset linarith.ineq))) : locally_compact_space (dlist (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_49017 (h0 : complete_lattice (linear_ordered_add_comm_group (random_gen string_imp))) : is_compactly_generated (linear_ordered_add_comm_group (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_49018 (h0 : topological_space (semigroup (has_add environment.implicit_infer_kind))) : path_connected_space (semigroup (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_49019 (h0 : function.extfun Type topological_space) : @t0_space.{0} (boolean_algebra.core.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.core.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49020 (h0 : functor.add_const (complete_lattice (complete_distrib_lattice unsigned)) Type) : @is_atomistic.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 1} (complete_lattice.{0} (complete_distrib_lattice.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_49021 (h0 : functor.add_const (topological_space (has_zero linarith.comp)) Type) : @loc_path_connected_space.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (has_zero.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_49022 (h0 : monoid (normed_comm_ring (comm_group Type))) : monoid.fg (normed_comm_ring (comm_group Type)) := sorry --non-trivial
lemma new_lemma_49023 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (pseudo_metric_space.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (pseudo_metric_space.{0} pos))  := sorry --non-trivial
lemma new_lemma_49024 (h0 : topological_space (ordered_comm_monoid congr_arg_kind)) : t0_space (ordered_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49025 (h0 : add_monoid (linear_ordered_semiring (semiring congr_arg_kind))) : add_monoid.fg (linear_ordered_semiring (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_49026 (h0 : topological_space (ordered_comm_ring (sub_neg_monoid (has_bot name)))) : regular_space (ordered_comm_ring (sub_neg_monoid (has_bot name))) := sorry --non-trivial
lemma new_lemma_49027 (h0 : functor.add_const (function.extfun (Type 1) topological_space) Type) : @preconnected_space.{1} (has_to_string.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) topological_space.{1}) Type h0) (has_to_string.{1} Type))  := sorry --non-trivial
lemma new_lemma_49028 (h0 : function.extfun Type (functor.comp (functor.comp complete_lattice boolean_algebra.core) finset)) : @is_atomistic.{0} (boolean_algebra.core.{0} (finset.{0} ennreal)) (@functor.comp.run.{0 0 0} complete_lattice.{0} boolean_algebra.core.{0} (finset.{0} ennreal) (@functor.comp.run.{0 0 0} (functor.comp.{0 0 0} complete_lattice.{0} boolean_algebra.core.{0}) finset.{0} ennreal (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} (functor.comp.{0 0 0} complete_lattice.{0} boolean_algebra.core.{0}) finset.{0}) h0 ennreal)))  := sorry --non-trivial
lemma new_lemma_49029 (h0 : functor.add_const (semiring (comm_monoid empty)) congr_arg_kind) : @is_noetherian_ring.{0} (comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (semiring.{0} (comm_monoid.{0} empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_49030 (h0 : complete_lattice (mul_zero_class (boolean_algebra.core (has_add pos)))) : complete_lattice.is_Sup_finite_compact (mul_zero_class (boolean_algebra.core (has_add pos))) := sorry --non-trivial
lemma new_lemma_49031 (h0 : topological_space (distrib (has_nnnorm fun_info))) : t0_space (distrib (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_49032 (h0 : prod (boolean_algebra.core (option pos)) (boolean_algebra.core (option pos))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_49033 (h0 : functor.add_const (function.extfun Type filter) (ring environment.implicit_infer_kind)) : filter.ne_bot (function.extfun_app (functor.add_const.run h0) (has_neg unsigned)) := sorry --non-trivial
lemma new_lemma_49034 (h0 : monoid (has_bot (has_neg (has_neg real)))) : monoid.fg (has_bot (has_neg (has_neg real))) := sorry --non-trivial
lemma new_lemma_49035 (h0 : topological_space (ring (has_add (has_Inf name)))) : irreducible_space (ring (has_add (has_Inf name))) := sorry --non-trivial
lemma new_lemma_49036 (h0 : topological_space (canonically_linear_ordered_monoid num)) : t0_space (canonically_linear_ordered_monoid num) := sorry --non-trivial
lemma new_lemma_49037 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @sequential_space.{0} (has_zero.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (has_zero.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49038 (h0 : ring (has_add linarith.ineq)) : is_domain (has_add linarith.ineq) := sorry --non-trivial
lemma new_lemma_49039 (h0 : function.extfun Type (functor.add_const (topological_space (complete_distrib_lattice name)))) : @totally_disconnected_space.{0} (complete_distrib_lattice.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} name)) linarith.comp (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} name))) h0 linarith.comp))  := sorry --non-trivial
lemma new_lemma_49040 (h0 : group (dlist string_imp)) : group.fg (dlist string_imp) := sorry --non-trivial
lemma new_lemma_49041 (h0 : list (finset name)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_49042 (h1 : group (fintype linarith.ineq)) : is_cyclic (fintype linarith.ineq) := sorry --non-trivial
lemma new_lemma_49043 (h0 : set (simple_graph (mul_one_class linarith.comp_source))) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_49044 (h0 : functor.add_const (topological_space (boolean_algebra environment.implicit_infer_kind)) name) : @t0_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_49045 (h0 : topological_space (left_cancel_monoid (semiring (semiring num)))) : path_connected_space (left_cancel_monoid (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_49046 (h0 : finset (has_add real)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_49047 (h0 : filter (linear_ordered_semiring (random_gen (has_norm (random_gen fun_info))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_49048 (h0 : function.extfun Type ring) : @is_domain.{0} (canonically_linear_ordered_monoid.{0} num) (@function.extfun_app.{2 1} Type ring.{0} h0 (canonically_linear_ordered_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_49049 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @totally_separated_space.{0} (has_emptyc.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) topological_space.{0}) (has_emptyc.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_49050 (h0 : function.extfun Type (functor.add_const (ring (measure_theory.measure_space unsigned)))) : @rank_condition.{0} (measure_theory.measure_space.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (measure_theory.measure_space.{0} unsigned)) congr_arg_kind (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ring.{0} (measure_theory.measure_space.{0} unsigned))) h0 congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49051 (h0 : functor.add_const (topological_space (boolean_algebra pos)) (finset linarith.comp)) : @preirreducible_space.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} pos)) (finset.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_49052 (h0 : group (has_zero (has_pos_part Type))) : normalizer_condition (has_zero (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_49053 (h0 : ring (complete_semilattice_Sup unsigned)) : rank_condition (complete_semilattice_Sup unsigned) := sorry --non-trivial
lemma new_lemma_49054 (h0 : topological_space (canonically_ordered_comm_semiring (has_add Type))) : t1_space (canonically_ordered_comm_semiring (has_add Type)) := sorry --non-trivial
lemma new_lemma_49055 (h0 : functor.add_const (ring (normed_linear_ordered_group num)) empty) : @strong_rank_condition.{0} (normed_linear_ordered_group.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (normed_linear_ordered_group.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_49056 (h0 : ordered_add_comm_monoid (cancel_monoid (finset Type))) : archimedean (cancel_monoid (finset Type)) := sorry --non-trivial
lemma new_lemma_49057 (h0 : ordered_comm_monoid (finset (semigroup name))) : has_exists_mul_of_le (finset (semigroup name)) := sorry --non-trivial
lemma new_lemma_49058 (h0 : functor.add_const (topological_space (mul_zero_class congr_arg_kind)) congr_arg_kind) : @totally_separated_space.{0} (mul_zero_class.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (mul_zero_class.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_49059 (h0 : functor.add_const (group (semigroup Type)) pos) : @is_simple_group.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (semigroup.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_49060 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (boolean_algebra.{0} name) (@function.extfun_app.{2 1} Type ring.{0} h0 (boolean_algebra.{0} name))  := sorry --non-trivial
lemma new_lemma_49061 (h0 : add_group (add_right_cancel_monoid congr_arg_kind)) : is_add_cyclic (add_right_cancel_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49062 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (canonically_ordered_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (canonically_ordered_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_49063 (h0 : functor.add_const (ring (ring Type)) (ring environment.implicit_infer_kind)) : @rank_condition.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (ring.{1} Type)) (ring.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_49064 (h0 : topological_space (canonically_linear_ordered_monoid unsigned)) : sequential_space (canonically_linear_ordered_monoid unsigned) := sorry --non-trivial
lemma new_lemma_49065 (h0 : uniform_space (has_add (finset (has_add pos)))) : complete_space (has_add (finset (has_add pos))) := sorry --non-trivial
lemma new_lemma_49066 (h0 : functor.add_const Prop (canonically_ordered_comm_semiring environment.implicit_infer_kind)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_49067 (h0 : topological_space (semiring (semiring unsigned))) : totally_disconnected_space (semiring (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_49068 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (finset.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (finset.{0} pos))  := sorry --non-trivial
lemma new_lemma_49069 (h2 : ring reducibility_hints) : is_domain reducibility_hints := sorry --non-trivial
lemma new_lemma_49070 (h0 : functor.comp topological_space boolean_algebra.core Type) : @sequential_space.{1} (boolean_algebra.core.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} boolean_algebra.core.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_49071 (h0 : fin has_zero.zero) : @unique_factorization_monoid.{0} (has_add.{0} real) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type cancel_comm_monoid_with_zero.{0}) h0) (has_add.{0} real))  := sorry --non-trivial
lemma new_lemma_49072 (h0 : complete_lattice (ordered_comm_ring linarith.comp)) : complete_lattice.is_Sup_finite_compact (ordered_comm_ring linarith.comp) := sorry --non-trivial
lemma new_lemma_49073 (h0 : topological_space (complete_distrib_lattice (cancel_monoid (ring (has_neg_part pos))))) : irreducible_space (complete_distrib_lattice (cancel_monoid (ring (has_neg_part pos)))) := sorry --non-trivial
lemma new_lemma_49074 (h0 : functor.add_const (topological_space (bin_tree congr_arg_kind)) unsigned) : @irreducible_space.{0} (bin_tree.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (bin_tree.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_49075 (h0 : functor.add_const (complete_lattice (has_neg ennreal)) ennreal) : @is_atomistic.{0} (has_neg.{0} ennreal) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_neg.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_49076 (h0 : group (encodable string_imp)) : group.fg (encodable string_imp) := sorry --non-trivial
lemma new_lemma_49077 (h0 : not (topological_space (id congr_arg_kind) -> false)) : @t0_space.{0} (@id.{2} Type congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (@id.{2} Type congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_49078 (h0 : add_group (add_comm_monoid (sub_neg_monoid real))) : is_add_cyclic (add_comm_monoid (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_49079 (h0 : list (semigroup (has_add (has_add (has_add (has_add name)))))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_49080 (h0 : function.extfun Type (functor.comp finset complete_distrib_lattice)) : finset.nonempty (functor.comp.run (function.extfun_app h0 name)) := sorry --non-trivial
lemma new_lemma_49081 (h0 : group (boolean_algebra.core (has_nndist name))) : group.fg (boolean_algebra.core (has_nndist name)) := sorry --non-trivial
lemma new_lemma_49082 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (pseudo_metric_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (pseudo_metric_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49083 (h0 : list (has_ssubset (has_ssubset linarith.ineq))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49084 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @totally_disconnected_space.{0} (comm_ring.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) topological_space.{0}) (comm_ring.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_49085 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (measurable_space.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measurable_space.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49086 (h0 : topological_space (normed_lattice_add_comm_group (has_add Type))) : normal_space (normed_lattice_add_comm_group (has_add Type)) := sorry --non-trivial
lemma new_lemma_49087 (h0 : ennreal -> ennreal -> Prop) (h1 : topological_space (quot h0)) : locally_compact_space (quot h0) := sorry --non-trivial
lemma new_lemma_49088 (h0 : uniform_space (normed_group unsigned)) : separated_space (normed_group unsigned) := sorry --non-trivial
lemma new_lemma_49089 (h0 : topological_space (boolean_algebra (add_comm_monoid Type))) : loc_path_connected_space (boolean_algebra (add_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_49090 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (has_to_string.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_to_string.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49091 (h1 : measurable_space (simple_graph ereal)) (h2 : filter (simple_graph ereal)) : filter.is_measurably_generated h2 := sorry --non-trivial
lemma new_lemma_49092 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (complete_distrib_lattice.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_distrib_lattice.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_49093 (h0 : group (has_emptyc (has_inv (has_inv (random_gen linarith.ineq))))) : normalizer_condition (has_emptyc (has_inv (has_inv (random_gen linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_49094 (h0 : functor.add_const (add_group (complete_distrib_lattice Type)) (has_add name)) : @is_add_cyclic.{1} (complete_distrib_lattice.{1} Type) (@functor.add_const.run.{1 0} (add_group.{1} (complete_distrib_lattice.{1} Type)) (has_add.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_49095 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (has_top.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_top.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_49096 (h0 : ring (boolean_algebra (semigroup Type))) : rank_condition (boolean_algebra (semigroup Type)) := sorry --non-trivial
lemma new_lemma_49097 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (has_nndist.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_nndist.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49098 (h0 : function.extfun Type ordered_comm_monoid) : @has_exists_mul_of_le.{0} (finset.{0} (option.{0} (option.{0} pos))) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} h0 (finset.{0} (option.{0} (option.{0} pos))))  := sorry --non-trivial
lemma new_lemma_49099 (h0 : filter (has_neg_part (comm_group (boolean_algebra.core environment.implicit_infer_kind)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_49100 (h0 : functor.add_const (topological_space (option empty)) congr_arg_kind) : @t0_space.{0} (option.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (option.{0} empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_49101 (h0 : complete_lattice (ring Type)) : is_compactly_generated (ring Type) := sorry --non-trivial
lemma new_lemma_49102 (h0 : fin has_zero.zero) : @is_simple_group.{0} (canonically_ordered_monoid.{0} pos) (@matrix.vec_empty.{0} (group.{0} (canonically_ordered_monoid.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_49103 (h0 : topological_space (as_linear_order unsigned)) : normal_space (as_linear_order unsigned) := sorry --non-trivial
lemma new_lemma_49104 (h0 : complete_lattice (denumerable (random_gen (random_gen linarith.ineq)))) : is_compactly_generated (denumerable (random_gen (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_49105 (h0 : group (random_gen (has_top (has_top (has_top linarith.ineq))))) : normalizer_condition (random_gen (has_top (has_top (has_top linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_49106 (h0 : preorder num) (h1 : functor.add_const (finset (omega_complete_partial_order.chain num)) num) : finset.nonempty (functor.add_const.run h1) := sorry --non-trivial
lemma new_lemma_49107 (h0 : topological_space (canonically_linear_ordered_monoid (canonically_linear_ordered_monoid Type))) : discrete_topology (canonically_linear_ordered_monoid (canonically_linear_ordered_monoid Type)) := sorry --non-trivial
lemma new_lemma_49108 (h0 : functor.add_const (group (ring Type)) environment.implicit_infer_kind) : @normalizer_condition.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (ring.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_49109 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (has_bot.{0} real) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_bot.{0} real))  := sorry --non-trivial
lemma new_lemma_49110 (h0 : function.extfun Type topological_space) : @t0_space.{0} (has_neg.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_neg.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49111 (h0 : not (ring (has_compl to_additive.value_type) -> false)) : @strong_rank_condition.{0} (has_compl.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (has_compl.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_49112 (h1 : ring (dlist char)) : strong_rank_condition (dlist char) := sorry --non-trivial
lemma new_lemma_49113 (h0 : group (measurable_space.dynkin_system (semiring empty))) : group.fg (measurable_space.dynkin_system (semiring empty)) := sorry --non-trivial
lemma new_lemma_49114 (h0 : add_group (topological_space (linear_ordered_add_comm_group linarith.comp_source))) : is_add_cyclic (topological_space (linear_ordered_add_comm_group linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_49115 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @topological_space.separable_space.{0} (comm_semigroup.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (comm_semigroup.{0} pos)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_49116 (h0 : functor.add_const (topological_space (boolean_algebra.core pos)) (has_neg name)) : @t1_space.{0} (boolean_algebra.core.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} pos)) (has_neg.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_49117 (h0 : list (with_bot unsigned)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49118 (h1 : prod string.iterator_imp string.iterator_imp) : set.diagonal string.iterator_imp h1 := sorry --non-trivial
lemma new_lemma_49119 (h0 : functor.add_const (topological_space (boolean_algebra Type)) (comm_group (has_add Type))) : @irreducible_space.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (boolean_algebra.{1} Type)) (comm_group.{1} (has_add.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_49120 (h0 : add_group (ring (has_add linarith.comp))) : is_add_cyclic (ring (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_49121 (h0 h1 : multiset (with_top ereal)) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_49122 (h0 : option (group (normed_comm_ring (semigroup linarith.comp)))) (h1 : group (normed_comm_ring (semigroup linarith.comp))) : normalizer_condition (normed_comm_ring (semigroup linarith.comp)) := sorry --non-trivial
lemma new_lemma_49123 (h0 : add_group (canonically_linear_ordered_monoid name)) : is_add_cyclic (canonically_linear_ordered_monoid name) := sorry --non-trivial
lemma new_lemma_49124 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (normed_lattice_add_comm_group.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_lattice_add_comm_group.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49125 (h0 : complete_lattice (monoid (option ennreal))) : complete_lattice.is_Sup_finite_compact (monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_49126 (h0 : topological_space (finset num)) : totally_disconnected_space (finset num) := sorry --non-trivial
lemma new_lemma_49127 (h0 : topological_space (add_cancel_monoid (finset (ring pos)))) : normal_space (add_cancel_monoid (finset (ring pos))) := sorry --non-trivial
lemma new_lemma_49128 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (normed_group.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_group.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_49129 (h0 : functor.add_const (ordered_add_comm_monoid (non_assoc_semiring empty)) empty) : @archimedean.{0} (non_assoc_semiring.{0} empty) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (non_assoc_semiring.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_49130 (h0 : has_lt (nondiscrete_normed_field std_gen)) : no_max_order (nondiscrete_normed_field std_gen) := sorry --non-trivial
lemma new_lemma_49131 (h0 : topological_space (uniform_space (has_ssubset linarith.ineq))) : path_connected_space (uniform_space (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_49132 (h0 : functor.add_const (function.extfun Type list) linarith.comp) : palindrome (function.extfun_app (functor.add_const.run h0) (has_nndist unsigned)) := sorry --non-trivial
lemma new_lemma_49133 (h0 : function.extfun Type group) : @is_cyclic.{0} (has_add.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (has_add.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49134 (h0 : functor.add_const (ordered_comm_monoid (has_neg Type)) Type) : @has_exists_mul_of_le.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 1} (ordered_comm_monoid.{1} (has_neg.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_49135 (h0 : functor.add_const (uniform_space (finset Type)) (normed_comm_ring Type)) : @complete_space.{1} (finset.{1} Type) (@functor.add_const.run.{1 1} (uniform_space.{1} (finset.{1} Type)) (normed_comm_ring.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_49136 (h0 : not (topological_space empty -> false)) : discrete_topology empty := sorry --non-trivial
lemma new_lemma_49137 (h2 : Prop) (h3 : punit) : category_theory.hom_of_element h2 h3 := sorry --non-trivial
lemma new_lemma_49138 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (complete_semilattice_Sup.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (complete_semilattice_Sup.{0} num))  := sorry --non-trivial
lemma new_lemma_49139 (h0 : functor.add_const (list (finset environment.implicit_infer_kind)) Type) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49140 (h0 : functor.add_const (function.extfun Type topological_space) Type) : @regular_space.{0} (boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) Type h0) (boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_49141 (h0 : topological_space (generalized_boolean_algebra (has_Inf name))) : t1_space (generalized_boolean_algebra (has_Inf name)) := sorry --non-trivial
lemma new_lemma_49142 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (measurable_space.dynkin_system.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measurable_space.dynkin_system.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49143 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (distrib_lattice.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (distrib_lattice.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_49144 (h0 : measurable_space (simple_graph to_additive.value_type)) (h5 : filter (simple_graph to_additive.value_type)) : filter.is_measurably_generated h5 := sorry --non-trivial
lemma new_lemma_49145 (h1 : complete_lattice (with_zero fun_info)) : is_compactly_generated (with_zero fun_info) := sorry --non-trivial
lemma new_lemma_49146 (h0 : functor.add_const (ring (has_zero Type)) linarith.comp) : @strong_rank_condition.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_zero.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49147 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (ordered_cancel_add_comm_monoid.{0} num) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (ordered_cancel_add_comm_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_49148 (h0 h1 : multiset (has_nnnorm (mul_one_class (has_le (mul_one_class reducibility_hints))))) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_49149 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (ordered_comm_monoid.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_comm_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_49150 (h0 : function.extfun Type group) : @group.fg.{0} (linear_ordered_field.{0} pos) (@function.extfun_app.{2 1} Type group.{0} h0 (linear_ordered_field.{0} pos))  := sorry --non-trivial
lemma new_lemma_49151 (h0 : uniform_space (normed_group congr_arg_kind)) : complete_space (normed_group congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49152 (h1 : group (measurable_space to_additive.value_type)) : group.fg (measurable_space to_additive.value_type) := sorry --non-trivial
lemma new_lemma_49153 (h0 : topological_space (add_cancel_monoid (finset pos))) : t0_space (add_cancel_monoid (finset pos)) := sorry --non-trivial
lemma new_lemma_49154 (h0 : ring (encodable (random_gen (random_gen linarith.comp_source)))) : strong_rank_condition (encodable (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_49155 (h0 : topological_space (add_cancel_monoid (boolean_algebra name))) : topological_space.separable_space (add_cancel_monoid (boolean_algebra name)) := sorry --non-trivial
lemma new_lemma_49156 (h0 : monoid (boolean_algebra.core unsigned)) : monoid.fg (boolean_algebra.core unsigned) := sorry --non-trivial
lemma new_lemma_49157 (h0 : list (complete_semilattice_Sup (random_gen string_imp))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49158 (h0 : functor.add_const (complete_lattice (measure_theory.measure_space num)) empty) : @complete_lattice.is_Sup_finite_compact.{0} (measure_theory.measure_space.{0} num) (@functor.add_const.run.{0 0} (complete_lattice.{0} (measure_theory.measure_space.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_49159 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @totally_separated_space.{1} (canonically_linear_ordered_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (canonically_linear_ordered_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_49160 (h0 : function.extfun (Type 1) topological_space) : @discrete_topology.{1} (comm_group.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (comm_group.{1} Type))  := sorry --non-trivial
lemma new_lemma_49161 (h0 : cancel_comm_monoid_with_zero (has_Inf Type)) : unique_factorization_monoid (has_Inf Type) := sorry --non-trivial
lemma new_lemma_49162 (h0 : ring (with_bot (measurable_space (random_gen num)))) : rank_condition (with_bot (measurable_space (random_gen num))) := sorry --non-trivial
lemma new_lemma_49163 (h0 : functor.add_const (topological_space (finset linarith.comp)) linarith.comp) : @topological_space.separable_space.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49164 (h0 : functor.add_const (topological_space (pseudo_metric_space ennreal)) pos) : @totally_separated_space.{0} (pseudo_metric_space.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (pseudo_metric_space.{0} ennreal)) pos h0)  := sorry --non-trivial
lemma new_lemma_49165 (h0 : topological_space (canonically_ordered_monoid pos)) : path_connected_space (canonically_ordered_monoid pos) := sorry --non-trivial
lemma new_lemma_49166 (h0 : finset (plift (option unsigned))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_49167 (h0 : ring (has_Inf (ordered_comm_monoid (ring Type)))) : is_domain (has_Inf (ordered_comm_monoid (ring Type))) := sorry --non-trivial
lemma new_lemma_49168 (h0 : topological_space (has_add fun_info)) : totally_disconnected_space (has_add fun_info) := sorry --non-trivial
lemma new_lemma_49169 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (add_cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_49170 (h0 : complete_lattice (comm_ring (comm_ring (random_gen (random_gen char))))) : complete_lattice.is_Sup_finite_compact (comm_ring (comm_ring (random_gen (random_gen char)))) := sorry --non-trivial
lemma new_lemma_49171 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (has_one.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_one.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49172 (h0 : topological_space (complete_linear_order (semiring (semiring empty)))) : normal_space (complete_linear_order (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_49173 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (canonically_ordered_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_49174 (h0 : list (linear_ordered_comm_group ennreal)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_49175 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @rank_condition.{0} (measure_theory.measure_space.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) ring.{0}) (measure_theory.measure_space.{0} num))  := sorry --non-trivial
lemma new_lemma_49176 (h0 : functor.add_const (filter (monoid ennreal)) num) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49177 (h0 : fin has_zero.zero) : @discrete_topology.{0} (simple_graph.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (simple_graph.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_49178 (h0 : ring (cancel_monoid (add_comm_monoid congr_arg_kind))) : is_principal_ideal_ring (cancel_monoid (add_comm_monoid congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_49179 (h0 : topological_space (has_union linarith.ineq)) : totally_separated_space (has_union linarith.ineq) := sorry --non-trivial
lemma new_lemma_49180 (h0 : functor.add_const (group (complete_distrib_lattice name)) pos) : @group.fg.{0} (complete_distrib_lattice.{0} name) (@functor.add_const.run.{0 0} (group.{0} (complete_distrib_lattice.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_49181 (h0 : semiring (complete_linear_order num) -> semiring (complete_linear_order num) -> Prop) : is_strict_order (semiring (complete_linear_order num)) h0 := sorry --non-trivial
lemma new_lemma_49182 (h0 : functor.add_const (topological_space (semigroup Type)) unsigned) : @preirreducible_space.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (semigroup.{1} Type)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_49183 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49184 (h0 : topological_space (finset (finset name))) : locally_compact_space (finset (finset name)) := sorry --non-trivial
lemma new_lemma_49185 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (@id.{2} Type empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (@id.{2} Type empty))  := sorry --non-trivial
lemma new_lemma_49186 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (add_comm_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_comm_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_49187 (h0 : functor.add_const (filter (has_neg_part pos)) (has_neg environment.implicit_infer_kind)) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49188 (h0 : ordered_comm_monoid (ring (ring Type))) : has_exists_mul_of_le (ring (ring Type)) := sorry --non-trivial
lemma new_lemma_49189 (h0 : topological_space (ring (ring Type))) : t0_space (ring (ring Type)) := sorry --non-trivial
lemma new_lemma_49190 (h0 : group (partial_order unsigned)) : is_cyclic (partial_order unsigned) := sorry --non-trivial
lemma new_lemma_49191 (h2 : filter (random_gen fun_info)) : filter.ne_bot h2 := sorry --non-trivial
lemma new_lemma_49192 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (measurable_space.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measurable_space.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_49193 (h0 : functor.add_const (topological_space (ring environment.implicit_infer_kind)) Type) : @irreducible_space.{0} (ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (ring.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_49194 (h0 : functor.add_const (topological_space (boolean_algebra.core ennreal)) Type) : @loc_path_connected_space.{0} (boolean_algebra.core.{0} ennreal) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.core.{0} ennreal)) Type h0)  := sorry --non-trivial
lemma new_lemma_49195 (h0 : uniform_space (finset (option (option num)))) : complete_space (finset (option (option num))) := sorry --non-trivial
lemma new_lemma_49196 (h0 : complete_lattice (normed_group char)) : is_compactly_generated (normed_group char) := sorry --non-trivial
lemma new_lemma_49197 (h0 : monoid (cancel_monoid (canonically_linear_ordered_monoid ennreal))) : monoid.fg (cancel_monoid (canonically_linear_ordered_monoid ennreal)) := sorry --non-trivial
lemma new_lemma_49198 (h0 : not (topological_space (normed_group linarith.comp_source) -> false)) : @t0_space.{0} (normed_group.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (normed_group.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_49199 (h0 : functor.add_const (ring (boolean_algebra linarith.comp)) (has_Inf linarith.comp)) : @is_principal_ideal_ring.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.{0} linarith.comp)) (has_Inf.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_49200 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (has_norm.{0} string_imp) (@function.extfun_app.{2 1} Type add_group.{0} h0 (has_norm.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_49201 (h0 : functor.add_const (filter (add_cancel_monoid Type)) name) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49202 (h0 : topological_space (boolean_algebra (has_pos_part environment.implicit_infer_kind))) : discrete_topology (boolean_algebra (has_pos_part environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_49203 (h0 : topological_space (has_add (has_add (has_Inf Type)))) : preirreducible_space (has_add (has_add (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_49204 (h0 : set (normed_field fun_info)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_49205 (h0 : not (topological_space (linear_ordered_add_comm_group fun_info) -> false)) : @t0_space.{0} (linear_ordered_add_comm_group.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (linear_ordered_add_comm_group.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_49206 (h0 : ordered_add_comm_monoid (comm_group (option pos))) : archimedean (comm_group (option pos)) := sorry --non-trivial
lemma new_lemma_49207 (h0 : group (comm_group (finset Type))) : is_simple_group (comm_group (finset Type)) := sorry --non-trivial
lemma new_lemma_49208 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (pseudo_metric_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (pseudo_metric_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49209 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (add_left_cancel_semigroup.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_left_cancel_semigroup.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49210 (h0 : topological_space (semiring congr_arg_kind)) : totally_disconnected_space (semiring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49211 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (has_emptyc.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_emptyc.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_49212 (h0 : complete_lattice (add_cancel_monoid (normed_linear_ordered_group (finset (ring Type))))) : is_compactly_generated (add_cancel_monoid (normed_linear_ordered_group (finset (ring Type)))) := sorry --non-trivial
lemma new_lemma_49213 (h0 : not (function.extfun Type topological_space -> false)) : @locally_compact_space.{0} (complete_semilattice_Sup.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (complete_semilattice_Sup.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_49214 (h0 : list (with_bot (random_gen (random_gen to_additive.value_type)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49215 (h0 : functor.add_const (topological_space (preorder num)) empty) : @t0_space.{0} (preorder.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_49216 (h0 : topological_space (ordered_ring (semiring (semiring (semiring num))))) : loc_path_connected_space (ordered_ring (semiring (semiring (semiring num)))) := sorry --non-trivial
lemma new_lemma_49217 (h0 : not (function.extfun Type topological_space -> false)) : @path_connected_space.{0} (partial_order.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (partial_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49218 (h0 : functor.add_const (add_group (has_Sup empty)) num) : @is_add_cyclic.{0} (has_Sup.{0} empty) (@functor.add_const.run.{0 0} (add_group.{0} (has_Sup.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_49219 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @normal_space.{0} (normed_group.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) topological_space.{0}) (normed_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_49220 (h0 : functor.add_const (topological_space (left_cancel_semigroup num)) num) : @discrete_topology.{0} (left_cancel_semigroup.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_semigroup.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_49221 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @regular_space.{0} (has_neg.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_neg.{0} pos))  := sorry --non-trivial
lemma new_lemma_49222 (h0 : measurable_space fun_info) (h1 : measure_theory.measure fun_info) : measure_theory.has_no_atoms h1 := sorry --non-trivial
lemma new_lemma_49223 (h0 : has_mem.mem (with_one linarith.comp) has_emptyc.emptyc) : @complete_space.{0} (with_one.{0} linarith.comp) (@finset.pi.empty.{1 0} Type uniform_space.{0} (with_one.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_49224 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_simple_group.{0} (complete_distrib_lattice.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (complete_distrib_lattice.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49225 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (semigroup.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (semigroup.{0} pos))  := sorry --non-trivial
lemma new_lemma_49226 (h0 : functor.add_const (ring (has_neg linarith.comp)) (finset linarith.comp)) : @is_domain.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (has_neg.{0} linarith.comp)) (finset.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_49227 (h0 : functor.add_const (semiring (normed_comm_ring linarith.comp)) (finset (finset linarith.comp))) : @is_noetherian_ring.{0} (normed_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (semiring.{0} (normed_comm_ring.{0} linarith.comp)) (finset.{0} (finset.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_49228 (h0 : complete_lattice (has_add linarith.comp_source)) : complete_lattice.is_Sup_finite_compact (has_add linarith.comp_source) := sorry --non-trivial
lemma new_lemma_49229 (h1 : group (normed_group string_imp)) : is_cyclic (normed_group string_imp) := sorry --non-trivial
lemma new_lemma_49230 (h0 : functor.comp topological_space has_add Type) : @topological_space.separable_space.{1} (has_add.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} has_add.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_49231 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (has_bot.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_bot.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49232 (h0 : topological_space (has_emptyc (random_gen num))) : totally_disconnected_space (has_emptyc (random_gen num)) := sorry --non-trivial
lemma new_lemma_49233 (h0 : not (function.extfun Type complete_lattice -> false)) : @is_compactly_generated.{0} (has_top.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (has_top.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49234 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (has_add (has_neg_part unsigned))) := sorry --non-trivial
lemma new_lemma_49235 (h0 : monoid (measure_theory.measure_space (has_top empty))) : monoid.fg (measure_theory.measure_space (has_top empty)) := sorry --non-trivial
lemma new_lemma_49236 (h0 : ordered_comm_monoid (boolean_algebra.core (ordered_ring Type))) : has_exists_mul_of_le (boolean_algebra.core (ordered_ring Type)) := sorry --non-trivial
lemma new_lemma_49237 (h0 : functor.add_const (topological_space (boolean_algebra.core linarith.comp)) pos) : @preirreducible_space.{0} (boolean_algebra.core.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_49238 (h0 : not (topological_space (measure_theory.measure_space empty) -> false)) : @t0_space.{0} (measure_theory.measure_space.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (measure_theory.measure_space.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_49239 (h0 : complete_lattice (comm_group linarith.comp_source)) : complete_lattice.is_Sup_finite_compact (comm_group linarith.comp_source) := sorry --non-trivial
lemma new_lemma_49240 (h0 : group (normed_comm_ring ennreal)) : is_cyclic (normed_comm_ring ennreal) := sorry --non-trivial
lemma new_lemma_49241 (h0 : filter num) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_49242 (h0 : functor.add_const (topological_space (normed_comm_ring pos)) (has_Inf linarith.comp)) : @loc_path_connected_space.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} pos)) (has_Inf.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_49243 (h0 : list (linear_ordered_add_comm_group (random_gen (has_top linarith.ineq)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49244 (h0 : complete_lattice (has_add (mul_zero_class name))) : is_compactly_generated (has_add (mul_zero_class name)) := sorry --non-trivial
lemma new_lemma_49245 (h0 : group (complete_distrib_lattice (ordered_ring (has_add linarith.comp)))) : normalizer_condition (complete_distrib_lattice (ordered_ring (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_49246 (h0 : topological_space (plift (semiring empty))) : discrete_topology (plift (semiring empty)) := sorry --non-trivial
lemma new_lemma_49247 (h0 : add_monoid (complete_distrib_lattice (has_neg (has_neg (has_neg linarith.comp))))) : add_monoid.fg (complete_distrib_lattice (has_neg (has_neg (has_neg linarith.comp)))) := sorry --non-trivial
lemma new_lemma_49248 (h0 : topological_space (has_pos_part (has_pos_part (has_add (has_add pos))))) : discrete_topology (has_pos_part (has_pos_part (has_add (has_add pos)))) := sorry --non-trivial
lemma new_lemma_49249 (h0 : not (complete_lattice (topological_space (has_nnnorm fun_info)) -> false)) : complete_lattice.is_Sup_finite_compact (topological_space (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_49250 (h0 : topological_space (ordered_comm_ring (has_Inf (has_Inf (has_neg Type))))) : irreducible_space (ordered_comm_ring (has_Inf (has_Inf (has_neg Type)))) := sorry --non-trivial
lemma new_lemma_49251 (h0 : has_mem.mem (complete_semilattice_Sup congr_arg_kind) has_emptyc.emptyc) : @path_connected_space.{0} (complete_semilattice_Sup.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type topological_space.{0} (complete_semilattice_Sup.{0} congr_arg_kind) h0)  := sorry --non-trivial
lemma new_lemma_49252 (h0 : functor.add_const (topological_space (has_zero (has_add name))) name) : @path_connected_space.{0} (has_zero.{0} (has_add.{0} name)) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} (has_add.{0} name))) name h0)  := sorry --non-trivial
lemma new_lemma_49253 (h0 : not (function.extfun Type topological_space -> false)) : @path_connected_space.{0} (linear_ordered_semiring.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (linear_ordered_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_49254 (h0 : topological_space (has_norm linarith.comp_source)) : path_connected_space (has_norm linarith.comp_source) := sorry --non-trivial
lemma new_lemma_49255 (h0 : topological_space (ordered_comm_monoid (ring (has_add (ring (ring Type)))))) : t0_space (ordered_comm_monoid (ring (has_add (ring (ring Type))))) := sorry --non-trivial
lemma new_lemma_49256 (h3 : ring (uniform_space to_additive.value_type)) : rank_condition (uniform_space to_additive.value_type) := sorry --non-trivial
lemma new_lemma_49257 (h0 : group (linear_ordered_semiring (has_norm (has_top (semiring (has_norm empty)))))) : group.fg (linear_ordered_semiring (has_norm (has_top (semiring (has_norm empty))))) := sorry --non-trivial
lemma new_lemma_49258 (h0 : group (has_pos_part Type)) : is_cyclic (has_pos_part Type) := sorry --non-trivial
lemma new_lemma_49259 (h1 : topological_space (with_zero string_imp)) : totally_disconnected_space (with_zero string_imp) := sorry --non-trivial
lemma new_lemma_49260 (h0 : group (canonically_linear_ordered_monoid (has_add pos))) : is_cyclic (canonically_linear_ordered_monoid (has_add pos)) := sorry --non-trivial
lemma new_lemma_49261 (h0 : function.extfun Type topological_space) : @normal_space.{0} (ordered_comm_group.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_49262 (h0 : topological_space (with_one to_additive.value_type)) : locally_compact_space (with_one to_additive.value_type) := sorry --non-trivial
lemma new_lemma_49263 (h0 : functor.add_const (topological_space (add_left_cancel_semigroup empty)) empty) : @loc_path_connected_space.{0} (add_left_cancel_semigroup.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (add_left_cancel_semigroup.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_49264 (h0 : topological_space (semigroup (comm_group Type))) : preconnected_space (semigroup (comm_group Type)) := sorry --non-trivial
lemma new_lemma_49265 (h0 : not (complete_lattice (distrib environment.implicit_infer_kind) -> false)) : @is_compactly_generated.{0} (distrib.{0} environment.implicit_infer_kind) (@classical.by_contradiction'.{1} (complete_lattice.{0} (distrib.{0} environment.implicit_infer_kind)) h0)  := sorry --non-trivial
lemma new_lemma_49266 (h0 : monoid (distrib_lattice (random_gen (has_inv to_additive.value_type)))) : monoid.fg (distrib_lattice (random_gen (has_inv to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_49267 (h0 : ordered_add_comm_monoid (generalized_boolean_algebra (complete_distrib_lattice name))) : archimedean (generalized_boolean_algebra (complete_distrib_lattice name)) := sorry --non-trivial
lemma new_lemma_49268 (h0 : functor.add_const (function.extfun (Type 1) topological_space) (add_comm_monoid (finset pos))) : @regular_space.{1} (comm_group.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) (add_comm_monoid.{0} (finset.{0} pos)) h0) (comm_group.{1} Type))  := sorry --non-trivial
lemma new_lemma_49269 (h0 : topological_space (has_to_string num)) : t1_space (has_to_string num) := sorry --non-trivial
lemma new_lemma_49270 (h1 : filter (with_one (denumerable char))) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_49271 (h0 : ring (comm_group ereal)) : rank_condition (comm_group ereal) := sorry --non-trivial
lemma new_lemma_49272 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (has_norm.{0} linarith.ineq) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_norm.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_49273 (h0 : topological_space (has_add (ring (has_add Type)))) : preconnected_space (has_add (ring (has_add Type))) := sorry --non-trivial
lemma new_lemma_49274 (h2 : complete_lattice (distrib to_additive.value_type)) : is_compactly_generated (distrib to_additive.value_type) := sorry --non-trivial
lemma new_lemma_49275 (h0 : set (has_compl (mul_one_class fun_info))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_49276 (h0 : functor.add_const (list (canonically_ordered_comm_semiring Type)) name) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49277 (h0 : topological_space (has_neg num)) : locally_compact_space (has_neg num) := sorry --non-trivial
lemma new_lemma_49278 (h0 : functor.add_const (topological_space (add_cancel_monoid environment.implicit_infer_kind)) Type) : @preconnected_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_49279 (h0 : topological_space (mul_zero_class (has_nndist (finset (has_nndist name))))) : sequential_space (mul_zero_class (has_nndist (finset (has_nndist name)))) := sorry --non-trivial
lemma new_lemma_49280 (h1 : topological_space (random_gen linarith.comp)) : path_connected_space (random_gen linarith.comp) := sorry --non-trivial
lemma new_lemma_49281 (h0 : topological_space (canonically_linear_ordered_monoid (has_neg real))) : normal_space (canonically_linear_ordered_monoid (has_neg real)) := sorry --non-trivial
lemma new_lemma_49282 (h0 : fin has_zero.zero) : @regular_space.{0} (has_bot.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_bot.{0} name))  := sorry --non-trivial
lemma new_lemma_49283 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (ordered_cancel_add_comm_monoid.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (ordered_cancel_add_comm_monoid.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_49284 (h0 : group (id linarith.ineq)) : group.fg (id linarith.ineq) := sorry --non-trivial
lemma new_lemma_49285 (h0 : topological_space (linear_ordered_cancel_comm_monoid congr_arg_kind)) : loc_path_connected_space (linear_ordered_cancel_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49286 (h0 : topological_space (has_nndist (has_add (has_add environment.implicit_infer_kind)))) : preconnected_space (has_nndist (has_add (has_add environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_49287 (h0 : add_group (pseudo_metric_space pos)) : is_add_cyclic (pseudo_metric_space pos) := sorry --non-trivial
lemma new_lemma_49288 (h0 : list (boolean_algebra.core (finset ennreal))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_49289 (h0 : finset (boolean_algebra (has_neg Type))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_49290 (h0 : functor.add_const (semiring znum) (option unsigned)) : @is_noetherian_ring.{0} znum (@functor.add_const.run.{0 0} (semiring.{0} znum) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_49291 (h0 : functor.add_const (topological_space (finset pos)) environment.implicit_infer_kind) : @irreducible_space.{0} (finset.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_49292 (h0 : function.extfun Type complete_lattice) : complete_lattice.is_Sup_finite_compact (measurable_space fun_info) := sorry --non-trivial
lemma new_lemma_49293 (h1 : ring (nondiscrete_normed_field string.iterator_imp)) : strong_rank_condition (nondiscrete_normed_field string.iterator_imp) := sorry --non-trivial
lemma new_lemma_49294 (h0 : function.extfun (Type 1) ring) : @strong_rank_condition.{1} (has_bot.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} h0 (has_bot.{1} Type))  := sorry --non-trivial
lemma new_lemma_49295 (h0 : ring (add_group fun_info)) : strong_rank_condition (add_group fun_info) := sorry --non-trivial
lemma new_lemma_49296 (h0 : ring (with_one (has_nnnorm (random_gen fun_info)))) : rank_condition (with_one (has_nnnorm (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_49297 (h0 : function.extfun (Type 1) topological_space) : @preirreducible_space.{1} (comm_group.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (comm_group.{1} Type))  := sorry --non-trivial
lemma new_lemma_49298 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (semigroup.{0} name) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (semigroup.{0} name))  := sorry --non-trivial
lemma new_lemma_49299 (h0 : complete_lattice (comm_group (option name))) : is_compactly_generated (comm_group (option name)) := sorry --non-trivial
lemma new_lemma_49300 (h0 : functor.add_const (group (normed_comm_ring pos)) pos) : @group.fg.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (normed_comm_ring.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_49301 (h0 : function.extfun Type topological_space) : @t0_space.{0} (option.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (option.{0} num))  := sorry --non-trivial
lemma new_lemma_49302 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (has_Inf.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_Inf.{0} pos))  := sorry --non-trivial
lemma new_lemma_49303 (h2 : complete_lattice (comm_ring linarith.comp_source)) : complete_lattice.is_Sup_finite_compact (comm_ring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_49304 (h0 : ring (has_le (mul_one_class (mul_one_class reducibility_hints)))) : strong_rank_condition (has_le (mul_one_class (mul_one_class reducibility_hints))) := sorry --non-trivial
lemma new_lemma_49305 (h0 : ring (linear_ordered_add_comm_group (has_nnnorm fun_info))) : rank_condition (linear_ordered_add_comm_group (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_49306 (h0 : functor.add_const (group (has_to_string pos)) (finset (finset environment.implicit_infer_kind))) : @group.fg.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_to_string.{0} pos)) (finset.{0} (finset.{0} environment.implicit_infer_kind)) h0)  := sorry --non-trivial
lemma new_lemma_49307 (h0 : uniform_space congr_arg_kind) (h1 : not (topological_space (uniform_space.separation_quotient congr_arg_kind) -> false)) : locally_compact_space (uniform_space.separation_quotient congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49308 (h0 : group (partial_order num)) : normalizer_condition (partial_order num) := sorry --non-trivial
lemma new_lemma_49309 (h0 : functor.add_const (complete_lattice (finset ennreal)) Type) : @is_atomistic.{0} (finset.{0} ennreal) (@functor.add_const.run.{0 1} (complete_lattice.{0} (finset.{0} ennreal)) Type h0)  := sorry --non-trivial
lemma new_lemma_49310 (h0 : functor.add_const (ring (has_add environment.implicit_infer_kind)) pos) : @is_principal_ideal_ring.{0} (has_add.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (has_add.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_49311 (h0 : functor.add_const (function.extfun Type ordered_add_comm_monoid) pos) : @archimedean.{0} (has_pos_part.{0} name) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_add_comm_monoid.{0}) pos h0) (has_pos_part.{0} name))  := sorry --non-trivial
lemma new_lemma_49312 (h0 : functor.add_const (topological_space (measurable_space.dynkin_system unsigned)) unsigned) : @t0_space.{0} (measurable_space.dynkin_system.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (measurable_space.dynkin_system.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_49313 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (has_zero.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (has_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_49314 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type ring.{0} h0 (cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_49315 (h0 : group (has_dist congr_arg_kind)) : normalizer_condition (has_dist congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49316 (h0 : monoid (has_Inf (ordered_ring (has_Inf (has_Inf Type))))) : monoid.fg (has_Inf (ordered_ring (has_Inf (has_Inf Type)))) := sorry --non-trivial
lemma new_lemma_49317 (h2 : add_group (nondiscrete_normed_field string.iterator_imp)) : is_add_cyclic (nondiscrete_normed_field string.iterator_imp) := sorry --non-trivial
lemma new_lemma_49318 (h1 : function.extfun (Type 1) topological_space) : @totally_disconnected_space.{1} Type (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h1 Type)  := sorry --non-trivial
lemma new_lemma_49319 (h0 : filter (omega_complete_partial_order num)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_49320 (h0 : is_R_or_C empty -> is_R_or_C empty -> Prop) : irreflexive h0 := sorry --non-trivial
lemma new_lemma_49321 (h0 : filter (pseudo_metric_space environment.implicit_infer_kind)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_49322 (h0 : uniform_space (semi_normed_ring environment.projection_info)) : complete_space (semi_normed_ring environment.projection_info) := sorry --non-trivial
lemma new_lemma_49323 (h0 : topological_space (add_cancel_monoid congr_arg_kind)) : normal_space (add_cancel_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49324 (h0 : list (linear_ordered_comm_ring (semiring (semiring (semiring (semiring (semiring (semiring (semiring empty))))))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49325 (h0 : group (with_one (random_gen (random_gen (random_gen to_additive.value_type))))) : group.fg (with_one (random_gen (random_gen (random_gen to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_49326 (h0 : functor.add_const (add_monoid (complete_linear_order unsigned)) empty) : @add_monoid.fg.{0} (complete_linear_order.{0} unsigned) (@functor.add_const.run.{0 0} (add_monoid.{0} (complete_linear_order.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_49327 (h0 : complete_lattice (linear_ordered_add_comm_group (has_inv (has_inv to_additive.value_type)))) : is_atomistic (linear_ordered_add_comm_group (has_inv (has_inv to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_49328 (h0 : has_mem.mem (has_one real.angle) has_emptyc.emptyc) : @normal_space.{0} (has_one.{0} real.angle) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_one.{0} real.angle) h0)  := sorry --non-trivial
lemma new_lemma_49329 (h0 : add_group occurrences) : is_add_cyclic occurrences := sorry --non-trivial
lemma new_lemma_49330 (h0 : list (uniform_space (has_le to_additive.value_type))) (h1 : ne h0 list.nil) : @complete_space.{0} (has_le.{0} to_additive.value_type) (@list.last.{0} (uniform_space.{0} (has_le.{0} to_additive.value_type)) h0 h1)  := sorry --non-trivial
lemma new_lemma_49331 (h0 : group (comm_ring (has_nnnorm (has_nnnorm (has_nnnorm linarith.comp_source))))) : group.fg (comm_ring (has_nnnorm (has_nnnorm (has_nnnorm linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_49332 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (has_neg.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_neg.{0} pos))  := sorry --non-trivial
lemma new_lemma_49333 (h0 : topological_space (has_zero Type)) : totally_disconnected_space (has_zero Type) := sorry --non-trivial
lemma new_lemma_49334 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (ordered_comm_ring.{0} pos) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (ordered_comm_ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_49335 (h0 : function.extfun Type group) : @group.fg.{0} (linear_ordered_comm_monoid_with_zero.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (linear_ordered_comm_monoid_with_zero.{0} empty))  := sorry --non-trivial
lemma new_lemma_49336 (h0 : ring (uniform_space to_additive.value_type)) : strong_rank_condition (uniform_space to_additive.value_type) := sorry --non-trivial
lemma new_lemma_49337 (h0 : function.extfun Type ring) : @rank_condition.{0} (preorder.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (preorder.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49338 (h0 : functor.add_const (monoid (cancel_monoid name)) (boolean_algebra.core pos)) : @monoid.fg.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (monoid.{0} (cancel_monoid.{0} name)) (boolean_algebra.core.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_49339 (h0 : function.extfun Type (functor.comp topological_space finset)) : @path_connected_space.{0} (finset.{0} ennreal) (@functor.comp.run.{0 0 0} topological_space.{0} finset.{0} ennreal (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} finset.{0}) h0 ennreal))  := sorry --non-trivial
lemma new_lemma_49340 (h0 : not (topological_space (has_compl fun_info) -> false)) : @t0_space.{0} (has_compl.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (has_compl.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_49341 (h0 : functor.add_const (topological_space (has_neg unsigned)) linarith.comp) : @locally_compact_space.{0} (has_neg.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49342 (h0 : add_monoid (simple_graph (has_add (boolean_algebra.core pos)))) : add_monoid.fg (simple_graph (has_add (boolean_algebra.core pos))) := sorry --non-trivial
lemma new_lemma_49343 (h0 : linarith.comp_source -> linarith.comp_source -> Prop) (h1 : set linarith.comp_source) : is_antichain h0 h1 := sorry --non-trivial
lemma new_lemma_49344 (h0 : ordered_add_comm_monoid (boolean_algebra.core (finset Type))) : archimedean (boolean_algebra.core (finset Type)) := sorry --non-trivial
lemma new_lemma_49345 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (has_add.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (has_add.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_49346 (h1 : topological_space (uniform_space char)) : t0_space (uniform_space char) := sorry --non-trivial
lemma new_lemma_49347 (h0 : has_mem.mem (measurable_space (has_norm fun_info)) has_emptyc.emptyc) : @rank_condition.{0} (measurable_space.{0} (has_norm.{0} fun_info)) (@finset.pi.empty.{1 0} Type ring.{0} (measurable_space.{0} (has_norm.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_49348 (h0 : topological_space (random_gen (random_gen (random_gen num)))) : totally_disconnected_space (random_gen (random_gen (random_gen num))) := sorry --non-trivial
lemma new_lemma_49349 (h0 : add_group (with_bot (has_top fun_info))) : is_add_cyclic (with_bot (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_49350 (h0 : topological_space (has_add (has_add real))) : totally_disconnected_space (has_add (has_add real)) := sorry --non-trivial
lemma new_lemma_49351 (h0 : topological_space (complete_distrib_lattice (option unsigned))) : irreducible_space (complete_distrib_lattice (option unsigned)) := sorry --non-trivial
lemma new_lemma_49352 (h0 : topological_space (boolean_algebra.core (has_add name))) : loc_path_connected_space (boolean_algebra.core (has_add name)) := sorry --non-trivial
lemma new_lemma_49353 (h0 : topological_space (dlist (has_inv fun_info))) : locally_compact_space (dlist (has_inv fun_info)) := sorry --non-trivial
lemma new_lemma_49354 (h0 : add_group (has_pos_part (ring (simple_graph (ring Type))))) : is_add_cyclic (has_pos_part (ring (simple_graph (ring Type)))) := sorry --non-trivial
lemma new_lemma_49355 (h0 : functor.add_const (topological_space (has_inter name)) Type) : @totally_disconnected_space.{0} (has_inter.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (has_inter.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_49356 (h0 : add_monoid (finset (finset linarith.comp))) : add_monoid.fg (finset (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_49357 (h0 : topological_space (measurable_space (has_norm (has_norm (has_norm fun_info))))) : locally_compact_space (measurable_space (has_norm (has_norm (has_norm fun_info)))) := sorry --non-trivial
lemma new_lemma_49358 (h0 : prod (semiring unsigned) (semiring unsigned)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_49359 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (measurable_space.dynkin_system.{0} unsigned) (@function.extfun_app.{2 1} Type semiring.{0} h0 (measurable_space.dynkin_system.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49360 (h0 : topological_space (comm_group (has_neg_part unsigned))) : totally_separated_space (comm_group (has_neg_part unsigned)) := sorry --non-trivial
lemma new_lemma_49361 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (has_nndist.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_nndist.{0} num))  := sorry --non-trivial
lemma new_lemma_49362 (h0 : functor.add_const (topological_space (non_assoc_semiring empty)) empty) : @locally_compact_space.{0} (non_assoc_semiring.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (non_assoc_semiring.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_49363 (h0 : add_monoid (has_add (normed_comm_ring (boolean_algebra.core unsigned)))) : add_monoid.fg (has_add (normed_comm_ring (boolean_algebra.core unsigned))) := sorry --non-trivial
lemma new_lemma_49364 (h0 : functor.add_const (function.extfun Type topological_space) environment.implicit_infer_kind) : @topological_space.separable_space.{0} (has_to_string.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) environment.implicit_infer_kind h0) (has_to_string.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_49365 (h0 : complete_lattice (has_nnnorm enat)) : is_compactly_generated (has_nnnorm enat) := sorry --non-trivial
lemma new_lemma_49366 (h0 : not (topological_space (add_group empty) -> false)) : @irreducible_space.{0} (add_group.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (add_group.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_49367 (h0 : ring (semi_normed_ring string_imp)) : strong_rank_condition (semi_normed_ring string_imp) := sorry --non-trivial
lemma new_lemma_49368 (h0 : function.extfun Type (functor.comp cancel_comm_monoid_with_zero cancel_monoid)) : @unique_factorization_monoid.{0} (cancel_monoid.{0} name) (@functor.comp.run.{0 0 0} cancel_comm_monoid_with_zero.{0} cancel_monoid.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} cancel_comm_monoid_with_zero.{0} cancel_monoid.{0}) h0 name))  := sorry --non-trivial
lemma new_lemma_49369 (h0 : function.extfun Type topological_space) : @t0_space.{0} (has_inner.{0 0} num num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_inner.{0 0} num num))  := sorry --non-trivial
lemma new_lemma_49370 (h0 : topological_space (has_edist (semiring empty))) : irreducible_space (has_edist (semiring empty)) := sorry --non-trivial
lemma new_lemma_49371 (h0 : functor.add_const (group (has_nndist environment.implicit_infer_kind)) Type) : @group.fg.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (group.{0} (has_nndist.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_49372 (h0 : topological_space (semiring (add_left_cancel_semigroup empty))) : locally_compact_space (semiring (add_left_cancel_semigroup empty)) := sorry --non-trivial
lemma new_lemma_49373 (h0 : topological_space (add_cancel_monoid (comm_group name))) : regular_space (add_cancel_monoid (comm_group name)) := sorry --non-trivial
lemma new_lemma_49374 (h0 : topological_space (monoid num)) : t1_space (monoid num) := sorry --non-trivial
lemma new_lemma_49375 (h0 : topological_space (has_union unsigned)) : topological_space.separable_space (has_union unsigned) := sorry --non-trivial
lemma new_lemma_49376 (h0 : group (has_nnnorm (has_nnnorm (has_nnnorm char)))) : is_cyclic (has_nnnorm (has_nnnorm (has_nnnorm char))) := sorry --non-trivial
lemma new_lemma_49377 (h0 : not (ring (add_monoid linarith.ineq) -> false)) : @strong_rank_condition.{0} (add_monoid.{0} linarith.ineq) (@classical.by_contradiction'.{1} (ring.{0} (add_monoid.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_49378 (h0 : list name) : palindrome h0 := sorry --non-trivial
lemma new_lemma_49379 (h0 : group (has_norm (random_gen num))) : is_cyclic (has_norm (random_gen num)) := sorry --non-trivial
lemma new_lemma_49380 (h0 : topological_space (has_neg num)) : topological_space.separable_space (has_neg num) := sorry --non-trivial
lemma new_lemma_49381 (h0 : functor.add_const (group (semigroup unsigned)) Type) : @is_simple_group.{0} (semigroup.{0} unsigned) (@functor.add_const.run.{0 1} (group.{0} (semigroup.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_49382 (h0 : function.extfun nat fin) : @t1_space.{1} (canonically_linear_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (canonically_linear_ordered_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_49383 (h0 : topological_space (add_cancel_monoid pos)) : normal_space (add_cancel_monoid pos) := sorry --non-trivial
lemma new_lemma_49384 (h0 : not (ring (has_nnnorm (mul_one_class (has_nnnorm reducibility_hints))) -> false)) : @is_domain.{0} (has_nnnorm.{0} (mul_one_class.{0} (has_nnnorm.{0} reducibility_hints))) (@classical.by_contradiction'.{1} (ring.{0} (has_nnnorm.{0} (mul_one_class.{0} (has_nnnorm.{0} reducibility_hints)))) h0)  := sorry --non-trivial
lemma new_lemma_49385 (h0 : function.extfun Type topological_space) : @t0_space.{0} (ordered_comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49386 (h0 : ring (id (semiring unsigned))) : rank_condition (id (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_49387 (h1 : topological_space (uniform_space (random_gen to_additive.value_type))) : t0_space (uniform_space (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_49388 (h0 : function.extfun Type topological_space) : @t1_space.{0} (preorder.{0} (option.{0} unsigned)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (preorder.{0} (option.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_49389 (h0 : functor.comp ordered_add_comm_monoid finset name) : @archimedean.{0} (finset.{0} name) (@functor.comp.run.{0 0 0} ordered_add_comm_monoid.{0} finset.{0} name h0)  := sorry --non-trivial
lemma new_lemma_49390 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (add_cancel_monoid.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_cancel_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_49391 (h0 : functor.add_const (ordered_add_comm_monoid (add_comm_monoid Type)) name) : @archimedean.{1} (add_comm_monoid.{1} Type) (@functor.add_const.run.{1 0} (ordered_add_comm_monoid.{1} (add_comm_monoid.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_49392 (h0 : not (group (dlist to_additive.value_type) -> false)) : @is_cyclic.{0} (dlist.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (group.{0} (dlist.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_49393 (h0 : functor.add_const (semiring (option unsigned)) congr_arg_kind) : @is_noetherian_ring.{0} (option.{0} unsigned) (@functor.add_const.run.{0 0} (semiring.{0} (option.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_49394 (h0 : functor.add_const (topological_space (preorder num)) (semiring (semiring num))) : @normal_space.{0} (preorder.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} num)) (semiring.{0} (semiring.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_49395 (h0 : topological_space (has_top (random_gen (random_gen linarith.comp_source)))) : path_connected_space (has_top (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_49396 (h0 : ordered_add_comm_monoid (ordered_comm_ring (finset linarith.comp))) : archimedean (ordered_comm_ring (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_49397 (h0 : functor.add_const (topological_space (has_Sup congr_arg_kind)) empty) : @totally_separated_space.{0} (has_Sup.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Sup.{0} congr_arg_kind)) empty h0)  := sorry --non-trivial
lemma new_lemma_49398 (h0 : ring (complete_distrib_lattice (monoid (add_comm_monoid pos)))) : is_principal_ideal_ring (complete_distrib_lattice (monoid (add_comm_monoid pos))) := sorry --non-trivial
lemma new_lemma_49399 (h0 : topological_space (list linarith.comp_source)) : t0_space (list linarith.comp_source) := sorry --non-trivial
lemma new_lemma_49400 (h0 : not (uniform_space (measure_theory.measure_space unsigned) -> false)) : @complete_space.{0} (measure_theory.measure_space.{0} unsigned) (@classical.by_contradiction'.{1} (uniform_space.{0} (measure_theory.measure_space.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_49401 (h0 : functor.comp topological_space add_cancel_monoid name) : @totally_disconnected_space.{0} (add_cancel_monoid.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} add_cancel_monoid.{0} name h0)  := sorry --non-trivial
lemma new_lemma_49402 (h0 : functor.add_const (uniform_space (option unsigned)) unsigned) : @separated_space.{0} (option.{0} unsigned) (@functor.add_const.run.{0 0} (uniform_space.{0} (option.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_49403 (h0 : not (topological_space (non_unital_non_assoc_semiring fun_info) -> false)) : @t0_space.{0} (non_unital_non_assoc_semiring.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (non_unital_non_assoc_semiring.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_49404 (h0 : functor.add_const (ring (has_zero environment.implicit_infer_kind)) name) : @strong_rank_condition.{0} (has_zero.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (has_zero.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_49405 (h0 : group (finset (ring (has_add Type)))) : is_cyclic (finset (ring (has_add Type))) := sorry --non-trivial
lemma new_lemma_49406 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (has_neg_part.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_neg_part.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_49407 (h0 : filter Prop) : @Lim.{0} Prop sierpinski_space (@nonempty_of_inhabited.{1} Prop sort.inhabited.{0}) (@id.{1} (filter.{0} Prop) (@id.{1} (filter.{0} Prop) (@id.{1} (filter.{0} Prop) h0)))  := sorry --non-trivial
lemma new_lemma_49408 (h0 : group (partial_order congr_arg_kind)) : is_cyclic (partial_order congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49409 (h0 : functor.add_const (ring (partial_order num)) (semiring unsigned)) : @is_domain.{0} (partial_order.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (partial_order.{0} num)) (semiring.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_49410 (h0 : uniform_space (with_bot (semiring fun_info))) : complete_space (with_bot (semiring fun_info)) := sorry --non-trivial
lemma new_lemma_49411 (h0 : ordered_add_comm_monoid (has_nndist (option unsigned))) : archimedean (has_nndist (option unsigned)) := sorry --non-trivial
lemma new_lemma_49412 (h0 : uniform_space (linear_order unsigned)) : complete_space (linear_order unsigned) := sorry --non-trivial
lemma new_lemma_49413 (h0 : functor.add_const (topological_space (boolean_algebra environment.implicit_infer_kind)) name) : @totally_separated_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_49414 (h0 : topological_space (canonically_ordered_comm_semiring (has_nndist (finset (option ennreal))))) : irreducible_space (canonically_ordered_comm_semiring (has_nndist (finset (option ennreal)))) := sorry --non-trivial
lemma new_lemma_49415 (h2 : not (ring (distrib to_additive.value_type) -> false)) : @strong_rank_condition.{0} (distrib.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (distrib.{0} to_additive.value_type)) h2)  := sorry --non-trivial
lemma new_lemma_49416 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (has_edist.{0} (option.{0} unsigned)) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (has_edist.{0} (option.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_49417 (h0 : functor.add_const (finset (semigroup pos)) (finset Type)) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49418 (h5 : complete_lattice (random_gen char)) : complete_lattice.is_Sup_finite_compact (random_gen char) := sorry --non-trivial
lemma new_lemma_49419 (h0 : functor.add_const (ordered_comm_monoid (has_add pos)) (ring (has_to_string Type))) : @has_exists_mul_of_le.{0} (has_add.{0} pos) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (has_add.{0} pos)) (ring.{1} (has_to_string.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_49420 (h0 : function.extfun (Type 1) ring) : @strong_rank_condition.{1} (has_neg.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} h0 (has_neg.{1} Type))  := sorry --non-trivial
lemma new_lemma_49421 (h1 : add_group (ordered_ring linarith.ineq)) : is_add_cyclic (ordered_ring linarith.ineq) := sorry --non-trivial
lemma new_lemma_49422 (h0 : topological_space pos) : sequential_space pos := sorry --non-trivial
lemma new_lemma_49423 (h0 : topological_space (normed_comm_ring (has_neg (has_neg linarith.comp)))) : t0_space (normed_comm_ring (has_neg (has_neg linarith.comp))) := sorry --non-trivial
lemma new_lemma_49424 (h0 : complete_lattice (has_compl (has_append fun_info))) : is_compactly_generated (has_compl (has_append fun_info)) := sorry --non-trivial
lemma new_lemma_49425 (h0 : functor.add_const (group (add_comm_monoid environment.implicit_infer_kind)) linarith.comp) : @is_simple_group.{0} (add_comm_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (add_comm_monoid.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49426 (h0 : ring (boolean_algebra.core (comm_monoid unsigned))) : rank_condition (boolean_algebra.core (comm_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_49427 (h0 : complete_lattice (comm_semigroup (comm_semigroup (has_bot pos)))) : complete_lattice.is_Sup_finite_compact (comm_semigroup (comm_semigroup (has_bot pos))) := sorry --non-trivial
lemma new_lemma_49428 (h0 : topological_space (ordered_comm_ring (sub_neg_monoid Type))) : t0_space (ordered_comm_ring (sub_neg_monoid Type)) := sorry --non-trivial
lemma new_lemma_49429 (h0 h1 : add_right_cancel_monoid num -> add_right_cancel_monoid num) : function.commute h0 h1 := sorry --non-trivial
lemma new_lemma_49430 (h0 : topological_space (ring (option unsigned))) : totally_disconnected_space (ring (option unsigned)) := sorry --non-trivial
lemma new_lemma_49431 (h0 : semiring (has_to_string (has_Inf Type))) : is_noetherian_ring (has_to_string (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_49432 (h0 : topological_space (non_assoc_semiring (option pos))) : locally_compact_space (non_assoc_semiring (option pos)) := sorry --non-trivial
lemma new_lemma_49433 (h0 : topological_space (ring (option (option (option empty))))) : normal_space (ring (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_49434 (h0 : fin has_zero.zero) : @locally_compact_space.{0} (has_nndist.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (has_nndist.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_49435 (h0 : ring (has_edist linarith.ineq)) : is_domain (has_edist linarith.ineq) := sorry --non-trivial
lemma new_lemma_49436 (h0 : topological_space (comm_group (finset Type))) : irreducible_space (comm_group (finset Type)) := sorry --non-trivial
lemma new_lemma_49437 (h0 : topological_space (has_Inf Type)) : locally_compact_space (has_Inf Type) := sorry --non-trivial
lemma new_lemma_49438 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (measure_theory.measure_space.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measure_theory.measure_space.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49439 (h0 : ring (canonically_linear_ordered_monoid name)) : is_principal_ideal_ring (canonically_linear_ordered_monoid name) := sorry --non-trivial
lemma new_lemma_49440 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (comm_group unsigned)) := sorry --non-trivial
lemma new_lemma_49441 (h0 : functor.add_const (topological_space (preorder unsigned)) empty) : @t0_space.{0} (preorder.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_49442 (h0 : function.extfun Type group) : @group.fg.{0} (semi_normed_comm_ring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type group.{0} h0 (semi_normed_comm_ring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_49443 (h0 : add_monoid (add_comm_monoid (has_to_string (finset environment.implicit_infer_kind)))) : add_monoid.fg (add_comm_monoid (has_to_string (finset environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_49444 (h0 : functor.add_const Prop (has_zero (has_add Type))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_49445 (h0 : group (ordered_comm_group empty)) : normalizer_condition (ordered_comm_group empty) := sorry --non-trivial
lemma new_lemma_49446 (h0 : uniform_space (add_cancel_monoid (has_add name))) : separated_space (add_cancel_monoid (has_add name)) := sorry --non-trivial
lemma new_lemma_49447 (h1 : function.extfun Type complete_lattice) : @is_atomistic.{0} linarith.ineq (@function.extfun_app.{2 1} Type complete_lattice.{0} h1 linarith.ineq)  := sorry --non-trivial
lemma new_lemma_49448 (h0 : topological_space (has_nndist (linear_ordered_cancel_comm_monoid (finset Type)))) : t1_space (has_nndist (linear_ordered_cancel_comm_monoid (finset Type))) := sorry --non-trivial
lemma new_lemma_49449 (h0 : ordered_add_comm_monoid (add_comm_monoid (boolean_algebra pos))) : archimedean (add_comm_monoid (boolean_algebra pos)) := sorry --non-trivial
lemma new_lemma_49450 (h0 : ordered_add_comm_monoid (add_left_cancel_semigroup empty)) : archimedean (add_left_cancel_semigroup empty) := sorry --non-trivial
lemma new_lemma_49451 (h0 : not (ring (non_assoc_semiring to_additive.value_type) -> false)) : @is_domain.{0} (non_assoc_semiring.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (non_assoc_semiring.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_49452 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @totally_disconnected_space.{0} (with_one.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (with_one.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_49453 (h0 : complete_lattice (has_dist to_additive.value_type)) : is_compactly_generated (has_dist to_additive.value_type) := sorry --non-trivial
lemma new_lemma_49454 (h1 : set (add_comm_semigroup ereal -> mul_one_class enat)) : set.separates_points h1 := sorry --non-trivial
lemma new_lemma_49455 (h0 : group (has_zero (finset (boolean_algebra (boolean_algebra (finset linarith.comp)))))) : is_simple_group (has_zero (finset (boolean_algebra (boolean_algebra (finset linarith.comp))))) := sorry --non-trivial
lemma new_lemma_49456 (h2 : ring (distrib_lattice fun_info)) : is_domain (distrib_lattice fun_info) := sorry --non-trivial
lemma new_lemma_49457 (h0 : not (function.extfun Type filter -> false)) : filter.ne_bot (function.extfun_app (classical.by_contradiction' h0) (with_bot linarith.comp)) := sorry --non-trivial
lemma new_lemma_49458 (h0 : uniform_space (measure_theory.measure_space unsigned)) : separated_space (measure_theory.measure_space unsigned) := sorry --non-trivial
lemma new_lemma_49459 (h0 : functor.add_const (complete_lattice (has_Sup empty)) empty) : @is_atomistic.{0} (has_Sup.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_Sup.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_49460 (h0 : complete_lattice (has_nndist (boolean_algebra linarith.comp))) : complete_lattice.is_Sup_finite_compact (has_nndist (boolean_algebra linarith.comp)) := sorry --non-trivial
lemma new_lemma_49461 (h0 : ring (has_neg_part (add_comm_monoid (has_add name)))) : is_domain (has_neg_part (add_comm_monoid (has_add name))) := sorry --non-trivial
lemma new_lemma_49462 (h0 : functor.comp uniform_space ring (option pos)) : @complete_space.{0} (ring.{0} (option.{0} pos)) (@functor.comp.run.{0 0 0} uniform_space.{0} ring.{0} (option.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_49463 (h0 : monoid (has_zero (boolean_algebra name))) : monoid.fg (has_zero (boolean_algebra name)) := sorry --non-trivial
lemma new_lemma_49464 (h0 : topological_space (finset (has_zero (has_neg Type)))) : discrete_topology (finset (has_zero (has_neg Type))) := sorry --non-trivial
lemma new_lemma_49465 (h0 : function.extfun Type (functor.add_const (topological_space (non_assoc_semiring unsigned)))) : @path_connected_space.{0} (non_assoc_semiring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (non_assoc_semiring.{0} unsigned)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (non_assoc_semiring.{0} unsigned))) h0 empty))  := sorry --non-trivial
lemma new_lemma_49466 (h1 : ring (dlist (has_ssubset linarith.comp_source))) : rank_condition (dlist (has_ssubset linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_49467 (h0 : topological_space (has_norm linarith.ineq)) : t0_space (has_norm linarith.ineq) := sorry --non-trivial
lemma new_lemma_49468 (h0 : topological_space (has_Sup (option unsigned))) : totally_separated_space (has_Sup (option unsigned)) := sorry --non-trivial
lemma new_lemma_49469 (h0 : function.extfun Type topological_space) : @t0_space.{0} (linear_ordered_cancel_comm_monoid.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_cancel_comm_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_49470 (h0 : add_group (with_bot (random_gen linarith.comp_source))) : is_add_cyclic (with_bot (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_49471 (h0 : functor.add_const (topological_space (finset name)) linarith.comp) : @sequential_space.{0} (finset.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49472 (h0 : group (has_emptyc (has_norm (has_norm linarith.comp_source)))) : normalizer_condition (has_emptyc (has_norm (has_norm linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_49473 (h0 : topological_space (has_sub (semiring congr_arg_kind))) : path_connected_space (has_sub (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_49474 (h0 : ring (add_comm_monoid unsigned)) : is_principal_ideal_ring (add_comm_monoid unsigned) := sorry --non-trivial
lemma new_lemma_49475 (h0 : topological_space (uniform_space fun_info)) : t0_space (uniform_space fun_info) := sorry --non-trivial
lemma new_lemma_49476 (h0 : complete_lattice (bin_tree empty)) : is_compactly_generated (bin_tree empty) := sorry --non-trivial
lemma new_lemma_49477 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @is_cyclic.{0} (has_nnnorm.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) group.{0}) (has_nnnorm.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_49478 (h0 : topological_space (distrib_lattice (has_nnnorm to_additive.value_type))) : t0_space (distrib_lattice (has_nnnorm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_49479 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @discrete_topology.{0} (semigroup.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (semigroup.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_49480 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (has_inv.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_inv.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_49481 (h0 : group (with_bot (random_gen (random_gen fun_info)))) : group.fg (with_bot (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_49482 (h0 : fin has_zero.zero) : @group.fg.{0} (has_bot.{0} real) (@matrix.vec_empty.{0} (group.{0} (has_bot.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_49483 (h0 : topological_space (ring (option (option (option (option ennreal)))))) : normal_space (ring (option (option (option (option ennreal))))) := sorry --non-trivial
lemma new_lemma_49484 (h0 : filter (has_inv (has_norm fun_info))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_49485 (h0 : topological_space (has_star (semiring congr_arg_kind))) : path_connected_space (has_star (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_49486 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (dlist.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (dlist.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_49487 (h0 : functor.add_const (ring (finset pos)) pos) : @is_principal_ideal_ring.{0} (finset.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (finset.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_49488 (h0 : group (has_inv to_additive.value_type)) : normalizer_condition (has_inv to_additive.value_type) := sorry --non-trivial
lemma new_lemma_49489 (h0 : topological_space (generalized_boolean_algebra real)) : topological_space.separable_space (generalized_boolean_algebra real) := sorry --non-trivial
lemma new_lemma_49490 (h0 : topological_space (comm_group (option (option (option (option ennreal)))))) : t1_space (comm_group (option (option (option (option ennreal))))) := sorry --non-trivial
lemma new_lemma_49491 (h0 : ring (random_gen (semigroup linarith.comp_source))) : strong_rank_condition (random_gen (semigroup linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_49492 (h0 : topological_space char) : topological_space.separable_space char := sorry --non-trivial
lemma new_lemma_49493 (h0 : add_group (mul_one_class linarith.comp_source)) : is_add_cyclic (mul_one_class linarith.comp_source) := sorry --non-trivial
lemma new_lemma_49494 (h0 : fin has_zero.zero) : @preirreducible_space.{0} (canonically_linear_ordered_monoid.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (canonically_linear_ordered_monoid.{0} real)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_49495 (h0 : add_group (normed_field (random_gen char))) : is_add_cyclic (normed_field (random_gen char)) := sorry --non-trivial
lemma new_lemma_49496 (h0 : topological_space (cancel_monoid Type)) : t0_space (cancel_monoid Type) := sorry --non-trivial
lemma new_lemma_49497 (h0 : has_mul std_gen) (h3 : std_gen) : is_regular h3 := sorry --non-trivial
lemma new_lemma_49498 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @discrete_topology.{0} (linear_ordered_semiring.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (linear_ordered_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_49499 (h0 : topological_space (finset ennreal)) : normal_space (finset ennreal) := sorry --non-trivial
lemma new_lemma_49500 (h1 : function.extfun Type monoid) : @monoid.fg.{0} (with_bot.{0} (random_gen.{0} linarith.ineq)) (@function.extfun_app.{2 1} Type monoid.{0} h1 (with_bot.{0} (random_gen.{0} linarith.ineq)))  := sorry --non-trivial
lemma new_lemma_49501 (h0 : functor.add_const (functor.add_const (monoid pos) Type) Type) : @monoid.fg.{0} pos (@functor.add_const.run.{0 1} (monoid.{0} pos) Type (@functor.add_const.run.{0 1} (functor.add_const.{0 1} (monoid.{0} pos) Type) Type h0))  := sorry --non-trivial
lemma new_lemma_49502 (h4 : group (denumerable char)) : is_cyclic (denumerable char) := sorry --non-trivial
lemma new_lemma_49503 (h3 : topological_space (topological_space (normed_field (comm_ring linarith.ineq)))) : totally_disconnected_space (topological_space (normed_field (comm_ring linarith.ineq))) := sorry --non-trivial
lemma new_lemma_49504 (h0 : ring (ordered_ring empty)) : rank_condition (ordered_ring empty) := sorry --non-trivial
lemma new_lemma_49505 (h0 : topological_space (linear_ordered_comm_ring (semiring (semiring unsigned)))) : t1_space (linear_ordered_comm_ring (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_49506 (h0 : topological_space (simple_graph Type)) : loc_path_connected_space (simple_graph Type) := sorry --non-trivial
lemma new_lemma_49507 (h0 : not (preorder (metric_space linarith.comp) -> false)) (h1 : not (topological_space (metric_space linarith.comp) -> false)) : @Inf_convergence_class.{0} (metric_space.{0} linarith.comp) (@classical.by_contradiction'.{1} (preorder.{0} (metric_space.{0} linarith.comp)) h0) (@classical.by_contradiction'.{1} (topological_space.{0} (metric_space.{0} linarith.comp)) h1)  := sorry --non-trivial
lemma new_lemma_49508 (h0 : group (canonically_linear_ordered_monoid ennreal)) : is_cyclic (canonically_linear_ordered_monoid ennreal) := sorry --non-trivial
lemma new_lemma_49509 (h0 : functor.add_const (topological_space empty) (semiring (semiring (semiring empty)))) : loc_path_connected_space empty := sorry --non-trivial
lemma new_lemma_49510 (h0 : functor.add_const (topological_space (add_cancel_monoid unsigned)) num) : @preirreducible_space.{0} (add_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_49511 (h0 : function.extfun Type group) : @normalizer_condition.{0} (with_one.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (with_one.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49512 (h0 : filter (comm_ring (random_gen (random_gen linarith.ineq)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_49513 (h0 : add_monoid (has_Sup num)) : add_monoid.fg (has_Sup num) := sorry --non-trivial
lemma new_lemma_49514 (h0 : topological_space (canonically_ordered_comm_semiring (has_Inf Type))) : totally_separated_space (canonically_ordered_comm_semiring (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_49515 (h0 : function.extfun nat fin) : @rank_condition.{1} (normed_lattice_add_comm_group.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (normed_lattice_add_comm_group.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_49516 (h0 : ulower (fin has_zero.zero)) (h1 : list (fin has_zero.zero)) : matrix.vec_empty (list.ilast' (ulower.up h0) h1) := sorry --non-trivial
lemma new_lemma_49517 (h0 : functor.add_const (add_monoid (complete_distrib_lattice name)) environment.implicit_infer_kind) : @add_monoid.fg.{0} (complete_distrib_lattice.{0} name) (@functor.add_const.run.{0 0} (add_monoid.{0} (complete_distrib_lattice.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_49518 (h0 : list (with_one (random_gen (has_nnnorm to_additive.value_type)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49519 (h1 : topological_space (has_nnnorm linarith.comp_source)) : t0_space (has_nnnorm linarith.comp_source) := sorry --non-trivial
lemma new_lemma_49520 (h0 : group (dlist (random_gen string_imp))) : is_cyclic (dlist (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_49521 (h0 : has_mul (complete_distrib_lattice ennreal)) (h1 : con (complete_distrib_lattice ennreal)) (h2 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (@con.quotient.{0} (complete_distrib_lattice.{0} ennreal) h0 h1) (@function.extfun_app.{2 1} Type complete_lattice.{0} h2 (@con.quotient.{0} (complete_distrib_lattice.{0} ennreal) h0 h1))  := sorry --non-trivial
lemma new_lemma_49522 (h0 : unsigned -> unsigned -> Prop) : relator.right_total h0 := sorry --non-trivial
lemma new_lemma_49523 (h0 : functor.add_const (add_group (ring name)) pos) : @is_add_cyclic.{0} (ring.{0} name) (@functor.add_const.run.{0 0} (add_group.{0} (ring.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_49524 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (option.{0} ennreal) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (option.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_49525 (h0 : list (semi_normed_comm_ring (has_inv to_additive.value_type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49526 (h0 : functor.add_const (monoid (canonically_ordered_comm_semiring unsigned)) environment.implicit_infer_kind) : @monoid.fg.{0} (canonically_ordered_comm_semiring.{0} unsigned) (@functor.add_const.run.{0 0} (monoid.{0} (canonically_ordered_comm_semiring.{0} unsigned)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_49527 (h0 : uniform_space (has_top (semiring congr_arg_kind))) : separated_space (has_top (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_49528 (h0 : topological_space (measurable_space.dynkin_system (semiring (semiring congr_arg_kind)))) : t1_space (measurable_space.dynkin_system (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_49529 (h0 : topological_space (add_left_cancel_semigroup unsigned)) : loc_path_connected_space (add_left_cancel_semigroup unsigned) := sorry --non-trivial
lemma new_lemma_49530 (h0 : topological_space (non_assoc_semiring (semiring empty))) : totally_separated_space (non_assoc_semiring (semiring empty)) := sorry --non-trivial
lemma new_lemma_49531 (h0 : topological_space (add_cancel_monoid (has_Sup Type))) : sequential_space (add_cancel_monoid (has_Sup Type)) := sorry --non-trivial
lemma new_lemma_49532 (h0 : not (complete_lattice (random_gen (has_ssubset fun_info)) -> false)) : @is_compactly_generated.{0} (random_gen.{0} (has_ssubset.{0} fun_info)) (@classical.by_contradiction'.{1} (complete_lattice.{0} (random_gen.{0} (has_ssubset.{0} fun_info))) h0)  := sorry --non-trivial
lemma new_lemma_49533 (h0 : functor.add_const (ring (has_to_string Type)) (ring environment.implicit_infer_kind)) : @rank_condition.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_to_string.{1} Type)) (ring.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_49534 (h0 : topological_space (semigroup congr_arg_kind)) : totally_disconnected_space (semigroup congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49535 (h0 : ordered_add_comm_monoid (normed_comm_ring (has_add (finset (boolean_algebra name))))) : archimedean (normed_comm_ring (has_add (finset (boolean_algebra name)))) := sorry --non-trivial
lemma new_lemma_49536 (h0 : functor.add_const (uniform_space (add_comm_monoid Type)) (has_add linarith.comp)) : @complete_space.{1} (add_comm_monoid.{1} Type) (@functor.add_const.run.{1 0} (uniform_space.{1} (add_comm_monoid.{1} Type)) (has_add.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_49537 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : filter.ne_bot (function.extfun_app (function.extfun_app h0 filter) (ordered_ring (option empty))) := sorry --non-trivial
lemma new_lemma_49538 (h0 : not (function.extfun Type uniform_space -> false)) : @separated_space.{0} (linear_ordered_semiring.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} num))))) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (linear_ordered_semiring.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} num))))))  := sorry --non-trivial
lemma new_lemma_49539 (h0 : topological_space (generalized_boolean_algebra (has_Inf pos))) : irreducible_space (generalized_boolean_algebra (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_49540 (h0 : group (has_top (semiring (semiring (has_top unsigned))))) : is_cyclic (has_top (semiring (semiring (has_top unsigned)))) := sorry --non-trivial
lemma new_lemma_49541 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (simple_graph empty)) := sorry --non-trivial
lemma new_lemma_49542 (h0 : ring (group_with_zero (option (option (option ennreal))))) : is_domain (group_with_zero (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_49543 (h0 : functor.add_const (monoid (has_nndist pos)) (ring (ring Type))) : @monoid.fg.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 1} (monoid.{0} (has_nndist.{0} pos)) (ring.{1} (ring.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_49544 (h0 : group (has_to_string (option (option ennreal)))) : group.fg (has_to_string (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_49545 (h0 : topological_space (has_one (has_top congr_arg_kind))) : locally_compact_space (has_one (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_49546 (h0 : filter (ring (normed_comm_ring pos))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_49547 (h0 : topological_space (has_to_string num)) : irreducible_space (has_to_string num) := sorry --non-trivial
lemma new_lemma_49548 (h0 : topological_space (add_right_cancel_monoid (semiring unsigned))) : totally_disconnected_space (add_right_cancel_monoid (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_49549 (h0 : prod (normed_comm_ring Type) (normed_comm_ring Type)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_49550 (h0 : not (add_group (random_gen num) -> false)) : @is_add_cyclic.{0} (random_gen.{0} num) (@classical.by_contradiction'.{1} (add_group.{0} (random_gen.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_49551 (h0 : list (add_semigroup congr_arg_kind)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_49552 (h0 : not (complete_lattice (has_ssubset string_imp) -> false)) : @is_compactly_generated.{0} (has_ssubset.{0} string_imp) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_ssubset.{0} string_imp)) h0)  := sorry --non-trivial
lemma new_lemma_49553 (h0 : add_group (monoid (option (option unsigned)))) : is_add_cyclic (monoid (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_49554 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @sequential_space.{0} (ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49555 (h0 : functor.add_const (topological_space (ordered_comm_ring linarith.comp)) pos) : @totally_separated_space.{0} (ordered_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_ring.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_49556 (h2 : complete_lattice (nondiscrete_normed_field string.iterator_imp)) : complete_lattice.is_Sup_finite_compact (nondiscrete_normed_field string.iterator_imp) := sorry --non-trivial
lemma new_lemma_49557 (h0 : ordered_comm_monoid (complete_distrib_lattice (finset (has_to_string pos)))) : has_exists_mul_of_le (complete_distrib_lattice (finset (has_to_string pos))) := sorry --non-trivial
lemma new_lemma_49558 (h0 : topological_space (finset (has_add pos))) : loc_path_connected_space (finset (has_add pos)) := sorry --non-trivial
lemma new_lemma_49559 (h0 : not (ring (with_one empty) -> false)) : @rank_condition.{0} (with_one.{0} empty) (@classical.by_contradiction'.{1} (ring.{0} (with_one.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_49560 (h0 : functor.add_const (group (comm_group ennreal)) name) : @is_simple_group.{0} (comm_group.{0} ennreal) (@functor.add_const.run.{0 0} (group.{0} (comm_group.{0} ennreal)) name h0)  := sorry --non-trivial
lemma new_lemma_49561 (h0 : semiring (has_zero (comm_group (comm_group Type)))) : is_noetherian_ring (has_zero (comm_group (comm_group Type))) := sorry --non-trivial
lemma new_lemma_49562 (h0 : finset (generalized_boolean_algebra (has_Inf (has_add (has_add (has_add pos)))))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_49563 (h0 : functor.add_const (filter (has_to_string name)) linarith.comp) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49564 (h0 : complete_lattice (normed_comm_ring (ring (finset (finset environment.implicit_infer_kind))))) : is_compactly_generated (normed_comm_ring (ring (finset (finset environment.implicit_infer_kind)))) := sorry --non-trivial
lemma new_lemma_49565 (h0 : group (with_one (semiring linarith.comp))) : is_cyclic (with_one (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_49566 (h0 : add_group (simple_graph pos)) : is_add_cyclic (simple_graph pos) := sorry --non-trivial
lemma new_lemma_49567 (h0 : group (measurable_space.dynkin_system (has_top empty))) : group.fg (measurable_space.dynkin_system (has_top empty)) := sorry --non-trivial
lemma new_lemma_49568 (h0 : complete_lattice (complete_distrib_lattice (finset (finset (has_add name))))) : complete_lattice.is_Sup_finite_compact (complete_distrib_lattice (finset (finset (has_add name)))) := sorry --non-trivial
lemma new_lemma_49569 (h0 : topological_space (has_zero (cancel_monoid (has_add unsigned)))) : sequential_space (has_zero (cancel_monoid (has_add unsigned))) := sorry --non-trivial
lemma new_lemma_49570 (h0 : filter linarith.comp) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_49571 (h0 : topological_space (linear_ordered_semiring (random_gen (has_top to_additive.value_type)))) : irreducible_space (linear_ordered_semiring (random_gen (has_top to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_49572 (h0 : group (ring (has_add environment.implicit_infer_kind))) : is_cyclic (ring (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_49573 (h0 : ring (normed_linear_ordered_group num)) : is_principal_ideal_ring (normed_linear_ordered_group num) := sorry --non-trivial
lemma new_lemma_49574 (h0 : functor.add_const (function.extfun Type topological_space) unsigned) : @locally_compact_space.{0} (ring.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) unsigned h0) (ring.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_49575 (h0 : ordered_add_comm_monoid (cancel_monoid num)) : archimedean (cancel_monoid num) := sorry --non-trivial
lemma new_lemma_49576 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (has_neg_part pos)) := sorry --non-trivial
lemma new_lemma_49577 (h0 : topological_space (has_neg (finset (finset (finset pos))))) : regular_space (has_neg (finset (finset (finset pos)))) := sorry --non-trivial
lemma new_lemma_49578 (h0 : functor.add_const (ring (boolean_algebra name)) name) : @is_domain.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_49579 (h0 : not (complete_lattice (with_zero fun_info) -> false)) : @is_compactly_generated.{0} (with_zero.{0} fun_info) (@classical.by_contradiction'.{1} (complete_lattice.{0} (with_zero.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_49580 (h0 : uniform_space (has_scalar empty unsigned)) : separated_space (has_scalar empty unsigned) := sorry --non-trivial
lemma new_lemma_49581 (h0 : functor.add_const (topological_space (has_neg environment.implicit_infer_kind)) linarith.comp) : @irreducible_space.{0} (has_neg.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49582 (h0 : set (prod (random_gen linarith.comp_source) (random_gen linarith.comp_source))) (h1 : prod (random_gen linarith.comp_source) (random_gen linarith.comp_source)) : symmetrize_rel h0 h1 := sorry --non-trivial
lemma new_lemma_49583 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (add_right_cancel_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (add_right_cancel_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49584 (h0 : functor.add_const (group linarith.comp) (has_neg Type)) : @group.fg.{0} linarith.comp (@functor.add_const.run.{0 1} (group.{0} linarith.comp) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_49585 (h0 : functor.add_const (ring (boolean_algebra unsigned)) linarith.comp) : @strong_rank_condition.{0} (boolean_algebra.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49586 (h0 : function.extfun Type group) : @is_cyclic.{0} (simple_graph.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type group.{0} h0 (simple_graph.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_49587 (h0 : topological_space (comm_group (add_cancel_monoid linarith.comp))) : irreducible_space (comm_group (add_cancel_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_49588 (h0 : function.extfun Type ring) : @is_domain.{0} (comm_ring.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} h0 (comm_ring.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_49589 (h0 : functor.add_const (topological_space (boolean_algebra.core unsigned)) linarith.comp) : @preirreducible_space.{0} (boolean_algebra.core.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49590 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @preconnected_space.{0} (canonically_ordered_comm_semiring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (canonically_ordered_comm_semiring.{0} pos))  := sorry --non-trivial
lemma new_lemma_49591 (h3 : topological_space (add_comm_semigroup linarith.ineq)) (h4 : preorder (add_comm_semigroup linarith.ineq)) : order_closed_topology (add_comm_semigroup linarith.ineq) := sorry --non-trivial
lemma new_lemma_49592 (h0 : topological_space (option empty)) : t0_space (option empty) := sorry --non-trivial
lemma new_lemma_49593 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @totally_separated_space.{0} (finset.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (finset.{0} pos))  := sorry --non-trivial
lemma new_lemma_49594 (h1 : topological_space (mul_one_class (non_unital_non_assoc_ring reducibility_hints))) : totally_disconnected_space (mul_one_class (non_unital_non_assoc_ring reducibility_hints)) := sorry --non-trivial
lemma new_lemma_49595 (h0 : topological_space (has_emptyc (has_top (random_gen linarith.ineq)))) : t0_space (has_emptyc (has_top (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_49596 (h0 : ordered_comm_monoid (add_comm_monoid (has_add (add_comm_monoid pos)))) : has_exists_mul_of_le (add_comm_monoid (has_add (add_comm_monoid pos))) := sorry --non-trivial
lemma new_lemma_49597 (h0 : functor.add_const (complete_lattice (semiring empty)) empty) : @is_atomistic.{0} (semiring.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (semiring.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_49598 (h0 : functor.add_const (complete_lattice (add_cancel_monoid ennreal)) ennreal) : @is_compactly_generated.{0} (add_cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (complete_lattice.{0} (add_cancel_monoid.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_49599 (h0 : has_mem.mem (has_emptyc fun_info) has_emptyc.emptyc) : list.nodup (finset.pi.empty list (has_emptyc fun_info) h0) := sorry --non-trivial
lemma new_lemma_49600 (h0 : topological_space (add_group (semiring (semiring congr_arg_kind)))) : discrete_topology (add_group (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_49601 (h0 : complete_lattice (monoid (option (option (option unsigned))))) : is_compactly_generated (monoid (option (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_49602 (h0 : ring (option unsigned)) : strong_rank_condition (option unsigned) := sorry --non-trivial
lemma new_lemma_49603 (h1 : ring (with_zero (has_nnnorm char))) : is_domain (with_zero (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_49604 (h0 : complete_lattice (finset (option (option (option ennreal))))) : is_compactly_generated (finset (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_49605 (h0 : list (has_to_string (normed_comm_ring Type))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_49606 (h0 : not (topological_space (normed_field linarith.ineq) -> false)) : @t0_space.{0} (normed_field.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (normed_field.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_49607 (h0 : set (has_ssubset (has_div (nondiscrete_normed_field string_imp)))) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_49608 (h0 : topological_space (generalized_boolean_algebra (has_add (has_nndist Type)))) : irreducible_space (generalized_boolean_algebra (has_add (has_nndist Type))) := sorry --non-trivial
lemma new_lemma_49609 (h0 : list (has_zero (finset environment.implicit_infer_kind))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49610 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (monoid_with_zero.{0} unsigned) (@function.extfun_app.{2 1} Type add_group.{0} h0 (monoid_with_zero.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49611 (h0 : functor.add_const (topological_space (normed_linear_ordered_group empty)) empty) : @totally_separated_space.{0} (normed_linear_ordered_group.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_linear_ordered_group.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_49612 (h0 : function.extfun (Type 1) monoid) : @monoid.fg.{1} (finset.{1} Type) (@function.extfun_app.{3 2} (Type 1) monoid.{1} h0 (finset.{1} Type))  := sorry --non-trivial
lemma new_lemma_49613 (h0 : list (ordered_cancel_add_comm_monoid unsigned)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_49614 (h0 : functor.add_const (topological_space (boolean_algebra linarith.comp)) linarith.comp) : @discrete_topology.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49615 (h0 : ring (linear_ordered_comm_group_with_zero (mul_one_class (mul_one_class linarith.ineq)))) : rank_condition (linear_ordered_comm_group_with_zero (mul_one_class (mul_one_class linarith.ineq))) := sorry --non-trivial
lemma new_lemma_49616 (h0 : not (function.extfun Type topological_space -> false)) : @t0_space.{0} (dlist.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (dlist.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_49617 (h0 : functor.add_const (group (has_zero environment.implicit_infer_kind)) name) : @group.fg.{0} (has_zero.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (has_zero.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_49618 (h0 : not (ring (semi_normed_ring reducibility_hints) -> false)) : @is_domain.{0} (semi_normed_ring.{0} reducibility_hints) (@classical.by_contradiction'.{1} (ring.{0} (semi_normed_ring.{0} reducibility_hints)) h0)  := sorry --non-trivial
lemma new_lemma_49619 (h0 : group (has_neg congr_arg_kind)) : is_cyclic (has_neg congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49620 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (dlist.{0} linarith.ineq) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (dlist.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_49621 (h0 : functor.add_const (topological_space (boolean_algebra.core pos)) linarith.comp) : @discrete_topology.{0} (boolean_algebra.core.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49622 (h0 : topological_space (has_pos_part (has_pos_part linarith.comp))) : loc_path_connected_space (has_pos_part (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_49623 (h0 : topological_space (ordered_comm_ring (comm_semigroup real))) : t0_space (ordered_comm_ring (comm_semigroup real)) := sorry --non-trivial
lemma new_lemma_49624 (h0 : functor.add_const (topological_space (canonically_linear_ordered_monoid ennreal)) unsigned) : @regular_space.{0} (canonically_linear_ordered_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_linear_ordered_monoid.{0} ennreal)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_49625 (h0 : topological_space (has_ssubset (has_ssubset fun_info))) : irreducible_space (has_ssubset (has_ssubset fun_info)) := sorry --non-trivial
lemma new_lemma_49626 (h0 : not (topological_space (has_inv string_imp) -> false)) : @t0_space.{0} (has_inv.{0} string_imp) (@classical.by_contradiction'.{1} (topological_space.{0} (has_inv.{0} string_imp)) h0)  := sorry --non-trivial
lemma new_lemma_49627 (h0 : topological_space (boolean_algebra (finset (finset linarith.comp)))) : topological_space.separable_space (boolean_algebra (finset (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_49628 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} znum (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) znum)  := sorry --non-trivial
lemma new_lemma_49629 (h2 : add_group (semi_normed_ring to_additive.value_type)) : is_add_cyclic (semi_normed_ring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_49630 (h0 : group (has_emptyc linarith.ineq)) : group.fg (has_emptyc linarith.ineq) := sorry --non-trivial
lemma new_lemma_49631 (h0 : not (group (has_inv linarith.comp_source) -> false)) : @group.fg.{0} (has_inv.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (group.{0} (has_inv.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_49632 (h0 : add_monoid (monoid pos)) : add_monoid.fg (monoid pos) := sorry --non-trivial
lemma new_lemma_49633 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @irreducible_space.{0} (semigroup.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (semigroup.{0} pos))  := sorry --non-trivial
lemma new_lemma_49634 (h0 : ring std_gen -> std_gen) (h1 : coe_sort (set.range h0)) : @is_domain.{0} std_gen (@set.range_splitting.{0 0} (ring.{0} std_gen) std_gen h0 h1)  := sorry --non-trivial
lemma new_lemma_49635 (h0 : functor.add_const (add_group (comm_group unsigned)) pos) : @is_add_cyclic.{0} (comm_group.{0} unsigned) (@functor.add_const.run.{0 0} (add_group.{0} (comm_group.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_49636 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (measurable_space.{0} linarith.comp) (@function.extfun_app.{2 1} Type monoid.{0} h0 (measurable_space.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49637 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @separated_space.{0} (has_top.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) uniform_space.{0}) (has_top.{0} empty))  := sorry --non-trivial
lemma new_lemma_49638 (h0 : finset (ring ennreal)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_49639 (h0 : group (boolean_algebra.core (has_add (has_to_string ennreal)))) : group.fg (boolean_algebra.core (has_add (has_to_string ennreal))) := sorry --non-trivial
lemma new_lemma_49640 (h0 : semiring (ordered_comm_ring (boolean_algebra.core (has_add pos)))) : is_noetherian_ring (ordered_comm_ring (boolean_algebra.core (has_add pos))) := sorry --non-trivial
lemma new_lemma_49641 (h0 : complete_lattice (add_monoid (has_append (distrib linarith.ineq)))) : complete_lattice.is_Sup_finite_compact (add_monoid (has_append (distrib linarith.ineq))) := sorry --non-trivial
lemma new_lemma_49642 (h0 : set (has_div string_imp)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_49643 (h0 : topological_space (has_bot real)) : locally_compact_space (has_bot real) := sorry --non-trivial
lemma new_lemma_49644 (h0 : functor.add_const (ring (has_neg environment.implicit_infer_kind)) Type) : @is_domain.{0} (has_neg.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (ring.{0} (has_neg.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_49645 (h0 : topological_space (add_cancel_comm_monoid (option unsigned))) : t1_space (add_cancel_comm_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_49646 (h0 : functor.add_const (finset auto.case_option) num) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49647 (h0 : topological_space (measurable_space (semiring linarith.comp))) : preirreducible_space (measurable_space (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_49648 (h0 : ring (non_assoc_semiring (semiring (option (option unsigned))))) : strong_rank_condition (non_assoc_semiring (semiring (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_49649 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (has_Sup.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (has_Sup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49650 (h0 : group (has_inv string_imp)) : is_cyclic (has_inv string_imp) := sorry --non-trivial
lemma new_lemma_49651 (h0 : functor.add_const (group (has_neg_part ennreal)) name) : @group.fg.{0} (has_neg_part.{0} ennreal) (@functor.add_const.run.{0 0} (group.{0} (has_neg_part.{0} ennreal)) name h0)  := sorry --non-trivial
lemma new_lemma_49652 (h0 : topological_space (has_to_string (ring (has_neg (has_add Type))))) : discrete_topology (has_to_string (ring (has_neg (has_add Type)))) := sorry --non-trivial
lemma new_lemma_49653 (h0 : functor.add_const (topological_space (has_pos_part name)) Type) : @topological_space.separable_space.{0} (has_pos_part.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (has_pos_part.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_49654 (h0 : topological_space (option (cancel_monoid (option name)))) : t0_space (option (cancel_monoid (option name))) := sorry --non-trivial
lemma new_lemma_49655 (h0 : group (boolean_algebra.core (has_pos_part linarith.comp))) : is_cyclic (boolean_algebra.core (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_49656 (h0 : cancel_comm_monoid_with_zero (monoid_with_zero (has_top empty))) : unique_factorization_monoid (monoid_with_zero (has_top empty)) := sorry --non-trivial
lemma new_lemma_49657 (h1 : group (linear_ordered_add_comm_group (random_gen (random_gen linarith.comp_source)))) : is_cyclic (linear_ordered_add_comm_group (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_49658 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @totally_separated_space.{0} unsigned (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) unsigned)  := sorry --non-trivial
lemma new_lemma_49659 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (add_cancel_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type monoid.{0} h0 (add_cancel_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_49660 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (normed_group.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (normed_group.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_49661 (h0 : functor.add_const (topological_space (canonically_linear_ordered_monoid ennreal)) ennreal) : @irreducible_space.{0} (canonically_linear_ordered_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_linear_ordered_monoid.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_49662 (h0 : function.extfun Type group) : @group.fg.{0} (has_emptyc.{0} num) (@function.extfun_app.{2 1} Type group.{0} h0 (has_emptyc.{0} num))  := sorry --non-trivial
lemma new_lemma_49663 (h1 : monoid (random_gen (has_norm num))) : monoid.fg (random_gen (has_norm num)) := sorry --non-trivial
lemma new_lemma_49664 (h0 : has_mem.mem (has_emptyc linarith.ineq) has_emptyc.emptyc) : @irreducible_space.{0} (has_emptyc.{0} linarith.ineq) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_emptyc.{0} linarith.ineq) h0)  := sorry --non-trivial
lemma new_lemma_49665 (h0 : topological_space (generalized_boolean_algebra (ring (has_add linarith.comp)))) : path_connected_space (generalized_boolean_algebra (ring (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_49666 (h0 : topological_space (ring (has_add (has_add Type)))) : totally_separated_space (ring (has_add (has_add Type))) := sorry --non-trivial
lemma new_lemma_49667 (h0 : ring (linear_ordered_semiring (has_norm fun_info))) : rank_condition (linear_ordered_semiring (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_49668 (h0 : topological_space (has_to_string (has_pos_part linarith.comp))) : totally_disconnected_space (has_to_string (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_49669 (h0 : function.extfun Type (functor.add_const (topological_space (semiring congr_arg_kind)))) : @path_connected_space.{0} (semiring.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (semiring.{0} congr_arg_kind)) unsigned (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (semiring.{0} congr_arg_kind))) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_49670 (h1 : topological_space (distrib (has_ssubset to_additive.value_type))) : path_connected_space (distrib (has_ssubset to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_49671 (h0 : group (linear_order (semiring (semiring (semiring empty))))) : normalizer_condition (linear_order (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_49672 (h0 : complete_lattice (mul_one_class (mul_one_class string.iterator_imp))) : complete_lattice.is_Sup_finite_compact (mul_one_class (mul_one_class string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_49673 (h0 : functor.add_const (function.extfun Type group) name) : @is_simple_group.{0} (complete_distrib_lattice.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) name h0) (complete_distrib_lattice.{0} pos))  := sorry --non-trivial
lemma new_lemma_49674 (h1 : topological_space (normed_group to_additive.value_type)) : path_connected_space (normed_group to_additive.value_type) := sorry --non-trivial
lemma new_lemma_49675 (h0 : functor.add_const (function.extfun Type complete_lattice) unsigned) : @is_atomistic.{0} (has_zero.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) unsigned h0) (has_zero.{0} name))  := sorry --non-trivial
lemma new_lemma_49676 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (with_one.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (with_one.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_49677 (h0 : functor.add_const (list (linear_ordered_cancel_comm_monoid empty)) (option unsigned)) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49678 (h0 : uniform_space (linear_ordered_semiring (semiring (semiring (semiring fun_info))))) : complete_space (linear_ordered_semiring (semiring (semiring (semiring fun_info)))) := sorry --non-trivial
lemma new_lemma_49679 (h0 : ring (pseudo_metric_space (finset ennreal))) : rank_condition (pseudo_metric_space (finset ennreal)) := sorry --non-trivial
lemma new_lemma_49680 (h0 : fin has_zero.zero) : @preconnected_space.{0} (has_add.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (has_add.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_49681 (h0 : function.extfun (Type 1) topological_space) : @locally_compact_space.{1} (boolean_algebra.core.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (boolean_algebra.core.{1} Type))  := sorry --non-trivial
lemma new_lemma_49682 (h0 : ordered_add_comm_monoid (has_add congr_arg_kind)) : archimedean (has_add congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49683 (h0 : not (uniform_space (dlist linarith.comp_source) -> false)) : @complete_space.{0} (dlist.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (uniform_space.{0} (dlist.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_49684 (h0 : topological_space (boolean_algebra (has_nndist Type))) : loc_path_connected_space (boolean_algebra (has_nndist Type)) := sorry --non-trivial
lemma new_lemma_49685 (h0 : topological_space (ordered_comm_ring (ordered_comm_monoid real))) : normal_space (ordered_comm_ring (ordered_comm_monoid real)) := sorry --non-trivial
lemma new_lemma_49686 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (option congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_49687 (h0 : functor.add_const (topological_space (has_nndist Type)) (has_to_string pos)) : @totally_disconnected_space.{1} (has_nndist.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_nndist.{1} Type)) (has_to_string.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_49688 (h0 : functor.add_const (uniform_space (complete_distrib_lattice unsigned)) empty) : @complete_space.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 0} (uniform_space.{0} (complete_distrib_lattice.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_49689 (h0 : topological_space (linear_ordered_semiring (has_norm congr_arg_kind))) : preirreducible_space (linear_ordered_semiring (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_49690 (h0 : topological_space (monoid_with_zero (option ennreal))) : totally_separated_space (monoid_with_zero (option ennreal)) := sorry --non-trivial
lemma new_lemma_49691 (h0 : topological_space (has_norm (comm_ring to_additive.value_type))) : path_connected_space (has_norm (comm_ring to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_49692 (h0 : functor.add_const Prop (ordered_comm_group empty)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_49693 (h0 : topological_space (metric_space (semiring num))) : normal_space (metric_space (semiring num)) := sorry --non-trivial
lemma new_lemma_49694 (h0 : group (has_add (ring (ring (has_add (ring linarith.comp)))))) : normalizer_condition (has_add (ring (ring (has_add (ring linarith.comp))))) := sorry --non-trivial
lemma new_lemma_49695 (h0 : topological_space (add_comm_monoid (finset linarith.comp))) : totally_disconnected_space (add_comm_monoid (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_49696 (h0 : functor.add_const (filter (ring name)) linarith.comp) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49697 (h0 : uniform_space (finset Type)) : complete_space (finset Type) := sorry --non-trivial
lemma new_lemma_49698 (h0 : complete_lattice (has_emptyc (has_norm (semiring linarith.comp)))) : is_atomistic (has_emptyc (has_norm (semiring linarith.comp))) := sorry --non-trivial
lemma new_lemma_49699 (h0 : complete_lattice (with_bot (with_bot (with_bot string_imp)))) : is_compactly_generated (with_bot (with_bot (with_bot string_imp))) := sorry --non-trivial
lemma new_lemma_49700 (h0 : not (function.extfun Type ring -> false)) : @strong_rank_condition.{0} (metric_space.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (metric_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_49701 (h0 : topological_space (finset (normed_comm_ring Type))) : preirreducible_space (finset (normed_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_49702 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (comm_group.{0} name) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (comm_group.{0} name))  := sorry --non-trivial
lemma new_lemma_49703 (h0 : ring (distrib_lattice (random_gen (random_gen (ordered_cancel_comm_monoid char))))) : rank_condition (distrib_lattice (random_gen (random_gen (ordered_cancel_comm_monoid char)))) := sorry --non-trivial
lemma new_lemma_49704 (h0 : topological_space (rel (has_top linarith.comp_source) fun_info)) : t0_space (rel (has_top linarith.comp_source) fun_info) := sorry --non-trivial
lemma new_lemma_49705 (h0 : ring (boolean_algebra real)) : is_domain (boolean_algebra real) := sorry --non-trivial
lemma new_lemma_49706 (h0 : topological_space (has_nndist (option (mul_zero_class (has_neg ennreal))))) : preirreducible_space (has_nndist (option (mul_zero_class (has_neg ennreal)))) := sorry --non-trivial
lemma new_lemma_49707 (h0 : topological_space (has_star (semiring empty))) : preirreducible_space (has_star (semiring empty)) := sorry --non-trivial
lemma new_lemma_49708 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (add_comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type semiring.{0} h0 (add_comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49709 (h0 : functor.add_const (add_monoid (ordered_comm_monoid pos)) Type) : @add_monoid.fg.{0} (ordered_comm_monoid.{0} pos) (@functor.add_const.run.{0 1} (add_monoid.{0} (ordered_comm_monoid.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_49710 (h0 : topological_space (has_add linarith.comp_source)) : totally_disconnected_space (has_add linarith.comp_source) := sorry --non-trivial
lemma new_lemma_49711 (h1 : has_mem.mem topological_space has_emptyc.emptyc) : @discrete_topology.{0} to_additive.value_type (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h1) to_additive.value_type)  := sorry --non-trivial
lemma new_lemma_49712 (h0 : topological_space (linear_ordered_comm_group_with_zero char)) : totally_disconnected_space (linear_ordered_comm_group_with_zero char) := sorry --non-trivial
lemma new_lemma_49713 (h0 : functor.add_const (function.extfun Type ring) pos) : @rank_condition.{0} (has_nndist.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) pos h0) (has_nndist.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_49714 (h0 : topological_space (metric_space linarith.comp)) : locally_compact_space (metric_space linarith.comp) := sorry --non-trivial
lemma new_lemma_49715 (h0 : function.extfun Type topological_space) : @t0_space.{0} (normed_group.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_49716 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} h0 (ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49717 (h0 : ring (has_add (ring Type))) : is_domain (has_add (ring Type)) := sorry --non-trivial
lemma new_lemma_49718 (h0 : ring (has_neg num)) : strong_rank_condition (has_neg num) := sorry --non-trivial
lemma new_lemma_49719 (h0 : functor.add_const (ordered_comm_monoid (has_zero linarith.comp)) (ring (has_add Type))) : @has_exists_mul_of_le.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (has_zero.{0} linarith.comp)) (ring.{1} (has_add.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_49720 (h0 h1 : multiset (has_div enat)) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_49721 (h0 : add_group (has_top (has_norm unsigned))) : is_add_cyclic (has_top (has_norm unsigned)) := sorry --non-trivial
lemma new_lemma_49722 (h2 : set (has_lt linarith.comp_source)) : set.subsingleton h2 := sorry --non-trivial
lemma new_lemma_49723 (h0 : not (topological_space (with_zero linarith.comp_source) -> false)) : @path_connected_space.{0} (with_zero.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (with_zero.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_49724 (h0 : functor.add_const (finset (has_nndist unsigned)) pos) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49725 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (linear_order.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49726 (h0 : complete_lattice (has_pos_part (ring Type))) : is_compactly_generated (has_pos_part (ring Type)) := sorry --non-trivial
lemma new_lemma_49727 (h1 : topological_space (has_lt std_gen)) (h2 : preorder (has_lt std_gen)) : order_closed_topology (has_lt std_gen) := sorry --non-trivial
lemma new_lemma_49728 (h0 : not (monoid (partial_order empty) -> false)) : @monoid.fg.{0} (partial_order.{0} empty) (@classical.by_contradiction'.{1} (monoid.{0} (partial_order.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_49729 (h1 : has_mem.mem (has_emptyc congr_arg_kind) has_emptyc.emptyc) : @strong_rank_condition.{0} (has_emptyc.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type ring.{0} (has_emptyc.{0} congr_arg_kind) h1)  := sorry --non-trivial
lemma new_lemma_49730 (h0 : topological_space (sub_neg_monoid (has_bot (has_bot (has_bot (has_bot real)))))) : normal_space (sub_neg_monoid (has_bot (has_bot (has_bot (has_bot real))))) := sorry --non-trivial
lemma new_lemma_49731 (h0 : function.extfun Type (functor.add_const (monoid (semigroup empty)))) : @monoid.fg.{0} (semigroup.{0} empty) (@functor.add_const.run.{0 0} (monoid.{0} (semigroup.{0} empty)) (option.{0} (option.{0} (option.{0} (option.{0} (option.{0} unsigned))))) (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (monoid.{0} (semigroup.{0} empty))) h0 (option.{0} (option.{0} (option.{0} (option.{0} (option.{0} unsigned)))))))  := sorry --non-trivial
lemma new_lemma_49732 (h0 : function.extfun (Type 1) topological_space) : @sequential_space.{1} (finset.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (finset.{1} Type))  := sorry --non-trivial
lemma new_lemma_49733 (h1 : monoid (measurable_space (has_norm (has_norm congr_arg_kind)))) : monoid.fg (measurable_space (has_norm (has_norm congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_49734 (h0 : complete_lattice (semi_normed_comm_ring (has_nnnorm to_additive.value_type))) : complete_lattice.is_Sup_finite_compact (semi_normed_comm_ring (has_nnnorm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_49735 (h0 : add_group (monoid_with_zero (option (option (option pos))))) : is_add_cyclic (monoid_with_zero (option (option (option pos)))) := sorry --non-trivial
lemma new_lemma_49736 (h0 : not (topological_space (has_append (has_ssubset to_additive.value_type)) -> false)) : @path_connected_space.{0} (has_append.{0} (has_ssubset.{0} to_additive.value_type)) (@classical.by_contradiction'.{1} (topological_space.{0} (has_append.{0} (has_ssubset.{0} to_additive.value_type))) h0)  := sorry --non-trivial
lemma new_lemma_49737 (h0 : complete_lattice (distrib_lattice string_imp)) : is_atomistic (distrib_lattice string_imp) := sorry --non-trivial
lemma new_lemma_49738 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_49739 (h0 : topological_space linarith.comp_source) (h1 : set linarith.comp_source) : is_preconnected h1 := sorry --non-trivial
lemma new_lemma_49740 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (has_edist.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_edist.{0} empty))  := sorry --non-trivial
lemma new_lemma_49741 (h0 : uniform_space (add_comm_monoid (finset environment.implicit_infer_kind))) : complete_space (add_comm_monoid (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_49742 (h0 : functor.add_const (function.extfun Type ordered_add_comm_monoid) Type) : @archimedean.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type ordered_add_comm_monoid.{0}) Type h0) (boolean_algebra.core.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_49743 (h0 : topological_space (random_gen (has_nnnorm linarith.comp_source))) : totally_disconnected_space (random_gen (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_49744 (h0 : functor.add_const (topological_space (boolean_algebra linarith.comp)) Type) : @normal_space.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_49745 (h0 : group (measure_theory.measure_space (semiring (semiring (has_top (semiring unsigned)))))) : is_cyclic (measure_theory.measure_space (semiring (semiring (has_top (semiring unsigned))))) := sorry --non-trivial
lemma new_lemma_49746 (h0 : set Prop) : @Lim.{0} Prop sierpinski_space (@nonempty_of_inhabited.{1} Prop sort.inhabited.{0}) (@filter.principal.{0} Prop h0)  := sorry --non-trivial
lemma new_lemma_49747 (h1 : topological_space (random_gen (has_lt char))) : t0_space (random_gen (has_lt char)) := sorry --non-trivial
lemma new_lemma_49748 (h0 : functor.add_const (topological_space (generalized_boolean_algebra pos)) (has_neg name)) : @t1_space.{0} (generalized_boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (generalized_boolean_algebra.{0} pos)) (has_neg.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_49749 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (random_gen.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (random_gen.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_49750 (h0 : function.extfun Type group) : @normalizer_condition.{0} (cancel_monoid.{0} num) (@function.extfun_app.{2 1} Type group.{0} h0 (cancel_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_49751 (h0 : ring (add_comm_semigroup fun_info)) : strong_rank_condition (add_comm_semigroup fun_info) := sorry --non-trivial
lemma new_lemma_49752 (h0 : ring (has_nndist (finset (has_add Type)))) : rank_condition (has_nndist (finset (has_add Type))) := sorry --non-trivial
lemma new_lemma_49753 (h0 : measurable_space (has_le enat)) (h1 : filter (has_le enat)) : filter.is_measurably_generated h1 := sorry --non-trivial
lemma new_lemma_49754 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (has_dist.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_dist.{0} empty))  := sorry --non-trivial
lemma new_lemma_49755 (h0 : not (uniform_space (encodable linarith.comp_source) -> false)) : @complete_space.{0} (encodable.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (uniform_space.{0} (encodable.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_49756 (h0 : add_group (linear_order (option (option (option empty))))) : is_add_cyclic (linear_order (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_49757 (h0 : equiv.perm string.iterator_imp) : equiv.perm.is_cycle h0 := sorry --non-trivial
lemma new_lemma_49758 (h0 : functor.add_const (topological_space (non_assoc_semiring congr_arg_kind)) unsigned) : @totally_disconnected_space.{0} (non_assoc_semiring.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (non_assoc_semiring.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_49759 (h0 : not (function.extfun Type uniform_space -> false)) : @complete_space.{0} (complete_semilattice_Sup.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (complete_semilattice_Sup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49760 (h0 : prod (semigroup (mul_zero_class name)) (semigroup (mul_zero_class name))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_49761 (h0 : topological_space (normed_group (has_top (has_top (has_top fun_info))))) : path_connected_space (normed_group (has_top (has_top (has_top fun_info)))) := sorry --non-trivial
lemma new_lemma_49762 (h0 : set num) (h1 : num -> num -> Prop) : set.partially_well_ordered_on h0 h1 := sorry --non-trivial
lemma new_lemma_49763 (h0 : not (topological_space (has_sub linarith.comp) -> false)) : @irreducible_space.{0} (has_sub.{0} linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (has_sub.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_49764 (h0 : functor.add_const (ring (has_zero Type)) environment.implicit_infer_kind) : @rank_condition.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_zero.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_49765 (h0 : topological_space (finset (ring (ring (finset (ring Type)))))) : regular_space (finset (ring (ring (finset (ring Type))))) := sorry --non-trivial
lemma new_lemma_49766 (h0 : filter (semigroup (has_add pos))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_49767 (h0 : topological_space pos) : normal_space pos := sorry --non-trivial
lemma new_lemma_49768 (h0 : topological_space (has_pos_part (ordered_comm_monoid Type))) : regular_space (has_pos_part (ordered_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_49769 (h0 : complete_lattice (add_right_cancel_monoid (semiring (semiring congr_arg_kind)))) : is_compactly_generated (add_right_cancel_monoid (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_49770 (h0 : function.extfun Type group) : @is_cyclic.{0} (with_bot.{0} num) (@function.extfun_app.{2 1} Type group.{0} h0 (with_bot.{0} num))  := sorry --non-trivial
lemma new_lemma_49771 (h0 : ordered_comm_monoid (boolean_algebra (boolean_algebra linarith.comp))) : has_exists_mul_of_le (boolean_algebra (boolean_algebra linarith.comp)) := sorry --non-trivial
lemma new_lemma_49772 (h0 : group (has_top (random_gen string_imp))) : normalizer_condition (has_top (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_49773 (h0 : prod (bin_tree (semiring num)) (bin_tree (semiring num))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_49774 (h0 : functor.add_const (topological_space (has_edist unsigned)) empty) : @irreducible_space.{0} (has_edist.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_edist.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_49775 (h0 : not (function.extfun Type (functor.add_const Prop) -> false)) : functor.add_const.run (function.extfun_app (classical.by_contradiction' h0) fun_info) := sorry --non-trivial
lemma new_lemma_49776 (h3 : has_le (has_compl linarith.ineq)) (h4 : bounded_order (has_compl linarith.ineq)) : is_simple_order (has_compl linarith.ineq) := sorry --non-trivial
lemma new_lemma_49777 (h0 : complete_lattice (id num)) : complete_lattice.is_Sup_finite_compact (id num) := sorry --non-trivial
lemma new_lemma_49778 (h0 : group (ordered_cancel_add_comm_monoid unsigned)) : normalizer_condition (ordered_cancel_add_comm_monoid unsigned) := sorry --non-trivial
lemma new_lemma_49779 (h0 : topological_space (sub_neg_monoid name)) : preirreducible_space (sub_neg_monoid name) := sorry --non-trivial
lemma new_lemma_49780 (h0 : topological_space (linear_ordered_comm_monoid_with_zero (semiring unsigned))) : topological_space.separable_space (linear_ordered_comm_monoid_with_zero (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_49781 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (linear_ordered_comm_ring unsigned)) := sorry --non-trivial
lemma new_lemma_49782 (h0 : functor.add_const (topological_space (bin_tree congr_arg_kind)) empty) : @totally_disconnected_space.{0} (bin_tree.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (bin_tree.{0} congr_arg_kind)) empty h0)  := sorry --non-trivial
lemma new_lemma_49783 (h0 : fin has_zero.zero) : @is_add_cyclic.{0} (has_add.{0} real) (@matrix.vec_empty.{0} (add_group.{0} (has_add.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_49784 (h0 : functor.add_const (function.extfun (Type 1) ring) name) : @is_domain.{1} (finset.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) ring.{1}) name h0) (finset.{1} Type))  := sorry --non-trivial
lemma new_lemma_49785 (h0 : topological_space (has_neg (boolean_algebra Type))) : t0_space (has_neg (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_49786 (h0 : uniform_space (add_left_cancel_monoid reducibility_hints)) : complete_space (add_left_cancel_monoid reducibility_hints) := sorry --non-trivial
lemma new_lemma_49787 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (has_to_string.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_to_string.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_49788 (h0 : uniform_space (normed_field char)) : complete_space (normed_field char) := sorry --non-trivial
lemma new_lemma_49789 (h0 : semiring (has_pos_part (has_Inf (has_add name)))) : is_noetherian_ring (has_pos_part (has_Inf (has_add name))) := sorry --non-trivial
lemma new_lemma_49790 (h0 : add_group (has_emptyc (random_gen congr_arg_kind))) : is_add_cyclic (has_emptyc (random_gen congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_49791 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (linear_ordered_comm_ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (linear_ordered_comm_ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49792 (h0 : functor.add_const (topological_space (metric_space empty)) num) : @t0_space.{0} (metric_space.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (metric_space.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_49793 (h0 : function.extfun Type ring) : @rank_condition.{0} (has_neg.{0} (has_add.{0} (has_add.{0} (has_add.{0} (has_add.{0} (add_comm_monoid.{0} pos)))))) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_neg.{0} (has_add.{0} (has_add.{0} (has_add.{0} (has_add.{0} (add_comm_monoid.{0} pos)))))))  := sorry --non-trivial
lemma new_lemma_49794 (h1 : group (has_norm (random_gen to_additive.value_type))) : normalizer_condition (has_norm (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_49795 (h0 : topological_space (with_one (has_inv fun_info))) : totally_separated_space (with_one (has_inv fun_info)) := sorry --non-trivial
lemma new_lemma_49796 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49797 (h0 : add_group (has_emptyc (semiring num))) : is_add_cyclic (has_emptyc (semiring num)) := sorry --non-trivial
lemma new_lemma_49798 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (has_bot.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_bot.{0} pos))  := sorry --non-trivial
lemma new_lemma_49799 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (add_comm_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (add_comm_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_49800 (h0 : functor.add_const (function.extfun Type group) name) : @is_simple_group.{0} (add_comm_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) name h0) (add_comm_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49801 (h0 : add_group (has_emptyc (has_norm to_additive.value_type))) : is_add_cyclic (has_emptyc (has_norm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_49802 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (linear_ordered_semiring.{0} num) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_ordered_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_49803 (h0 : topological_space (distrib_lattice (has_nnnorm (has_nnnorm (has_nnnorm linarith.ineq))))) : path_connected_space (distrib_lattice (has_nnnorm (has_nnnorm (has_nnnorm linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_49804 (h0 : function.extfun Type ring) : @rank_condition.{0} (linear_ordered_add_comm_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_ordered_add_comm_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49805 (h0 : group (has_add (has_to_string (has_to_string ennreal)))) : is_simple_group (has_add (has_to_string (has_to_string ennreal))) := sorry --non-trivial
lemma new_lemma_49806 (h0 : not (uniform_space (has_div linarith.ineq) -> false)) : @complete_space.{0} (has_div.{0} linarith.ineq) (@classical.by_contradiction'.{1} (uniform_space.{0} (has_div.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_49807 (h0 : functor.add_const (topological_space (complete_linear_order num)) congr_arg_kind) : @locally_compact_space.{0} (complete_linear_order.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_linear_order.{0} num)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_49808 (h0 : function.extfun (Type 1) uniform_space) : @complete_space.{1} (add_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) uniform_space.{1} h0 (add_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_49809 (h0 : finset (linear_ordered_comm_group (option empty))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_49810 (h0 : list (has_to_string (has_add environment.implicit_infer_kind))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49811 (h0 : topological_space (canonically_ordered_monoid (has_add (has_add linarith.comp)))) : totally_separated_space (canonically_ordered_monoid (has_add (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_49812 (h0 : functor.add_const (topological_space (comm_group environment.implicit_infer_kind)) (has_neg linarith.comp)) : @preconnected_space.{0} (comm_group.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} environment.implicit_infer_kind)) (has_neg.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_49813 (h0 : group (cancel_monoid (semigroup name))) : is_cyclic (cancel_monoid (semigroup name)) := sorry --non-trivial
lemma new_lemma_49814 (h0 : functor.add_const (function.extfun Type semiring) pos) : @is_noetherian_ring.{0} (has_add.{0} name) (@function.extfun_app.{2 1} Type semiring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type semiring.{0}) pos h0) (has_add.{0} name))  := sorry --non-trivial
lemma new_lemma_49815 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (has_add.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_add.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_49816 (h0 : ring (add_semigroup unsigned)) : is_principal_ideal_ring (add_semigroup unsigned) := sorry --non-trivial
lemma new_lemma_49817 (h0 : list (encodable (has_top linarith.ineq))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49818 (h0 : filter (preorder num)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_49819 (h0 : ring (normed_field enat)) : rank_condition (normed_field enat) := sorry --non-trivial
lemma new_lemma_49820 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (group_with_zero.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (group_with_zero.{0} num))  := sorry --non-trivial
lemma new_lemma_49821 (h0 : semiring (comm_monoid (semiring empty))) : is_noetherian_ring (comm_monoid (semiring empty)) := sorry --non-trivial
lemma new_lemma_49822 (h1 : ring (topological_space ereal)) : is_domain (topological_space ereal) := sorry --non-trivial
lemma new_lemma_49823 (h0 : function.extfun nat fin) : @complete_lattice.is_Sup_finite_compact.{1} (ordered_comm_monoid.{1} Type) (@matrix.vec_empty.{1} (complete_lattice.{1} (ordered_comm_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_49824 (h0 : not (ring (normed_group linarith.ineq) -> false)) : @is_domain.{0} (normed_group.{0} linarith.ineq) (@classical.by_contradiction'.{1} (ring.{0} (normed_group.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_49825 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} environment.implicit_infer_kind (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 environment.implicit_infer_kind)  := sorry --non-trivial
lemma new_lemma_49826 (h0 : functor.add_const (add_group (has_pos_part name)) (has_Inf pos)) : @is_add_cyclic.{0} (has_pos_part.{0} name) (@functor.add_const.run.{0 0} (add_group.{0} (has_pos_part.{0} name)) (has_Inf.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_49827 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem ring)) : @rank_condition.{0} linarith.comp (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) ring.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) linarith.comp)  := sorry --non-trivial
lemma new_lemma_49828 (h0 : complete_lattice (has_nndist (cancel_monoid (has_add pos)))) : is_atomistic (has_nndist (cancel_monoid (has_add pos))) := sorry --non-trivial
lemma new_lemma_49829 (h0 : topological_space (add_cancel_monoid (has_neg name))) : regular_space (add_cancel_monoid (has_neg name)) := sorry --non-trivial
lemma new_lemma_49830 (h0 : functor.add_const (group (option ennreal)) pos) : @group.fg.{0} (option.{0} ennreal) (@functor.add_const.run.{0 0} (group.{0} (option.{0} ennreal)) pos h0)  := sorry --non-trivial
lemma new_lemma_49831 (h0 : functor.add_const (list (has_to_string environment.implicit_infer_kind)) Type) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49832 (h0 : ordered_add_comm_monoid (has_neg_part Type)) : archimedean (has_neg_part Type) := sorry --non-trivial
lemma new_lemma_49833 (h0 : list (linear_ordered_comm_group (option (option empty)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49834 (h0 : functor.add_const (topological_space (ordered_ring num)) num) : @t1_space.{0} (ordered_ring.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_ring.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_49835 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (normed_lattice_add_comm_group.{0} pos) (@function.extfun_app.{2 1} Type add_group.{0} h0 (normed_lattice_add_comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_49836 (h0 : topological_space (semi_normed_comm_ring string_imp)) : t0_space (semi_normed_comm_ring string_imp) := sorry --non-trivial
lemma new_lemma_49837 (h1 : topological_space (random_gen fun_info)) : totally_disconnected_space (random_gen fun_info) := sorry --non-trivial
lemma new_lemma_49838 (h0 : uniform_space (with_one congr_arg_kind) -> Prop) (h1 : Exists (fun (x : uniform_space (with_one congr_arg_kind)), h0 x)) : @separated_space.{0} (with_one.{0} congr_arg_kind) (@classical.some.{1} (uniform_space.{0} (with_one.{0} congr_arg_kind)) h0 h1)  := sorry --non-trivial
lemma new_lemma_49839 (h0 : ring (simple_graph (has_add pos))) : is_domain (simple_graph (has_add pos)) := sorry --non-trivial
lemma new_lemma_49840 (h0 : ordered_add_comm_monoid (has_neg (boolean_algebra Type))) : archimedean (has_neg (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_49841 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49842 (h0 : group (finset (finset name))) : group.fg (finset (finset name)) := sorry --non-trivial
lemma new_lemma_49843 (h0 : function.extfun Type ordered_comm_monoid) : @has_exists_mul_of_le.{0} real (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} h0 real)  := sorry --non-trivial
lemma new_lemma_49844 (h0 : topological_space znum) : loc_path_connected_space znum := sorry --non-trivial
lemma new_lemma_49845 (h0 : filter (comm_group (comm_group Type))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_49846 (h0 : functor.add_const (add_monoid (add_comm_monoid environment.implicit_infer_kind)) name) : @add_monoid.fg.{0} (add_comm_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (add_monoid.{0} (add_comm_monoid.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_49847 (h0 : functor.comp ring canonically_ordered_comm_semiring environment.implicit_infer_kind) : @is_domain.{0} (canonically_ordered_comm_semiring.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} ring.{0} canonically_ordered_comm_semiring.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_49848 (h0 : ordered_add_comm_monoid (comm_group (option (has_neg_part ennreal)))) : archimedean (comm_group (option (has_neg_part ennreal))) := sorry --non-trivial
lemma new_lemma_49849 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_49850 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (has_ssubset.{0} char) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (has_ssubset.{0} char))  := sorry --non-trivial
lemma new_lemma_49851 (h0 : function.extfun Type topological_space) : @normal_space.{0} (finset.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (finset.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49852 (h0 : topological_space (has_star (ordered_cancel_comm_monoid num))) : totally_disconnected_space (has_star (ordered_cancel_comm_monoid num)) := sorry --non-trivial
lemma new_lemma_49853 (h1 : set (has_div std_gen)) : set.subsingleton h1 := sorry --non-trivial
lemma new_lemma_49854 (h0 : add_group (with_bot (random_gen (random_gen string_imp)))) : is_add_cyclic (with_bot (random_gen (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_49855 (h0 : topological_space (omega_complete_partial_order unsigned)) : t0_space (omega_complete_partial_order unsigned) := sorry --non-trivial
lemma new_lemma_49856 (h0 : functor.add_const (add_monoid (ordered_cancel_add_comm_monoid ennreal)) ennreal) : @add_monoid.fg.{0} (ordered_cancel_add_comm_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (add_monoid.{0} (ordered_cancel_add_comm_monoid.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_49857 (h0 : measurable_space (normed_field char)) (h1 : measure_theory.measure (normed_field char)) : measure_theory.is_finite_measure h1 := sorry --non-trivial
lemma new_lemma_49858 (h0 : add_monoid (has_to_string (mul_one_class linarith.comp))) : add_monoid.fg (has_to_string (mul_one_class linarith.comp)) := sorry --non-trivial
lemma new_lemma_49859 (h0 : topological_space (complete_distrib_lattice (semigroup environment.implicit_infer_kind))) : normal_space (complete_distrib_lattice (semigroup environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_49860 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (with_one.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_one.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_49861 (h0 : ring (distrib (has_nnnorm (comm_ring reducibility_hints)))) : is_domain (distrib (has_nnnorm (comm_ring reducibility_hints))) := sorry --non-trivial
lemma new_lemma_49862 (h0 : complete_lattice (ring (has_add Type))) : is_atomistic (ring (has_add Type)) := sorry --non-trivial
lemma new_lemma_49863 (h0 : function.extfun Type (functor.comp topological_space has_zero)) : @preirreducible_space.{0} (has_zero.{0} ennreal) (@functor.comp.run.{0 0 0} topological_space.{0} has_zero.{0} ennreal (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} has_zero.{0}) h0 ennreal))  := sorry --non-trivial
lemma new_lemma_49864 (h0 : function.extfun (Type 1) monoid) : @monoid.fg.{1} (has_add.{1} Type) (@function.extfun_app.{3 2} (Type 1) monoid.{1} h0 (has_add.{1} Type))  := sorry --non-trivial
lemma new_lemma_49865 (h0 : not (complete_lattice (has_add fun_info) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (has_add.{0} fun_info) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_add.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_49866 (h0 : list (has_Sup (has_edist (complete_distrib_lattice (add_cancel_comm_monoid empty))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49867 (h0 : complete_lattice (sub_neg_monoid (has_add name))) : is_compactly_generated (sub_neg_monoid (has_add name)) := sorry --non-trivial
lemma new_lemma_49868 (h0 : topological_space (semigroup (has_add (comm_group Type)))) : preconnected_space (semigroup (has_add (comm_group Type))) := sorry --non-trivial
lemma new_lemma_49869 (h0 : functor.comp topological_space has_neg name) : @sequential_space.{0} (has_neg.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_neg.{0} name h0)  := sorry --non-trivial
lemma new_lemma_49870 (h0 : semiring (has_zero (ring (ring Type)))) : is_noetherian_ring (has_zero (ring (ring Type))) := sorry --non-trivial
lemma new_lemma_49871 (h0 : functor.add_const (list (non_assoc_semiring unsigned)) congr_arg_kind) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49872 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (random_gen.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (random_gen.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_49873 (h0 : semiring (comm_semigroup real)) : is_noetherian_ring (comm_semigroup real) := sorry --non-trivial
lemma new_lemma_49874 (h0 : topological_space (boolean_algebra.core (boolean_algebra (boolean_algebra name)))) : regular_space (boolean_algebra.core (boolean_algebra (boolean_algebra name))) := sorry --non-trivial
lemma new_lemma_49875 (h0 : functor.add_const (group (linear_ordered_field congr_arg_kind)) congr_arg_kind) : @is_cyclic.{0} (linear_ordered_field.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (group.{0} (linear_ordered_field.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_49876 (h0 : topological_space (ring (comm_group unsigned))) : loc_path_connected_space (ring (comm_group unsigned)) := sorry --non-trivial
lemma new_lemma_49877 (h0 : semiring (sub_neg_monoid real)) : is_noetherian_ring (sub_neg_monoid real) := sorry --non-trivial
lemma new_lemma_49878 (h0 : functor.add_const (complete_lattice (left_cancel_monoid empty)) (semiring empty)) : @is_compactly_generated.{0} (left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (left_cancel_monoid.{0} empty)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_49879 (h0 : functor.add_const (function.extfun Type complete_lattice) linarith.comp) : @is_compactly_generated.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) linarith.comp h0) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49880 (h0 : functor.add_const Prop (has_to_string environment.implicit_infer_kind)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_49881 (h0 : group (ordered_ring (semiring (semiring (semiring (semiring empty)))))) : normalizer_condition (ordered_ring (semiring (semiring (semiring (semiring empty))))) := sorry --non-trivial
lemma new_lemma_49882 (h0 : functor.add_const (ring (ring linarith.comp)) environment.implicit_infer_kind) : @is_domain.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (ring.{0} linarith.comp)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_49883 (h0 : complete_lattice (has_pos_part Type)) : is_compactly_generated (has_pos_part Type) := sorry --non-trivial
lemma new_lemma_49884 (h0 : ring (semigroup empty)) : is_principal_ideal_ring (semigroup empty) := sorry --non-trivial
lemma new_lemma_49885 (h0 : has_le linarith.comp_source) (h1 : bounded_order linarith.comp_source) : is_simple_order linarith.comp_source := sorry --non-trivial
lemma new_lemma_49886 (h0 : add_group (has_neg_part (has_nndist Type))) : is_add_cyclic (has_neg_part (has_nndist Type)) := sorry --non-trivial
lemma new_lemma_49887 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (has_neg.{0} unsigned) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (has_neg.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_49888 (h0 : functor.add_const (topological_space (finset linarith.comp)) Type) : @irreducible_space.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (finset.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_49889 (h0 : group (complete_distrib_lattice real)) : normalizer_condition (complete_distrib_lattice real) := sorry --non-trivial
lemma new_lemma_49890 (h0 : ring (has_ssubset (random_gen (random_gen fun_info)))) : rank_condition (has_ssubset (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_49891 (h0 : list (has_neg (has_add pos))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_49892 (h0 : function.extfun Type (functor.add_const (group (normed_linear_ordered_group unsigned)))) : @is_cyclic.{0} (normed_linear_ordered_group.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (normed_linear_ordered_group.{0} unsigned)) num (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (group.{0} (normed_linear_ordered_group.{0} unsigned))) h0 num))  := sorry --non-trivial
lemma new_lemma_49893 (h0 : filter (has_nndist (has_neg pos))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_49894 (h0 : topological_space (semigroup (has_neg environment.implicit_infer_kind))) : preconnected_space (semigroup (has_neg environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_49895 (h0 : uniform_space (has_le enat)) : complete_space (has_le enat) := sorry --non-trivial
lemma new_lemma_49896 (h2 : function.extfun Type complete_lattice) : is_atomistic (measurable_space congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49897 (h0 : semiring (has_Sup congr_arg_kind)) : is_noetherian_ring (has_Sup congr_arg_kind) := sorry --non-trivial
lemma new_lemma_49898 (h0 : fin has_zero.zero) : @topological_space.separable_space.{1} (has_to_string.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (has_to_string.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_49899 (h0 : functor.add_const (uniform_space (has_nndist linarith.comp)) Type) : @complete_space.{0} (has_nndist.{0} linarith.comp) (@functor.add_const.run.{0 1} (uniform_space.{0} (has_nndist.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_49900 (h0 : topological_space (has_nndist (boolean_algebra pos))) : locally_compact_space (has_nndist (boolean_algebra pos)) := sorry --non-trivial
lemma new_lemma_49901 (h0 : not (add_group (semiring unsigned) -> false)) : @is_add_cyclic.{0} (semiring.{0} unsigned) (@classical.by_contradiction'.{1} (add_group.{0} (semiring.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_49902 (h0 : topological_space (linear_ordered_field (has_add ennreal))) : preconnected_space (linear_ordered_field (has_add ennreal)) := sorry --non-trivial
lemma new_lemma_49903 (h0 : topological_space (semi_normed_comm_ring (random_gen linarith.ineq))) : totally_disconnected_space (semi_normed_comm_ring (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_49904 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (monoid num)) := sorry --non-trivial
lemma new_lemma_49905 (h0 : functor.add_const (ring (complete_distrib_lattice name)) environment.implicit_infer_kind) : @rank_condition.{0} (complete_distrib_lattice.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (complete_distrib_lattice.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_49906 (h0 : topological_space (partial_order (semiring (semiring (semiring congr_arg_kind))))) : totally_separated_space (partial_order (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_49907 (h0 : topological_space (finset (has_to_string unsigned))) : topological_space.separable_space (finset (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_49908 (h0 : functor.comp topological_space has_neg Type) : @totally_disconnected_space.{1} (has_neg.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} has_neg.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_49909 (h0 : functor.add_const (topological_space (add_group num)) empty) : @t0_space.{0} (add_group.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (add_group.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_49910 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preconnected_space.{0} (ordered_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49911 (h0 : group (linear_ordered_comm_group ennreal)) : is_cyclic (linear_ordered_comm_group ennreal) := sorry --non-trivial
lemma new_lemma_49912 (h0 : add_group (finset (finset (finset (finset (has_neg (has_add Type))))))) : is_add_cyclic (finset (finset (finset (finset (has_neg (has_add Type)))))) := sorry --non-trivial
lemma new_lemma_49913 (h0 : ring (has_le (mul_one_class (mul_one_class linarith.comp_source)))) : rank_condition (has_le (mul_one_class (mul_one_class linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_49914 (h0 : group (canonically_linear_ordered_monoid (option pos))) : is_simple_group (canonically_linear_ordered_monoid (option pos)) := sorry --non-trivial
lemma new_lemma_49915 (h0 : functor.add_const Prop (has_to_string (has_neg (has_neg linarith.comp)))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_49916 (h2 : add_group (has_append to_additive.value_type)) : is_add_cyclic (has_append to_additive.value_type) := sorry --non-trivial
lemma new_lemma_49917 (h0 : has_mem.mem uniform_space has_emptyc.emptyc) : @separated_space.{0} (semiring.{0} num) (@function.extfun_app.{2 1} Type uniform_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) uniform_space.{0} h0) (semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_49918 (h0 : group (has_norm (has_top (has_inv (has_top (measurable_space (has_inv fun_info))))))) : group.fg (has_norm (has_top (has_inv (has_top (measurable_space (has_inv fun_info)))))) := sorry --non-trivial
lemma new_lemma_49919 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (has_bot.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_bot.{0} name))  := sorry --non-trivial
lemma new_lemma_49920 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (pseudo_metric_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (pseudo_metric_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49921 (h1 : function.extfun Type topological_space) : @t0_space.{0} (denumerable.{0} string_imp) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (denumerable.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_49922 (h0 : functor.add_const (function.extfun Type complete_lattice) Type) : @complete_lattice.is_Sup_finite_compact.{0} (has_add.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type complete_lattice.{0}) Type h0) (has_add.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49923 (h0 : not (topological_space (has_add linarith.ineq) -> false)) : @path_connected_space.{0} (has_add.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (has_add.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_49924 (h0 : topological_space (has_nndist (has_neg_part name))) : totally_disconnected_space (has_nndist (has_neg_part name)) := sorry --non-trivial
lemma new_lemma_49925 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : palindrome (function.extfun_app (function.extfun_app h0 list) (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_49926 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @monoid.fg.{0} (measurable_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) monoid.{0}) (measurable_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49927 (h1 : function.extfun Type topological_space) : @t0_space.{0} (has_norm.{0} string_imp) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (has_norm.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_49928 (h0 : functor.add_const (complete_lattice (ring name)) linarith.comp) : @is_compactly_generated.{0} (ring.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (ring.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49929 (h0 : ordered_comm_monoid (sub_neg_monoid (sub_neg_monoid pos))) : has_exists_mul_of_le (sub_neg_monoid (sub_neg_monoid pos)) := sorry --non-trivial
lemma new_lemma_49930 (h0 : not (function.extfun Type complete_lattice -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (linear_ordered_semiring.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (linear_ordered_semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_49931 (h0 : ring (ordered_comm_ring (has_Inf name))) : strong_rank_condition (ordered_comm_ring (has_Inf name)) := sorry --non-trivial
lemma new_lemma_49932 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (has_add.{0} real) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_add.{0} real))  := sorry --non-trivial
lemma new_lemma_49933 (h0 : topological_space (pseudo_metric_space pos)) : sequential_space (pseudo_metric_space pos) := sorry --non-trivial
lemma new_lemma_49934 (h0 : list (cancel_monoid (cancel_monoid environment.implicit_infer_kind))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49935 (h0 : list (has_neg (finset (ring (ring name))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49936 (h1 : not (group (has_top congr_arg_kind) -> false)) : @is_cyclic.{0} (has_top.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (group.{0} (has_top.{0} congr_arg_kind)) h1)  := sorry --non-trivial
lemma new_lemma_49937 (h0 : complete_lattice (id (semiring unsigned))) : is_atomistic (id (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_49938 (h0 : not (ring (complete_distrib_lattice fun_info) -> false)) : @is_domain.{0} (complete_distrib_lattice.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (complete_distrib_lattice.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_49939 (h0 : topological_space (add_comm_monoid (ring Type))) : topological_space.separable_space (add_comm_monoid (ring Type)) := sorry --non-trivial
lemma new_lemma_49940 (h0 : functor.comp uniform_space canonically_ordered_comm_semiring (option unsigned)) : @complete_space.{0} (canonically_ordered_comm_semiring.{0} (option.{0} unsigned)) (@functor.comp.run.{0 0 0} uniform_space.{0} canonically_ordered_comm_semiring.{0} (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_49941 (h0 : topological_space (pseudo_metric_space (option unsigned))) : t1_space (pseudo_metric_space (option unsigned)) := sorry --non-trivial
lemma new_lemma_49942 (h0 : fin has_zero.zero) : finset.nonempty (function.extfun_app (matrix.vec_empty h0) (ordered_comm_monoid name)) := sorry --non-trivial
lemma new_lemma_49943 (h0 : topological_space (has_append (has_nnnorm fun_info))) : t0_space (has_append (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_49944 (h0 : topological_space (has_add (has_neg_part name))) : sequential_space (has_add (has_neg_part name)) := sorry --non-trivial
lemma new_lemma_49945 (h0 : ring (linear_ordered_semiring (semiring empty))) : is_domain (linear_ordered_semiring (semiring empty)) := sorry --non-trivial
lemma new_lemma_49946 (h0 : not (topological_space (topological_space fun_info) -> false)) : @t0_space.{0} (topological_space.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (topological_space.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_49947 (h1 : group (with_zero to_additive.value_type)) : is_cyclic (with_zero to_additive.value_type) := sorry --non-trivial
lemma new_lemma_49948 (h0 : has_neg (has_compl to_additive.value_type)) (h1 : measurable_space (has_compl to_additive.value_type)) : has_measurable_neg (has_compl to_additive.value_type) := sorry --non-trivial
lemma new_lemma_49949 (h0 : function.extfun Type group) : @normalizer_condition.{0} (has_one.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} h0 (has_one.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_49950 (h0 : topological_space (has_bot Type)) : t1_space (has_bot Type) := sorry --non-trivial
lemma new_lemma_49951 (h1 : topological_space char) : topological_space.first_countable_topology char := sorry --non-trivial
lemma new_lemma_49952 (h1 : not (function.extfun Type topological_space -> false)) : @totally_separated_space.{0} (has_top.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h1) (has_top.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_49953 (h0 : semiring (simple_graph (finset (finset pos)))) : is_noetherian_ring (simple_graph (finset (finset pos))) := sorry --non-trivial
lemma new_lemma_49954 (h0 : topological_space (has_to_string (has_neg_part Type))) : discrete_topology (has_to_string (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_49955 (h0 : comm_ring empty) (h1 : local_ring empty) (h2 : not (topological_space (local_ring.residue_field empty) -> false)) : @preirreducible_space.{0} (@local_ring.residue_field.{0} empty h0 h1) (@classical.by_contradiction'.{1} (topological_space.{0} (@local_ring.residue_field.{0} empty h0 h1)) h2)  := sorry --non-trivial
lemma new_lemma_49956 (h0 : topological_space (normed_lattice_add_comm_group (has_neg (has_neg pos)))) : totally_separated_space (normed_lattice_add_comm_group (has_neg (has_neg pos))) := sorry --non-trivial
lemma new_lemma_49957 (h0 : normed_comm_ring (comm_group (has_add Type)) -> Prop) : zzz_forall h0 := sorry --non-trivial
lemma new_lemma_49958 (h1 : group (has_emptyc to_additive.value_type)) : normalizer_condition (has_emptyc to_additive.value_type) := sorry --non-trivial
lemma new_lemma_49959 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (has_edist.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_edist.{0} empty))  := sorry --non-trivial
lemma new_lemma_49960 (h0 : topological_space (add_group (has_norm congr_arg_kind))) : discrete_topology (add_group (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_49961 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} string_imp (@function.extfun_app.{2 1} Type topological_space.{0} h0 string_imp)  := sorry --non-trivial
lemma new_lemma_49962 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (non_assoc_semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (non_assoc_semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_49963 (h0 : complete_lattice (comm_group (has_add pos))) : is_atomistic (comm_group (has_add pos)) := sorry --non-trivial
lemma new_lemma_49964 (h0 : topological_space (add_cancel_monoid linarith.comp)) : preirreducible_space (add_cancel_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_49965 (h0 : functor.add_const (topological_space (comm_group name)) environment.implicit_infer_kind) : @regular_space.{0} (comm_group.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_49966 (h0 : not (filter (complete_semilattice_Sup to_additive.value_type) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_49967 (h0 : filter (generalized_boolean_algebra Type)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_49968 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : finset.nonempty (function.extfun_app (function.extfun_app h0 finset) (semigroup unsigned)) := sorry --non-trivial
lemma new_lemma_49969 (h0 : function.extfun Type with_bot) (h1 : multiset (with_bot (has_emptyc unsigned))) : multiset.mem (function.extfun_app h0 (has_emptyc unsigned)) h1 := sorry --non-trivial
lemma new_lemma_49970 (h0 : has_mem.mem (measurable_space empty) has_emptyc.emptyc) : @is_add_cyclic.{0} (measurable_space.{0} empty) (@finset.pi.empty.{1 0} Type add_group.{0} (measurable_space.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_49971 (h0 : group (semiring (has_norm num))) : normalizer_condition (semiring (has_norm num)) := sorry --non-trivial
lemma new_lemma_49972 (h0 : functor.add_const (list (boolean_algebra linarith.comp)) environment.implicit_infer_kind) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49973 (h0 : functor.add_const (list (semigroup pos)) Type) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49974 (h0 : functor.add_const (cancel_comm_monoid_with_zero (normed_comm_ring unsigned)) name) : @unique_factorization_monoid.{0} (normed_comm_ring.{0} unsigned) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (normed_comm_ring.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_49975 (h0 : topological_space (has_pos_part (has_Inf pos))) : totally_disconnected_space (has_pos_part (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_49976 (h0 : functor.add_const (filter (has_add Type)) linarith.comp) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49977 (h1 : topological_space (distrib string_imp)) : totally_disconnected_space (distrib string_imp) := sorry --non-trivial
lemma new_lemma_49978 (h0 : topological_space (with_one (with_bot to_additive.value_type))) : t0_space (with_one (with_bot to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_49979 (h0 : functor.add_const (list (complete_linear_order congr_arg_kind)) num) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49980 (h0 h1 : multiset linarith.ineq) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_49981 (h0 : group (metric_space (comm_ring char))) : is_cyclic (metric_space (comm_ring char)) := sorry --non-trivial
lemma new_lemma_49982 (h0 : monoid (complete_semilattice_Sup (semiring (semiring empty)))) : monoid.fg (complete_semilattice_Sup (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_49983 (h0 : functor.add_const (topological_space (complete_distrib_lattice unsigned)) linarith.comp) : @t1_space.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49984 (h0 : functor.comp finset cancel_monoid name) : finset.nonempty (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_49985 (h0 : functor.add_const (list (has_neg linarith.comp)) (has_to_string (ring linarith.comp))) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_49986 (h0 : functor.add_const (semiring (non_assoc_semiring empty)) empty) : @is_noetherian_ring.{0} (non_assoc_semiring.{0} empty) (@functor.add_const.run.{0 0} (semiring.{0} (non_assoc_semiring.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_49987 (h0 : functor.add_const (topological_space (has_nndist environment.implicit_infer_kind)) linarith.comp) : @irreducible_space.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_49988 (h0 : functor.add_const (complete_lattice (has_bot real)) pos) : @is_compactly_generated.{0} (has_bot.{0} real) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_bot.{0} real)) pos h0)  := sorry --non-trivial
lemma new_lemma_49989 (h0 : topological_space (semigroup (measurable_space.dynkin_system (has_neg linarith.comp)))) : preirreducible_space (semigroup (measurable_space.dynkin_system (has_neg linarith.comp))) := sorry --non-trivial
lemma new_lemma_49990 (h0 : complete_lattice (has_append (random_gen (random_gen to_additive.value_type)))) : is_compactly_generated (has_append (random_gen (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_49991 (h0 : functor.comp topological_space cancel_monoid name) : @t1_space.{0} (cancel_monoid.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} cancel_monoid.{0} name h0)  := sorry --non-trivial
lemma new_lemma_49992 (h0 : not (ring (semiring unsigned) -> false)) : @strong_rank_condition.{0} (semiring.{0} unsigned) (@classical.by_contradiction'.{1} (ring.{0} (semiring.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_49993 (h0 : function.extfun Type group) : @group.fg.{0} (complete_semilattice_Sup.{0} num) (@function.extfun_app.{2 1} Type group.{0} h0 (complete_semilattice_Sup.{0} num))  := sorry --non-trivial
lemma new_lemma_49994 (h0 : semiring (mul_zero_class (cancel_monoid name))) : is_noetherian_ring (mul_zero_class (cancel_monoid name)) := sorry --non-trivial
lemma new_lemma_49995 (h2 : list (topological_space to_additive.value_type)) : list.nodup h2 := sorry --non-trivial
lemma new_lemma_49996 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_49997 (h0 : list (has_zero (add_comm_monoid name))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_49998 (h0 : topological_space (id (random_gen (random_gen (random_gen (random_gen linarith.ineq)))))) : totally_separated_space (id (random_gen (random_gen (random_gen (random_gen linarith.ineq))))) := sorry --non-trivial
lemma new_lemma_49999 (h0 : fin has_zero.zero) : @archimedean.{1} (comm_semigroup.{1} Type) (@matrix.vec_empty.{1} (ordered_add_comm_monoid.{1} (comm_semigroup.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_50000 (h0 : ring (has_star unsigned)) : strong_rank_condition (has_star unsigned) := sorry --non-trivial
lemma new_lemma_50001 (h0 : add_monoid (id (id (has_union linarith.comp)))) : add_monoid.fg (id (id (has_union linarith.comp))) := sorry --non-trivial
lemma new_lemma_50002 (h0 : topological_space (encodable (denumerable linarith.ineq))) : locally_compact_space (encodable (denumerable linarith.ineq)) := sorry --non-trivial
lemma new_lemma_50003 (h0 : function.extfun Type group) : @normalizer_condition.{0} (semiring.{0} fun_info) (@function.extfun_app.{2 1} Type group.{0} h0 (semiring.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_50004 (h0 : topological_space (distrib linarith.ineq)) : path_connected_space (distrib linarith.ineq) := sorry --non-trivial
lemma new_lemma_50005 (h0 : function.extfun Type group) : @is_cyclic.{0} (topological_space.{0} string_imp) (@function.extfun_app.{2 1} Type group.{0} h0 (topological_space.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_50006 (h0 : not (complete_lattice (measurable_space linarith.comp) -> false)) : is_compactly_generated (measurable_space linarith.comp) := sorry --non-trivial
lemma new_lemma_50007 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (preorder.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (preorder.{0} empty))) (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 (functor.add_const.{0 0} (topological_space.{0} (preorder.{0} empty)))) empty))  := sorry --non-trivial
lemma new_lemma_50008 (h0 : ring (denumerable reducibility_hints)) : is_domain (denumerable reducibility_hints) := sorry --non-trivial
lemma new_lemma_50009 (h0 : topological_space (ordered_comm_ring (has_neg Type))) : irreducible_space (ordered_comm_ring (has_neg Type)) := sorry --non-trivial
lemma new_lemma_50010 (h0 : function.extfun Type group) : @normalizer_condition.{0} (boolean_algebra.core.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} h0 (boolean_algebra.core.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_50011 (h0 : function.extfun nat fin) : @normal_space.{0} (complete_distrib_lattice.{0} name) (@matrix.vec_empty.{0} (topological_space.{0} (complete_distrib_lattice.{0} name)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero))))  := sorry --non-trivial
lemma new_lemma_50012 (h0 : ordered_add_comm_monoid (has_pos_part (has_Inf (has_neg linarith.comp)))) : archimedean (has_pos_part (has_Inf (has_neg linarith.comp))) := sorry --non-trivial
lemma new_lemma_50013 (h1 : filter (measurable_space num)) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_50014 (h0 : has_mem.mem (measurable_space num) has_emptyc.emptyc) : @complete_space.{0} (measurable_space.{0} num) (@finset.pi.empty.{1 0} Type uniform_space.{0} (measurable_space.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_50015 (h0 : not (function.extfun Type topological_space -> false)) : @discrete_topology.{0} real.angle (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) real.angle)  := sorry --non-trivial
lemma new_lemma_50016 (h0 : functor.comp topological_space ring pos) : @irreducible_space.{0} (ring.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} ring.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_50017 (h0 : functor.add_const Prop (has_add (finset (finset (finset (has_add (has_add (has_add pos)))))))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_50018 (h0 : finset (ordered_cancel_add_comm_monoid pos)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_50019 (h1 : group (with_bot (random_gen linarith.comp_source))) : normalizer_condition (with_bot (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_50020 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (left_cancel_semigroup.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (left_cancel_semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_50021 (h0 : not (ring (has_top char) -> false)) : @strong_rank_condition.{0} (has_top.{0} char) (@classical.by_contradiction'.{1} (ring.{0} (has_top.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_50022 (h0 : ring (normed_field fun_info)) : is_domain (normed_field fun_info) := sorry --non-trivial
lemma new_lemma_50023 (h0 : functor.add_const (topological_space (comm_group linarith.comp)) linarith.comp) : @loc_path_connected_space.{0} (comm_group.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50024 (h0 : functor.add_const (monoid (has_neg_part Type)) Type) : @monoid.fg.{1} (has_neg_part.{1} Type) (@functor.add_const.run.{1 1} (monoid.{1} (has_neg_part.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_50025 (h0 : functor.add_const (ring (finset environment.implicit_infer_kind)) Type) : @strong_rank_condition.{0} (finset.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (ring.{0} (finset.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_50026 (h0 : topological_space (with_one linarith.comp)) : discrete_topology (with_one linarith.comp) := sorry --non-trivial
lemma new_lemma_50027 (h0 : not (complete_lattice (measurable_space linarith.comp_source) -> false)) : is_compactly_generated (measurable_space linarith.comp_source) := sorry --non-trivial
lemma new_lemma_50028 (h0 : functor.add_const (ring (cancel_monoid environment.implicit_infer_kind)) name) : @is_domain.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (cancel_monoid.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_50029 (h2 : function.extfun Type uniform_space) : @complete_space.{0} (random_gen.{0} string_imp) (@function.extfun_app.{2 1} Type uniform_space.{0} h2 (random_gen.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_50030 (h0 : ring (ring (finset name))) : strong_rank_condition (ring (finset name)) := sorry --non-trivial
lemma new_lemma_50031 (h0 : topological_space (div_inv_monoid char)) : path_connected_space (div_inv_monoid char) := sorry --non-trivial
lemma new_lemma_50032 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (lex.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (lex.{0} empty))  := sorry --non-trivial
lemma new_lemma_50033 (h1 : not (function.extfun Type topological_space -> false)) : @path_connected_space.{0} (random_gen.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h1) (random_gen.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50034 (h0 : functor.add_const (group (has_bot linarith.comp)) linarith.comp) : @group.fg.{0} (has_bot.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (has_bot.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50035 (h0 : function.extfun Type group) : @group.fg.{0} (has_add.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (has_add.{0} name))  := sorry --non-trivial
lemma new_lemma_50036 (h0 : complete_lattice (finset ennreal)) : is_compactly_generated (finset ennreal) := sorry --non-trivial
lemma new_lemma_50037 (h0 : function.extfun nat fin) : @normalizer_condition.{1} (ordered_comm_ring.{1} Type) (@matrix.vec_empty.{1} (group.{1} (ordered_comm_ring.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_50038 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @has_exists_mul_of_le.{0} (boolean_algebra.{0} real) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_comm_monoid.{0}) (boolean_algebra.{0} real))  := sorry --non-trivial
lemma new_lemma_50039 (h0 : group (has_one (semiring empty))) : is_cyclic (has_one (semiring empty)) := sorry --non-trivial
lemma new_lemma_50040 (h0 : group (has_neg (has_add (has_neg Type)))) : is_simple_group (has_neg (has_add (has_neg Type))) := sorry --non-trivial
lemma new_lemma_50041 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (measure_theory.measure_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measure_theory.measure_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50042 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (option.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (option.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50043 (h0 : uniform_space (has_Inf Type)) : complete_space (has_Inf Type) := sorry --non-trivial
lemma new_lemma_50044 (h0 : complete_lattice (has_add (has_add Type))) : complete_lattice.is_Sup_finite_compact (has_add (has_add Type)) := sorry --non-trivial
lemma new_lemma_50045 (h0 : int) (h1 : int -> ereal) (h2 : coe_sort (set.range h1)) : int.lt h0 (set.range_splitting h1 h2) := sorry --non-trivial
lemma new_lemma_50046 (h0 : group (with_bot (random_gen (comm_ring linarith.ineq)))) : normalizer_condition (with_bot (random_gen (comm_ring linarith.ineq))) := sorry --non-trivial
lemma new_lemma_50047 (h0 : topological_space (generalized_boolean_algebra (ordered_ring Type))) : preirreducible_space (generalized_boolean_algebra (ordered_ring Type)) := sorry --non-trivial
lemma new_lemma_50048 (h0 : topological_space (plift (semiring (semiring unsigned)))) : totally_separated_space (plift (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_50049 (h0 : functor.add_const (topological_space (has_neg_part unsigned)) name) : @regular_space.{0} (has_neg_part.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_50050 (h0 : functor.add_const (group (has_zero unsigned)) name) : @normalizer_condition.{0} (has_zero.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (has_zero.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_50051 (h0 : functor.add_const (topological_space (linear_ordered_comm_monoid_with_zero unsigned)) empty) : @locally_compact_space.{0} (linear_ordered_comm_monoid_with_zero.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (linear_ordered_comm_monoid_with_zero.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_50052 (h0 : not (function.extfun Type group -> false)) : @normalizer_condition.{0} (metric_space.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (metric_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_50053 (h0 : functor.add_const (semiring (add_cancel_monoid empty)) num) : @is_noetherian_ring.{0} (add_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (semiring.{0} (add_cancel_monoid.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_50054 (h0 : group (metric_space (semiring unsigned))) : normalizer_condition (metric_space (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_50055 (h0 : group (has_Sup (option (option (option empty))))) : group.fg (has_Sup (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_50056 (h0 : topological_space (has_norm (has_norm (semiring (has_norm empty))))) : normal_space (has_norm (has_norm (semiring (has_norm empty)))) := sorry --non-trivial
lemma new_lemma_50057 (h0 : functor.add_const (ring (has_zero Type)) (add_cancel_monoid (add_cancel_monoid linarith.comp))) : @is_principal_ideal_ring.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_zero.{1} Type)) (add_cancel_monoid.{0} (add_cancel_monoid.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_50058 (h0 : filter (boolean_algebra (has_pos_part (finset (has_Inf (has_pos_part (finset linarith.comp))))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_50059 (h0 : ring (ordered_comm_ring (has_neg Type))) : is_principal_ideal_ring (ordered_comm_ring (has_neg Type)) := sorry --non-trivial
lemma new_lemma_50060 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (cancel_monoid.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_50061 (h0 : group (ordered_comm_ring (has_neg pos))) : group.fg (ordered_comm_ring (has_neg pos)) := sorry --non-trivial
lemma new_lemma_50062 (h0 : functor.add_const (semiring (ring Type)) unsigned) : @is_noetherian_ring.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (semiring.{1} (ring.{1} Type)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_50063 (h0 : topological_space (mul_zero_class unsigned)) : normal_space (mul_zero_class unsigned) := sorry --non-trivial
lemma new_lemma_50064 (h0 : semiring (add_right_cancel_monoid (has_norm linarith.comp))) : is_noetherian_ring (add_right_cancel_monoid (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_50065 (h0 : add_group (has_inv (random_gen (random_gen (random_gen linarith.ineq))))) : is_add_cyclic (has_inv (random_gen (random_gen (random_gen linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_50066 (h0 : prod reducibility_hints reducibility_hints) : set.diagonal reducibility_hints h0 := sorry --non-trivial
lemma new_lemma_50067 (h0 : group (canonically_ordered_add_monoid (semiring empty))) : normalizer_condition (canonically_ordered_add_monoid (semiring empty)) := sorry --non-trivial
lemma new_lemma_50068 (h0 : function.extfun Type (functor.add_const (complete_lattice auto.case_option))) : @is_atomistic.{0} auto.case_option (@functor.add_const.run.{0 0} (complete_lattice.{0} auto.case_option) unsigned (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (complete_lattice.{0} auto.case_option)) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_50069 (h0 : topological_space (semigroup (boolean_algebra (ring linarith.comp)))) : irreducible_space (semigroup (boolean_algebra (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_50070 (h0 : not (semiring name -> false)) : @is_noetherian_ring.{0} name (@classical.by_contradiction'.{1} (semiring.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_50071 (h0 : uniform_space (has_pos_part linarith.comp)) : complete_space (has_pos_part linarith.comp) := sorry --non-trivial
lemma new_lemma_50072 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (has_neg_part.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_neg_part.{0} name))  := sorry --non-trivial
lemma new_lemma_50073 (h0 : topological_space (has_compl (mul_one_class (mul_one_class (mul_one_class enat))))) : t0_space (has_compl (mul_one_class (mul_one_class (mul_one_class enat)))) := sorry --non-trivial
lemma new_lemma_50074 (h1 : complete_lattice (with_one (measurable_space (with_bot linarith.comp_source)))) : complete_lattice.is_Sup_finite_compact (with_one (measurable_space (with_bot linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_50075 (h0 : topological_space (ordered_comm_group num)) : preirreducible_space (ordered_comm_group num) := sorry --non-trivial
lemma new_lemma_50076 (h0 : topological_space (generalized_boolean_algebra (boolean_algebra.core Type))) : locally_compact_space (generalized_boolean_algebra (boolean_algebra.core Type)) := sorry --non-trivial
lemma new_lemma_50077 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (complete_distrib_lattice.{0} ennreal) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (complete_distrib_lattice.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_50078 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_50079 (h0 : topological_space (bin_tree unsigned)) : preirreducible_space (bin_tree unsigned) := sorry --non-trivial
lemma new_lemma_50080 (h0 : not (function.extfun Type topological_space -> false)) : @totally_disconnected_space.{0} (measurable_space.dynkin_system.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (measurable_space.dynkin_system.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50081 (h0 : functor.add_const (topological_space (has_zero ennreal)) name) : @sequential_space.{0} (has_zero.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} ennreal)) name h0)  := sorry --non-trivial
lemma new_lemma_50082 (h0 : topological_space (option (semiring (semiring unsigned)))) : loc_path_connected_space (option (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_50083 (h0 : topological_space (linear_ordered_semiring congr_arg_kind)) : preirreducible_space (linear_ordered_semiring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_50084 (h0 : functor.add_const (group (has_neg_part pos)) pos) : @is_cyclic.{0} (has_neg_part.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_neg_part.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_50085 (h0 : cancel_comm_monoid_with_zero (boolean_algebra.core (finset (finset pos)))) : unique_factorization_monoid (boolean_algebra.core (finset (finset pos))) := sorry --non-trivial
lemma new_lemma_50086 (h0 : not (add_group (normed_field string_imp) -> false)) : @is_add_cyclic.{0} (normed_field.{0} string_imp) (@classical.by_contradiction'.{1} (add_group.{0} (normed_field.{0} string_imp)) h0)  := sorry --non-trivial
lemma new_lemma_50087 (h0 : functor.add_const (add_monoid (plift empty)) num) : @add_monoid.fg.{1} (plift.{1} empty) (@functor.add_const.run.{1 0} (add_monoid.{1} (plift.{1} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_50088 (h0 : has_mem.mem real.angle has_emptyc.emptyc) : @monoid.fg.{0} real.angle (@finset.pi.empty.{1 0} Type monoid.{0} real.angle h0)  := sorry --non-trivial
lemma new_lemma_50089 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (group_with_zero.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (group_with_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_50090 (h0 : not (complete_lattice (has_add char) -> false)) : @is_compactly_generated.{0} (has_add.{0} char) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_add.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_50091 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (@id.{2} Type linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (@id.{2} Type linarith.comp))  := sorry --non-trivial
lemma new_lemma_50092 (h0 : functor.comp topological_space add_comm_monoid unsigned) : @totally_disconnected_space.{0} (add_comm_monoid.{0} unsigned) (@functor.comp.run.{0 0 0} topological_space.{0} add_comm_monoid.{0} unsigned h0)  := sorry --non-trivial
lemma new_lemma_50093 (h0 : uniform_space (has_nndist unsigned)) : complete_space (has_nndist unsigned) := sorry --non-trivial
lemma new_lemma_50094 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (monoid empty)) := sorry --non-trivial
lemma new_lemma_50095 (h0 : topological_space (has_Sup unsigned)) : normal_space (has_Sup unsigned) := sorry --non-trivial
lemma new_lemma_50096 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (semigroup.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_50097 (h0 : functor.add_const (ring (has_to_string linarith.comp)) (finset (finset pos))) : @rank_condition.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (has_to_string.{0} linarith.comp)) (finset.{0} (finset.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_50098 (h0 : topological_space (simple_graph char)) (h1 : preorder (simple_graph char)) : order_topology (simple_graph char) := sorry --non-trivial
lemma new_lemma_50099 (h0 : topological_space (topological_space (with_one fun_info))) : locally_compact_space (topological_space (with_one fun_info)) := sorry --non-trivial
lemma new_lemma_50100 (h0 : functor.add_const (add_monoid (omega_complete_partial_order empty)) (option (option (option (option empty))))) : @add_monoid.fg.{0} (omega_complete_partial_order.{0} empty) (@functor.add_const.run.{0 0} (add_monoid.{0} (omega_complete_partial_order.{0} empty)) (option.{0} (option.{0} (option.{0} (option.{0} empty)))) h0)  := sorry --non-trivial
lemma new_lemma_50101 (h0 : ordered_add_comm_monoid (has_nndist (finset pos))) : archimedean (has_nndist (finset pos)) := sorry --non-trivial
lemma new_lemma_50102 (h0 : finset (ring (option pos))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_50103 (h0 : group (comm_group (has_add Type))) : normalizer_condition (comm_group (has_add Type)) := sorry --non-trivial
lemma new_lemma_50104 (h1 : is_empty (has_div (non_unital_non_assoc_semiring string_imp))) (h2 : has_div (non_unital_non_assoc_semiring string_imp)) : is_empty.elim' h1 h2 := sorry --non-trivial
lemma new_lemma_50105 (h0 : fin has_zero.zero) : @sequential_space.{1} (canonically_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (canonically_ordered_monoid.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_50106 (h1 : topological_space (with_one (has_inv (has_ssubset string_imp)))) : t0_space (with_one (has_inv (has_ssubset string_imp))) := sorry --non-trivial
lemma new_lemma_50107 (h0 : functor.add_const (ring (add_semigroup empty)) empty) : @is_domain.{0} (add_semigroup.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (add_semigroup.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_50108 (h0 : ring (has_inv (has_bot to_additive.value_type))) : rank_condition (has_inv (has_bot to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_50109 (h0 : topological_space (canonically_ordered_comm_semiring (option empty))) : topological_space.separable_space (canonically_ordered_comm_semiring (option empty)) := sorry --non-trivial
lemma new_lemma_50110 (h1 : complete_lattice (normed_group to_additive.value_type)) : is_compactly_generated (normed_group to_additive.value_type) := sorry --non-trivial
lemma new_lemma_50111 (h0 : group (boolean_algebra.core congr_arg_kind)) : group.fg (boolean_algebra.core congr_arg_kind) := sorry --non-trivial
lemma new_lemma_50112 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_Sup.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_Sup.{0} empty))  := sorry --non-trivial
lemma new_lemma_50113 (h0 : group (has_neg_part (has_add Type))) : is_simple_group (has_neg_part (has_add Type)) := sorry --non-trivial
lemma new_lemma_50114 (h0 : ring (comm_ring (has_compl linarith.ineq))) : is_domain (comm_ring (has_compl linarith.ineq)) := sorry --non-trivial
lemma new_lemma_50115 (h0 : has_lt (has_div (mul_one_class enat))) : no_max_order (has_div (mul_one_class enat)) := sorry --non-trivial
lemma new_lemma_50116 (h0 : functor.add_const (topological_space (preorder num)) empty) : @loc_path_connected_space.{0} (preorder.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_50117 (h0 : group (add_comm_monoid name)) : is_cyclic (add_comm_monoid name) := sorry --non-trivial
lemma new_lemma_50118 (h0 : functor.add_const (topological_space (cancel_monoid environment.implicit_infer_kind)) pos) : @irreducible_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_50119 (h0 : function.extfun Type (functor.add_const (group (add_left_cancel_monoid empty)))) : @normalizer_condition.{0} (add_left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (group.{0} (add_left_cancel_monoid.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (group.{0} (add_left_cancel_monoid.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_50120 (h1 : topological_space (random_gen (has_ssubset char))) : t0_space (random_gen (has_ssubset char)) := sorry --non-trivial
lemma new_lemma_50121 (h0 : functor.add_const (function.extfun (Type 1) finset) (finset linarith.comp)) : finset.nonempty (function.extfun_app (functor.add_const.run h0) (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_50122 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (has_top.{0} linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_top.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_50123 (h0 : topological_space (normed_comm_ring (normed_comm_ring Type))) : irreducible_space (normed_comm_ring (normed_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_50124 (h0 : functor.add_const (complete_lattice (semigroup empty)) num) : @is_compactly_generated.{0} (semigroup.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (semigroup.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_50125 (h0 : functor.comp ordered_comm_monoid cancel_monoid name) : @has_exists_mul_of_le.{0} (cancel_monoid.{0} name) (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} cancel_monoid.{0} name h0)  := sorry --non-trivial
lemma new_lemma_50126 (h0 : topological_space (with_one (semiring (semiring (semiring unsigned))))) : totally_disconnected_space (with_one (semiring (semiring (semiring unsigned)))) := sorry --non-trivial
lemma new_lemma_50127 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (metric_space.{0} empty) (@function.extfun_app.{2 1} Type semiring.{0} h0 (metric_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_50128 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (with_bot.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_bot.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50129 (h0 : group (linear_ordered_semiring (semiring empty))) : is_cyclic (linear_ordered_semiring (semiring empty)) := sorry --non-trivial
lemma new_lemma_50130 (h0 : topological_space (div_inv_monoid linarith.comp_source)) : t0_space (div_inv_monoid linarith.comp_source) := sorry --non-trivial
lemma new_lemma_50131 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (canonically_ordered_comm_semiring.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_comm_semiring.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_50132 (h0 : not (topological_space (fintype (has_nnnorm fun_info)) -> false)) : @totally_disconnected_space.{0} (fintype.{0} (has_nnnorm.{0} fun_info)) (@classical.by_contradiction'.{1} (topological_space.{0} (fintype.{0} (has_nnnorm.{0} fun_info))) h0)  := sorry --non-trivial
lemma new_lemma_50133 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (has_dist.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_dist.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50134 (h0 : functor.add_const (topological_space (option ennreal)) ennreal) : @discrete_topology.{0} (option.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (option.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_50135 (h0 : not (topological_space (complete_linear_order num) -> false)) : @topological_space.separable_space.{0} (complete_linear_order.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (complete_linear_order.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_50136 (h0 : has_mem.mem complete_lattice has_emptyc.emptyc) : @complete_lattice.is_Sup_finite_compact.{0} linarith.comp_source (@function.extfun_app.{2 1} Type complete_lattice.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) complete_lattice.{0} h0) linarith.comp_source)  := sorry --non-trivial
lemma new_lemma_50137 (h0 : functor.add_const (semiring (ring linarith.comp)) pos) : @is_noetherian_ring.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (semiring.{0} (ring.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_50138 (h0 : functor.add_const (function.extfun Type ring) name) : @strong_rank_condition.{0} (has_to_string.{0} name) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) name h0) (has_to_string.{0} name))  := sorry --non-trivial
lemma new_lemma_50139 (h0 : ring (nondiscrete_normed_field (normed_field char))) : is_domain (nondiscrete_normed_field (normed_field char)) := sorry --non-trivial
lemma new_lemma_50140 (h0 : not (add_group (distrib_lattice (has_nnnorm fun_info)) -> false)) : @is_add_cyclic.{0} (distrib_lattice.{0} (has_nnnorm.{0} fun_info)) (@classical.by_contradiction'.{1} (add_group.{0} (distrib_lattice.{0} (has_nnnorm.{0} fun_info))) h0)  := sorry --non-trivial
lemma new_lemma_50141 (h0 : ring (add_group (has_norm (semiring congr_arg_kind)))) : is_domain (add_group (has_norm (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_50142 (h0 : list (finset (semigroup Type))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_50143 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} auto.case_option (@function.extfun_app.{2 1} Type topological_space.{0} h0 auto.case_option)  := sorry --non-trivial
lemma new_lemma_50144 (h0 : functor.add_const (topological_space (has_to_string linarith.comp)) pos) : @irreducible_space.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_50145 (h0 : topological_space (ring (ring (ring linarith.comp)))) : regular_space (ring (ring (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_50146 (h0 : topological_space (measurable_space (id linarith.comp))) : irreducible_space (measurable_space (id linarith.comp)) := sorry --non-trivial
lemma new_lemma_50147 (h0 : function.extfun (finset Type) (has_mem.mem (has_top linarith.comp))) : @discrete_topology.{0} (has_top.{0} linarith.comp) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_top.{0} linarith.comp) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_top.{0} linarith.comp)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_50148 (h0 : functor.add_const (monoid (normed_comm_ring linarith.comp)) Type) : @monoid.fg.{0} (normed_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 1} (monoid.{0} (normed_comm_ring.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_50149 (h0 : functor.add_const (topological_space (add_cancel_monoid Type)) pos) : @locally_compact_space.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (add_cancel_monoid.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_50150 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (has_zero.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_zero.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_50151 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_50152 (h0 : function.extfun Type topological_space) : @t0_space.{0} (@id.{2} Type empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (@id.{2} Type empty))  := sorry --non-trivial
lemma new_lemma_50153 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (@id.{2} Type to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (@id.{2} Type to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_50154 (h0 : functor.add_const (function.extfun (Type 1) list) (finset environment.implicit_infer_kind)) : palindrome (function.extfun_app (functor.add_const.run h0) (comm_group Type)) := sorry --non-trivial
lemma new_lemma_50155 (h2 : topological_space (has_nnnorm to_additive.value_type)) : path_connected_space (has_nnnorm to_additive.value_type) := sorry --non-trivial
lemma new_lemma_50156 (h0 : topological_space (simple_graph (mul_one_class reducibility_hints))) : totally_disconnected_space (simple_graph (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_50157 (h0 : has_mem.mem (has_emptyc fun_info) has_emptyc.emptyc) : @is_cyclic.{0} (has_emptyc.{0} fun_info) (@finset.pi.empty.{1 0} Type group.{0} (has_emptyc.{0} fun_info) h0)  := sorry --non-trivial
lemma new_lemma_50158 (h0 : topological_space (semigroup (has_neg_part (comm_group (comm_group pos))))) : normal_space (semigroup (has_neg_part (comm_group (comm_group pos)))) := sorry --non-trivial
lemma new_lemma_50159 (h2 : topological_space (add_comm_semigroup ereal)) (h3 : set (add_comm_semigroup ereal)) : is_path_connected h3 := sorry --non-trivial
lemma new_lemma_50160 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (linear_ordered_add_comm_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (linear_ordered_add_comm_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50161 (h0 : functor.comp topological_space complete_distrib_lattice name) : @path_connected_space.{0} (complete_distrib_lattice.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} complete_distrib_lattice.{0} name h0)  := sorry --non-trivial
lemma new_lemma_50162 (h0 : functor.add_const (add_monoid (has_bot empty)) (option empty)) : @add_monoid.fg.{0} (has_bot.{0} empty) (@functor.add_const.run.{0 0} (add_monoid.{0} (has_bot.{0} empty)) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_50163 (h0 : functor.add_const (topological_space (complete_distrib_lattice pos)) (boolean_algebra Type)) : @locally_compact_space.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (complete_distrib_lattice.{0} pos)) (boolean_algebra.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_50164 (h0 : topological_space (add_comm_monoid (has_bot real))) : t0_space (add_comm_monoid (has_bot real)) := sorry --non-trivial
lemma new_lemma_50165 (h0 : ring (denumerable (has_norm linarith.comp_source))) : rank_condition (denumerable (has_norm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_50166 (h0 : functor.add_const (uniform_space (has_pos_part linarith.comp)) Type) : @separated_space.{0} (has_pos_part.{0} linarith.comp) (@functor.add_const.run.{0 1} (uniform_space.{0} (has_pos_part.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_50167 (h0 : functor.add_const (topological_space (has_zero Type)) linarith.comp) : @discrete_topology.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_zero.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50168 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (normed_group.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_50169 (h0 : functor.add_const (topological_space (has_star empty)) empty) : @t1_space.{0} (has_star.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_star.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_50170 (h0 : topological_space (option pos)) : regular_space (option pos) := sorry --non-trivial
lemma new_lemma_50171 (h0 : topological_space (has_to_string enat)) : topological_space.first_countable_topology (has_to_string enat) := sorry --non-trivial
lemma new_lemma_50172 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (sub_neg_monoid.{0} real) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (sub_neg_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_50173 (h0 : function.extfun Type (functor.comp group has_neg)) : @normalizer_condition.{0} (has_neg.{0} name) (@functor.comp.run.{0 0 0} group.{0} has_neg.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} group.{0} has_neg.{0}) h0 name))  := sorry --non-trivial
lemma new_lemma_50174 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (has_zero unsigned)) := sorry --non-trivial
lemma new_lemma_50175 (h0 : add_monoid (has_zero (finset (has_neg (has_to_string (has_add pos)))))) : add_monoid.fg (has_zero (finset (has_neg (has_to_string (has_add pos))))) := sorry --non-trivial
lemma new_lemma_50176 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (dlist.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type add_group.{0} h0 (dlist.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_50177 (h0 : monoid (ordered_ring (semiring empty))) : monoid.fg (ordered_ring (semiring empty)) := sorry --non-trivial
lemma new_lemma_50178 (h0 : ring (has_add (ring pos))) : is_principal_ideal_ring (has_add (ring pos)) := sorry --non-trivial
lemma new_lemma_50179 (h0 : functor.add_const (finset (has_nndist Type)) (has_to_string (has_neg (has_neg environment.implicit_infer_kind)))) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50180 (h0 : add_monoid (linear_ordered_comm_monoid_with_zero unsigned)) : add_monoid.fg (linear_ordered_comm_monoid_with_zero unsigned) := sorry --non-trivial
lemma new_lemma_50181 (h0 : function.extfun (Type 1) ring) : @rank_condition.{1} (ordered_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} h0 (ordered_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_50182 (h0 : functor.add_const (group (has_zero linarith.comp)) linarith.comp) : @is_cyclic.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (has_zero.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50183 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (add_cancel_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (add_cancel_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_50184 (h0 : ring (nondiscrete_normed_field enat)) : is_domain (nondiscrete_normed_field enat) := sorry --non-trivial
lemma new_lemma_50185 (h0 : set (distrib (mul_one_class string.iterator_imp))) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_50186 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (preorder.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (preorder.{0} empty))  := sorry --non-trivial
lemma new_lemma_50187 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @locally_compact_space.{0} (has_norm.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (has_norm.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_50188 (h0 : functor.add_const (topological_space (has_neg pos)) name) : @preconnected_space.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_50189 (h0 : filter (filter congr_arg_kind)) : filter.ne_bot (filter.Limsup h0) := sorry --non-trivial
lemma new_lemma_50190 (h0 : not (function.extfun (finset Type) (has_mem.mem (semiring fun_info)) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (semiring.{0} fun_info) (@finset.pi.empty.{1 0} Type complete_lattice.{0} (semiring.{0} fun_info) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (semiring.{0} fun_info)) (@classical.by_contradiction'.{0} (function.extfun.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (semiring.{0} fun_info))) h0) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_50191 (h0 : topological_space (boolean_algebra (has_pos_part Type))) : loc_path_connected_space (boolean_algebra (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_50192 (h0 : functor.add_const (topological_space (simple_graph pos)) linarith.comp) : @t0_space.{0} (simple_graph.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (simple_graph.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50193 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @discrete_topology.{1} (complete_distrib_lattice.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (complete_distrib_lattice.{1} Type))  := sorry --non-trivial
lemma new_lemma_50194 (h0 : functor.add_const (add_monoid (comm_group environment.implicit_infer_kind)) linarith.comp) : @add_monoid.fg.{0} (comm_group.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (add_monoid.{0} (comm_group.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50195 (h0 : topological_space (semigroup (has_add Type))) : t0_space (semigroup (has_add Type)) := sorry --non-trivial
lemma new_lemma_50196 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (add_cancel_monoid.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type add_group.{0} h0 (add_cancel_monoid.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_50197 (h0 : functor.add_const (topological_space (boolean_algebra name)) (boolean_algebra environment.implicit_infer_kind)) : @irreducible_space.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} name)) (boolean_algebra.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_50198 (h0 : filter (add_group (semiring (semiring num)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_50199 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} linarith.comp (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) linarith.comp)  := sorry --non-trivial
lemma new_lemma_50200 (h0 : functor.add_const (finset (has_to_string unsigned)) ennreal) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50201 (h0 : functor.add_const (topological_space (ordered_comm_ring pos)) (has_Inf (has_Inf Type))) : @topological_space.separable_space.{0} (ordered_comm_ring.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (ordered_comm_ring.{0} pos)) (has_Inf.{1} (has_Inf.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_50202 (h0 : complete_lattice (linear_ordered_comm_group ennreal)) : is_compactly_generated (linear_ordered_comm_group ennreal) := sorry --non-trivial
lemma new_lemma_50203 (h0 : ring (mul_zero_class (semiring (semiring empty)))) : is_principal_ideal_ring (mul_zero_class (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_50204 (h0 : topological_space (add_cancel_monoid (has_nndist linarith.comp))) : totally_disconnected_space (add_cancel_monoid (has_nndist linarith.comp)) := sorry --non-trivial
lemma new_lemma_50205 (h0 : ring linarith.comp_source) (h1 : topological_space linarith.comp_source) (h2 : topological_space (units linarith.comp_source)) : topological_ring.induced_units linarith.comp_source := sorry --non-trivial
lemma new_lemma_50206 (h0 : functor.add_const (uniform_space (add_cancel_monoid pos)) (has_to_string linarith.comp)) : @separated_space.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (uniform_space.{0} (add_cancel_monoid.{0} pos)) (has_to_string.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_50207 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (has_zero.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_zero.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50208 (h0 : topological_space (has_inv (random_gen (has_norm (random_gen fun_info))))) : t0_space (has_inv (random_gen (has_norm (random_gen fun_info)))) := sorry --non-trivial
lemma new_lemma_50209 (h0 : ordered_add_comm_monoid (has_add (has_add name))) : archimedean (has_add (has_add name)) := sorry --non-trivial
lemma new_lemma_50210 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (comm_ring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (comm_ring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_50211 (h0 : prod (ring Type) (ring Type)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_50212 (h0 : list (monoid_with_zero unsigned)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_50213 (h0 : fin has_zero.zero) : @is_simple_group.{0} (boolean_algebra.core.{0} (has_add.{0} pos)) (@matrix.vec_empty.{0} (group.{0} (boolean_algebra.core.{0} (has_add.{0} pos))) h0)  := sorry --non-trivial
lemma new_lemma_50214 (h0 : topological_space (has_Inf (has_Inf (has_neg name)))) : discrete_topology (has_Inf (has_Inf (has_neg name))) := sorry --non-trivial
lemma new_lemma_50215 (h0 : topological_space (has_nndist (finset Type))) : topological_space.separable_space (has_nndist (finset Type)) := sorry --non-trivial
lemma new_lemma_50216 (h0 : group (normed_lattice_add_comm_group (has_pos_part (finset (has_Inf (finset (finset pos))))))) : is_cyclic (normed_lattice_add_comm_group (has_pos_part (finset (has_Inf (finset (finset pos)))))) := sorry --non-trivial
lemma new_lemma_50217 (h0 : prod (complete_linear_order (semiring (semiring empty))) (complete_linear_order (semiring (semiring empty)))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_50218 (h0 : finset (non_assoc_semiring unsigned)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_50219 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (group_with_zero.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (group_with_zero.{0} num))  := sorry --non-trivial
lemma new_lemma_50220 (h0 : functor.add_const (ring (ordered_comm_monoid linarith.comp)) (ring (ring name))) : @is_domain.{0} (ordered_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (ordered_comm_monoid.{0} linarith.comp)) (ring.{0} (ring.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_50221 (h0 : ring (with_zero fun_info)) : is_domain (with_zero fun_info) := sorry --non-trivial
lemma new_lemma_50222 (h1 : ring (has_compl (has_ssubset to_additive.value_type))) : is_domain (has_compl (has_ssubset to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_50223 (h0 : topological_space (boolean_algebra (has_Inf linarith.comp))) : regular_space (boolean_algebra (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_50224 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_noetherian_ring.{0} (has_neg.{0} pos) (@function.extfun_app.{2 1} Type semiring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 semiring.{0}) (has_neg.{0} pos))  := sorry --non-trivial
lemma new_lemma_50225 (h0 : group (semiring (has_norm (has_norm (has_norm (has_norm unsigned)))))) : normalizer_condition (semiring (has_norm (has_norm (has_norm (has_norm unsigned))))) := sorry --non-trivial
lemma new_lemma_50226 (h0 : topological_space (random_gen (random_gen (comm_ring char)))) : path_connected_space (random_gen (random_gen (comm_ring char))) := sorry --non-trivial
lemma new_lemma_50227 (h0 : functor.add_const (semiring (boolean_algebra linarith.comp)) linarith.comp) : @is_noetherian_ring.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (semiring.{0} (boolean_algebra.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50228 (h0 : finset (has_neg (has_pos_part (has_add pos)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_50229 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (has_ssubset.{0} linarith.ineq) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (has_ssubset.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_50230 (h0 : functor.add_const (topological_space (linear_order unsigned)) empty) : @totally_disconnected_space.{0} (linear_order.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (linear_order.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_50231 (h0 : set (random_gen to_additive.value_type)) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_50232 (h0 : topological_space (add_cancel_comm_monoid empty)) (h1 : function.extfun Type topological_space) (h2 : pfun (add_cancel_comm_monoid empty) (option unsigned)) : @pcontinuous.{0 0} (add_cancel_comm_monoid.{0} empty) (option.{0} unsigned) h0 (@function.extfun_app.{2 1} Type topological_space.{0} h1 (option.{0} unsigned)) h2  := sorry --non-trivial
lemma new_lemma_50233 (h0 : ring (linear_ordered_comm_ring string_imp)) : rank_condition (linear_ordered_comm_ring string_imp) := sorry --non-trivial
lemma new_lemma_50234 (h0 : semiring (comm_semigroup (sub_neg_monoid (has_Inf (has_pos_part Type))))) : is_noetherian_ring (comm_semigroup (sub_neg_monoid (has_Inf (has_pos_part Type)))) := sorry --non-trivial
lemma new_lemma_50235 (h1 : filter (distrib_lattice (linear_ordered_add_comm_group (set (random_gen znum))))) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_50236 (h0 : has_mem.mem group has_emptyc.emptyc) : @is_cyclic.{1} Type (@function.extfun_app.{3 2} (Type 1) group.{1} (@finset.pi.empty.{2 2} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) group.{1} h0) Type)  := sorry --non-trivial
lemma new_lemma_50237 (h0 : ring (has_div environment.projection_info)) : is_domain (has_div environment.projection_info) := sorry --non-trivial
lemma new_lemma_50238 (h0 : not (topological_space (measure_theory.measure_space num) -> false)) : @totally_disconnected_space.{0} (measure_theory.measure_space.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (measure_theory.measure_space.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_50239 (h0 : topological_space (has_inner empty unsigned)) : totally_disconnected_space (has_inner empty unsigned) := sorry --non-trivial
lemma new_lemma_50240 (h0 : topological_space (canonically_linear_ordered_monoid num)) : loc_path_connected_space (canonically_linear_ordered_monoid num) := sorry --non-trivial
lemma new_lemma_50241 (h0 : functor.add_const (function.extfun Type finset) linarith.comp) : finset.nonempty (function.extfun_app (functor.add_const.run h0) (add_cancel_monoid pos)) := sorry --non-trivial
lemma new_lemma_50242 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (filter.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (filter.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50243 (h0 : group (add_right_cancel_monoid (semiring (semiring empty)))) : is_cyclic (add_right_cancel_monoid (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_50244 (h0 : ordered_add_comm_monoid (has_add (has_neg linarith.comp))) : archimedean (has_add (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_50245 (h0 : ring (has_top (random_gen (random_gen (has_nnnorm to_additive.value_type))))) : is_domain (has_top (random_gen (random_gen (has_nnnorm to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_50246 (h0 : functor.add_const (function.extfun (Type 1) ring) linarith.comp) : @is_principal_ideal_ring.{1} (has_Inf.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) ring.{1}) linarith.comp h0) (has_Inf.{1} Type))  := sorry --non-trivial
lemma new_lemma_50247 (h2 : ring (has_add linarith.ineq)) : rank_condition (has_add linarith.ineq) := sorry --non-trivial
lemma new_lemma_50248 (h0 h1 : list enat) : list.is_prefix h0 h1 := sorry --non-trivial
lemma new_lemma_50249 (h0 : ring (finset unsigned)) : strong_rank_condition (finset unsigned) := sorry --non-trivial
lemma new_lemma_50250 (h0 : function.extfun Type (functor.comp ring canonically_ordered_comm_semiring)) : @is_domain.{0} (canonically_ordered_comm_semiring.{0} name) (@functor.comp.run.{0 0 0} ring.{0} canonically_ordered_comm_semiring.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} ring.{0} canonically_ordered_comm_semiring.{0}) h0 name))  := sorry --non-trivial
lemma new_lemma_50251 (h0 : filter (finset pos)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_50252 (h0 : topological_space (has_add (has_neg (has_neg (has_to_string Type))))) : topological_space.separable_space (has_add (has_neg (has_neg (has_to_string Type)))) := sorry --non-trivial
lemma new_lemma_50253 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (monoid_with_zero.{0} (option.{0} pos)) (@function.extfun_app.{2 1} Type semiring.{0} h0 (monoid_with_zero.{0} (option.{0} pos)))  := sorry --non-trivial
lemma new_lemma_50254 (h0 : function.extfun Type ring) : @is_domain.{0} (has_union.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_union.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50255 (h0 : topological_space (comm_ring fun_info)) : path_connected_space (comm_ring fun_info) := sorry --non-trivial
lemma new_lemma_50256 (h0 : not (uniform_space (partial_order congr_arg_kind) -> false)) : @complete_space.{0} (partial_order.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (uniform_space.{0} (partial_order.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_50257 (h0 : topological_space (with_bot to_additive.value_type)) : irreducible_space (with_bot to_additive.value_type) := sorry --non-trivial
lemma new_lemma_50258 (h0 : functor.add_const (add_monoid (has_edist empty)) empty) : @add_monoid.fg.{0} (has_edist.{0} empty) (@functor.add_const.run.{0 0} (add_monoid.{0} (has_edist.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_50259 (h0 : functor.add_const (functor.add_const (function.extfun Type complete_lattice) linarith.comp) Type) : @is_atomistic.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) linarith.comp (@functor.add_const.run.{1 1} (functor.add_const.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) linarith.comp) Type h0)) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_50260 (h1 : not (complete_lattice string_imp -> false)) : @complete_lattice.is_Sup_finite_compact.{0} string_imp (@classical.by_contradiction'.{1} (complete_lattice.{0} string_imp) h1)  := sorry --non-trivial
lemma new_lemma_50261 (h0 : uniform_space (has_Inf (has_add (has_add (finset pos))))) : separated_space (has_Inf (has_add (has_add (finset pos)))) := sorry --non-trivial
lemma new_lemma_50262 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (measurable_space.dynkin_system.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measurable_space.dynkin_system.{0} empty))  := sorry --non-trivial
lemma new_lemma_50263 (h0 : add_monoid (canonically_ordered_comm_semiring name)) : add_monoid.fg (canonically_ordered_comm_semiring name) := sorry --non-trivial
lemma new_lemma_50264 (h0 : functor.add_const (monoid (ordered_cancel_add_comm_monoid congr_arg_kind)) congr_arg_kind) : @monoid.fg.{0} (ordered_cancel_add_comm_monoid.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (monoid.{0} (ordered_cancel_add_comm_monoid.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_50265 (h0 : topological_space (add_cancel_monoid (has_nndist (has_add environment.implicit_infer_kind)))) : path_connected_space (add_cancel_monoid (has_nndist (has_add environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_50266 (h0 : functor.add_const (monoid (has_Inf linarith.comp)) (has_add pos)) : @monoid.fg.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 0} (monoid.{0} (has_Inf.{0} linarith.comp)) (has_add.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_50267 (h0 : topological_space (sub_neg_monoid (has_Inf Type))) : preconnected_space (sub_neg_monoid (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_50268 (h0 : add_monoid (random_gen empty)) : add_monoid.fg (random_gen empty) := sorry --non-trivial
lemma new_lemma_50269 (h1 : list (has_emptyc (with_bot (with_bot (with_bot to_additive.value_type))))) : list.nodup h1 := sorry --non-trivial
lemma new_lemma_50270 (h0 : functor.add_const (uniform_space (generalized_boolean_algebra name)) pos) : @separated_space.{0} (generalized_boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (generalized_boolean_algebra.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_50271 (h0 : add_monoid (canonically_ordered_monoid (comm_semigroup Type))) : add_monoid.fg (canonically_ordered_monoid (comm_semigroup Type)) := sorry --non-trivial
lemma new_lemma_50272 (h0 : topological_space (has_to_string (option (option ennreal)))) : totally_disconnected_space (has_to_string (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_50273 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (complete_semilattice_Sup.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (complete_semilattice_Sup.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_50274 (h1 : complete_lattice (has_emptyc to_additive.value_type)) : is_compactly_generated (has_emptyc to_additive.value_type) := sorry --non-trivial
lemma new_lemma_50275 (h0 : functor.add_const (list (ring linarith.comp)) (has_Inf linarith.comp)) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50276 (h0 : function.extfun Type group) : @normalizer_condition.{0} (free_add_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (free_add_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50277 (h0 : functor.add_const (topological_space (ordered_ring num)) empty) : @topological_space.separable_space.{0} (ordered_ring.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_ring.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_50278 (h0 : semiring (canonically_ordered_comm_semiring unsigned)) : is_noetherian_ring (canonically_ordered_comm_semiring unsigned) := sorry --non-trivial
lemma new_lemma_50279 (h0 : functor.add_const (topological_space (boolean_algebra.core pos)) name) : @topological_space.separable_space.{0} (boolean_algebra.core.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_50280 (h0 : topological_space (comm_ring (random_gen linarith.ineq))) : t2_space (comm_ring (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_50281 (h0 : topological_space (boolean_algebra (has_neg (has_neg pos)))) : t0_space (boolean_algebra (has_neg (has_neg pos))) := sorry --non-trivial
lemma new_lemma_50282 (h0 : ring (has_Inf (has_add linarith.comp))) : strong_rank_condition (has_Inf (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_50283 (h0 : not (function.extfun Type uniform_space -> false)) : @complete_space.{0} (linear_ordered_semiring.{0} fun_info) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (linear_ordered_semiring.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_50284 (h0 : functor.add_const (topological_space (complete_distrib_lattice Type)) unsigned) : @path_connected_space.{1} (complete_distrib_lattice.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (complete_distrib_lattice.{1} Type)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_50285 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (add_comm_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_comm_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_50286 (h0 : uniform_space (finset (has_add (ordered_comm_monoid pos)))) : separated_space (finset (has_add (ordered_comm_monoid pos))) := sorry --non-trivial
lemma new_lemma_50287 (h0 : functor.add_const (topological_space (ordered_comm_ring linarith.comp)) name) : @sequential_space.{0} (ordered_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_ring.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_50288 (h0 : has_coe (has_neg_part linarith.ineq) Prop) (h1 : has_neg_part linarith.ineq) : @coe_b.{1 1} (has_neg_part.{0} linarith.ineq) Prop h0 h1  := sorry --non-trivial
lemma new_lemma_50289 (h0 : functor.add_const (topological_space (measurable_space.dynkin_system num)) empty) : @topological_space.separable_space.{0} (measurable_space.dynkin_system.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (measurable_space.dynkin_system.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_50290 (h0 : filter (complete_distrib_lattice (option (option (option (option ennreal)))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_50291 (h0 : functor.add_const (uniform_space (add_cancel_monoid name)) name) : @complete_space.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (add_cancel_monoid.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_50292 (h0 : function.extfun Type group) : @is_simple_group.{0} (canonically_linear_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type group.{0} h0 (canonically_linear_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_50293 (h0 : functor.add_const (list (normed_comm_ring environment.implicit_infer_kind)) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50294 (h0 : monoid (is_R_or_C (has_neg_part unsigned))) : monoid.fg (is_R_or_C (has_neg_part unsigned)) := sorry --non-trivial
lemma new_lemma_50295 (h0 : ring (simple_graph (mul_one_class to_additive.value_type))) : is_domain (simple_graph (mul_one_class to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_50296 (h0 : functor.add_const (list (ordered_comm_monoid pos)) linarith.comp) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50297 (h0 : functor.add_const (semiring (has_neg Type)) Type) : @is_noetherian_ring.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 1} (semiring.{1} (has_neg.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_50298 (h0 : complete_lattice (dlist enat)) : complete_lattice.is_Sup_finite_compact (dlist enat) := sorry --non-trivial
lemma new_lemma_50299 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (add_comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (add_comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_50300 (h0 : uniform_space (simple_graph ereal)) : complete_space (simple_graph ereal) := sorry --non-trivial
lemma new_lemma_50301 (h0 : functor.add_const (topological_space (complete_distrib_lattice Type)) linarith.comp) : @t1_space.{1} (complete_distrib_lattice.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (complete_distrib_lattice.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50302 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @t0_space.{0} (has_to_string.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (has_to_string.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_50303 (h0 : function.extfun nat fin) : @totally_separated_space.{0} (generalized_boolean_algebra.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (generalized_boolean_algebra.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_50304 (h0 : function.extfun Type (functor.add_const (topological_space name))) : @locally_compact_space.{0} name (@functor.add_const.run.{0 0} (topological_space.{0} name) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} name)) h0 empty))  := sorry --non-trivial
lemma new_lemma_50305 (h0 : function.extfun Type ring) : @is_domain.{0} (has_norm.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_norm.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_50306 (h0 : ring (has_emptyc (random_gen (random_gen (random_gen (random_gen num)))))) : is_domain (has_emptyc (random_gen (random_gen (random_gen (random_gen num))))) := sorry --non-trivial
lemma new_lemma_50307 (h0 : topological_space (simple_graph (has_Inf (has_Inf Type)))) : path_connected_space (simple_graph (has_Inf (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_50308 (h0 : functor.add_const (semiring (normed_comm_ring Type)) Type) : @is_noetherian_ring.{1} (normed_comm_ring.{1} Type) (@functor.add_const.run.{1 1} (semiring.{1} (normed_comm_ring.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_50309 (h0 : topological_space (linear_ordered_comm_group (option (option num)))) : normal_space (linear_ordered_comm_group (option (option num))) := sorry --non-trivial
lemma new_lemma_50310 (h1 : not (topological_space (has_ssubset char) -> false)) : @path_connected_space.{0} (has_ssubset.{0} char) (@classical.by_contradiction'.{1} (topological_space.{0} (has_ssubset.{0} char)) h1)  := sorry --non-trivial
lemma new_lemma_50311 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (canonically_ordered_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_50312 (h0 : filter (has_union (has_top (metric_space (has_top (semiring congr_arg_kind)))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_50313 (h0 : topological_space (cancel_monoid (cancel_monoid pos))) : normal_space (cancel_monoid (cancel_monoid pos)) := sorry --non-trivial
lemma new_lemma_50314 (h0 : topological_space (with_zero (has_nnnorm (has_nnnorm fun_info)))) : t0_space (with_zero (has_nnnorm (has_nnnorm fun_info))) := sorry --non-trivial
lemma new_lemma_50315 (h0 : functor.add_const (topological_space (plift congr_arg_kind)) congr_arg_kind) : @irreducible_space.{1} (plift.{1} congr_arg_kind) (@functor.add_const.run.{1 0} (topological_space.{1} (plift.{1} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_50316 (h0 : topological_space (distrib (has_compl fun_info))) : t0_space (distrib (has_compl fun_info)) := sorry --non-trivial
lemma new_lemma_50317 (h0 : add_group (option (semiring empty))) : is_add_cyclic (option (semiring empty)) := sorry --non-trivial
lemma new_lemma_50318 (h0 : complete_lattice (boolean_algebra.core name)) : complete_lattice.is_Sup_finite_compact (boolean_algebra.core name) := sorry --non-trivial
lemma new_lemma_50319 (h0 : group (fintype (linear_ordered_add_comm_group to_additive.value_type))) : is_cyclic (fintype (linear_ordered_add_comm_group to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_50320 (h0 : functor.add_const (uniform_space (add_semigroup unsigned)) empty) : @separated_space.{0} (add_semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (uniform_space.{0} (add_semigroup.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_50321 (h0 : not (function.extfun Type ring -> false)) : @strong_rank_condition.{0} (random_gen.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (random_gen.{0} empty))  := sorry --non-trivial
lemma new_lemma_50322 (h0 : has_star reducibility_hints) (h1 : ring (simple_graph (cancel_monoid (has_trivial_star reducibility_hints)))) : strong_rank_condition (simple_graph (cancel_monoid (has_trivial_star reducibility_hints))) := sorry --non-trivial
lemma new_lemma_50323 (h0 : add_group (ring (has_neg_part (has_neg_part Type)))) : is_add_cyclic (ring (has_neg_part (has_neg_part Type))) := sorry --non-trivial
lemma new_lemma_50324 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (normed_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (normed_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50325 (h0 : complete_lattice (canonically_linear_ordered_monoid ennreal)) : is_atomistic (canonically_linear_ordered_monoid ennreal) := sorry --non-trivial
lemma new_lemma_50326 (h0 : ring (add_left_cancel_monoid (has_ssubset (has_nnnorm (has_inv linarith.ineq))))) : strong_rank_condition (add_left_cancel_monoid (has_ssubset (has_nnnorm (has_inv linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_50327 (h0 : monoid (linear_order unsigned)) : monoid.fg (linear_order unsigned) := sorry --non-trivial
lemma new_lemma_50328 (h0 : group (add_group (has_norm (has_norm congr_arg_kind)))) : is_cyclic (add_group (has_norm (has_norm congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_50329 (h0 : add_monoid (finset (has_to_string (linear_ordered_add_comm_monoid_with_top (finset Type))))) : add_monoid.fg (finset (has_to_string (linear_ordered_add_comm_monoid_with_top (finset Type)))) := sorry --non-trivial
lemma new_lemma_50330 (h0 : ring (has_edist unsigned)) : rank_condition (has_edist unsigned) := sorry --non-trivial
lemma new_lemma_50331 (h0 : topological_space (ordered_comm_monoid (has_Inf linarith.comp))) : discrete_topology (ordered_comm_monoid (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_50332 (h0 : functor.add_const (ordered_add_comm_monoid (canonically_ordered_comm_semiring name)) unsigned) : @archimedean.{0} (canonically_ordered_comm_semiring.{0} name) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (canonically_ordered_comm_semiring.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_50333 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (metric_space.{0} num) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (metric_space.{0} num))  := sorry --non-trivial
lemma new_lemma_50334 (h0 : complete_lattice (comm_semigroup (sub_neg_monoid pos))) : is_compactly_generated (comm_semigroup (sub_neg_monoid pos)) := sorry --non-trivial
lemma new_lemma_50335 (h0 : functor.add_const (topological_space (has_to_string pos)) (option unsigned)) : @path_connected_space.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} pos)) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_50336 (h0 : fin has_zero.zero) : @regular_space.{0} (complete_distrib_lattice.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (complete_distrib_lattice.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_50337 (h0 : topological_space (bin_tree congr_arg_kind)) : totally_disconnected_space (bin_tree congr_arg_kind) := sorry --non-trivial
lemma new_lemma_50338 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_50339 (h0 : function.extfun (Type 1) monoid) : @monoid.fg.{1} (canonically_ordered_comm_semiring.{1} Type) (@function.extfun_app.{3 2} (Type 1) monoid.{1} h0 (canonically_ordered_comm_semiring.{1} Type))  := sorry --non-trivial
lemma new_lemma_50340 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (has_Inf name)) := sorry --non-trivial
lemma new_lemma_50341 (h0 : ring (linear_ordered_add_comm_group (with_bot (with_bot linarith.ineq)))) : rank_condition (linear_ordered_add_comm_group (with_bot (with_bot linarith.ineq))) := sorry --non-trivial
lemma new_lemma_50342 (h0 : functor.add_const (semiring (has_inter unsigned)) num) : @is_noetherian_ring.{0} (has_inter.{0} unsigned) (@functor.add_const.run.{0 0} (semiring.{0} (has_inter.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_50343 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (free_add_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (free_add_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50344 (h0 : ring (ordered_comm_ring (ring Type))) : is_domain (ordered_comm_ring (ring Type)) := sorry --non-trivial
lemma new_lemma_50345 (h0 : topological_space (canonically_linear_ordered_monoid Type)) : preconnected_space (canonically_linear_ordered_monoid Type) := sorry --non-trivial
lemma new_lemma_50346 (h0 : functor.add_const (function.extfun Type filter) Type) : filter.ne_bot (function.extfun_app (functor.add_const.run h0) (add_cancel_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_50347 (h0 : functor.add_const (topological_space (measurable_space.dynkin_system num)) congr_arg_kind) : @t0_space.{0} (measurable_space.dynkin_system.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (measurable_space.dynkin_system.{0} num)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_50348 (h0 : ring (id linarith.comp_source)) : is_domain (id linarith.comp_source) := sorry --non-trivial
lemma new_lemma_50349 (h0 : add_monoid (add_right_cancel_monoid congr_arg_kind)) : add_monoid.fg (add_right_cancel_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_50350 (h0 : add_monoid (metric_space (semiring (semiring (semiring num))))) : add_monoid.fg (metric_space (semiring (semiring (semiring num)))) := sorry --non-trivial
lemma new_lemma_50351 (h0 : ring (complete_linear_order empty)) : strong_rank_condition (complete_linear_order empty) := sorry --non-trivial
lemma new_lemma_50352 (h0 : not (function.extfun Type group -> false)) : @is_cyclic.{0} (with_one.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (with_one.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_50353 (h0 : complete_lattice (normed_group (semiring empty))) : complete_lattice.is_Sup_finite_compact (normed_group (semiring empty)) := sorry --non-trivial
lemma new_lemma_50354 (h0 : ring (has_pos_part (has_Inf Type))) : is_principal_ideal_ring (has_pos_part (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_50355 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (finset.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (finset.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_50356 (h0 : topological_space (add_cancel_monoid (has_neg (ring linarith.comp)))) : t0_space (add_cancel_monoid (has_neg (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_50357 (h0 : group (finset (finset (has_pos_part (finset pos))))) : is_cyclic (finset (finset (has_pos_part (finset pos)))) := sorry --non-trivial
lemma new_lemma_50358 (h0 : group (has_norm (random_gen (random_gen num)))) : is_cyclic (has_norm (random_gen (random_gen num))) := sorry --non-trivial
lemma new_lemma_50359 (h0 : functor.add_const (topological_space (has_nndist pos)) pos) : @loc_path_connected_space.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_50360 (h0 : functor.add_const (complete_lattice (has_zero ennreal)) (option name)) : @is_atomistic.{0} (has_zero.{0} ennreal) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_zero.{0} ennreal)) (option.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_50361 (h0 : topological_space (has_nndist pos)) : t0_space (has_nndist pos) := sorry --non-trivial
lemma new_lemma_50362 (h0 : not (function.extfun Type complete_lattice -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (has_top.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (has_top.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50363 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (preorder congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_50364 (h0 : group (has_pos_part linarith.comp)) : group.fg (has_pos_part linarith.comp) := sorry --non-trivial
lemma new_lemma_50365 (h0 : topological_space (cancel_monoid (boolean_algebra Type))) : loc_path_connected_space (cancel_monoid (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_50366 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (semiring.{0} (has_top.{0} fun_info)) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (semiring.{0} (has_top.{0} fun_info)))  := sorry --non-trivial
lemma new_lemma_50367 (h0 : topological_space (linear_ordered_add_comm_group (comm_ring (random_gen to_additive.value_type)))) : irreducible_space (linear_ordered_add_comm_group (comm_ring (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_50368 (h0 : functor.comp group has_nndist Type) : @normalizer_condition.{1} (has_nndist.{1} Type) (@functor.comp.run.{1 1 1} group.{1} has_nndist.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_50369 (h0 : complete_lattice (has_compl enat)) : is_compactly_generated (has_compl enat) := sorry --non-trivial
lemma new_lemma_50370 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (has_emptyc.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (has_emptyc.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_50371 (h0 : add_group (nondiscrete_normed_field (semigroup linarith.ineq))) : is_add_cyclic (nondiscrete_normed_field (semigroup linarith.ineq)) := sorry --non-trivial
lemma new_lemma_50372 (h0 : functor.add_const (topological_space (add_cancel_monoid unsigned)) (semigroup linarith.comp)) : @regular_space.{0} (add_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} unsigned)) (semigroup.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_50373 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} string_imp (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) string_imp)  := sorry --non-trivial
lemma new_lemma_50374 (h0 : ordered_add_comm_monoid (canonically_linear_ordered_monoid name)) : archimedean (canonically_linear_ordered_monoid name) := sorry --non-trivial
lemma new_lemma_50375 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (complete_semilattice_Sup.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 ring.{0}) (complete_semilattice_Sup.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_50376 (h0 : pseudo_metric_space (complete_linear_order empty)) (h1 : not (add_monoid (complete_linear_order empty) -> false)) : @has_lipschitz_add.{0} (complete_linear_order.{0} empty) h0 (@classical.by_contradiction'.{1} (add_monoid.{0} (complete_linear_order.{0} empty)) h1)  := sorry --non-trivial
lemma new_lemma_50377 (h0 : filter (canonically_ordered_comm_semiring (has_add (finset (option (has_add name)))))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_50378 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (filter.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (filter.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50379 (h0 : list (as_linear_order congr_arg_kind)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_50380 (h0 : group (distrib_lattice linarith.ineq)) : is_cyclic (distrib_lattice linarith.ineq) := sorry --non-trivial
lemma new_lemma_50381 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @unique_factorization_monoid.{0} (filter.{0} unsigned) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 cancel_comm_monoid_with_zero.{0}) (filter.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50382 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (ring.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (ring.{0} empty))  := sorry --non-trivial
lemma new_lemma_50383 (h0 : list (topological_space (has_ssubset linarith.ineq))) (h1 : ne h0 list.nil) : @totally_disconnected_space.{0} (has_ssubset.{0} linarith.ineq) (@list.last.{0} (topological_space.{0} (has_ssubset.{0} linarith.ineq)) h0 h1)  := sorry --non-trivial
lemma new_lemma_50384 (h0 : ring (finset (has_nndist (finset ennreal)))) : rank_condition (finset (has_nndist (finset ennreal))) := sorry --non-trivial
lemma new_lemma_50385 (h0 : topological_space (ordered_comm_monoid (has_bot real))) : totally_disconnected_space (ordered_comm_monoid (has_bot real)) := sorry --non-trivial
lemma new_lemma_50386 (h0 : function.extfun Type ring) : @is_domain.{0} (has_dist.{0} num) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_dist.{0} num))  := sorry --non-trivial
lemma new_lemma_50387 (h0 : functor.add_const (group (has_pos_part pos)) pos) : @normalizer_condition.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_pos_part.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_50388 (h0 : topological_space (generalized_boolean_algebra (has_add pos))) : regular_space (generalized_boolean_algebra (has_add pos)) := sorry --non-trivial
lemma new_lemma_50389 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (bin_tree.{0} num) (@function.extfun_app.{2 1} Type ring.{0} h0 (bin_tree.{0} num))  := sorry --non-trivial
lemma new_lemma_50390 (h1 : topological_space (normed_ring linarith.comp_source)) : t0_space (normed_ring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_50391 (h2 : uniform_space (has_neg to_additive.value_type)) : complete_space (has_neg to_additive.value_type) := sorry --non-trivial
lemma new_lemma_50392 (h0 : not (function.extfun Type add_group -> false)) : @is_add_cyclic.{0} (with_one.{0} (semiring.{0} empty)) (@function.extfun_app.{2 1} Type add_group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_group.{0}) h0) (with_one.{0} (semiring.{0} empty)))  := sorry --non-trivial
lemma new_lemma_50393 (h0 : topological_space (add_cancel_monoid (finset (has_add (has_add (ring Type)))))) : loc_path_connected_space (add_cancel_monoid (finset (has_add (has_add (ring Type))))) := sorry --non-trivial
lemma new_lemma_50394 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (canonically_ordered_add_monoid.{0} num) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (canonically_ordered_add_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_50395 (h0 : add_group (complete_distrib_lattice congr_arg_kind)) : is_add_cyclic (complete_distrib_lattice congr_arg_kind) := sorry --non-trivial
lemma new_lemma_50396 (h0 : functor.add_const (list (has_zero environment.implicit_infer_kind)) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50397 (h0 : (add_comm_semigroup enat -> enat) -> Prop) (h1 : unit) : set.separates_points (matrix.row h0 h1) := sorry --non-trivial
lemma new_lemma_50398 (h0 : functor.add_const (filter (finset Type)) linarith.comp) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50399 (h0 : topological_space (has_nndist (has_nndist (has_Inf name)))) : preirreducible_space (has_nndist (has_nndist (has_Inf name))) := sorry --non-trivial
lemma new_lemma_50400 (h0 : group (fintype (random_gen fun_info))) : group.fg (fintype (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_50401 (h0 : has_mem.mem (measurable_space linarith.ineq) has_emptyc.emptyc) : @totally_separated_space.{0} (measurable_space.{0} linarith.ineq) (@finset.pi.empty.{1 0} Type topological_space.{0} (measurable_space.{0} linarith.ineq) h0)  := sorry --non-trivial
lemma new_lemma_50402 (h0 : function.extfun Type group) : @is_simple_group.{0} (sub_neg_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} h0 (sub_neg_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_50403 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (cancel_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (cancel_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_50404 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (ordered_ring (semiring empty))) := sorry --non-trivial
lemma new_lemma_50405 (h0 : functor.add_const (topological_space (ordered_comm_monoid Type)) pos) : @regular_space.{1} (ordered_comm_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (ordered_comm_monoid.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_50406 (h0 : fin has_zero.zero) : @totally_disconnected_space.{0} (normed_lattice_add_comm_group.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (normed_lattice_add_comm_group.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_50407 (h0 : functor.add_const (complete_lattice (ordered_ring unsigned)) unsigned) : @complete_lattice.is_Sup_finite_compact.{0} (ordered_ring.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (ordered_ring.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_50408 (h0 : topological_space (normed_group (semiring empty))) : discrete_topology (normed_group (semiring empty)) := sorry --non-trivial
lemma new_lemma_50409 (h0 : complete_lattice (has_append (random_gen (random_gen char)))) : is_compactly_generated (has_append (random_gen (random_gen char))) := sorry --non-trivial
lemma new_lemma_50410 (h0 : functor.add_const (add_monoid (pseudo_metric_space name)) name) : @add_monoid.fg.{0} (pseudo_metric_space.{0} name) (@functor.add_const.run.{0 0} (add_monoid.{0} (pseudo_metric_space.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_50411 (h0 : functor.add_const (uniform_space (cancel_monoid Type)) name) : @separated_space.{1} (cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (uniform_space.{1} (cancel_monoid.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_50412 (h0 : complete_lattice (canonically_ordered_monoid (has_Inf real))) : complete_lattice.is_Sup_finite_compact (canonically_ordered_monoid (has_Inf real)) := sorry --non-trivial
lemma new_lemma_50413 (h0 : topological_space (complete_distrib_lattice (ring (has_Inf linarith.comp)))) : irreducible_space (complete_distrib_lattice (ring (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_50414 (h0 : topological_space (normed_comm_ring (finset (ring (finset name))))) : regular_space (normed_comm_ring (finset (ring (finset name)))) := sorry --non-trivial
lemma new_lemma_50415 (h0 : functor.add_const (topological_space (mul_zero_class environment.implicit_infer_kind)) Type) : @normal_space.{0} (mul_zero_class.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (mul_zero_class.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_50416 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (denumerable.{0} string_imp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (denumerable.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_50417 (h0 : group (add_comm_monoid environment.implicit_infer_kind)) : group.fg (add_comm_monoid environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_50418 (h0 : topological_space (has_zero (monoid_with_zero pos))) : sequential_space (has_zero (monoid_with_zero pos)) := sorry --non-trivial
lemma new_lemma_50419 (h1 : topological_space (nondiscrete_normed_field fun_info)) : totally_disconnected_space (nondiscrete_normed_field fun_info) := sorry --non-trivial
lemma new_lemma_50420 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (has_top.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_top.{0} empty))  := sorry --non-trivial
lemma new_lemma_50421 (h0 : has_mem.mem (has_top to_additive.value_type) has_emptyc.emptyc) : @path_connected_space.{0} (has_top.{0} to_additive.value_type) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_top.{0} to_additive.value_type) h0)  := sorry --non-trivial
lemma new_lemma_50422 (h0 : has_lt environment.projection_info) : no_min_order environment.projection_info := sorry --non-trivial
lemma new_lemma_50423 (h0 : ring (id (random_gen (has_top congr_arg_kind)))) : rank_condition (id (random_gen (has_top congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_50424 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (ordered_cancel_add_comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_cancel_add_comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_50425 (h0 : functor.add_const (group (complete_distrib_lattice Type)) Type) : @is_cyclic.{1} (complete_distrib_lattice.{1} Type) (@functor.add_const.run.{1 1} (group.{1} (complete_distrib_lattice.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_50426 (h0 : complete_lattice (dlist (has_nnnorm (has_nnnorm linarith.ineq)))) : is_compactly_generated (dlist (has_nnnorm (has_nnnorm linarith.ineq))) := sorry --non-trivial
lemma new_lemma_50427 (h0 : monoid (semiring (has_norm empty))) : monoid.fg (semiring (has_norm empty)) := sorry --non-trivial
lemma new_lemma_50428 (h0 : functor.add_const (group (add_comm_monoid name)) linarith.comp) : @group.fg.{0} (add_comm_monoid.{0} name) (@functor.add_const.run.{0 0} (group.{0} (add_comm_monoid.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50429 (h0 : topological_space ennreal) : topological_space.separable_space ennreal := sorry --non-trivial
lemma new_lemma_50430 (h0 : not (monoid (with_one (random_gen linarith.comp_source)) -> false)) : @monoid.fg.{0} (with_one.{0} (random_gen.{0} linarith.comp_source)) (@classical.by_contradiction'.{1} (monoid.{0} (with_one.{0} (random_gen.{0} linarith.comp_source))) h0)  := sorry --non-trivial
lemma new_lemma_50431 (h0 : topological_space (ordered_comm_ring linarith.comp)) : preirreducible_space (ordered_comm_ring linarith.comp) := sorry --non-trivial
lemma new_lemma_50432 (h0 : functor.add_const (uniform_space (canonically_ordered_comm_semiring Type)) name) : @complete_space.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (uniform_space.{1} (canonically_ordered_comm_semiring.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_50433 (h7 : not (uniform_space (denumerable char) -> false)) : @complete_space.{0} (denumerable.{0} char) (@classical.by_contradiction'.{1} (uniform_space.{0} (denumerable.{0} char)) h7)  := sorry --non-trivial
lemma new_lemma_50434 (h0 : functor.add_const (semiring (ring Type)) environment.implicit_infer_kind) : @is_noetherian_ring.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (semiring.{1} (ring.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_50435 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (add_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (add_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50436 (h0 : not (function.extfun Type topological_space -> false)) : @t0_space.{0} (has_emptyc.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_emptyc.{0} empty))  := sorry --non-trivial
lemma new_lemma_50437 (h0 : list (dlist (has_nnnorm (has_nnnorm (has_nnnorm (has_nnnorm linarith.comp_source)))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_50438 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (has_edist.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_edist.{0} empty))  := sorry --non-trivial
lemma new_lemma_50439 (h0 : ring (omega_complete_partial_order fun_info)) : strong_rank_condition (omega_complete_partial_order fun_info) := sorry --non-trivial
lemma new_lemma_50440 (h0 : topological_space (has_add (has_Inf Type))) : t0_space (has_add (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_50441 (h0 : mul_one_class (mul_one_class environment.projection_info) -> Prop) (h1 : ring (derive_fintype.finset_in h0)) : is_domain (derive_fintype.finset_in h0) := sorry --non-trivial
lemma new_lemma_50442 (h0 : fin has_zero.zero) : @totally_separated_space.{0} (canonically_ordered_monoid.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (canonically_ordered_monoid.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_50443 (h0 : topological_space (measurable_space (random_gen (random_gen string_imp)))) : t0_space (measurable_space (random_gen (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_50444 (h0 : functor.add_const (topological_space (normed_comm_ring unsigned)) pos) : @discrete_topology.{0} (normed_comm_ring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_50445 (h0 : functor.add_const (topological_space ennreal) num) : loc_path_connected_space ennreal := sorry --non-trivial
lemma new_lemma_50446 (h1 : ring (has_ssubset (random_gen linarith.ineq))) : rank_condition (has_ssubset (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_50447 (h0 : function.extfun Type ordered_comm_monoid) : @has_exists_mul_of_le.{0} (canonically_ordered_comm_semiring.{0} linarith.comp) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} h0 (canonically_ordered_comm_semiring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_50448 (h0 : functor.add_const (topological_space (add_cancel_monoid name)) linarith.comp) : @normal_space.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50449 (h0 : functor.add_const (topological_space (semigroup congr_arg_kind)) unsigned) : @normal_space.{0} (semigroup.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_50450 (h0 : topological_space (with_bot (random_gen num))) : totally_separated_space (with_bot (random_gen num)) := sorry --non-trivial
lemma new_lemma_50451 (h0 : topological_space (ring (semigroup (normed_comm_ring linarith.comp)))) : topological_space.separable_space (ring (semigroup (normed_comm_ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_50452 (h0 : functor.comp complete_lattice random_gen string_imp) : @is_compactly_generated.{0} (random_gen.{0} string_imp) (@functor.comp.run.{0 0 0} complete_lattice.{0} random_gen.{0} string_imp h0)  := sorry --non-trivial
lemma new_lemma_50453 (h0 : topological_space (add_comm_monoid (has_neg_part linarith.comp))) : regular_space (add_comm_monoid (has_neg_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_50454 (h0 : not (function.extfun Type complete_lattice -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (has_one.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (has_one.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50455 (h0 : topological_space (random_gen (random_gen (has_inv linarith.comp_source)))) : totally_disconnected_space (random_gen (random_gen (has_inv linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_50456 (h0 : list (linear_ordered_comm_ring (semiring (semiring empty)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_50457 (h0 : functor.add_const (finset (cancel_monoid pos)) linarith.comp) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50458 (h0 : finset (has_to_string pos)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_50459 (h0 : ordered_comm_monoid (add_comm_monoid (has_to_string unsigned))) : has_exists_mul_of_le (add_comm_monoid (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_50460 (h0 : uniform_space (plift (semiring congr_arg_kind))) : separated_space (plift (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_50461 (h1 : set (has_nnnorm (mul_one_class reducibility_hints))) : set.finite h1 := sorry --non-trivial
lemma new_lemma_50462 (h0 : complete_lattice (complete_semilattice_Sup (has_top linarith.comp_source))) : is_compactly_generated (complete_semilattice_Sup (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_50463 (h0 : topological_space (semigroup ennreal)) : topological_space.separable_space (semigroup ennreal) := sorry --non-trivial
lemma new_lemma_50464 (h0 : preorder (with_zero string_imp)) (h1 : filter (closure_operator (with_zero string_imp))) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_50465 (h0 : set (add_comm_semigroup (mul_one_class ereal) -> std_gen)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_50466 (h0 : topological_space (add_cancel_monoid (has_add (add_cancel_monoid linarith.comp)))) : preirreducible_space (add_cancel_monoid (has_add (add_cancel_monoid linarith.comp))) := sorry --non-trivial
lemma new_lemma_50467 (h0 : group (with_bot (semiring empty))) : is_cyclic (with_bot (semiring empty)) := sorry --non-trivial
lemma new_lemma_50468 (h0 : prod (ring (option (option (option num)))) (ring (option (option (option num))))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_50469 (h0 : functor.add_const (ring (has_nndist Type)) linarith.comp) : @rank_condition.{1} (has_nndist.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_nndist.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50470 (h0 : topological_space (preorder (semiring (semiring unsigned)))) : totally_separated_space (preorder (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_50471 (h0 : functor.add_const (function.extfun Type ring) Type) : @is_domain.{0} (has_add.{0} name) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type ring.{0}) Type h0) (has_add.{0} name))  := sorry --non-trivial
lemma new_lemma_50472 (h0 : semiring (non_assoc_semiring (semiring (semiring unsigned)))) : is_noetherian_ring (non_assoc_semiring (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_50473 (h0 : add_monoid (ordered_comm_monoid (finset linarith.comp))) : add_monoid.fg (ordered_comm_monoid (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_50474 (h0 : functor.add_const (function.extfun Type group) name) : @group.fg.{0} (has_Inf.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) name h0) (has_Inf.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_50475 (h0 : functor.add_const (add_monoid (complete_distrib_lattice pos)) (cancel_monoid (ring name))) : @add_monoid.fg.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (add_monoid.{0} (complete_distrib_lattice.{0} pos)) (cancel_monoid.{0} (ring.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_50476 (h0 : function.extfun Type (functor.add_const (functor.add_const (complete_lattice nnreal) empty))) : @is_atomistic.{0} nnreal (@functor.add_const.run.{0 0} (complete_lattice.{0} nnreal) empty (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (complete_lattice.{0} nnreal) empty) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (functor.add_const.{0 0} (complete_lattice.{0} nnreal) empty)) h0 empty)))  := sorry --non-trivial
lemma new_lemma_50477 (h0 : functor.add_const (topological_space (complete_distrib_lattice num)) (option empty)) : @totally_disconnected_space.{0} (complete_distrib_lattice.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} num)) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_50478 (h0 : topological_space (add_cancel_monoid (option (option (option empty))))) : loc_path_connected_space (add_cancel_monoid (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_50479 (h0 : functor.add_const (topological_space (sub_neg_monoid name)) pos) : @locally_compact_space.{0} (sub_neg_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (sub_neg_monoid.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_50480 (h0 : ring (semi_normed_ring (uniform_space linarith.ineq))) : rank_condition (semi_normed_ring (uniform_space linarith.ineq)) := sorry --non-trivial
lemma new_lemma_50481 (h0 : add_group (has_ssubset (has_inv to_additive.value_type))) : is_add_cyclic (has_ssubset (has_inv to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_50482 (h1 : function.extfun Type group) : @normalizer_condition.{0} (measurable_space.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} h1 (measurable_space.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_50483 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (pseudo_metric_space.{0} ennreal) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (pseudo_metric_space.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_50484 (h0 : set (monoid (mul_one_class string.iterator_imp))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_50485 (h0 : topological_space (sub_neg_monoid name)) : t0_space (sub_neg_monoid name) := sorry --non-trivial
lemma new_lemma_50486 (h0 : functor.add_const (group (semigroup Type)) name) : @is_simple_group.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (semigroup.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_50487 (h0 : ring (with_one (has_top linarith.comp_source))) : is_domain (with_one (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_50488 (h0 : fin has_zero.zero) : @t0_space.{0} (has_nndist.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (has_nndist.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_50489 (h0 : functor.add_const (filter (canonically_ordered_comm_semiring unsigned)) Type) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50490 (h0 : not (uniform_space fun_info -> false)) : @complete_space.{0} fun_info (@classical.by_contradiction'.{1} (uniform_space.{0} fun_info) h0)  := sorry --non-trivial
lemma new_lemma_50491 (h0 : not (function.extfun Type topological_space -> false)) : @discrete_topology.{0} (has_union.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_union.{0} num))  := sorry --non-trivial
lemma new_lemma_50492 (h0 : not (group real.angle -> false)) : @is_cyclic.{0} real.angle (@classical.by_contradiction'.{1} (group.{0} real.angle) h0)  := sorry --non-trivial
lemma new_lemma_50493 (h0 : group (partial_order (has_top num))) : is_cyclic (partial_order (has_top num)) := sorry --non-trivial
lemma new_lemma_50494 (h0 : ring (has_Inf pos)) : rank_condition (has_Inf pos) := sorry --non-trivial
lemma new_lemma_50495 (h0 : ring (semigroup (monoid ennreal))) : strong_rank_condition (semigroup (monoid ennreal)) := sorry --non-trivial
lemma new_lemma_50496 (h0 : functor.add_const (ring (left_cancel_semigroup unsigned)) (option (option unsigned))) : @is_domain.{0} (left_cancel_semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (left_cancel_semigroup.{0} unsigned)) (option.{0} (option.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_50497 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (option.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (option.{0} num))  := sorry --non-trivial
lemma new_lemma_50498 (h0 : complete_lattice (has_union (linear_ordered_semiring congr_arg_kind))) : is_atomistic (has_union (linear_ordered_semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_50499 (h0 : functor.add_const (add_group (add_semigroup unsigned)) unsigned) : @is_add_cyclic.{0} (add_semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (add_group.{0} (add_semigroup.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_50500 (h3 : ring (has_compl fun_info)) : strong_rank_condition (has_compl fun_info) := sorry --non-trivial
lemma new_lemma_50501 (h0 : not (prod (complete_semilattice_Sup empty) (complete_semilattice_Sup empty) -> false)) : id_rel (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_50502 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_50503 (h0 : functor.add_const (ring (semigroup empty)) congr_arg_kind) : @rank_condition.{0} (semigroup.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (semigroup.{0} empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_50504 (h0 : not (topological_space (filter empty) -> false)) : @t0_space.{0} (filter.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (filter.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_50505 (h0 : topological_space (comm_group (cancel_monoid (has_add Type)))) : preirreducible_space (comm_group (cancel_monoid (has_add Type))) := sorry --non-trivial
lemma new_lemma_50506 (h0 : cancel_comm_monoid_with_zero (ring (option ennreal))) : unique_factorization_monoid (ring (option ennreal)) := sorry --non-trivial
lemma new_lemma_50507 (h0 : topological_space (add_group unsigned)) : normal_space (add_group unsigned) := sorry --non-trivial
lemma new_lemma_50508 (h1 : not (complete_lattice (has_norm congr_arg_kind) -> false)) : @is_compactly_generated.{0} (has_norm.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_norm.{0} congr_arg_kind)) h1)  := sorry --non-trivial
lemma new_lemma_50509 (h0 : filter (ring (option (option ennreal)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_50510 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @totally_disconnected_space.{0} (complete_semilattice_Sup.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (complete_semilattice_Sup.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_50511 (h0 : ring (semi_normed_ring linarith.ineq)) : rank_condition (semi_normed_ring linarith.ineq) := sorry --non-trivial
lemma new_lemma_50512 (h0 : topological_space (parser congr_arg_kind)) : t1_space (parser congr_arg_kind) := sorry --non-trivial
lemma new_lemma_50513 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (linear_ordered_semiring.{0} fun_info) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (linear_ordered_semiring.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_50514 (h2 : ring (random_gen (comm_ring char))) : is_domain (random_gen (comm_ring char)) := sorry --non-trivial
lemma new_lemma_50515 (h0 : topological_space (finset (add_comm_monoid Type))) : normal_space (finset (add_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_50516 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (simple_graph.{0} unsigned) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (simple_graph.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50517 (h0 : has_lt (mul_one_class (set.set_semiring ereal))) : no_max_order (mul_one_class (set.set_semiring ereal)) := sorry --non-trivial
lemma new_lemma_50518 (h0 : filter (add_comm_monoid (add_comm_monoid environment.implicit_infer_kind))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_50519 (h4 : topological_space fun_info) : t0_space fun_info := sorry --non-trivial
lemma new_lemma_50520 (h0 : functor.add_const (ordered_add_comm_monoid (ordered_comm_ring name)) (has_add Type)) : @archimedean.{0} (ordered_comm_ring.{0} name) (@functor.add_const.run.{0 1} (ordered_add_comm_monoid.{0} (ordered_comm_ring.{0} name)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_50521 (h0 : ring (with_one (random_gen (has_norm linarith.comp_source)))) : rank_condition (with_one (random_gen (has_norm linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_50522 (h1 : topological_space (encodable (has_ssubset (has_inv string_imp)))) : path_connected_space (encodable (has_ssubset (has_inv string_imp))) := sorry --non-trivial
lemma new_lemma_50523 (h0 : list (has_add environment.implicit_infer_kind)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_50524 (h0 : filter (boolean_algebra.core (has_add unsigned))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_50525 (h0 : function.extfun Type group) : @group.fg.{0} (comm_semigroup.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (comm_semigroup.{0} name))  := sorry --non-trivial
lemma new_lemma_50526 (h1 : not (topological_space (semiring linarith.comp) -> false)) : @path_connected_space.{0} (semiring.{0} linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (semiring.{0} linarith.comp)) h1)  := sorry --non-trivial
lemma new_lemma_50527 (h0 : functor.add_const (functor.add_const (group pos) unsigned) (option unsigned)) : @group.fg.{0} pos (@functor.add_const.run.{0 0} (group.{0} pos) unsigned (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (group.{0} pos) unsigned) (option.{0} unsigned) h0))  := sorry --non-trivial
lemma new_lemma_50528 (h0 : group (preorder (semiring num))) : is_cyclic (preorder (semiring num)) := sorry --non-trivial
lemma new_lemma_50529 (h0 : functor.add_const (ordered_add_comm_monoid (normed_comm_ring name)) pos) : @archimedean.{0} (normed_comm_ring.{0} name) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (normed_comm_ring.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_50530 (h0 : uniform_space (has_neg (has_to_string (has_to_string (has_to_string unsigned))))) : complete_space (has_neg (has_to_string (has_to_string (has_to_string unsigned)))) := sorry --non-trivial
lemma new_lemma_50531 (h0 : complete_lattice (has_dist (option (option (option unsigned))))) : is_atomistic (has_dist (option (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_50532 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (has_inter.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_inter.{0} empty))  := sorry --non-trivial
lemma new_lemma_50533 (h0 : fin has_zero.zero) : @is_domain.{0} (ordered_comm_monoid.{0} linarith.comp) (@matrix.vec_empty.{0} (ring.{0} (ordered_comm_monoid.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_50534 (h0 : ring (has_zero (option ennreal))) : rank_condition (has_zero (option ennreal)) := sorry --non-trivial
lemma new_lemma_50535 (h0 : topological_space (has_bot num)) : t0_space (has_bot num) := sorry --non-trivial
lemma new_lemma_50536 (h0 : functor.add_const (semiring (complete_distrib_lattice name)) pos) : @is_noetherian_ring.{0} (complete_distrib_lattice.{0} name) (@functor.add_const.run.{0 0} (semiring.{0} (complete_distrib_lattice.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_50537 (h0 : ring (canonically_ordered_monoid (has_Inf (has_Inf linarith.comp)))) : strong_rank_condition (canonically_ordered_monoid (has_Inf (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_50538 (h0 : functor.add_const (function.extfun Type list) (ring (finset Type))) : palindrome (function.extfun_app (functor.add_const.run h0) (add_cancel_monoid pos)) := sorry --non-trivial
lemma new_lemma_50539 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (@id.{2} Type (semiring.{0} congr_arg_kind)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (@id.{2} Type (semiring.{0} congr_arg_kind)))  := sorry --non-trivial
lemma new_lemma_50540 (h0 : monoid (comm_ring (has_inv (random_gen (random_gen (has_top fun_info)))))) : monoid.fg (comm_ring (has_inv (random_gen (random_gen (has_top fun_info))))) := sorry --non-trivial
lemma new_lemma_50541 (h0 : ring (mul_one_class (mul_one_class string.iterator_imp))) : rank_condition (mul_one_class (mul_one_class string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_50542 (h1 : group (denumerable (has_nnnorm linarith.ineq))) : is_cyclic (denumerable (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_50543 (h0 : not (finset (bin_tree unsigned) -> false)) : finset.nonempty (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_50544 (h0 : functor.add_const (filter (finset unsigned)) unsigned) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50545 (h0 : functor.add_const (ordered_add_comm_monoid (cancel_monoid name)) (has_add (has_add (has_add Type)))) : @archimedean.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 1} (ordered_add_comm_monoid.{0} (cancel_monoid.{0} name)) (has_add.{1} (has_add.{1} (has_add.{1} Type))) h0)  := sorry --non-trivial
lemma new_lemma_50546 (h0 : uniform_space (non_unital_non_assoc_semiring linarith.ineq)) : complete_space (non_unital_non_assoc_semiring linarith.ineq) := sorry --non-trivial
lemma new_lemma_50547 (h1 : complete_lattice (has_norm linarith.ineq)) : complete_lattice.is_Sup_finite_compact (has_norm linarith.ineq) := sorry --non-trivial
lemma new_lemma_50548 (h1 : ring (has_add (comm_ring fun_info))) : is_domain (has_add (comm_ring fun_info)) := sorry --non-trivial
lemma new_lemma_50549 (h0 : topological_space (normed_group (random_gen linarith.comp))) : discrete_topology (normed_group (random_gen linarith.comp)) := sorry --non-trivial
lemma new_lemma_50550 (h0 : function.extfun Type (functor.add_const (ordered_add_comm_monoid (preorder empty)))) : @archimedean.{0} (preorder.{0} empty) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (preorder.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ordered_add_comm_monoid.{0} (preorder.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_50551 (h0 : topological_space (add_cancel_monoid (has_to_string environment.implicit_infer_kind))) : t1_space (add_cancel_monoid (has_to_string environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_50552 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (option.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (option.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50553 (h0 : topological_space (mul_one_class std_gen) -> Prop) (h1 : Exists (fun (x : topological_space (mul_one_class std_gen)), h0 x)) : @t0_space.{0} (mul_one_class.{0} std_gen) (@classical.some.{1} (topological_space.{0} (mul_one_class.{0} std_gen)) h0 h1)  := sorry --non-trivial
lemma new_lemma_50554 (h0 : function.extfun Type (functor.comp ring has_add)) : @is_principal_ideal_ring.{0} (has_add.{0} pos) (@functor.comp.run.{0 0 0} ring.{0} has_add.{0} pos (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} ring.{0} has_add.{0}) h0 pos))  := sorry --non-trivial
lemma new_lemma_50555 (h0 : topological_space (denumerable (comm_ring linarith.comp_source))) : totally_disconnected_space (denumerable (comm_ring linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_50556 (h0 : topological_space (with_one (complete_semilattice_Sup (has_top (random_gen linarith.comp))))) : discrete_topology (with_one (complete_semilattice_Sup (has_top (random_gen linarith.comp)))) := sorry --non-trivial
lemma new_lemma_50557 (h0 : functor.add_const (topological_space (add_cancel_monoid pos)) Type) : @preirreducible_space.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (add_cancel_monoid.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_50558 (h0 : group (linear_ordered_add_comm_group (random_gen char))) : is_cyclic (linear_ordered_add_comm_group (random_gen char)) := sorry --non-trivial
lemma new_lemma_50559 (h0 : add_group (add_left_cancel_monoid (has_nnnorm fun_info))) : is_add_cyclic (add_left_cancel_monoid (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_50560 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (add_comm_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (add_comm_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50561 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50562 (h0 : has_to_string linarith.comp -> has_to_string linarith.comp -> Prop) : is_refl (has_to_string linarith.comp) h0 := sorry --non-trivial
lemma new_lemma_50563 (h0 : ring (boolean_algebra (comm_group name))) : strong_rank_condition (boolean_algebra (comm_group name)) := sorry --non-trivial
lemma new_lemma_50564 (h0 : group (add_group (semiring (semiring (has_norm (has_norm num)))))) : normalizer_condition (add_group (semiring (semiring (has_norm (has_norm num))))) := sorry --non-trivial
lemma new_lemma_50565 (h0 : complete_lattice (has_add linarith.comp)) : is_compactly_generated (has_add linarith.comp) := sorry --non-trivial
lemma new_lemma_50566 (h0 : group (canonically_ordered_comm_semiring (finset (has_nndist name)))) : normalizer_condition (canonically_ordered_comm_semiring (finset (has_nndist name))) := sorry --non-trivial
lemma new_lemma_50567 (h0 : topological_space (add_comm_monoid congr_arg_kind)) : discrete_topology (add_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_50568 (h0 : group (has_ssubset (mul_one_class linarith.ineq))) : is_cyclic (has_ssubset (mul_one_class linarith.ineq)) := sorry --non-trivial
lemma new_lemma_50569 (h0 : topological_space (simple_graph (finset pos))) : preirreducible_space (simple_graph (finset pos)) := sorry --non-trivial
lemma new_lemma_50570 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50571 (h0 : uniform_space (semiring (has_norm (has_norm (has_norm unsigned))))) : separated_space (semiring (has_norm (has_norm (has_norm unsigned)))) := sorry --non-trivial
lemma new_lemma_50572 (h0 : complete_lattice (has_top (random_gen linarith.comp_source))) : is_compactly_generated (has_top (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_50573 (h0 : topological_space (add_left_cancel_semigroup unsigned)) : discrete_topology (add_left_cancel_semigroup unsigned) := sorry --non-trivial
lemma new_lemma_50574 (h0 : uniform_space (normed_group (has_norm to_additive.value_type))) : separated_space (normed_group (has_norm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_50575 (h0 : fin has_zero.zero) : @normalizer_condition.{0} (has_Inf.{0} real) (@function.extfun_app.{2 1} Type group.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type group.{0}) h0) (has_Inf.{0} real))  := sorry --non-trivial
lemma new_lemma_50576 (h0 : functor.add_const (topological_space (has_to_string pos)) (semigroup (has_neg linarith.comp))) : @t1_space.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} pos)) (semigroup.{0} (has_neg.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_50577 (h0 : uniform_space (with_one (has_top (has_top linarith.ineq)))) : complete_space (with_one (has_top (has_top linarith.ineq))) := sorry --non-trivial
lemma new_lemma_50578 (h0 : complete_lattice (canonically_linear_ordered_monoid (option ennreal))) : is_compactly_generated (canonically_linear_ordered_monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_50579 (h0 : topological_space (canonically_ordered_monoid (has_pos_part Type))) : regular_space (canonically_ordered_monoid (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_50580 (h0 : ordered_comm_monoid (sub_neg_monoid (has_Inf real))) : has_exists_mul_of_le (sub_neg_monoid (has_Inf real)) := sorry --non-trivial
lemma new_lemma_50581 (h0 : ring (ordered_comm_monoid (has_neg pos))) : strong_rank_condition (ordered_comm_monoid (has_neg pos)) := sorry --non-trivial
lemma new_lemma_50582 (h0 : function.extfun nat fin) : @archimedean.{0} (canonically_ordered_monoid.{0} linarith.comp) (@matrix.vec_empty.{0} (ordered_add_comm_monoid.{0} (canonically_ordered_monoid.{0} linarith.comp)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero))))  := sorry --non-trivial
lemma new_lemma_50583 (h0 : topological_space (metric_space (has_norm (has_top (has_norm fun_info))))) : discrete_topology (metric_space (has_norm (has_top (has_norm fun_info)))) := sorry --non-trivial
lemma new_lemma_50584 (h1 : has_le (add_comm_semigroup ereal)) (h2 : add_comm_semigroup ereal) : is_max h2 := sorry --non-trivial
lemma new_lemma_50585 (h0 : uniform_space (has_Inf (has_nndist pos))) : separated_space (has_Inf (has_nndist pos)) := sorry --non-trivial
lemma new_lemma_50586 (h0 : topological_space (boolean_algebra (has_zero (normed_comm_ring linarith.comp)))) : t1_space (boolean_algebra (has_zero (normed_comm_ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_50587 (h0 : add_group (distrib (has_nnnorm (has_nnnorm (has_nnnorm linarith.ineq))))) : is_add_cyclic (distrib (has_nnnorm (has_nnnorm (has_nnnorm linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_50588 (h0 : functor.add_const (finset (add_group congr_arg_kind)) congr_arg_kind) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50589 (h0 : finset (normed_comm_ring (has_neg_part pos))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_50590 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} environment.implicit_infer_kind (@function.extfun_app.{2 1} Type topological_space.{0} h0 environment.implicit_infer_kind)  := sorry --non-trivial
lemma new_lemma_50591 (h0 : functor.add_const (monoid (complete_distrib_lattice pos)) name) : @monoid.fg.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (monoid.{0} (complete_distrib_lattice.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_50592 (h0 : topological_space (linear_order (semiring unsigned))) : irreducible_space (linear_order (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_50593 (h0 : function.extfun Type (functor.add_const (topological_space (semigroup empty)))) : @totally_separated_space.{0} (semigroup.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (semigroup.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_50594 (h0 : functor.add_const (group (has_zero name)) (option pos)) : @group.fg.{0} (has_zero.{0} name) (@functor.add_const.run.{0 0} (group.{0} (has_zero.{0} name)) (option.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_50595 (h0 : ordered_add_comm_monoid (left_cancel_monoid congr_arg_kind)) : archimedean (left_cancel_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_50596 (h0 : functor.add_const (topological_space (has_neg_part pos)) unsigned) : @normal_space.{0} (has_neg_part.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} pos)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_50597 (h0 : topological_space (has_neg_part (has_add (has_add name)))) : locally_compact_space (has_neg_part (has_add (has_add name))) := sorry --non-trivial
lemma new_lemma_50598 (h1 : ring (with_zero (has_nnnorm string_imp))) : is_domain (with_zero (has_nnnorm string_imp)) := sorry --non-trivial
lemma new_lemma_50599 (h0 : topological_space (with_bot (has_inv to_additive.value_type))) : locally_compact_space (with_bot (has_inv to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_50600 (h0 : not (topological_space (has_star empty) -> false)) : @preirreducible_space.{0} (has_star.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (has_star.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_50601 (h0 : function.extfun (Type 1) topological_space) : @regular_space.{1} (canonically_linear_ordered_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (canonically_linear_ordered_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_50602 (h0 : functor.add_const (ring name) unsigned) : @is_principal_ideal_ring.{0} name (@functor.add_const.run.{0 0} (ring.{0} name) unsigned h0)  := sorry --non-trivial
lemma new_lemma_50603 (h0 : has_le (has_emptyc (with_bot linarith.comp_source))) (h1 : has_emptyc (with_bot linarith.comp_source)) : is_max h1 := sorry --non-trivial
lemma new_lemma_50604 (h0 : function.extfun nat fin) : @topological_space.separable_space.{1} (normed_lattice_add_comm_group.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (normed_lattice_add_comm_group.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_50605 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (finset.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (finset.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_50606 (h0 : complete_lattice (simple_graph Type)) : is_compactly_generated (simple_graph Type) := sorry --non-trivial
lemma new_lemma_50607 (h0 : group (ordered_comm_monoid pos)) : is_simple_group (ordered_comm_monoid pos) := sorry --non-trivial
lemma new_lemma_50608 (h0 : has_coe (add_comm_semigroup enat) Prop) (h1 : add_comm_semigroup enat) : @coe_b.{1 1} (add_comm_semigroup.{0} enat) Prop h0 h1  := sorry --non-trivial
lemma new_lemma_50609 (h0 : topological_space (random_gen (metric_space num))) : discrete_topology (random_gen (metric_space num)) := sorry --non-trivial
lemma new_lemma_50610 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (add_cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_50611 (h0 : topological_space (normed_comm_ring (has_add pos))) : path_connected_space (normed_comm_ring (has_add pos)) := sorry --non-trivial
lemma new_lemma_50612 (h0 : cancel_comm_monoid_with_zero (has_add Type)) : unique_factorization_monoid (has_add Type) := sorry --non-trivial
lemma new_lemma_50613 (h0 : topological_space (normed_group (has_nnnorm (has_nnnorm to_additive.value_type)))) : locally_compact_space (normed_group (has_nnnorm (has_nnnorm to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_50614 (h0 : topological_space (topological_space (comm_ring (denumerable (has_nnnorm reducibility_hints))))) : t0_space (topological_space (comm_ring (denumerable (has_nnnorm reducibility_hints)))) := sorry --non-trivial
lemma new_lemma_50615 (h0 : monoid (monoid (option congr_arg_kind))) : monoid.fg (monoid (option congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_50616 (h0 : topological_space (has_append (has_nnnorm (has_nnnorm fun_info)))) : totally_disconnected_space (has_append (has_nnnorm (has_nnnorm fun_info))) := sorry --non-trivial
lemma new_lemma_50617 (h0 : topological_space (has_union (semiring empty))) : t0_space (has_union (semiring empty)) := sorry --non-trivial
lemma new_lemma_50618 (h0 : topological_space (is_R_or_C congr_arg_kind)) : totally_disconnected_space (is_R_or_C congr_arg_kind) := sorry --non-trivial
lemma new_lemma_50619 (h3 : add_group (has_nnnorm (mul_one_class char))) : is_add_cyclic (has_nnnorm (mul_one_class char)) := sorry --non-trivial
lemma new_lemma_50620 (h0 : function.extfun nat fin) : @sequential_space.{0} (ordered_comm_monoid.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (ordered_comm_monoid.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_50621 (h0 : has_mem.mem (normed_group linarith.ineq) has_emptyc.emptyc) : @t0_space.{0} (normed_group.{0} linarith.ineq) (@finset.pi.empty.{1 0} Type topological_space.{0} (normed_group.{0} linarith.ineq) h0)  := sorry --non-trivial
lemma new_lemma_50622 (h0 : functor.add_const (topological_space (finset name)) (option unsigned)) : @topological_space.separable_space.{0} (finset.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} name)) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_50623 (h0 : function.extfun Type group) : @group.fg.{0} (add_group.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (add_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50624 (h0 : function.extfun Type (functor.add_const (function.extfun Type group))) : @normalizer_condition.{0} (add_comm_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) pos (@function.extfun_app.{2 2} Type (functor.add_const.{1 0} (function.extfun.{2 1} Type group.{0})) h0 pos)) (add_comm_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_50625 (h0 : group (semiring fun_info)) : is_cyclic (semiring fun_info) := sorry --non-trivial
lemma new_lemma_50626 (h0 : topological_space (has_add (finset unsigned))) : topological_space.separable_space (has_add (finset unsigned)) := sorry --non-trivial
lemma new_lemma_50627 (h0 : topological_space (preorder (option ennreal))) : t0_space (preorder (option ennreal)) := sorry --non-trivial
lemma new_lemma_50628 (h0 : topological_space (comm_ring (has_top fun_info))) : totally_disconnected_space (comm_ring (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_50629 (h0 : functor.add_const (topological_space (comm_group name)) linarith.comp) : @sequential_space.{0} (comm_group.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50630 (h0 : topological_space (distrib (comm_ring linarith.comp_source))) : totally_disconnected_space (distrib (comm_ring linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_50631 (h0 : ordered_add_comm_monoid auto.case_option) : archimedean auto.case_option := sorry --non-trivial
lemma new_lemma_50632 (h0 : function.extfun Type group) : @is_cyclic.{0} (ordered_cancel_add_comm_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type group.{0} h0 (ordered_cancel_add_comm_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_50633 (h0 : fin has_zero.zero) : @loc_path_connected_space.{0} (canonically_linear_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (canonically_linear_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_50634 (h1 : set (uniform_space to_additive.value_type)) : set.subsingleton h1 := sorry --non-trivial
lemma new_lemma_50635 (h0 : not (topological_space (measurable_space num) -> false)) : @totally_separated_space.{0} (measurable_space.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (measurable_space.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_50636 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (measurable_space.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (measurable_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_50637 (h0 : topological_space (comm_group (has_add unsigned))) : discrete_topology (comm_group (has_add unsigned)) := sorry --non-trivial
lemma new_lemma_50638 (h0 : filter (mul_zero_class unsigned)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_50639 (h0 : filter (add_cancel_monoid (finset (add_comm_monoid (add_comm_monoid (has_neg_part pos)))))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_50640 (h0 : uniform_space (with_bot (has_top (has_top fun_info)))) : complete_space (with_bot (has_top (has_top fun_info))) := sorry --non-trivial
lemma new_lemma_50641 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (normed_comm_ring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_comm_ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_50642 (h0 : functor.add_const (topological_space (boolean_algebra unsigned)) linarith.comp) : @preirreducible_space.{0} (boolean_algebra.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50643 (h0 : functor.add_const (ring (add_comm_monoid ennreal)) ennreal) : @rank_condition.{0} (add_comm_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (ring.{0} (add_comm_monoid.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_50644 (h0 : ulower pnat) (h1 : list pnat) : pnat.coprime (ulower.up h0) (list.head h1) := sorry --non-trivial
lemma new_lemma_50645 (h0 : functor.add_const (function.extfun Type filter) (ring (ring Type))) : filter.ne_bot (function.extfun_app (functor.add_const.run h0) (has_to_string name)) := sorry --non-trivial
lemma new_lemma_50646 (h0 : ring (has_emptyc (has_top (has_top to_additive.value_type)))) : strong_rank_condition (has_emptyc (has_top (has_top to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_50647 (h0 : functor.add_const (uniform_space (has_add name)) name) : @separated_space.{0} (has_add.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_add.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_50648 (h1 : function.extfun Type group) : @group.fg.{0} (distrib_lattice.{0} (with_bot.{0} linarith.ineq)) (@function.extfun_app.{2 1} Type group.{0} h1 (distrib_lattice.{0} (with_bot.{0} linarith.ineq)))  := sorry --non-trivial
lemma new_lemma_50649 (h0 : functor.add_const (ordered_add_comm_monoid (preorder congr_arg_kind)) (option (option unsigned))) : @archimedean.{0} (preorder.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (preorder.{0} congr_arg_kind)) (option.{0} (option.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_50650 (h0 : functor.add_const (topological_space (normed_comm_ring Type)) Type) : @loc_path_connected_space.{1} (normed_comm_ring.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (normed_comm_ring.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_50651 (h0 : functor.add_const (function.extfun Type group) pos) : @is_cyclic.{0} (normed_comm_ring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) pos h0) (normed_comm_ring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_50652 (h0 : filter (canonically_ordered_monoid (has_Inf real))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_50653 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (has_to_string.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_to_string.{0} pos))  := sorry --non-trivial
lemma new_lemma_50654 (h0 : uniform_space (has_to_string unsigned)) : complete_space (has_to_string unsigned) := sorry --non-trivial
lemma new_lemma_50655 (h0 : fin has_zero.zero) : @add_monoid.fg.{1} (canonically_ordered_comm_semiring.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_monoid.{1} (@matrix.vec_empty.{2} (function.extfun.{3 2} (Type 1) add_monoid.{1}) h0) (canonically_ordered_comm_semiring.{1} Type))  := sorry --non-trivial
lemma new_lemma_50656 (h0 h1 : list linarith.comp_source) : list.is_rotated h0 h1 := sorry --non-trivial
lemma new_lemma_50657 (h0 : list (complete_semilattice_Sup (comm_ring to_additive.value_type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_50658 (h0 : group (add_comm_monoid (ring (has_add (finset linarith.comp))))) : group.fg (add_comm_monoid (ring (has_add (finset linarith.comp)))) := sorry --non-trivial
lemma new_lemma_50659 (h0 : topological_space (random_gen (has_top fun_info))) : irreducible_space (random_gen (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_50660 (h0 : ring (metric_space (random_gen (random_gen reducibility_hints)))) : strong_rank_condition (metric_space (random_gen (random_gen reducibility_hints))) := sorry --non-trivial
lemma new_lemma_50661 (h0 : add_monoid (semigroup (has_neg Type))) : add_monoid.fg (semigroup (has_neg Type)) := sorry --non-trivial
lemma new_lemma_50662 (h0 : functor.add_const (topological_space (boolean_algebra Type)) Type) : @locally_compact_space.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (boolean_algebra.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_50663 (h0 : functor.add_const (topological_space (add_cancel_monoid pos)) (option pos)) : @t1_space.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} pos)) (option.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_50664 (h0 : group (plift (semiring (semiring num)))) : is_cyclic (plift (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_50665 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (has_star.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_star.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50666 (h0 : finset (ring (ring environment.implicit_infer_kind))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_50667 (h0 : topological_space (normed_group (semiring complex))) : t0_space (normed_group (semiring complex)) := sorry --non-trivial
lemma new_lemma_50668 (h0 : non_assoc_semiring (with_bot congr_arg_kind) -> non_assoc_semiring (with_bot congr_arg_kind) -> Prop) : is_strict_order (non_assoc_semiring (with_bot congr_arg_kind)) h0 := sorry --non-trivial
lemma new_lemma_50669 (h0 : functor.comp add_group linear_ordered_cancel_comm_monoid empty) : @is_add_cyclic.{0} (linear_ordered_cancel_comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (add_group.{0} (linear_ordered_cancel_comm_monoid.{0} empty)) unsigned (@functor.comp.run.{0 0 0} add_group.{0} linear_ordered_cancel_comm_monoid.{0} empty h0))  := sorry --non-trivial
lemma new_lemma_50670 (h1 : group (metric_space (denumerable to_additive.value_type))) : is_cyclic (metric_space (denumerable to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_50671 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (option.{0} empty) (@function.extfun_app.{2 1} Type add_group.{0} h0 (option.{0} empty))  := sorry --non-trivial
lemma new_lemma_50672 (h0 : complete_lattice (semiring (random_gen fun_info))) : complete_lattice.is_Sup_finite_compact (semiring (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_50673 (h0 : functor.add_const (complete_lattice (has_Inf pos)) pos) : @complete_lattice.is_Sup_finite_compact.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_Inf.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_50674 (h0 : not (uniform_space (linear_ordered_add_comm_group linarith.ineq) -> false)) : @complete_space.{0} (linear_ordered_add_comm_group.{0} linarith.ineq) (@classical.by_contradiction'.{1} (uniform_space.{0} (linear_ordered_add_comm_group.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_50675 (h0 : ring (linear_ordered_comm_group empty)) : rank_condition (linear_ordered_comm_group empty) := sorry --non-trivial
lemma new_lemma_50676 (h0 : functor.add_const (add_monoid (add_cancel_monoid linarith.comp)) linarith.comp) : @add_monoid.fg.{0} (add_cancel_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_monoid.{0} (add_cancel_monoid.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50677 (h0 : functor.add_const (topological_space (preorder num)) (semiring (semiring empty))) : @loc_path_connected_space.{0} (preorder.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} num)) (semiring.{0} (semiring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_50678 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (comm_semigroup.{0} real) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (comm_semigroup.{0} real))  := sorry --non-trivial
lemma new_lemma_50679 (h0 : not (ring (measurable_space.dynkin_system linarith.comp) -> false)) : @is_domain.{0} (measurable_space.dynkin_system.{0} linarith.comp) (@classical.by_contradiction'.{1} (ring.{0} (measurable_space.dynkin_system.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_50680 (h0 : complete_lattice (mul_zero_class empty)) : is_compactly_generated (mul_zero_class empty) := sorry --non-trivial
lemma new_lemma_50681 (h0 : list (normed_group (has_inv linarith.comp_source))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_50682 (h0 : complete_lattice (linear_ordered_add_comm_group_with_top (option pos))) : is_compactly_generated (linear_ordered_add_comm_group_with_top (option pos)) := sorry --non-trivial
lemma new_lemma_50683 (h0 : semiring (mul_one_class std_gen)) (h1 : ideal (mul_one_class std_gen)) : ideal.is_prime h1 := sorry --non-trivial
lemma new_lemma_50684 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (add_comm_monoid ennreal)) := sorry --non-trivial
lemma new_lemma_50685 (h0 : function.extfun (finset Type) (has_mem.mem linarith.ineq)) : @complete_space.{0} linarith.ineq (@finset.pi.empty.{1 0} Type uniform_space.{0} linarith.ineq (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) linarith.ineq) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_50686 (h0 : ring (add_group (has_norm linarith.comp))) : strong_rank_condition (add_group (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_50687 (h0 : set (mul_one_class (mul_one_class string_imp))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_50688 (h0 : ring (complete_distrib_lattice (option (option (option empty))))) : is_domain (complete_distrib_lattice (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_50689 (h0 : finset (boolean_algebra (has_neg environment.implicit_infer_kind))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_50690 (h0 : not (topological_space (metric_space num) -> false)) : @path_connected_space.{0} (metric_space.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (metric_space.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_50691 (h1 : add_group (has_div (distrib linarith.comp_source))) : is_add_cyclic (has_div (distrib linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_50692 (h0 : topological_space (normed_lattice_add_comm_group (has_Inf (has_Inf (has_Inf real))))) : loc_path_connected_space (normed_lattice_add_comm_group (has_Inf (has_Inf (has_Inf real)))) := sorry --non-trivial
lemma new_lemma_50693 (h0 : semiring (has_Inf (generalized_boolean_algebra Type))) : is_noetherian_ring (has_Inf (generalized_boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_50694 (h1 : complete_lattice (semi_normed_comm_ring linarith.ineq)) : complete_lattice.is_Sup_finite_compact (semi_normed_comm_ring linarith.ineq) := sorry --non-trivial
lemma new_lemma_50695 (h0 : topological_space (has_bot empty)) : t0_space (has_bot empty) := sorry --non-trivial
lemma new_lemma_50696 (h4 : not (uniform_space (denumerable char) -> false)) : @complete_space.{0} (denumerable.{0} char) (@classical.by_contradiction'.{1} (uniform_space.{0} (denumerable.{0} char)) h4)  := sorry --non-trivial
lemma new_lemma_50697 (h0 : ring (with_bot (has_inv linarith.ineq))) : is_domain (with_bot (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_50698 (h0 : complete_lattice (has_emptyc linarith.comp_source)) : is_atomistic (has_emptyc linarith.comp_source) := sorry --non-trivial
lemma new_lemma_50699 (h0 : list (left_cancel_monoid (semiring (semiring (semiring (normed_linear_ordered_group unsigned)))))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_50700 (h0 : functor.add_const (topological_space (has_Inf linarith.comp)) (has_zero Type)) : @loc_path_connected_space.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (has_Inf.{0} linarith.comp)) (has_zero.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_50701 (h0 : not (topological_space (complete_semilattice_Sup linarith.comp_source) -> false)) : @path_connected_space.{0} (complete_semilattice_Sup.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (complete_semilattice_Sup.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_50702 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (has_nndist.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_nndist.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_50703 (h0 : functor.add_const (topological_space (has_add pos)) name) : @sequential_space.{0} (has_add.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_50704 (h0 : functor.comp topological_space ring (add_comm_monoid (normed_comm_ring pos))) : @totally_disconnected_space.{0} (ring.{0} (add_comm_monoid.{0} (normed_comm_ring.{0} pos))) (@functor.comp.run.{0 0 0} topological_space.{0} ring.{0} (add_comm_monoid.{0} (normed_comm_ring.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_50705 (h0 : has_coe (mul_one_class enat) Prop) (h1 : mul_one_class enat) : @coe_b.{1 1} (mul_one_class.{0} enat) Prop h0 h1  := sorry --non-trivial
lemma new_lemma_50706 (h0 : functor.add_const (finset (has_Sup empty)) empty) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50707 (h0 : filter (simple_graph (has_to_string (has_to_string (has_add (has_pos_part (has_add linarith.comp))))))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_50708 (h0 : functor.add_const (complete_lattice (finset pos)) (option unsigned)) : @is_compactly_generated.{0} (finset.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (finset.{0} pos)) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_50709 (h0 : ring (semi_normed_ring (mul_one_class (mul_one_class reducibility_hints)))) : strong_rank_condition (semi_normed_ring (mul_one_class (mul_one_class reducibility_hints))) := sorry --non-trivial
lemma new_lemma_50710 (h0 : functor.add_const (ring (has_zero environment.implicit_infer_kind)) linarith.comp) : @strong_rank_condition.{0} (has_zero.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (has_zero.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50711 (h0 : ring (semigroup empty)) : is_domain (semigroup empty) := sorry --non-trivial
lemma new_lemma_50712 (h0 : add_group (monoid empty)) : is_add_cyclic (monoid empty) := sorry --non-trivial
lemma new_lemma_50713 (h0 : topological_space (has_neg_part (comm_group unsigned))) : preconnected_space (has_neg_part (comm_group unsigned)) := sorry --non-trivial
lemma new_lemma_50714 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (semiring.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_50715 (h0 : ring (normed_lattice_add_comm_group (sub_neg_monoid real))) : rank_condition (normed_lattice_add_comm_group (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_50716 (h0 : functor.add_const (topological_space (cancel_monoid name)) Type) : @t0_space.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (cancel_monoid.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_50717 (h0 : functor.add_const (list (option empty)) empty) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50718 (h1 : topological_space (normed_field (normed_field (normed_field char)))) : t0_space (normed_field (normed_field (normed_field char))) := sorry --non-trivial
lemma new_lemma_50719 (h0 : function.extfun Type ring) : @rank_condition.{0} (linear_ordered_add_comm_group.{0} linarith.ineq) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_ordered_add_comm_group.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_50720 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (has_top.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (has_top.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50721 (h0 : functor.add_const (uniform_space (normed_comm_ring environment.implicit_infer_kind)) Type) : @complete_space.{0} (normed_comm_ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (uniform_space.{0} (normed_comm_ring.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_50722 (h0 : ring (add_cancel_monoid (option ennreal))) : strong_rank_condition (add_cancel_monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_50723 (h0 : function.extfun Type ring) : @is_domain.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_50724 (h0 : topological_space (ordered_comm_ring (has_pos_part (has_add (has_add linarith.comp))))) : preirreducible_space (ordered_comm_ring (has_pos_part (has_add (has_add linarith.comp)))) := sorry --non-trivial
lemma new_lemma_50725 (h0 : topological_space (canonically_linear_ordered_monoid (option (option (option (option ennreal)))))) : discrete_topology (canonically_linear_ordered_monoid (option (option (option (option ennreal))))) := sorry --non-trivial
lemma new_lemma_50726 (h3 : complete_lattice (mul_one_class enat)) : complete_lattice.is_Sup_finite_compact (mul_one_class enat) := sorry --non-trivial
lemma new_lemma_50727 (h0 : topological_space (has_star (option unsigned))) : normal_space (has_star (option unsigned)) := sorry --non-trivial
lemma new_lemma_50728 (h0 : monoid (boolean_algebra.core linarith.comp)) : monoid.fg (boolean_algebra.core linarith.comp) := sorry --non-trivial
lemma new_lemma_50729 (h0 : normed_field (normed_field (mul_one_class string.iterator_imp)) -> Prop) : exists_unique h0 := sorry --non-trivial
lemma new_lemma_50730 (h0 : functor.add_const (filter (boolean_algebra name)) pos) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50731 (h0 : complete_lattice (distrib (has_nnnorm (has_nnnorm fun_info)))) : is_compactly_generated (distrib (has_nnnorm (has_nnnorm fun_info))) := sorry --non-trivial
lemma new_lemma_50732 (h0 : function.extfun Type (functor.add_const (topological_space (omega_complete_partial_order empty)))) : @totally_separated_space.{0} (omega_complete_partial_order.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (omega_complete_partial_order.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (omega_complete_partial_order.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_50733 (h0 : complete_lattice (simple_graph ereal)) : is_compactly_generated (simple_graph ereal) := sorry --non-trivial
lemma new_lemma_50734 (h0 : monoid (linear_ordered_add_comm_group (random_gen linarith.comp_source))) : monoid.fg (linear_ordered_add_comm_group (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_50735 (h0 : topological_space (metric_space linarith.comp)) : path_connected_space (metric_space linarith.comp) := sorry --non-trivial
lemma new_lemma_50736 (h0 : functor.add_const (function.extfun (Type 1) ring) pos) : @is_domain.{1} (ordered_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) ring.{1}) pos h0) (ordered_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_50737 (h1 : ring (distrib_lattice string_imp)) : rank_condition (distrib_lattice string_imp) := sorry --non-trivial
lemma new_lemma_50738 (h0 : topological_space (has_star num) -> Prop) (h1 : Exists (fun (x : topological_space (has_star num)), h0 x)) : @totally_disconnected_space.{0} (has_star.{0} num) (@classical.some.{1} (topological_space.{0} (has_star.{0} num)) h0 h1)  := sorry --non-trivial
lemma new_lemma_50739 (h0 : topological_space (canonically_ordered_comm_semiring name)) : loc_path_connected_space (canonically_ordered_comm_semiring name) := sorry --non-trivial
lemma new_lemma_50740 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (boolean_algebra.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_50741 (h0 : uniform_space (has_neg (has_to_string name))) : complete_space (has_neg (has_to_string name)) := sorry --non-trivial
lemma new_lemma_50742 (h0 : ring (omega_complete_partial_order (option empty))) : strong_rank_condition (omega_complete_partial_order (option empty)) := sorry --non-trivial
lemma new_lemma_50743 (h0 : functor.add_const (ordered_comm_monoid (complete_distrib_lattice pos)) Type) : @has_exists_mul_of_le.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (complete_distrib_lattice.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_50744 (h0 : functor.add_const (group (comm_group unsigned)) pos) : @normalizer_condition.{0} (comm_group.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (comm_group.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_50745 (h0 : functor.add_const (function.extfun Type group) pos) : @normalizer_condition.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) pos h0) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_50746 (h0 : functor.add_const (topological_space (has_nndist pos)) (finset Type)) : @t1_space.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (has_nndist.{0} pos)) (finset.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_50747 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (has_sub num)) := sorry --non-trivial
lemma new_lemma_50748 (h0 : has_mem.mem (with_one empty) has_emptyc.emptyc) : @rank_condition.{0} (with_one.{0} empty) (@finset.pi.empty.{1 0} Type ring.{0} (with_one.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_50749 (h0 : functor.add_const (list (has_nndist pos)) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50750 (h0 : fin has_zero.zero) : @is_domain.{0} (canonically_ordered_monoid.{0} pos) (@matrix.vec_empty.{0} (ring.{0} (canonically_ordered_monoid.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_50751 (h0 : functor.add_const (uniform_space (add_cancel_monoid environment.implicit_infer_kind)) linarith.comp) : @separated_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (uniform_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50752 (h0 : function.extfun Type topological_space) : @normal_space.{0} (add_cancel_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_cancel_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_50753 (h0 : list (has_emptyc (random_gen (has_norm fun_info)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_50754 (h0 : ring (comm_group (finset environment.implicit_infer_kind))) : is_principal_ideal_ring (comm_group (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_50755 (h0 : group (has_pos_part (has_add real))) : is_cyclic (has_pos_part (has_add real)) := sorry --non-trivial
lemma new_lemma_50756 (h0 : group (boolean_algebra (boolean_algebra linarith.comp))) : is_cyclic (boolean_algebra (boolean_algebra linarith.comp)) := sorry --non-trivial
lemma new_lemma_50757 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : filter.ne_bot (function.extfun_app (function.extfun_app h0 filter) (filter unsigned)) := sorry --non-trivial
lemma new_lemma_50758 (h0 : complete_lattice (has_add real)) : complete_lattice.is_Sup_finite_compact (has_add real) := sorry --non-trivial
lemma new_lemma_50759 (h0 : functor.add_const (complete_lattice (add_comm_monoid unsigned)) Type) : @is_compactly_generated.{0} (add_comm_monoid.{0} unsigned) (@functor.add_const.run.{0 1} (complete_lattice.{0} (add_comm_monoid.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_50760 (h0 : group (semigroup (finset Type))) : group.fg (semigroup (finset Type)) := sorry --non-trivial
lemma new_lemma_50761 (h0 : topological_space (cancel_monoid (has_neg name))) : preconnected_space (cancel_monoid (has_neg name)) := sorry --non-trivial
lemma new_lemma_50762 (h0 : ordered_comm_monoid (has_pos_part (has_pos_part (finset pos)))) : has_exists_mul_of_le (has_pos_part (has_pos_part (finset pos))) := sorry --non-trivial
lemma new_lemma_50763 (h0 : topological_space (normed_comm_ring (has_neg pos))) : preconnected_space (normed_comm_ring (has_neg pos)) := sorry --non-trivial
lemma new_lemma_50764 (h0 : functor.add_const (ring (finset pos)) pos) : @rank_condition.{0} (finset.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (finset.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_50765 (h1 : ring (topological_space (random_gen string_imp))) : rank_condition (topological_space (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_50766 (h0 : finset (has_pos_part (has_neg (ring (semigroup (has_zero (has_zero Type))))))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_50767 (h0 : ring (distrib_lattice to_additive.value_type)) : strong_rank_condition (distrib_lattice to_additive.value_type) := sorry --non-trivial
lemma new_lemma_50768 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (add_cancel_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type add_group.{0} h0 (add_cancel_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50769 (h0 : add_monoid (normed_comm_ring (cancel_monoid (has_neg_part (mul_zero_class name))))) : add_monoid.fg (normed_comm_ring (cancel_monoid (has_neg_part (mul_zero_class name)))) := sorry --non-trivial
lemma new_lemma_50770 (h2 : not (filter (distrib fun_info) -> false)) : filter.ne_bot (classical.by_contradiction' h2) := sorry --non-trivial
lemma new_lemma_50771 (h0 : functor.add_const (complete_lattice (has_neg unsigned)) linarith.comp) : @is_atomistic.{0} (has_neg.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_neg.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50772 (h0 : topological_space (has_to_string (finset (has_add pos)))) : normal_space (has_to_string (finset (has_add pos))) := sorry --non-trivial
lemma new_lemma_50773 (h0 : group (has_zero (has_to_string (has_to_string (has_to_string (comm_group Type)))))) : normalizer_condition (has_zero (has_to_string (has_to_string (has_to_string (comm_group Type))))) := sorry --non-trivial
lemma new_lemma_50774 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (has_ssubset.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_ssubset.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_50775 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (encodable.{0} string_imp) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (encodable.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_50776 (h0 : uniform_space (add_comm_monoid (option (option empty)))) : complete_space (add_comm_monoid (option (option empty))) := sorry --non-trivial
lemma new_lemma_50777 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (monoid.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_50778 (h0 : ring (normed_comm_ring (comm_group (comm_group (comm_group unsigned))))) : is_principal_ideal_ring (normed_comm_ring (comm_group (comm_group (comm_group unsigned)))) := sorry --non-trivial
lemma new_lemma_50779 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (semiring.{0} (has_norm.{0} linarith.comp)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semiring.{0} (has_norm.{0} linarith.comp)))  := sorry --non-trivial
lemma new_lemma_50780 (h0 : topological_space (canonically_linear_ordered_monoid pos)) : t1_space (canonically_linear_ordered_monoid pos) := sorry --non-trivial
lemma new_lemma_50781 (h0 : group (normed_lattice_add_comm_group (has_add (has_Inf linarith.comp)))) : group.fg (normed_lattice_add_comm_group (has_add (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_50782 (h0 : group (boolean_algebra.core (generalized_boolean_algebra Type))) : group.fg (boolean_algebra.core (generalized_boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_50783 (h1 : has_lt (mul_one_class (mul_one_class (normed_field ereal)))) : no_max_order (mul_one_class (mul_one_class (normed_field ereal))) := sorry --non-trivial
lemma new_lemma_50784 (h0 : monoid (complete_semilattice_Sup (complete_semilattice_Sup (has_emptyc congr_arg_kind)))) : monoid.fg (complete_semilattice_Sup (complete_semilattice_Sup (has_emptyc congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_50785 (h0 : topological_space (semi_normed_comm_ring reducibility_hints)) : t0_space (semi_normed_comm_ring reducibility_hints) := sorry --non-trivial
lemma new_lemma_50786 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (add_cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (add_cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_50787 (h0 : fin has_zero.zero) : @group.fg.{0} (canonically_ordered_monoid.{0} name) (@matrix.vec_empty.{0} (group.{0} (canonically_ordered_monoid.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_50788 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @monoid.fg.{1} (has_nndist.{1} Type) (@matrix.vec_empty.{1} (monoid.{1} (has_nndist.{1} Type)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_50789 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @rank_condition.{0} (linear_ordered_add_comm_group.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) ring.{0}) (linear_ordered_add_comm_group.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_50790 (h0 : functor.comp topological_space has_div linarith.ineq) (h1 : add_group (has_div linarith.ineq)) : @topological_add_group.{0} (has_div.{0} linarith.ineq) (@functor.comp.run.{0 0 0} topological_space.{0} has_div.{0} linarith.ineq h0) h1  := sorry --non-trivial
lemma new_lemma_50791 (h0 : functor.add_const (topological_space (semiring num)) congr_arg_kind) : @path_connected_space.{0} (semiring.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (semiring.{0} num)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_50792 (h0 : ordered_add_comm_monoid (ordered_ring (semiring congr_arg_kind))) : archimedean (ordered_ring (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_50793 (h0 : complete_lattice (has_nnnorm (has_pos_part (random_gen string_imp)))) : is_compactly_generated (has_nnnorm (has_pos_part (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_50794 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (linear_ordered_field.{0} (option.{0} num)) (@function.extfun_app.{2 1} Type add_group.{0} h0 (linear_ordered_field.{0} (option.{0} num)))  := sorry --non-trivial
lemma new_lemma_50795 (h0 : functor.add_const (topological_space (simple_graph pos)) (has_Inf linarith.comp)) : @totally_separated_space.{0} (simple_graph.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (simple_graph.{0} pos)) (has_Inf.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_50796 (h0 : group (has_neg (has_add pos))) : normalizer_condition (has_neg (has_add pos)) := sorry --non-trivial
lemma new_lemma_50797 (h0 : functor.add_const (group (has_neg unsigned)) linarith.comp) : @is_cyclic.{0} (has_neg.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (has_neg.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50798 (h1 : complete_lattice (with_one (with_bot to_additive.value_type))) : is_atomistic (with_one (with_bot to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_50799 (h0 : functor.add_const (list ennreal) num) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50800 (h0 : functor.add_const (ordered_add_comm_monoid (partial_order (option empty))) (option unsigned)) : @archimedean.{0} (partial_order.{0} (option.{0} empty)) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (partial_order.{0} (option.{0} empty))) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_50801 (h0 : topological_space (canonically_ordered_comm_semiring (has_to_string unsigned))) : totally_disconnected_space (canonically_ordered_comm_semiring (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_50802 (h0 : not (complete_lattice (has_append string_imp) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (has_append.{0} string_imp) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_append.{0} string_imp)) h0)  := sorry --non-trivial
lemma new_lemma_50803 (h0 : filter (ordered_comm_monoid (has_pos_part (has_add pos)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_50804 (h0 : fin has_zero.zero) : @complete_space.{0} (sub_neg_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type uniform_space.{0}) h0) (sub_neg_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_50805 (h0 : not (topological_space (has_top (has_norm linarith.comp_source)) -> false)) : @path_connected_space.{0} (has_top.{0} (has_norm.{0} linarith.comp_source)) (@classical.by_contradiction'.{1} (topological_space.{0} (has_top.{0} (has_norm.{0} linarith.comp_source))) h0)  := sorry --non-trivial
lemma new_lemma_50806 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (add_comm_monoid.{0} (option.{0} num)) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (add_comm_monoid.{0} (option.{0} num)))  := sorry --non-trivial
lemma new_lemma_50807 (h0 : group (has_add (has_bot real))) : is_simple_group (has_add (has_bot real)) := sorry --non-trivial
lemma new_lemma_50808 (h0 : nat) (h1 : not (option nat -> false)) : nat.min_sq_fac_prop h0 (classical.by_contradiction' h1) := sorry --non-trivial
lemma new_lemma_50809 (h0 : group (left_cancel_monoid (option (option (option unsigned))))) : is_cyclic (left_cancel_monoid (option (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_50810 (h0 : functor.add_const (function.extfun Type ordered_comm_monoid) pos) : @has_exists_mul_of_le.{0} (semigroup.{0} linarith.comp) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) pos h0) (semigroup.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_50811 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @preirreducible_space.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_50812 (h0 : semiring (comm_group (comm_group (has_neg_part name)))) : is_noetherian_ring (comm_group (comm_group (has_neg_part name))) := sorry --non-trivial
lemma new_lemma_50813 (h0 : ring (has_append (has_nnnorm (has_nnnorm (has_nnnorm (has_nnnorm char)))))) : strong_rank_condition (has_append (has_nnnorm (has_nnnorm (has_nnnorm (has_nnnorm char))))) := sorry --non-trivial
lemma new_lemma_50814 (h0 : semiring (canonically_ordered_monoid (comm_semigroup (has_bot pos)))) : is_noetherian_ring (canonically_ordered_monoid (comm_semigroup (has_bot pos))) := sorry --non-trivial
lemma new_lemma_50815 (h0 : topological_space (add_cancel_monoid num)) : preirreducible_space (add_cancel_monoid num) := sorry --non-trivial
lemma new_lemma_50816 (h0 : functor.add_const (topological_space (boolean_algebra Type)) linarith.comp) : @t0_space.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (boolean_algebra.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50817 (h0 : functor.add_const (topological_space (preorder num)) num) : @t0_space.{0} (preorder.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_50818 (h0 : fin has_zero.zero) : @t1_space.{0} (normed_lattice_add_comm_group.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (normed_lattice_add_comm_group.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_50819 (h0 : function.extfun Type ring) : @rank_condition.{0} (simple_graph.{0} name) (@function.extfun_app.{2 1} Type ring.{0} h0 (simple_graph.{0} name))  := sorry --non-trivial
lemma new_lemma_50820 (h0 : topological_space (canonically_linear_ordered_monoid (option num))) : preirreducible_space (canonically_linear_ordered_monoid (option num)) := sorry --non-trivial
lemma new_lemma_50821 (h0 : ordered_add_comm_monoid (cancel_monoid (option empty))) : archimedean (cancel_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_50822 (h0 : topological_space (has_neg_part (has_add (finset name)))) : t1_space (has_neg_part (has_add (finset name))) := sorry --non-trivial
lemma new_lemma_50823 (h0 : ordered_comm_monoid (has_pos_part (has_Inf (has_add (has_Inf pos))))) : has_exists_mul_of_le (has_pos_part (has_Inf (has_add (has_Inf pos)))) := sorry --non-trivial
lemma new_lemma_50824 (h0 : ring (random_gen unsigned)) : is_domain (random_gen unsigned) := sorry --non-trivial
lemma new_lemma_50825 (h0 : not (topological_space (semi_normed_ring to_additive.value_type) -> false)) : @path_connected_space.{0} (semi_normed_ring.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (semi_normed_ring.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_50826 (h0 : uniform_space (preorder num)) : separated_space (preorder num) := sorry --non-trivial
lemma new_lemma_50827 (h0 : topological_space (comm_ring (comm_ring linarith.ineq))) : t0_space (comm_ring (comm_ring linarith.ineq)) := sorry --non-trivial
lemma new_lemma_50828 (h0 : ordered_add_comm_monoid (ordered_comm_monoid real)) : archimedean (ordered_comm_monoid real) := sorry --non-trivial
lemma new_lemma_50829 (h0 : topological_space (denumerable char)) : t0_space (denumerable char) := sorry --non-trivial
lemma new_lemma_50830 : infinite num := sorry --non-trivial
lemma new_lemma_50831 (h0 : functor.add_const (function.extfun Type add_monoid) (ring pos)) : @add_monoid.fg.{0} (simple_graph.{0} pos) (@function.extfun_app.{2 1} Type add_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type add_monoid.{0}) (ring.{0} pos) h0) (simple_graph.{0} pos))  := sorry --non-trivial
lemma new_lemma_50832 (h0 : topological_space (has_zero (comm_group (comm_group Type)))) : irreducible_space (has_zero (comm_group (comm_group Type))) := sorry --non-trivial
lemma new_lemma_50833 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (preorder.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (preorder.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50834 (h0 : not (function.extfun Type topological_space -> false)) : @locally_compact_space.{0} (normed_group.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (normed_group.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_50835 (h2 : function.extfun Type complete_lattice) : @is_atomistic.{0} (with_bot.{0} linarith.ineq) (@function.extfun_app.{2 1} Type complete_lattice.{0} h2 (with_bot.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_50836 (h0 : topological_space (comm_group (comm_group environment.implicit_infer_kind))) : locally_compact_space (comm_group (comm_group environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_50837 (h0 : fin has_zero.zero) : @strong_rank_condition.{0} (generalized_boolean_algebra.{0} linarith.comp) (@matrix.vec_empty.{0} (ring.{0} (generalized_boolean_algebra.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_50838 (h2 : uniform_space (comm_ring fun_info)) : complete_space (comm_ring fun_info) := sorry --non-trivial
lemma new_lemma_50839 (h0 : set (semi_normed_ring string.iterator_imp)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_50840 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (as_linear_order.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (as_linear_order.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_50841 (h0 : list (distrib_lattice (random_gen string_imp))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_50842 (h0 : functor.add_const (topological_space (cancel_monoid pos)) (has_add Type)) : @sequential_space.{0} (cancel_monoid.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (cancel_monoid.{0} pos)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_50843 (h0 : functor.add_const (group pos) ennreal) : @group.fg.{0} pos (@functor.add_const.run.{0 0} (group.{0} pos) ennreal h0)  := sorry --non-trivial
lemma new_lemma_50844 (h0 : not (function.extfun Type topological_space -> false)) : @discrete_topology.{0} fun_info (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) fun_info)  := sorry --non-trivial
lemma new_lemma_50845 (h0 : functor.add_const (topological_space (is_R_or_C unsigned)) num) : @t1_space.{0} (is_R_or_C.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (is_R_or_C.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_50846 (h0 : function.extfun Type (functor.add_const Prop)) : functor.add_const.run (function.extfun_app h0 (has_to_string environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_50847 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring Type)) name) : @loc_path_connected_space.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (canonically_ordered_comm_semiring.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_50848 (h0 : group (has_neg_part (has_add pos))) : group.fg (has_neg_part (has_add pos)) := sorry --non-trivial
lemma new_lemma_50849 (h0 : functor.add_const (ring (boolean_algebra name)) pos) : @rank_condition.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_50850 (h0 : complete_lattice (uniform_space to_additive.value_type)) : is_compactly_generated (uniform_space to_additive.value_type) := sorry --non-trivial
lemma new_lemma_50851 (h0 : functor.add_const (topological_space (normed_comm_ring linarith.comp)) (has_Inf (has_neg (ring linarith.comp)))) : @totally_separated_space.{0} (normed_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} linarith.comp)) (has_Inf.{0} (has_neg.{0} (ring.{0} linarith.comp))) h0)  := sorry --non-trivial
lemma new_lemma_50852 (h0 : functor.add_const Prop (has_norm (semiring (has_norm (with_bot (has_norm unsigned)))))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_50853 (h0 : group (has_bot (has_add pos))) : group.fg (has_bot (has_add pos)) := sorry --non-trivial
lemma new_lemma_50854 (h0 : not (uniform_space (order_dual empty) -> false)) : @separated_space.{0} (order_dual.{0} empty) (@classical.by_contradiction'.{1} (uniform_space.{0} (order_dual.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_50855 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (semiring.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (semiring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50856 (h1 : list (denumerable linarith.ineq)) : list.nodup h1 := sorry --non-trivial
lemma new_lemma_50857 (h0 : ring (linear_ordered_semiring (semiring linarith.comp))) : is_domain (linear_ordered_semiring (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_50858 (h0 : topological_space (has_neg (has_neg Type))) : normal_space (has_neg (has_neg Type)) := sorry --non-trivial
lemma new_lemma_50859 (h0 : complete_lattice (normed_group (has_inv (has_inv (has_inv fun_info))))) : is_atomistic (normed_group (has_inv (has_inv (has_inv fun_info)))) := sorry --non-trivial
lemma new_lemma_50860 (h0 : functor.add_const (ring (has_dist empty)) unsigned) : @rank_condition.{0} (has_dist.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (has_dist.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_50861 (h0 : topological_space (preorder empty)) : totally_separated_space (preorder empty) := sorry --non-trivial
lemma new_lemma_50862 (h0 : add_monoid (has_add (finset linarith.comp))) : add_monoid.fg (has_add (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_50863 (h0 : cancel_comm_monoid_with_zero (has_Inf (has_add real))) : unique_factorization_monoid (has_Inf (has_add real)) := sorry --non-trivial
lemma new_lemma_50864 (h0 : functor.add_const (topological_space (boolean_algebra name)) Type) : @normal_space.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_50865 (h0 : group (finset pos)) : normalizer_condition (finset pos) := sorry --non-trivial
lemma new_lemma_50866 (h0 : functor.add_const (complete_lattice (has_zero environment.implicit_infer_kind)) pos) : @is_compactly_generated.{0} (has_zero.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_zero.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_50867 (h0 : not (function.extfun Prop (fun (x : Prop), Prop) -> false)) : classical.epsilon (function.extfun_app (classical.by_contradiction' h0)) := sorry --non-trivial
lemma new_lemma_50868 (h0 : functor.comp complete_lattice has_to_string name) : @is_atomistic.{0} (has_to_string.{0} name) (@functor.comp.run.{0 0 0} complete_lattice.{0} has_to_string.{0} name h0)  := sorry --non-trivial
lemma new_lemma_50869 (h0 : has_mem.mem ring has_emptyc.emptyc) : @strong_rank_condition.{0} (@id.{2} Type congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} h0) (@id.{2} Type congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50870 (h0 : functor.add_const (filter (finset Type)) environment.implicit_infer_kind) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50871 (h0 : functor.add_const (topological_space auto.case_option) (option unsigned)) : @topological_space.separable_space.{0} auto.case_option (@functor.add_const.run.{0 0} (topological_space.{0} auto.case_option) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_50872 (h0 : functor.add_const (group (has_zero name)) (has_add (has_add (has_add (has_add pos))))) : @normalizer_condition.{0} (has_zero.{0} name) (@functor.add_const.run.{0 0} (group.{0} (has_zero.{0} name)) (has_add.{0} (has_add.{0} (has_add.{0} (has_add.{0} pos)))) h0)  := sorry --non-trivial
lemma new_lemma_50873 (h0 : functor.add_const (semiring (generalized_boolean_algebra pos)) Type) : @is_noetherian_ring.{0} (generalized_boolean_algebra.{0} pos) (@functor.add_const.run.{0 1} (semiring.{0} (generalized_boolean_algebra.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_50874 (h0 : ring (has_compl (mul_one_class linarith.comp_source))) : strong_rank_condition (has_compl (mul_one_class linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_50875 (h0 : list (add_cancel_monoid (ring pos))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_50876 (h0 : ring (sub_neg_monoid pos)) : is_principal_ideal_ring (sub_neg_monoid pos) := sorry --non-trivial
lemma new_lemma_50877 (h0 : topological_space Type) : locally_compact_space Type := sorry --non-trivial
lemma new_lemma_50878 (h0 : topological_space (has_nnnorm (has_nnnorm (has_nnnorm linarith.ineq)))) : totally_disconnected_space (has_nnnorm (has_nnnorm (has_nnnorm linarith.ineq))) := sorry --non-trivial
lemma new_lemma_50879 (h0 : has_mem.mem real.angle has_emptyc.emptyc) : @t0_space.{0} real.angle (@finset.pi.empty.{1 0} Type topological_space.{0} real.angle h0)  := sorry --non-trivial
lemma new_lemma_50880 (h0 : function.extfun Type (functor.add_const (filter (complete_distrib_lattice ennreal)))) : countable_Inter_filter (functor.add_const.run (function.extfun_app h0 num)) := sorry --non-trivial
lemma new_lemma_50881 (h0 : function.extfun Type (functor.add_const (topological_space (has_add linarith.comp)))) : @totally_separated_space.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} linarith.comp)) linarith.comp (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (has_add.{0} linarith.comp))) h0 linarith.comp))  := sorry --non-trivial
lemma new_lemma_50882 (h0 : topological_space (random_gen (random_gen (random_gen fun_info)))) : path_connected_space (random_gen (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_50883 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_sub.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_sub.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_50884 (h1 : topological_space (linear_ordered_add_comm_group (has_nnnorm (has_nnnorm char)))) : path_connected_space (linear_ordered_add_comm_group (has_nnnorm (has_nnnorm char))) := sorry --non-trivial
lemma new_lemma_50885 (h0 : topological_space (has_emptyc (has_norm (random_gen (add_left_cancel_monoid fun_info))))) : totally_separated_space (has_emptyc (has_norm (random_gen (add_left_cancel_monoid fun_info)))) := sorry --non-trivial
lemma new_lemma_50886 (h0 : functor.add_const (topological_space (has_nndist Type)) name) : @path_connected_space.{1} (has_nndist.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_nndist.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_50887 (h0 : topological_space (has_bot empty)) : totally_separated_space (has_bot empty) := sorry --non-trivial
lemma new_lemma_50888 (h0 : add_group (add_comm_monoid (option pos))) : is_add_cyclic (add_comm_monoid (option pos)) := sorry --non-trivial
lemma new_lemma_50889 (h0 : group (distrib_lattice (random_gen (random_gen linarith.ineq)))) : group.fg (distrib_lattice (random_gen (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_50890 (h1 : ring (add_left_cancel_monoid fun_info)) : strong_rank_condition (add_left_cancel_monoid fun_info) := sorry --non-trivial
lemma new_lemma_50891 (h0 : functor.add_const (uniform_space (ordered_comm_ring name)) Type) : @separated_space.{0} (ordered_comm_ring.{0} name) (@functor.add_const.run.{0 1} (uniform_space.{0} (ordered_comm_ring.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_50892 (h0 : ring (boolean_algebra (has_add name))) : is_principal_ideal_ring (boolean_algebra (has_add name)) := sorry --non-trivial
lemma new_lemma_50893 (h0 : not (monoid (random_gen string_imp) -> false)) : @monoid.fg.{0} (random_gen.{0} string_imp) (@classical.by_contradiction'.{1} (monoid.{0} (random_gen.{0} string_imp)) h0)  := sorry --non-trivial
lemma new_lemma_50894 (h0 : functor.add_const (group (mul_zero_class Type)) pos) : @normalizer_condition.{1} (mul_zero_class.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (mul_zero_class.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_50895 (h0 : not (function.extfun Type ring -> false)) : @is_domain.{0} (measurable_space.dynkin_system.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (measurable_space.dynkin_system.{0} num))  := sorry --non-trivial
lemma new_lemma_50896 (h0 : functor.add_const (group (has_zero pos)) (has_neg (ring (mul_one_class linarith.comp)))) : @normalizer_condition.{0} (has_zero.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_zero.{0} pos)) (has_neg.{0} (ring.{0} (mul_one_class.{0} linarith.comp))) h0)  := sorry --non-trivial
lemma new_lemma_50897 (h0 : add_monoid (with_bot (semiring unsigned))) : add_monoid.fg (with_bot (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_50898 (h0 : function.extfun (finset Type) (has_mem.mem (semiring empty))) : @normalizer_condition.{0} (semiring.{0} empty) (@finset.pi.empty.{1 0} Type group.{0} (semiring.{0} empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (semiring.{0} empty)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_50899 (h0 : topological_space (partial_order (semiring (semiring empty)))) : locally_compact_space (partial_order (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_50900 (h1 : has_lt (normed_field linarith.ineq)) : no_max_order (normed_field linarith.ineq) := sorry --non-trivial
lemma new_lemma_50901 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : list.nodup (function.extfun_app (function.extfun_app h0 list) (has_inter empty)) := sorry --non-trivial
lemma new_lemma_50902 (h1 : set (char -> enat)) : set.separates_points h1 := sorry --non-trivial
lemma new_lemma_50903 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} unsigned (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) unsigned)  := sorry --non-trivial
lemma new_lemma_50904 (h0 : not (topological_space (distrib_lattice (has_nnnorm fun_info)) -> false)) : @totally_disconnected_space.{0} (distrib_lattice.{0} (has_nnnorm.{0} fun_info)) (@classical.by_contradiction'.{1} (topological_space.{0} (distrib_lattice.{0} (has_nnnorm.{0} fun_info))) h0)  := sorry --non-trivial
lemma new_lemma_50905 (h0 : function.extfun nat fin) : @archimedean.{0} (has_Inf.{0} pos) (@matrix.vec_empty.{0} (ordered_add_comm_monoid.{0} (has_Inf.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_50906 (h0 : ring (simple_graph (mul_one_class (has_le fun_info)))) : is_domain (simple_graph (mul_one_class (has_le fun_info))) := sorry --non-trivial
lemma new_lemma_50907 (h0 : uniform_space (complete_linear_order (semiring empty))) : separated_space (complete_linear_order (semiring empty)) := sorry --non-trivial
lemma new_lemma_50908 (h0 : topological_space (has_add (ordered_comm_monoid real))) : irreducible_space (has_add (ordered_comm_monoid real)) := sorry --non-trivial
lemma new_lemma_50909 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (ordered_cancel_add_comm_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_cancel_add_comm_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_50910 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (with_one.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (with_one.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_50911 (h0 : not (has_mem.mem (has_top congr_arg_kind) has_emptyc.emptyc -> false)) : @locally_compact_space.{0} (has_top.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_top.{0} congr_arg_kind) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_top.{0} congr_arg_kind) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_50912 (h0 : complete_lattice (has_neg linarith.comp)) : is_compactly_generated (has_neg linarith.comp) := sorry --non-trivial
lemma new_lemma_50913 (h0 : topological_space Type) : t1_space Type := sorry --non-trivial
lemma new_lemma_50914 (h1 : topological_space (id (random_gen (random_gen (random_gen linarith.ineq))))) : t0_space (id (random_gen (random_gen (random_gen linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_50915 (h0 : ring (mul_one_class (pseudo_metric_space environment.projection_info))) : rank_condition (mul_one_class (pseudo_metric_space environment.projection_info)) := sorry --non-trivial
lemma new_lemma_50916 (h0 : not (function.extfun (finset Type) (has_mem.mem (normed_group num)) -> false)) : @normalizer_condition.{0} (normed_group.{0} num) (@finset.pi.empty.{1 0} Type group.{0} (normed_group.{0} num) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (normed_group.{0} num)) (@classical.by_contradiction'.{0} (function.extfun.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (normed_group.{0} num))) h0) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_50917 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (has_Inf.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_Inf.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_50918 (h0 : functor.add_const (topological_space (semigroup environment.implicit_infer_kind)) Type) : @totally_disconnected_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (semigroup.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_50919 (h0 : add_group (boolean_algebra environment.implicit_infer_kind)) : is_add_cyclic (boolean_algebra environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_50920 (h0 : topological_space (has_add (has_neg Type))) : topological_space.separable_space (has_add (has_neg Type)) := sorry --non-trivial
lemma new_lemma_50921 (h0 : ring (has_emptyc (has_norm (has_norm linarith.comp)))) : strong_rank_condition (has_emptyc (has_norm (has_norm linarith.comp))) := sorry --non-trivial
lemma new_lemma_50922 (h1 : topological_space (has_emptyc linarith.comp)) : locally_compact_space (has_emptyc linarith.comp) := sorry --non-trivial
lemma new_lemma_50923 (h0 : functor.add_const (function.extfun Type cancel_comm_monoid_with_zero) Type) : @unique_factorization_monoid.{0} pos (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type cancel_comm_monoid_with_zero.{0}) Type h0) pos)  := sorry --non-trivial
lemma new_lemma_50924 (h0 : topological_space (has_ssubset linarith.ineq)) : path_connected_space (has_ssubset linarith.ineq) := sorry --non-trivial
lemma new_lemma_50925 (h0 : ring (complete_distrib_lattice (option (option empty)))) : is_principal_ideal_ring (complete_distrib_lattice (option (option empty))) := sorry --non-trivial
lemma new_lemma_50926 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (left_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (left_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_50927 (h0 : functor.add_const (group (ring Type)) linarith.comp) : @normalizer_condition.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (ring.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_50928 (h0 : topological_space (measure_theory.measure_space empty)) : totally_disconnected_space (measure_theory.measure_space empty) := sorry --non-trivial
lemma new_lemma_50929 (h1 : complete_lattice (has_ssubset to_additive.value_type)) : is_compactly_generated (has_ssubset to_additive.value_type) := sorry --non-trivial
lemma new_lemma_50930 (h0 : group (normed_comm_ring (has_add name))) : is_simple_group (normed_comm_ring (has_add name)) := sorry --non-trivial
lemma new_lemma_50931 (h0 : functor.add_const (topological_space (preorder num)) num) : @preirreducible_space.{0} (preorder.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_50932 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (linear_ordered_add_comm_group.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (linear_ordered_add_comm_group.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_50933 (h0 : functor.add_const (ring (linear_order unsigned)) (option empty)) : @strong_rank_condition.{0} (linear_order.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (linear_order.{0} unsigned)) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_50934 (h0 : functor.add_const (group (has_neg pos)) Type) : @normalizer_condition.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 1} (group.{0} (has_neg.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_50935 (h0 : ring (has_emptyc (random_gen (random_gen num)))) : rank_condition (has_emptyc (random_gen (random_gen num))) := sorry --non-trivial
lemma new_lemma_50936 (h0 : group (complete_semilattice_Sup (has_inv linarith.comp_source))) : normalizer_condition (complete_semilattice_Sup (has_inv linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_50937 (h0 : not (function.extfun (finset Type) (has_mem.mem (measurable_space empty)) -> false)) : @separated_space.{0} (measurable_space.{0} empty) (@finset.pi.empty.{1 0} Type uniform_space.{0} (measurable_space.{0} empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (measurable_space.{0} empty)) (@classical.by_contradiction'.{0} (function.extfun.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (measurable_space.{0} empty))) h0) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_50938 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (complete_distrib_lattice.{0} ennreal) (@function.extfun_app.{2 1} Type semiring.{0} h0 (complete_distrib_lattice.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_50939 (h1 : topological_space (has_emptyc fun_info)) : t0_space (has_emptyc fun_info) := sorry --non-trivial
lemma new_lemma_50940 (h0 : topological_space (add_group num)) : irreducible_space (add_group num) := sorry --non-trivial
lemma new_lemma_50941 (h0 : functor.comp semiring has_neg name) : @is_noetherian_ring.{0} (has_neg.{0} name) (@functor.comp.run.{0 0 0} semiring.{0} has_neg.{0} name h0)  := sorry --non-trivial
lemma new_lemma_50942 (h0 : topological_space (cancel_monoid Type)) : totally_disconnected_space (cancel_monoid Type) := sorry --non-trivial
lemma new_lemma_50943 (h0 : ring (normed_group (has_inv fun_info))) : is_domain (normed_group (has_inv fun_info)) := sorry --non-trivial
lemma new_lemma_50944 (h0 : list (ordered_ring (semiring unsigned))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_50945 (h0 : topological_space (simple_graph enat)) : totally_disconnected_space (simple_graph enat) := sorry --non-trivial
lemma new_lemma_50946 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (add_left_cancel_semigroup.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (add_left_cancel_semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_50947 (h0 : topological_space (linear_ordered_add_comm_group linarith.ineq)) : path_connected_space (linear_ordered_add_comm_group linarith.ineq) := sorry --non-trivial
lemma new_lemma_50948 (h0 : functor.add_const (topological_space (add_cancel_monoid environment.implicit_infer_kind)) pos) : @preconnected_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_50949 (h0 : topological_space (has_Inf (ordered_ring (has_neg (ring linarith.comp))))) : t0_space (has_Inf (ordered_ring (has_neg (ring linarith.comp)))) := sorry --non-trivial
lemma new_lemma_50950 (h0 : function.extfun Type group) : @is_cyclic.{0} (boolean_algebra.core.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (boolean_algebra.core.{0} name))  := sorry --non-trivial
lemma new_lemma_50951 (h0 : uniform_space (has_bot (ordered_comm_monoid (has_add name)))) : complete_space (has_bot (ordered_comm_monoid (has_add name))) := sorry --non-trivial
lemma new_lemma_50952 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (linear_ordered_comm_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (linear_ordered_comm_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_50953 (h0 : functor.add_const (topological_space (normed_comm_ring unsigned)) (has_neg linarith.comp)) : @normal_space.{0} (normed_comm_ring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} unsigned)) (has_neg.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_50954 (h0 : add_monoid (boolean_algebra.core (has_nndist name))) : add_monoid.fg (boolean_algebra.core (has_nndist name)) := sorry --non-trivial
lemma new_lemma_50955 (h0 : group (is_R_or_C (option empty))) : group.fg (is_R_or_C (option empty)) := sorry --non-trivial
lemma new_lemma_50956 (h0 : topological_space (linear_ordered_comm_ring empty)) : totally_separated_space (linear_ordered_comm_ring empty) := sorry --non-trivial
lemma new_lemma_50957 (h0 : complete_lattice (has_nndist num)) : complete_lattice.is_Sup_finite_compact (has_nndist num) := sorry --non-trivial
lemma new_lemma_50958 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_emptyc.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_emptyc.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_50959 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (measurable_space.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measurable_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_50960 (h0 : functor.comp ring boolean_algebra.core (comm_group (has_add (semigroup (has_add linarith.comp))))) : @rank_condition.{0} (boolean_algebra.core.{0} (comm_group.{0} (has_add.{0} (semigroup.{0} (has_add.{0} linarith.comp))))) (@functor.comp.run.{0 0 0} ring.{0} boolean_algebra.core.{0} (comm_group.{0} (has_add.{0} (semigroup.{0} (has_add.{0} linarith.comp)))) h0)  := sorry --non-trivial
lemma new_lemma_50961 (h0 : functor.add_const (filter (normed_comm_ring linarith.comp)) (has_neg Type)) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_50962 (h0 : topological_space fun_info) (h1 : set fun_info) : is_path_connected h1 := sorry --non-trivial
lemma new_lemma_50963 (h2 : uniform_space (simple_graph to_additive.value_type)) : complete_space (simple_graph to_additive.value_type) := sorry --non-trivial
lemma new_lemma_50964 (h0 : topological_space (canonically_linear_ordered_monoid Type)) : totally_disconnected_space (canonically_linear_ordered_monoid Type) := sorry --non-trivial
lemma new_lemma_50965 (h0 : functor.add_const (ring (has_sdiff empty)) empty) : @strong_rank_condition.{0} (has_sdiff.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (has_sdiff.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_50966 (h0 : topological_space (monoid_with_zero (option ennreal))) : t0_space (monoid_with_zero (option ennreal)) := sorry --non-trivial
lemma new_lemma_50967 (h0 : function.extfun Type topological_space) : @t0_space.{0} (normed_linear_ordered_group.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_linear_ordered_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_50968 (h0 : functor.add_const (add_group (ordered_comm_ring pos)) real) : @is_add_cyclic.{0} (ordered_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (add_group.{0} (ordered_comm_ring.{0} pos)) real h0)  := sorry --non-trivial
lemma new_lemma_50969 (h0 : filter (canonically_ordered_comm_semiring ennreal)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_50970 (h0 : topological_space (normed_group congr_arg_kind)) : discrete_topology (normed_group congr_arg_kind) := sorry --non-trivial
lemma new_lemma_50971 (h0 : functor.add_const (topological_space (left_cancel_monoid num)) congr_arg_kind) : @t1_space.{0} (left_cancel_monoid.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_monoid.{0} num)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_50972 (h0 : uniform_space (canonically_ordered_monoid (has_bot (has_bot real)))) : complete_space (canonically_ordered_monoid (has_bot (has_bot real))) := sorry --non-trivial
lemma new_lemma_50973 (h0 : complete_lattice (has_top (with_bot (with_bot to_additive.value_type)))) : complete_lattice.is_Sup_finite_compact (has_top (with_bot (with_bot to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_50974 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (normed_comm_ring.{0} pos) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (normed_comm_ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_50975 (h1 : topological_space environment.projection_info) : totally_disconnected_space environment.projection_info := sorry --non-trivial
lemma new_lemma_50976 (h0 : complete_lattice (has_add (has_add real))) : is_compactly_generated (has_add (has_add real)) := sorry --non-trivial
lemma new_lemma_50977 (h0 : list (has_to_string (has_add name))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_50978 (h0 : functor.add_const (ring (boolean_algebra.core Type)) Type) : @strong_rank_condition.{1} (boolean_algebra.core.{1} Type) (@functor.add_const.run.{1 1} (ring.{1} (boolean_algebra.core.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_50979 (h0 : ordered_comm_monoid (ring (normed_comm_ring (has_Inf linarith.comp)))) : has_exists_mul_of_le (ring (normed_comm_ring (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_50980 (h0 : functor.add_const (monoid (cancel_monoid Type)) Type) : @monoid.fg.{1} (cancel_monoid.{1} Type) (@functor.add_const.run.{1 1} (monoid.{1} (cancel_monoid.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_50981 (h0 : ring (canonically_ordered_comm_semiring (option empty))) : rank_condition (canonically_ordered_comm_semiring (option empty)) := sorry --non-trivial
lemma new_lemma_50982 (h1 h2 : multiset (has_nnnorm string_imp)) : multiset.disjoint h1 h2 := sorry --non-trivial
lemma new_lemma_50983 (h0 h1 : multiset reducibility_hints) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_50984 (h0 : fin has_zero.zero) : @is_atomistic.{0} (has_add.{0} name) (@matrix.vec_empty.{0} (complete_lattice.{0} (has_add.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_50985 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (with_bot.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (with_bot.{0} empty))  := sorry --non-trivial
lemma new_lemma_50986 (h1 : not (topological_space num -> false)) : @irreducible_space.{0} num (@classical.by_contradiction'.{1} (topological_space.{0} num) h1)  := sorry --non-trivial
lemma new_lemma_50987 (h0 : topological_space (group_with_zero ennreal)) : normal_space (group_with_zero ennreal) := sorry --non-trivial
lemma new_lemma_50988 (h0 : topological_space (option (semiring (semiring (semiring (semiring num)))))) : irreducible_space (option (semiring (semiring (semiring (semiring num))))) := sorry --non-trivial
lemma new_lemma_50989 (h0 : function.extfun nat fin) : @loc_path_connected_space.{0} (canonically_linear_ordered_monoid.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (canonically_linear_ordered_monoid.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_50990 (h0 : function.extfun Type topological_space) : @t0_space.{0} (has_zero.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_zero.{0} num))  := sorry --non-trivial
lemma new_lemma_50991 (h0 : ordered_comm_monoid (ordered_comm_ring (sub_neg_monoid (has_pos_part Type)))) : has_exists_mul_of_le (ordered_comm_ring (sub_neg_monoid (has_pos_part Type))) := sorry --non-trivial
lemma new_lemma_50992 (h1 : preorder (add_comm_semigroup (mul_one_class (mul_one_class (mul_one_class (mul_one_class string.iterator_imp)))))) (h2 : set (add_comm_semigroup (mul_one_class (mul_one_class (mul_one_class (mul_one_class string.iterator_imp)))))) : set.is_pwo h2 := sorry --non-trivial
lemma new_lemma_50993 (h0 : group (has_neg (option (option pos)))) : is_cyclic (has_neg (option (option pos))) := sorry --non-trivial
lemma new_lemma_50994 (h0 : ring (id (semiring (semiring congr_arg_kind)))) : rank_condition (id (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_50995 (h1 : complete_lattice (has_ssubset (random_gen char))) : is_compactly_generated (has_ssubset (random_gen char)) := sorry --non-trivial
lemma new_lemma_50996 (h0 : topological_space (partial_order unsigned)) : normal_space (partial_order unsigned) := sorry --non-trivial
lemma new_lemma_50997 (h0 : add_group (measurable_space (random_gen (random_gen (random_gen linarith.comp_source))))) : is_add_cyclic (measurable_space (random_gen (random_gen (random_gen linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_50998 (h0 : topological_space (has_add (has_add (add_comm_monoid pos)))) : loc_path_connected_space (has_add (has_add (add_comm_monoid pos))) := sorry --non-trivial
lemma new_lemma_50999 (h0 : topological_space (add_group (has_norm (semiring (semiring num))))) : totally_disconnected_space (add_group (has_norm (semiring (semiring num)))) := sorry --non-trivial
lemma new_lemma_51000 (h0 : filter (add_cancel_monoid (has_neg (has_add (finset pos))))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_51001 (h0 : function.extfun Type ring) : @rank_condition.{0} (normed_lattice_add_comm_group.{0} name) (@function.extfun_app.{2 1} Type ring.{0} h0 (normed_lattice_add_comm_group.{0} name))  := sorry --non-trivial
lemma new_lemma_51002 (h0 : functor.add_const (function.extfun Type uniform_space) name) : @complete_space.{0} (add_comm_monoid.{0} name) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) name h0) (add_comm_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_51003 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (has_neg_part.{0} ennreal) (@function.extfun_app.{2 1} Type add_group.{0} h0 (has_neg_part.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_51004 (h0 : topological_space (canonically_ordered_comm_semiring (has_add environment.implicit_infer_kind))) : t0_space (canonically_ordered_comm_semiring (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_51005 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (sub_neg_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (sub_neg_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_51006 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (distrib_lattice.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (distrib_lattice.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_51007 (h0 : group (topological_space string_imp)) : is_cyclic (topological_space string_imp) := sorry --non-trivial
lemma new_lemma_51008 (h0 : topological_space (complete_distrib_lattice (ordered_comm_monoid linarith.comp))) : t0_space (complete_distrib_lattice (ordered_comm_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_51009 (h0 : finset (comm_group (has_neg (has_neg (has_neg (has_neg (finset pos))))))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_51010 (h0 : list (finset (comm_monoid unsigned))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_51011 (h0 : topological_space (ordered_comm_group empty) -> Prop) (h1 : Exists (fun (x : topological_space (ordered_comm_group empty)), h0 x)) : @totally_disconnected_space.{0} (ordered_comm_group.{0} empty) (@classical.some.{1} (topological_space.{0} (ordered_comm_group.{0} empty)) h0 h1)  := sorry --non-trivial
lemma new_lemma_51012 (h0 : topological_space (sub_neg_monoid Type)) : t0_space (sub_neg_monoid Type) := sorry --non-trivial
lemma new_lemma_51013 (h0 : topological_space (ordered_comm_monoid (finset (has_Inf (has_nndist Type))))) : totally_disconnected_space (ordered_comm_monoid (finset (has_Inf (has_nndist Type)))) := sorry --non-trivial
lemma new_lemma_51014 (h0 : function.extfun Type group) : @group.fg.{0} (has_inv.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type group.{0} h0 (has_inv.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_51015 (h0 : add_monoid (has_star (semiring (semiring (semiring (semiring num)))))) : add_monoid.fg (has_star (semiring (semiring (semiring (semiring num))))) := sorry --non-trivial
lemma new_lemma_51016 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (has_inter congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_51017 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (measurable_space.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 group.{0}) (measurable_space.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_51018 (h0 : uniform_space (normed_comm_ring (mul_zero_class Type))) : separated_space (normed_comm_ring (mul_zero_class Type)) := sorry --non-trivial
lemma new_lemma_51019 (h0 : add_monoid (has_sub congr_arg_kind)) : add_monoid.fg (has_sub congr_arg_kind) := sorry --non-trivial
lemma new_lemma_51020 (h0 : ring (boolean_algebra.core (comm_monoid unsigned))) : strong_rank_condition (boolean_algebra.core (comm_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_51021 (h0 : function.extfun Type (functor.add_const (prod (has_Sup unsigned) (has_Sup unsigned)))) : id_rel (functor.add_const.run (function.extfun_app h0 congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_51022 (h0 : topological_space (has_Inf (finset linarith.comp))) : normal_space (has_Inf (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_51023 (h0 : cancel_monoid (has_neg ennreal) -> cancel_monoid (has_neg ennreal) -> Prop) : is_symm (cancel_monoid (has_neg ennreal)) h0 := sorry --non-trivial
lemma new_lemma_51024 (h0 : functor.add_const (finset (has_edist empty)) num) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51025 (h0 : multiset (has_div linarith.ineq)) (h1 : not (multiset (has_div linarith.ineq) -> false)) : multiset.disjoint h0 (classical.by_contradiction' h1) := sorry --non-trivial
lemma new_lemma_51026 (h0 : functor.add_const (list (add_cancel_monoid linarith.comp)) pos) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51027 (h0 : functor.add_const (group (plift empty)) num) : @is_cyclic.{1} (plift.{1} empty) (@functor.add_const.run.{1 0} (group.{1} (plift.{1} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_51028 (h0 : functor.add_const (topological_space (add_cancel_monoid pos)) name) : @regular_space.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_51029 (h0 : functor.add_const (topological_space (filter unsigned)) empty) : @totally_disconnected_space.{0} (filter.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (filter.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_51030 (h0 : functor.add_const (uniform_space (left_cancel_monoid empty)) unsigned) : @separated_space.{0} (left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (left_cancel_monoid.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_51031 (h0 : topological_space (cancel_monoid (boolean_algebra.core name))) : path_connected_space (cancel_monoid (boolean_algebra.core name)) := sorry --non-trivial
lemma new_lemma_51032 (h1 : filter (topological_space (has_nnnorm (has_nnnorm (has_nnnorm fun_info))))) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_51033 (h0 : topological_space (non_assoc_semiring unsigned)) : topological_space.separable_space (non_assoc_semiring unsigned) := sorry --non-trivial
lemma new_lemma_51034 (h0 : functor.add_const (topological_space (has_neg linarith.comp)) pos) : @locally_compact_space.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_51035 (h0 : topological_space string.iterator_imp) (h6 : preorder string.iterator_imp) : order_topology string.iterator_imp := sorry --non-trivial
lemma new_lemma_51036 (h1 : ring (distrib (random_gen (has_ssubset char)))) : rank_condition (distrib (random_gen (has_ssubset char))) := sorry --non-trivial
lemma new_lemma_51037 (h0 : uniform_space (mul_zero_class (semiring (semiring empty)))) : complete_space (mul_zero_class (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_51038 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (linear_ordered_field ennreal)) := sorry --non-trivial
lemma new_lemma_51039 (h0 : fin has_zero.zero) : @separated_space.{0} (boolean_algebra.core.{0} pos) (@matrix.vec_empty.{0} (uniform_space.{0} (boolean_algebra.core.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_51040 (h0 : not (semiring unsigned -> false)) : @is_noetherian_ring.{0} unsigned (@classical.by_contradiction'.{1} (semiring.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_51041 (h0 : complete_lattice (has_edist empty)) : is_atomistic (has_edist empty) := sorry --non-trivial
lemma new_lemma_51042 (h0 : linear_ordered_comm_monoid_with_zero linarith.comp_source) (h1 : ring std_gen) (h2 : set (valuation std_gen linarith.comp_source)) : set.subsingleton h2 := sorry --non-trivial
lemma new_lemma_51043 (h0 h1 : multiset (linear_ordered_comm_group_with_zero (mul_one_class (simple_graph (has_nnnorm fun_info))))) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_51044 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @totally_separated_space.{1} (ordered_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (ordered_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_51045 (h3 : complete_lattice (add_comm_semigroup char)) : is_compactly_generated (add_comm_semigroup char) := sorry --non-trivial
lemma new_lemma_51046 (h1 : complete_lattice (has_top string_imp)) : is_atomistic (has_top string_imp) := sorry --non-trivial
lemma new_lemma_51047 (h0 : group (boolean_algebra.core (option unsigned))) : is_simple_group (boolean_algebra.core (option unsigned)) := sorry --non-trivial
lemma new_lemma_51048 (h0 : has_mem.mem (normed_group linarith.comp_source) has_emptyc.emptyc) : @normalizer_condition.{0} (normed_group.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type group.{0} (normed_group.{0} linarith.comp_source) h0)  := sorry --non-trivial
lemma new_lemma_51049 (h0 : topological_space (has_dist (option (option ennreal)))) : totally_separated_space (has_dist (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_51050 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (complete_distrib_lattice.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (complete_distrib_lattice.{0} pos))  := sorry --non-trivial
lemma new_lemma_51051 (h0 : uniform_space (measurable_space (random_gen (has_norm string_imp)))) : complete_space (measurable_space (random_gen (has_norm string_imp))) := sorry --non-trivial
lemma new_lemma_51052 (h0 : functor.add_const (topological_space (add_cancel_monoid empty)) empty) : @topological_space.separable_space.{0} (add_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_51053 (h0 : functor.add_const (complete_lattice (option unsigned)) empty) : @is_atomistic.{0} (option.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (option.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_51054 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (monoid_with_zero.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid_with_zero.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51055 (h0 : function.extfun Type ring) : @is_domain.{0} (mul_zero_class.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (mul_zero_class.{0} empty))  := sorry --non-trivial
lemma new_lemma_51056 (h0 : add_group (random_gen linarith.comp_source)) : is_add_cyclic (random_gen linarith.comp_source) := sorry --non-trivial
lemma new_lemma_51057 (h0 : functor.comp topological_space has_nndist Type) : @totally_separated_space.{1} (has_nndist.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} has_nndist.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_51058 (h1 : filter (id (random_gen to_additive.value_type))) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_51059 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (has_dist.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_dist.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51060 (h0 : list (linear_ordered_field (option unsigned))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_51061 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (has_one.{0} (metric_space.{0} (linear_ordered_semiring.{0} linarith.comp))) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (has_one.{0} (metric_space.{0} (linear_ordered_semiring.{0} linarith.comp))))  := sorry --non-trivial
lemma new_lemma_51062 (h0 : ring (has_inv (random_gen to_additive.value_type))) : is_domain (has_inv (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_51063 (h0 : monoid (has_norm (has_inv to_additive.value_type))) : monoid.fg (has_norm (has_inv to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_51064 (h2 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (with_one.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h2 monoid.{0}) (with_one.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_51065 (h0 : complete_lattice (add_group (semiring (semiring (semiring empty))))) : is_compactly_generated (add_group (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_51066 (h0 : complete_lattice (semi_normed_comm_ring std_gen)) : is_compactly_generated (semi_normed_comm_ring std_gen) := sorry --non-trivial
lemma new_lemma_51067 (h0 : function.extfun Type ring) : @rank_condition.{0} (canonically_ordered_comm_semiring.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} h0 (canonically_ordered_comm_semiring.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_51068 (h0 : ring (monoid unsigned)) : is_principal_ideal_ring (monoid unsigned) := sorry --non-trivial
lemma new_lemma_51069 (h0 : topological_space (plift (option unsigned))) : preirreducible_space (plift (option unsigned)) := sorry --non-trivial
lemma new_lemma_51070 (h0 : uniform_space (cancel_monoid (comm_group name))) : separated_space (cancel_monoid (comm_group name)) := sorry --non-trivial
lemma new_lemma_51071 (h1 : mul_one_class ereal -> mul_one_class ereal -> Prop) : total h1 := sorry --non-trivial
lemma new_lemma_51072 (h0 : functor.add_const (group (normed_comm_ring unsigned)) linarith.comp) : @is_simple_group.{0} (normed_comm_ring.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (normed_comm_ring.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51073 (h0 : functor.add_const (complete_lattice (left_cancel_semigroup num)) num) : @is_atomistic.{0} (left_cancel_semigroup.{0} num) (@functor.add_const.run.{0 0} (complete_lattice.{0} (left_cancel_semigroup.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_51074 (h0 : group (distrib_lattice (has_inv to_additive.value_type))) : normalizer_condition (distrib_lattice (has_inv to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_51075 (h0 : topological_space (complete_linear_order congr_arg_kind)) : path_connected_space (complete_linear_order congr_arg_kind) := sorry --non-trivial
lemma new_lemma_51076 (h0 : functor.add_const (topological_space (has_pos_part pos)) (has_Inf linarith.comp)) : @path_connected_space.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_pos_part.{0} pos)) (has_Inf.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_51077 (h0 : functor.comp cancel_comm_monoid_with_zero add_comm_monoid (boolean_algebra.core environment.implicit_infer_kind)) : @unique_factorization_monoid.{0} (add_comm_monoid.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind)) (@functor.comp.run.{0 0 0} cancel_comm_monoid_with_zero.{0} add_comm_monoid.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_51078 (h0 : topological_space (has_Inf (has_add (finset (has_pos_part (has_add linarith.comp)))))) : irreducible_space (has_Inf (has_add (finset (has_pos_part (has_add linarith.comp))))) := sorry --non-trivial
lemma new_lemma_51079 (h0 : complete_lattice (linear_order num)) : complete_lattice.is_Sup_finite_compact (linear_order num) := sorry --non-trivial
lemma new_lemma_51080 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (add_group empty)) := sorry --non-trivial
lemma new_lemma_51081 (h0 : functor.add_const (ring (add_left_cancel_semigroup unsigned)) (option (option unsigned))) : @is_principal_ideal_ring.{0} (add_left_cancel_semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (add_left_cancel_semigroup.{0} unsigned)) (option.{0} (option.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_51082 (h0 : complete_lattice (ordered_comm_group empty)) : complete_lattice.is_Sup_finite_compact (ordered_comm_group empty) := sorry --non-trivial
lemma new_lemma_51083 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (mul_zero_class.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (mul_zero_class.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_51084 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (linear_ordered_add_comm_group.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_add_comm_group.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_51085 (h0 : topological_space (has_nndist (has_neg name))) : discrete_topology (has_nndist (has_neg name)) := sorry --non-trivial
lemma new_lemma_51086 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} real.angle (@function.extfun_app.{2 1} Type topological_space.{0} h0 real.angle)  := sorry --non-trivial
lemma new_lemma_51087 (h1 : complete_lattice (semi_normed_comm_ring (random_gen linarith.ineq))) : is_compactly_generated (semi_normed_comm_ring (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_51088 (h0 : group (semi_normed_ring (mul_one_class char))) : is_cyclic (semi_normed_ring (mul_one_class char)) := sorry --non-trivial
lemma new_lemma_51089 (h0 : filter (has_add (has_pos_part (has_add linarith.comp)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_51090 (h0 : ordered_add_comm_monoid (boolean_algebra (has_add pos))) : archimedean (boolean_algebra (has_add pos)) := sorry --non-trivial
lemma new_lemma_51091 (h0 : functor.add_const (ordered_comm_monoid (generalized_boolean_algebra pos)) Type) : @has_exists_mul_of_le.{0} (generalized_boolean_algebra.{0} pos) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (generalized_boolean_algebra.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_51092 (h0 : complete_lattice (left_cancel_monoid num)) : is_atomistic (left_cancel_monoid num) := sorry --non-trivial
lemma new_lemma_51093 (h0 : Prop -> fun_info) (h1 : coe_sort (set.range h0)) : set.range_splitting h0 h1 := sorry --non-trivial
lemma new_lemma_51094 (h2 : add_group char) : is_add_cyclic char := sorry --non-trivial
lemma new_lemma_51095 (h0 : has_Sup (semigroup num) -> has_Sup (semigroup num) -> bool) : is_dec_refl h0 := sorry --non-trivial
lemma new_lemma_51096 (h0 h1 : multiset (simple_graph linarith.ineq)) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_51097 (h0 : topological_space (with_bot (has_top congr_arg_kind))) : topological_space.separable_space (with_bot (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_51098 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (omega_complete_partial_order.{0} num) (@function.extfun_app.{2 1} Type add_group.{0} h0 (omega_complete_partial_order.{0} num))  := sorry --non-trivial
lemma new_lemma_51099 (h0 : ring (has_nnnorm (random_gen fun_info))) : rank_condition (has_nnnorm (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_51100 (h0 : ring (distrib_lattice string_imp)) : is_domain (distrib_lattice string_imp) := sorry --non-trivial
lemma new_lemma_51101 (h0 : topological_space (complete_distrib_lattice (add_cancel_monoid Type))) : discrete_topology (complete_distrib_lattice (add_cancel_monoid Type)) := sorry --non-trivial
lemma new_lemma_51102 (h0 : ring (boolean_algebra.core (has_to_string name))) : rank_condition (boolean_algebra.core (has_to_string name)) := sorry --non-trivial
lemma new_lemma_51103 (h0 : topological_space (boolean_algebra (has_Inf (has_pos_part pos)))) : topological_space.separable_space (boolean_algebra (has_Inf (has_pos_part pos))) := sorry --non-trivial
lemma new_lemma_51104 (h0 : functor.comp topological_space semigroup Type) : @preconnected_space.{1} (semigroup.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} semigroup.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_51105 (h0 : topological_space (has_neg_part (has_neg_part (cancel_monoid (finset (has_nndist pos)))))) : t0_space (has_neg_part (has_neg_part (cancel_monoid (finset (has_nndist pos))))) := sorry --non-trivial
lemma new_lemma_51106 (h0 : group (has_Inf (has_Inf linarith.comp))) : normalizer_condition (has_Inf (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_51107 (h0 : functor.comp topological_space has_to_string ennreal) : @regular_space.{0} (has_to_string.{0} ennreal) (@functor.comp.run.{0 0 0} topological_space.{0} has_to_string.{0} ennreal h0)  := sorry --non-trivial
lemma new_lemma_51108 (h0 : complete_lattice (ordered_comm_ring (has_add real))) : is_compactly_generated (ordered_comm_ring (has_add real)) := sorry --non-trivial
lemma new_lemma_51109 (h0 : group (normed_comm_ring (option ennreal))) : normalizer_condition (normed_comm_ring (option ennreal)) := sorry --non-trivial
lemma new_lemma_51110 (h0 : group (generalized_boolean_algebra Type)) : normalizer_condition (generalized_boolean_algebra Type) := sorry --non-trivial
lemma new_lemma_51111 (h0 : not (topological_space (with_bot linarith.ineq) -> false)) : @totally_separated_space.{0} (with_bot.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (with_bot.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_51112 (h0 : functor.add_const (add_monoid (group_with_zero ennreal)) num) : @add_monoid.fg.{0} (group_with_zero.{0} ennreal) (@functor.add_const.run.{0 0} (add_monoid.{0} (group_with_zero.{0} ennreal)) num h0)  := sorry --non-trivial
lemma new_lemma_51113 (h0 : topological_space (has_pos_part (simple_graph Type))) : topological_space.separable_space (has_pos_part (simple_graph Type)) := sorry --non-trivial
lemma new_lemma_51114 (h0 : functor.add_const (topological_space (ordered_ring unsigned)) empty) : @path_connected_space.{0} (ordered_ring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_ring.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_51115 (h2 : topological_space (has_norm fun_info)) : locally_compact_space (has_norm fun_info) := sorry --non-trivial
lemma new_lemma_51116 (h0 : topological_space (has_neg (finset pos))) : discrete_topology (has_neg (finset pos)) := sorry --non-trivial
lemma new_lemma_51117 (h0 : topological_space (measurable_space linarith.comp)) : locally_compact_space (measurable_space linarith.comp) := sorry --non-trivial
lemma new_lemma_51118 (h0 : functor.add_const (finset (add_cancel_monoid Type)) unsigned) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51119 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (has_to_string.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (has_to_string.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51120 (h0 : set (fun_info -> add_comm_semigroup string.iterator_imp)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_51121 (h0 : group (canonically_linear_ordered_monoid (option (mul_zero_class Type)))) : is_simple_group (canonically_linear_ordered_monoid (option (mul_zero_class Type))) := sorry --non-trivial
lemma new_lemma_51122 (h0 : group (add_cancel_monoid (finset name))) : group.fg (add_cancel_monoid (finset name)) := sorry --non-trivial
lemma new_lemma_51123 (h0 : group (boolean_algebra (has_add (has_neg Type)))) : group.fg (boolean_algebra (has_add (has_neg Type))) := sorry --non-trivial
lemma new_lemma_51124 (h0 : functor.add_const (group (has_zero (has_neg linarith.comp))) (ring Type)) : @group.fg.{0} (has_zero.{0} (has_neg.{0} linarith.comp)) (@functor.add_const.run.{0 1} (group.{0} (has_zero.{0} (has_neg.{0} linarith.comp))) (ring.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_51125 (h0 : group (random_gen (with_bot (complete_distrib_lattice string_imp)))) : normalizer_condition (random_gen (with_bot (complete_distrib_lattice string_imp))) := sorry --non-trivial
lemma new_lemma_51126 (h0 : topological_space (has_ssubset (random_gen (has_ssubset to_additive.value_type)))) : locally_compact_space (has_ssubset (random_gen (has_ssubset to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_51127 (h0 : has_mem.mem (with_bot (has_top num)) has_emptyc.emptyc) : @normalizer_condition.{0} (with_bot.{0} (has_top.{0} num)) (@finset.pi.empty.{1 0} Type group.{0} (with_bot.{0} (has_top.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_51128 (h0 : topological_space (ordered_comm_ring (has_add Type))) : totally_separated_space (ordered_comm_ring (has_add Type)) := sorry --non-trivial
lemma new_lemma_51129 (h0 : topological_space (plift empty)) : preirreducible_space (plift empty) := sorry --non-trivial
lemma new_lemma_51130 (h0 : topological_space (has_nndist (cancel_monoid pos))) : sequential_space (has_nndist (cancel_monoid pos)) := sorry --non-trivial
lemma new_lemma_51131 (h0 : ring (has_Inf (has_add (has_add pos)))) : is_principal_ideal_ring (has_Inf (has_add (has_add pos))) := sorry --non-trivial
lemma new_lemma_51132 (h0 : topological_space (add_cancel_monoid (option ennreal))) : preconnected_space (add_cancel_monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_51133 (h0 : topological_space (has_append (has_nnnorm (has_ssubset char)))) : t0_space (has_append (has_nnnorm (has_ssubset char))) := sorry --non-trivial
lemma new_lemma_51134 (h0 : functor.add_const (cancel_comm_monoid_with_zero (add_comm_monoid Type)) pos) : @unique_factorization_monoid.{1} (add_comm_monoid.{1} Type) (@functor.add_const.run.{1 0} (cancel_comm_monoid_with_zero.{1} (add_comm_monoid.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_51135 (h0 : group (comm_semigroup (has_pos_part pos))) : is_cyclic (comm_semigroup (has_pos_part pos)) := sorry --non-trivial
lemma new_lemma_51136 (h0 : ring (linear_ordered_add_comm_group (function.End to_additive.value_type))) : is_domain (linear_ordered_add_comm_group (function.End to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_51137 (h0 : ring (finset (has_add (has_add name)))) : is_principal_ideal_ring (finset (has_add (has_add name))) := sorry --non-trivial
lemma new_lemma_51138 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (monoid_with_zero.{0} ennreal) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (monoid_with_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_51139 (h0 : topological_space (semi_normed_comm_ring fun_info)) : totally_disconnected_space (semi_normed_comm_ring fun_info) := sorry --non-trivial
lemma new_lemma_51140 (h1 : has_lt (nondiscrete_normed_field (has_div reducibility_hints))) : no_max_order (nondiscrete_normed_field (has_div reducibility_hints)) := sorry --non-trivial
lemma new_lemma_51141 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (with_one.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (with_one.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_51142 (h0 : functor.add_const (ring (has_Sup empty)) empty) : @is_principal_ideal_ring.{0} (has_Sup.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (has_Sup.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_51143 (h1 : monoid (complete_semilattice_Sup string_imp)) : monoid.fg (complete_semilattice_Sup string_imp) := sorry --non-trivial
lemma new_lemma_51144 (h0 : functor.add_const (topological_space (cancel_monoid name)) linarith.comp) : @loc_path_connected_space.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51145 (h0 : cancel_comm_monoid_with_zero (has_star (semiring (semiring num)))) : unique_factorization_monoid (has_star (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_51146 (h0 : uniform_space (has_dist (option (option (option (option (option (option unsigned)))))))) : separated_space (has_dist (option (option (option (option (option (option unsigned))))))) := sorry --non-trivial
lemma new_lemma_51147 (h1 : complete_lattice (has_compl (metric_space (metric_space to_additive.value_type)))) : is_compactly_generated (has_compl (metric_space (metric_space to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_51148 (h0 : ordered_comm_monoid (ordered_comm_monoid (has_Inf pos))) : has_exists_mul_of_le (ordered_comm_monoid (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_51149 (h0 : functor.add_const (list (has_to_string Type)) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51150 (h0 : group (semiring (has_top (has_top congr_arg_kind)))) : group.fg (semiring (has_top (has_top congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_51151 (h0 : uniform_space (has_dist empty)) : complete_space (has_dist empty) := sorry --non-trivial
lemma new_lemma_51152 (h0 : functor.add_const (topological_space (has_Sup unsigned)) (semiring unsigned)) : @normal_space.{0} (has_Sup.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Sup.{0} unsigned)) (semiring.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_51153 (h0 : complete_lattice (canonically_ordered_comm_semiring pos)) : is_atomistic (canonically_ordered_comm_semiring pos) := sorry --non-trivial
lemma new_lemma_51154 (h0 : topological_space (ring name)) : preirreducible_space (ring name) := sorry --non-trivial
lemma new_lemma_51155 (h0 : function.extfun Type group) : @is_cyclic.{0} (random_gen.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} h0 (random_gen.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_51156 (h0 : topological_space (with_one (has_top to_additive.value_type))) : totally_disconnected_space (with_one (has_top to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_51157 (h0 : add_comm_semigroup enat) (h1 : sym2 (add_comm_semigroup enat)) : sym2.mem h0 h1 := sorry --non-trivial
lemma new_lemma_51158 (h1 : ereal) (h2 : sym2 ereal) : sym2.mem h1 h2 := sorry --non-trivial
lemma new_lemma_51159 (h0 : ring (add_right_cancel_monoid num)) : is_domain (add_right_cancel_monoid num) := sorry --non-trivial
lemma new_lemma_51160 (h0 : complete_lattice (linear_ordered_semiring (has_norm empty))) : is_atomistic (linear_ordered_semiring (has_norm empty)) := sorry --non-trivial
lemma new_lemma_51161 (h0 : functor.add_const (complete_lattice (ring Type)) linarith.comp) : @complete_lattice.is_Sup_finite_compact.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (complete_lattice.{1} (ring.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51162 (h0 : functor.add_const (topological_space (cancel_monoid environment.implicit_infer_kind)) linarith.comp) : @irreducible_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51163 (h0 : topological_space (monoid_with_zero (option pos))) : topological_space.separable_space (monoid_with_zero (option pos)) := sorry --non-trivial
lemma new_lemma_51164 (h0 : cancel_comm_monoid_with_zero (mul_zero_class (option pos))) : unique_factorization_monoid (mul_zero_class (option pos)) := sorry --non-trivial
lemma new_lemma_51165 (h0 : ring (has_Inf (has_pos_part (finset pos)))) : rank_condition (has_Inf (has_pos_part (finset pos))) := sorry --non-trivial
lemma new_lemma_51166 (h0 : set (has_ssubset std_gen)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_51167 (h0 : functor.add_const (topological_space (id empty)) empty) : @t0_space.{0} (@id.{2} Type empty) (@functor.add_const.run.{0 0} (topological_space.{0} (@id.{2} Type empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_51168 (h0 : topological_space (normed_lattice_add_comm_group empty)) : totally_disconnected_space (normed_lattice_add_comm_group empty) := sorry --non-trivial
lemma new_lemma_51169 (h0 : not (topological_space (has_union empty) -> false)) : @locally_compact_space.{0} (has_union.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (has_union.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_51170 (h0 : topological_space (linear_ordered_cancel_comm_monoid unsigned)) : path_connected_space (linear_ordered_cancel_comm_monoid unsigned) := sorry --non-trivial
lemma new_lemma_51171 (h0 : group (comm_ring (has_nnnorm (has_nnnorm char)))) : is_cyclic (comm_ring (has_nnnorm (has_nnnorm char))) := sorry --non-trivial
lemma new_lemma_51172 (h0 : topological_space (option name)) : loc_path_connected_space (option name) := sorry --non-trivial
lemma new_lemma_51173 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (boolean_algebra.core.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.core.{0} num))  := sorry --non-trivial
lemma new_lemma_51174 (h0 : group (complete_semilattice_Sup fun_info)) : is_cyclic (complete_semilattice_Sup fun_info) := sorry --non-trivial
lemma new_lemma_51175 (h0 : topological_space (boolean_algebra (ordered_ring (has_pos_part linarith.comp)))) : totally_separated_space (boolean_algebra (ordered_ring (has_pos_part linarith.comp))) := sorry --non-trivial
lemma new_lemma_51176 (h0 : add_monoid (complete_semilattice_Sup (complete_semilattice_Sup num))) : add_monoid.fg (complete_semilattice_Sup (complete_semilattice_Sup num)) := sorry --non-trivial
lemma new_lemma_51177 (h0 : functor.add_const (topological_space (has_neg unsigned)) linarith.comp) : @discrete_topology.{0} (has_neg.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51178 (h0 : ring (semi_normed_ring (comm_ring reducibility_hints))) : is_domain (semi_normed_ring (comm_ring reducibility_hints)) := sorry --non-trivial
lemma new_lemma_51179 (h0 : not (ring (distrib linarith.ineq) -> false)) : @strong_rank_condition.{0} (distrib.{0} linarith.ineq) (@classical.by_contradiction'.{1} (ring.{0} (distrib.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_51180 (h0 : fin has_zero.zero) : @rank_condition.{1} (comm_semigroup.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (comm_semigroup.{1} Type)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)))  := sorry --non-trivial
lemma new_lemma_51181 (h0 : topological_space (distrib_lattice (random_gen (has_inv linarith.comp_source)))) : locally_compact_space (distrib_lattice (random_gen (has_inv linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_51182 (h0 : topological_space (has_star num)) : path_connected_space (has_star num) := sorry --non-trivial
lemma new_lemma_51183 (h0 : function.extfun Type uniform_space) : @separated_space.{0} environment.implicit_infer_kind (@function.extfun_app.{2 1} Type uniform_space.{0} h0 environment.implicit_infer_kind)  := sorry --non-trivial
lemma new_lemma_51184 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (ordered_comm_ring.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_comm_ring.{0} real))  := sorry --non-trivial
lemma new_lemma_51185 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (measurable_space.dynkin_system.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (measurable_space.dynkin_system.{0} empty))  := sorry --non-trivial
lemma new_lemma_51186 (h0 : functor.add_const (uniform_space (sub_neg_monoid pos)) name) : @separated_space.{0} (sub_neg_monoid.{0} pos) (@functor.add_const.run.{0 0} (uniform_space.{0} (sub_neg_monoid.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_51187 (h0 : fin has_zero.zero) : @is_add_cyclic.{1} (has_Inf.{1} Type) (@matrix.vec_empty.{1} (add_group.{1} (has_Inf.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_51188 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_zero name)) linarith.comp) : @unique_factorization_monoid.{0} (has_zero.{0} name) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (has_zero.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51189 (h0 : function.extfun Type topological_space) : @t1_space.{0} (omega_complete_partial_order.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (omega_complete_partial_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51190 (h0 : ring (semigroup to_additive.value_type)) : is_domain (semigroup to_additive.value_type) := sorry --non-trivial
lemma new_lemma_51191 (h0 : filter (measure_theory.measure_space (semiring (semiring num)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_51192 (h0 : ring (has_append (mul_one_class to_additive.value_type))) : is_domain (has_append (mul_one_class to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_51193 (h0 : topological_space (has_Inf (finset pos))) : locally_compact_space (has_Inf (finset pos)) := sorry --non-trivial
lemma new_lemma_51194 (h0 : topological_space (canonically_linear_ordered_monoid (sub_neg_monoid (has_Inf real)))) : path_connected_space (canonically_linear_ordered_monoid (sub_neg_monoid (has_Inf real))) := sorry --non-trivial
lemma new_lemma_51195 (h0 : topological_space (has_zero num)) : topological_space.separable_space (has_zero num) := sorry --non-trivial
lemma new_lemma_51196 (h0 : topological_space (canonically_linear_ordered_monoid (option pos))) : t0_space (canonically_linear_ordered_monoid (option pos)) := sorry --non-trivial
lemma new_lemma_51197 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (linear_ordered_comm_group.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_comm_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_51198 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (semigroup.{0} (option.{0} (option.{0} ennreal))) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (semigroup.{0} (option.{0} (option.{0} ennreal))))  := sorry --non-trivial
lemma new_lemma_51199 (h0 : complete_lattice (mul_one_class reducibility_hints)) : is_atomistic (mul_one_class reducibility_hints) := sorry --non-trivial
lemma new_lemma_51200 (h0 : ring (with_bot (semiring congr_arg_kind))) : strong_rank_condition (with_bot (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_51201 (h0 : functor.add_const (finset (semigroup linarith.comp)) name) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51202 (h0 : semiring (has_Inf (has_Inf (has_add name)))) : is_noetherian_ring (has_Inf (has_Inf (has_add name))) := sorry --non-trivial
lemma new_lemma_51203 (h0 : topological_space (has_compl linarith.comp_source)) : locally_compact_space (has_compl linarith.comp_source) := sorry --non-trivial
lemma new_lemma_51204 (h0 : function.extfun (finset Type) (has_mem.mem (metric_space unsigned))) : @totally_disconnected_space.{0} (metric_space.{0} unsigned) (@finset.pi.empty.{1 0} Type topological_space.{0} (metric_space.{0} unsigned) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (metric_space.{0} unsigned)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_51205 (h1 : topological_space (normed_field string_imp)) : totally_disconnected_space (normed_field string_imp) := sorry --non-trivial
lemma new_lemma_51206 (h0 : functor.add_const (function.extfun (Type 1) topological_space) Type) : @normal_space.{1} (has_to_string.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) topological_space.{1}) Type h0) (has_to_string.{1} Type))  := sorry --non-trivial
lemma new_lemma_51207 (h0 : group (comm_semigroup (has_bot (has_bot (sub_neg_monoid (has_pos_part Type)))))) : group.fg (comm_semigroup (has_bot (has_bot (sub_neg_monoid (has_pos_part Type))))) := sorry --non-trivial
lemma new_lemma_51208 (h0 : ring (complete_distrib_lattice (option ennreal))) : strong_rank_condition (complete_distrib_lattice (option ennreal)) := sorry --non-trivial
lemma new_lemma_51209 (h0 : group (has_emptyc (random_gen to_additive.value_type))) : normalizer_condition (has_emptyc (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_51210 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} string_imp (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) string_imp)  := sorry --non-trivial
lemma new_lemma_51211 (h0 : monoid (with_bot (random_gen linarith.ineq))) : monoid.fg (with_bot (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_51212 (h0 : functor.add_const (topological_space pos) (finset ennreal)) : @irreducible_space.{0} pos (@functor.add_const.run.{0 0} (topological_space.{0} pos) (finset.{0} ennreal) h0)  := sorry --non-trivial
lemma new_lemma_51213 (h0 : not (group (has_inv linarith.ineq) -> false)) : @group.fg.{0} (has_inv.{0} linarith.ineq) (@classical.by_contradiction'.{1} (group.{0} (has_inv.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_51214 (h0 : not (function.extfun Type topological_space -> false)) : @discrete_topology.{0} (random_gen.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (random_gen.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51215 (h0 : uniform_space (option (semiring (semiring empty)))) : complete_space (option (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_51216 (h0 : group (linear_ordered_comm_ring (has_top unsigned))) : is_cyclic (linear_ordered_comm_ring (has_top unsigned)) := sorry --non-trivial
lemma new_lemma_51217 (h0 : functor.add_const (list (has_pos_part Type)) (ring pos)) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51218 (h0 : filter (has_add (has_neg linarith.comp))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_51219 (h0 : functor.add_const (add_group (canonically_ordered_comm_semiring Type)) pos) : @is_add_cyclic.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (add_group.{1} (canonically_ordered_comm_semiring.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_51220 (h0 : complete_lattice (pseudo_emetric_space empty)) : complete_lattice.is_Sup_finite_compact (pseudo_emetric_space empty) := sorry --non-trivial
lemma new_lemma_51221 (h0 : uniform_space (partial_order unsigned)) : complete_space (partial_order unsigned) := sorry --non-trivial
lemma new_lemma_51222 (h0 : group (finset (finset linarith.comp))) : is_cyclic (finset (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_51223 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (has_star.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_star.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_51224 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (linear_ordered_semiring.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_51225 (h0 : function.extfun Type topological_space) : @regular_space.{0} (has_Inf.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_Inf.{0} real))  := sorry --non-trivial
lemma new_lemma_51226 (h0 : topological_space (group_with_zero num)) : t1_space (group_with_zero num) := sorry --non-trivial
lemma new_lemma_51227 (h0 : functor.add_const (cancel_comm_monoid_with_zero (mul_zero_class empty)) (semiring num)) : @unique_factorization_monoid.{0} (mul_zero_class.{0} empty) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (mul_zero_class.{0} empty)) (semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_51228 (h0 : functor.add_const (topological_space (has_add name)) Type) : @preconnected_space.{0} (has_add.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (has_add.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_51229 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (normed_lattice_add_comm_group.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_lattice_add_comm_group.{0} real))  := sorry --non-trivial
lemma new_lemma_51230 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @path_connected_space.{0} (with_one.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (with_one.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_51231 (h0 : ring (cancel_monoid (option (option unsigned)))) : is_domain (cancel_monoid (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_51232 (h0 : monoid (with_one (comm_ring linarith.comp_source))) : monoid.fg (with_one (comm_ring linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_51233 (h0 : functor.add_const (group (add_cancel_monoid pos)) (has_neg Type)) : @group.fg.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 1} (group.{0} (add_cancel_monoid.{0} pos)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_51234 (h1 : has_mem.mem (random_gen linarith.comp) has_emptyc.emptyc) : @strong_rank_condition.{0} (random_gen.{0} linarith.comp) (@finset.pi.empty.{1 0} Type ring.{0} (random_gen.{0} linarith.comp) h1)  := sorry --non-trivial
lemma new_lemma_51235 (h1 : measurable_space (with_one num)) (h2 : has_mul (with_one num)) : has_measurable_mul (with_one num) := sorry --non-trivial
lemma new_lemma_51236 (h0 : functor.add_const (topological_space (has_to_string Type)) pos) : @preconnected_space.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_to_string.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_51237 (h0 : filter (with_one (fintype char))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_51238 (h0 : functor.add_const (topological_space (generalized_boolean_algebra name)) Type) : @sequential_space.{0} (generalized_boolean_algebra.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (generalized_boolean_algebra.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_51239 (h0 : topological_space (sub_neg_monoid linarith.comp)) : sequential_space (sub_neg_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_51240 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (boolean_algebra.core.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.core.{0} empty))  := sorry --non-trivial
lemma new_lemma_51241 (h0 : not (topological_space (add_right_cancel_monoid num) -> false)) : @totally_separated_space.{0} (add_right_cancel_monoid.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (add_right_cancel_monoid.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_51242 (h0 h1 : multiset (has_div (has_nnnorm fun_info))) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_51243 (h0 : topological_space (uniform_space linarith.ineq)) : t0_space (uniform_space linarith.ineq) := sorry --non-trivial
lemma new_lemma_51244 (h0 : not (uniform_space (semi_normed_ring linarith.comp_source) -> false)) : @complete_space.{0} (semi_normed_ring.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (uniform_space.{0} (semi_normed_ring.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_51245 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} fun_info (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) fun_info)  := sorry --non-trivial
lemma new_lemma_51246 (h0 : functor.add_const (ring (has_neg pos)) pos) : @strong_rank_condition.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (has_neg.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_51247 (h0 : ring (has_dist unsigned)) : rank_condition (has_dist unsigned) := sorry --non-trivial
lemma new_lemma_51248 (h0 : uniform_space (ring (has_zero (has_zero Type)))) : complete_space (ring (has_zero (has_zero Type))) := sorry --non-trivial
lemma new_lemma_51249 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (monoid_with_zero.{0} ennreal) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (monoid_with_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_51250 (h0 : functor.comp topological_space add_comm_monoid name) : @sequential_space.{0} (add_comm_monoid.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} add_comm_monoid.{0} name h0)  := sorry --non-trivial
lemma new_lemma_51251 (h0 : ring (has_compl (mul_one_class (mul_one_class linarith.comp_source)))) : is_domain (has_compl (mul_one_class (mul_one_class linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_51252 (h0 : group (sub_neg_monoid (has_pos_part pos))) : is_simple_group (sub_neg_monoid (has_pos_part pos)) := sorry --non-trivial
lemma new_lemma_51253 (h0 : not (cancel_comm_monoid_with_zero (normed_group empty) -> false)) : @unique_factorization_monoid.{0} (normed_group.{0} empty) (@classical.by_contradiction'.{1} (cancel_comm_monoid_with_zero.{0} (normed_group.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_51254 (h0 : functor.add_const (topological_space (has_zero name)) name) : @discrete_topology.{0} (has_zero.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_51255 (h0 : topological_space (has_bot (has_Inf (ordered_comm_monoid real)))) : locally_compact_space (has_bot (has_Inf (ordered_comm_monoid real))) := sorry --non-trivial
lemma new_lemma_51256 (h0 : group (linear_ordered_field pos)) : is_simple_group (linear_ordered_field pos) := sorry --non-trivial
lemma new_lemma_51257 (h0 : functor.add_const (ring (has_neg_part environment.implicit_infer_kind)) environment.implicit_infer_kind) : @strong_rank_condition.{0} (has_neg_part.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (has_neg_part.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_51258 (h0 : topological_space (id (random_gen (measurable_space (random_gen linarith.comp))))) : discrete_topology (id (random_gen (measurable_space (random_gen linarith.comp)))) := sorry --non-trivial
lemma new_lemma_51259 (h0 : topological_space (has_neg (has_to_string linarith.comp))) : loc_path_connected_space (has_neg (has_to_string linarith.comp)) := sorry --non-trivial
lemma new_lemma_51260 (h0 : functor.add_const (add_group (has_neg name)) name) : @is_add_cyclic.{0} (has_neg.{0} name) (@functor.add_const.run.{0 0} (add_group.{0} (has_neg.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_51261 (h0 : has_mem.mem ring has_emptyc.emptyc) : @rank_condition.{0} num (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} h0) num)  := sorry --non-trivial
lemma new_lemma_51262 (h0 : option (ordered_add_comm_monoid znum)) (h1 : function.extfun Type (functor.add_const (ordered_add_comm_monoid znum))) : @archimedean.{0} znum (@option.get_or_else.{0} (ordered_add_comm_monoid.{0} znum) h0 (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} znum) congr_arg_kind (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ordered_add_comm_monoid.{0} znum)) h1 congr_arg_kind)))  := sorry --non-trivial
lemma new_lemma_51263 (h0 : topological_space (boolean_algebra pos)) : totally_disconnected_space (boolean_algebra pos) := sorry --non-trivial
lemma new_lemma_51264 (h1 : not (topological_space (metric_space to_additive.value_type) -> false)) : @totally_disconnected_space.{0} (metric_space.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (metric_space.{0} to_additive.value_type)) h1)  := sorry --non-trivial
lemma new_lemma_51265 (h0 : topological_space (linear_ordered_cancel_comm_monoid congr_arg_kind)) : totally_disconnected_space (linear_ordered_cancel_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_51266 (h0 : topological_space (ordered_comm_ring (has_nndist (has_pos_part (has_add linarith.comp))))) : loc_path_connected_space (ordered_comm_ring (has_nndist (has_pos_part (has_add linarith.comp)))) := sorry --non-trivial
lemma new_lemma_51267 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @sequential_space.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_51268 (h0 : filter (finset (has_add Type))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_51269 (h0 : ring (semi_normed_ring (has_lt linarith.comp_source))) : rank_condition (semi_normed_ring (has_lt linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_51270 (h0 : functor.add_const (topological_space (emetric_space empty)) unsigned) : @locally_compact_space.{0} (emetric_space.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (emetric_space.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_51271 (h0 : topological_space (has_sub (semiring empty))) : totally_separated_space (has_sub (semiring empty)) := sorry --non-trivial
lemma new_lemma_51272 (h0 : list (comm_group (option pos))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_51273 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (with_bot.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (with_bot.{0} empty))  := sorry --non-trivial
lemma new_lemma_51274 (h0 : complete_lattice (add_comm_monoid (option ennreal))) : is_compactly_generated (add_comm_monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_51275 (h0 : functor.add_const (uniform_space (boolean_algebra Type)) (has_neg Type)) : @separated_space.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 1} (uniform_space.{1} (boolean_algebra.{1} Type)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_51276 (h0 : functor.add_const (topological_space (has_to_string unsigned)) Type) : @irreducible_space.{0} (has_to_string.{0} unsigned) (@functor.add_const.run.{0 1} (topological_space.{0} (has_to_string.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_51277 (h0 : group (ordered_cancel_add_comm_monoid congr_arg_kind)) : is_simple_group (ordered_cancel_add_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_51278 (h0 : function.extfun nat fin) : @is_noetherian_ring.{1} (ordered_comm_ring.{1} Type) (@matrix.vec_empty.{1} (semiring.{1} (ordered_comm_ring.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_51279 (h0 : uniform_space (complete_distrib_lattice (sub_neg_monoid (has_neg (has_neg pos))))) : separated_space (complete_distrib_lattice (sub_neg_monoid (has_neg (has_neg pos)))) := sorry --non-trivial
lemma new_lemma_51280 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (linear_ordered_comm_group.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_ordered_comm_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_51281 (h0 : functor.add_const (function.extfun Type complete_lattice) name) : @complete_lattice.is_Sup_finite_compact.{0} (boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) name h0) (boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_51282 (h1 : topological_space (with_one (random_gen (has_nnnorm (random_gen char))))) : locally_compact_space (with_one (random_gen (has_nnnorm (random_gen char)))) := sorry --non-trivial
lemma new_lemma_51283 (h0 : topological_space (ordered_comm_semiring (option empty))) : irreducible_space (ordered_comm_semiring (option empty)) := sorry --non-trivial
lemma new_lemma_51284 (h0 : functor.add_const (filter (cancel_monoid Type)) pos) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51285 (h0 : topological_space (normed_group (metric_space linarith.comp))) : discrete_topology (normed_group (metric_space linarith.comp)) := sorry --non-trivial
lemma new_lemma_51286 (h0 : uniform_space (random_gen (mul_one_class reducibility_hints))) : complete_space (random_gen (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_51287 (h0 : functor.add_const (finset znum) num) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51288 (h0 : functor.add_const (complete_lattice (ordered_comm_ring name)) pos) : @is_compactly_generated.{0} (ordered_comm_ring.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (ordered_comm_ring.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_51289 (h0 : filter (linear_ordered_semiring (has_top (has_norm (has_norm linarith.comp))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_51290 (h0 : not (monoid (plift congr_arg_kind) -> false)) : @monoid.fg.{1} (plift.{1} congr_arg_kind) (@classical.by_contradiction'.{2} (monoid.{1} (plift.{1} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_51291 (h0 : not (group (has_ssubset char) -> false)) : @is_cyclic.{0} (has_ssubset.{0} char) (@classical.by_contradiction'.{1} (group.{0} (has_ssubset.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_51292 (h0 : functor.add_const (ring (cancel_monoid name)) environment.implicit_infer_kind) : @strong_rank_condition.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (cancel_monoid.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_51293 (h0 : topological_space (add_cancel_monoid (has_pos_part (has_add Type)))) : sequential_space (add_cancel_monoid (has_pos_part (has_add Type))) := sorry --non-trivial
lemma new_lemma_51294 (h0 : add_group (free_add_monoid empty)) : is_add_cyclic (free_add_monoid empty) := sorry --non-trivial
lemma new_lemma_51295 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @complete_lattice.is_Sup_finite_compact.{0} (canonically_linear_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type complete_lattice.{0}) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero))) (canonically_linear_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_51296 (h0 : functor.comp topological_space finset environment.implicit_infer_kind) : @path_connected_space.{0} (finset.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} topological_space.{0} finset.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_51297 (h0 : functor.add_const (ring (has_to_string Type)) (ring (has_neg linarith.comp))) : @is_domain.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_to_string.{1} Type)) (ring.{0} (has_neg.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_51298 (h0 : not (ring (dlist linarith.comp_source) -> false)) : @strong_rank_condition.{0} (dlist.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (ring.{0} (dlist.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_51299 (h0 : filter (has_nndist (finset name))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_51300 (h0 : topological_space (normed_comm_ring pos)) : t0_space (normed_comm_ring pos) := sorry --non-trivial
lemma new_lemma_51301 (h0 : ring (normed_field (has_nnnorm (has_nnnorm linarith.comp_source)))) : rank_condition (normed_field (has_nnnorm (has_nnnorm linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_51302 (h0 : functor.add_const (uniform_space (add_cancel_monoid unsigned)) linarith.comp) : @separated_space.{0} (add_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (uniform_space.{0} (add_cancel_monoid.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51303 (h0 : topological_space (has_star (semiring (semiring empty)))) : topological_space.separable_space (has_star (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_51304 (h0 : function.extfun Type topological_space) : @t0_space.{0} (is_R_or_C.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (is_R_or_C.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51305 (h0 : group (ring (has_Inf (has_Inf name)))) : is_cyclic (ring (has_Inf (has_Inf name))) := sorry --non-trivial
lemma new_lemma_51306 (h0 : function.extfun Type group) : @is_cyclic.{0} (has_nndist.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (has_nndist.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51307 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (mul_zero_class.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (mul_zero_class.{0} name))  := sorry --non-trivial
lemma new_lemma_51308 (h0 : uniform_space (has_inv fun_info)) : complete_space (has_inv fun_info) := sorry --non-trivial
lemma new_lemma_51309 (h0 : semiring (ring (has_add Type))) : is_noetherian_ring (ring (has_add Type)) := sorry --non-trivial
lemma new_lemma_51310 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (semiring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (semiring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_51311 (h0 : group (ordered_comm_monoid (boolean_algebra.core linarith.comp))) : group.fg (ordered_comm_monoid (boolean_algebra.core linarith.comp)) := sorry --non-trivial
lemma new_lemma_51312 (h0 : list (partial_order congr_arg_kind)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_51313 (h0 : topological_space (has_top (semiring (semiring congr_arg_kind)))) : totally_separated_space (has_top (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_51314 (h0 : add_monoid (has_neg_part (comm_group linarith.comp))) : add_monoid.fg (has_neg_part (comm_group linarith.comp)) := sorry --non-trivial
lemma new_lemma_51315 (h0 : topological_space (has_add environment.implicit_infer_kind)) : t0_space (has_add environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_51316 (h0 : functor.add_const (group (add_right_cancel_monoid congr_arg_kind)) empty) : @is_cyclic.{0} (add_right_cancel_monoid.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (group.{0} (add_right_cancel_monoid.{0} congr_arg_kind)) empty h0)  := sorry --non-trivial
lemma new_lemma_51317 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (omega_complete_partial_order.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (omega_complete_partial_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51318 (h0 : complete_lattice (filter (option empty))) : complete_lattice.is_Sup_finite_compact (filter (option empty)) := sorry --non-trivial
lemma new_lemma_51319 (h0 : list (has_Sup unsigned)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_51320 (h0 : not (uniform_space (denumerable reducibility_hints) -> false)) : @complete_space.{0} (denumerable.{0} reducibility_hints) (@classical.by_contradiction'.{1} (uniform_space.{0} (denumerable.{0} reducibility_hints)) h0)  := sorry --non-trivial
lemma new_lemma_51321 (h0 : uniform_space (has_norm (semiring (semiring (semiring congr_arg_kind))))) : separated_space (has_norm (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_51322 (h0 : group (measurable_space (has_inv (has_inv linarith.comp_source)))) : group.fg (measurable_space (has_inv (has_inv linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_51323 (h0 : ring (metric_space (has_top (semiring (semiring linarith.comp))))) : is_domain (metric_space (has_top (semiring (semiring linarith.comp)))) := sorry --non-trivial
lemma new_lemma_51324 (h0 : functor.add_const (function.extfun Type topological_space) (has_add (has_neg Type))) : @topological_space.separable_space.{0} (has_zero.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) (has_add.{1} (has_neg.{1} Type)) h0) (has_zero.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_51325 (h0 : functor.add_const (function.extfun (Type 1) finset) Type) : finset.nonempty (function.extfun_app (functor.add_const.run h0) (semigroup Type)) := sorry --non-trivial
lemma new_lemma_51326 (h0 : functor.add_const (filter (add_cancel_monoid environment.implicit_infer_kind)) (finset pos)) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51327 (h0 : ordered_add_comm_monoid (has_add (has_bot (has_add (has_bot real))))) : archimedean (has_add (has_bot (has_add (has_bot real)))) := sorry --non-trivial
lemma new_lemma_51328 (h0 : function.extfun Type ring) : @rank_condition.{0} (boolean_algebra.core.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} h0 (boolean_algebra.core.{0} pos))  := sorry --non-trivial
lemma new_lemma_51329 (h0 : not (topological_space (has_ssubset linarith.ineq) -> false)) : @locally_compact_space.{0} (has_ssubset.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (has_ssubset.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_51330 (h0 : topological_space (encodable (has_norm fun_info))) : t0_space (encodable (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_51331 (h0 : ring (boolean_algebra.core (semigroup (add_comm_monoid Type)))) : strong_rank_condition (boolean_algebra.core (semigroup (add_comm_monoid Type))) := sorry --non-trivial
lemma new_lemma_51332 (h0 : topological_space (complete_linear_order unsigned)) : preirreducible_space (complete_linear_order unsigned) := sorry --non-trivial
lemma new_lemma_51333 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (encodable.{0} string_imp) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 complete_lattice.{0}) (encodable.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_51334 (h0 : add_group (semi_normed_comm_ring char)) : is_add_cyclic (semi_normed_comm_ring char) := sorry --non-trivial
lemma new_lemma_51335 (h0 : function.extfun Type group) : @group.fg.{0} (has_top.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type group.{0} h0 (has_top.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_51336 (h0 : filter (has_Inf (ring (finset pos)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_51337 (h0 : topological_space (has_neg (comm_group (has_add Type)))) : t0_space (has_neg (comm_group (has_add Type))) := sorry --non-trivial
lemma new_lemma_51338 (h0 : group (has_one (has_norm (semiring unsigned)))) : group.fg (has_one (has_norm (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_51339 (h0 : group (complete_linear_order empty)) : group.fg (complete_linear_order empty) := sorry --non-trivial
lemma new_lemma_51340 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (complete_distrib_lattice.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_distrib_lattice.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_51341 (h0 : function.extfun (Type 1) add_monoid) : @add_monoid.fg.{1} (ordered_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_monoid.{1} h0 (ordered_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_51342 (h0 : ring (has_inter (option ennreal))) : is_principal_ideal_ring (has_inter (option ennreal)) := sorry --non-trivial
lemma new_lemma_51343 (h2 : ring (normed_field fun_info)) : is_domain (normed_field fun_info) := sorry --non-trivial
lemma new_lemma_51344 (h0 : topological_space (add_comm_semigroup (add_comm_semigroup enat))) (h1 : set (add_comm_semigroup (add_comm_semigroup enat))) : is_path_connected h1 := sorry --non-trivial
lemma new_lemma_51345 (h0 : fin has_zero.zero) : @totally_disconnected_space.{0} (has_Inf.{0} name) (@matrix.vec_empty.{0} (topological_space.{0} (has_Inf.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_51346 (h0 : functor.add_const (group (add_comm_monoid linarith.comp)) (finset linarith.comp)) : @is_simple_group.{0} (add_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (add_comm_monoid.{0} linarith.comp)) (finset.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_51347 (h0 : functor.add_const (topological_space (has_zero environment.implicit_infer_kind)) Type) : @topological_space.separable_space.{0} (has_zero.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (has_zero.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_51348 (h2 : has_lt char) : no_max_order char := sorry --non-trivial
lemma new_lemma_51349 (h0 : ring (ring (has_Inf (ordered_ring (has_nndist (has_add (ring pos))))))) : is_principal_ideal_ring (ring (has_Inf (ordered_ring (has_nndist (has_add (ring pos)))))) := sorry --non-trivial
lemma new_lemma_51350 (h0 : topological_space (has_repr unsigned)) : t1_space (has_repr unsigned) := sorry --non-trivial
lemma new_lemma_51351 (h0 : functor.add_const (topological_space (preorder congr_arg_kind)) empty) : @preirreducible_space.{0} (preorder.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} congr_arg_kind)) empty h0)  := sorry --non-trivial
lemma new_lemma_51352 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (linear_order.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_order.{0} empty))  := sorry --non-trivial
lemma new_lemma_51353 (h0 : ring (has_zero pos)) : rank_condition (has_zero pos) := sorry --non-trivial
lemma new_lemma_51354 (h0 : topological_space (non_unital_non_assoc_semiring (distrib (uniform_space (distrib string.iterator_imp))))) : t0_space (non_unital_non_assoc_semiring (distrib (uniform_space (distrib string.iterator_imp)))) := sorry --non-trivial
lemma new_lemma_51355 (h0 : topological_space (add_group (semiring (semiring num)))) : irreducible_space (add_group (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_51356 (h0 : topological_space (has_one (has_top (has_top unsigned)))) : path_connected_space (has_one (has_top (has_top unsigned))) := sorry --non-trivial
lemma new_lemma_51357 (h0 : ring (linear_ordered_comm_ring (semiring empty))) : rank_condition (linear_ordered_comm_ring (semiring empty)) := sorry --non-trivial
lemma new_lemma_51358 (h0 : complete_lattice (has_add (has_Inf environment.implicit_infer_kind))) : complete_lattice.is_Sup_finite_compact (has_add (has_Inf environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_51359 (h0 : function.extfun Type topological_space) : @normal_space.{0} (canonically_linear_ordered_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_linear_ordered_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_51360 (h0 : ring (has_Inf (has_Inf pos))) : is_domain (has_Inf (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_51361 (h0 : functor.add_const (list (ring Type)) name) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51362 (h0 : topological_space (distrib fun_info)) : totally_disconnected_space (distrib fun_info) := sorry --non-trivial
lemma new_lemma_51363 (h0 : function.extfun (Type 1) finset) : finset.nonempty (function.extfun_app h0 (simple_graph Type)) := sorry --non-trivial
lemma new_lemma_51364 (h0 : ring (has_nnnorm char)) : strong_rank_condition (has_nnnorm char) := sorry --non-trivial
lemma new_lemma_51365 (h2 : topological_space (distrib char)) : t0_space (distrib char) := sorry --non-trivial
lemma new_lemma_51366 (h0 : topological_space (normed_group (linear_ordered_semiring (semiring unsigned)))) : t0_space (normed_group (linear_ordered_semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_51367 (h0 : group (complete_semilattice_Sup (random_gen (random_gen (random_gen linarith.comp_source))))) : group.fg (complete_semilattice_Sup (random_gen (random_gen (random_gen linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_51368 (h0 : functor.add_const Prop (has_nndist (option (option (option ennreal))))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_51369 (h0 : function.extfun Type group) : @group.fg.{0} (add_comm_monoid.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (add_comm_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_51370 (h0 : function.extfun Type topological_space) : @t0_space.{0} (mul_zero_class.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (mul_zero_class.{0} num))  := sorry --non-trivial
lemma new_lemma_51371 (h0 : add_zero_class (emetric_space unsigned)) (h1 : group (add_submonoid (emetric_space unsigned))) : normalizer_condition (add_submonoid (emetric_space unsigned)) := sorry --non-trivial
lemma new_lemma_51372 (h0 : functor.add_const (topological_space (mul_zero_class congr_arg_kind)) unsigned) : @normal_space.{0} (mul_zero_class.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (mul_zero_class.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_51373 (h0 : complete_lattice (has_dist (option unsigned))) : is_compactly_generated (has_dist (option unsigned)) := sorry --non-trivial
lemma new_lemma_51374 (h0 : add_group (normed_comm_ring (has_to_string pos))) : is_add_cyclic (normed_comm_ring (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_51375 (h0 : topological_space (has_add (has_neg linarith.comp))) : regular_space (has_add (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_51376 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (sub_neg_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (sub_neg_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_51377 (h0 : uniform_space (has_add (has_neg pos))) : separated_space (has_add (has_neg pos)) := sorry --non-trivial
lemma new_lemma_51378 (h0 : has_mem.mem (has_emptyc pos) has_emptyc.emptyc) : @strong_rank_condition.{0} (has_emptyc.{0} pos) (@finset.pi.empty.{1 0} Type ring.{0} (has_emptyc.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_51379 (h0 : topological_space (has_pos_part (has_pos_part Type))) : preconnected_space (has_pos_part (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_51380 (h0 : ring (nondiscrete_normed_field (add_comm_semigroup char))) : is_domain (nondiscrete_normed_field (add_comm_semigroup char)) := sorry --non-trivial
lemma new_lemma_51381 (h0 : topological_space (has_dist (comm_monoid (comm_monoid unsigned)))) : totally_disconnected_space (has_dist (comm_monoid (comm_monoid unsigned))) := sorry --non-trivial
lemma new_lemma_51382 (h0 : topological_space (linear_ordered_comm_group (option (option unsigned)))) : irreducible_space (linear_ordered_comm_group (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_51383 (h0 : ring (mul_zero_class ennreal)) : is_domain (mul_zero_class ennreal) := sorry --non-trivial
lemma new_lemma_51384 (h3 : complete_lattice linarith.ineq) : complete_lattice.is_Sup_finite_compact linarith.ineq := sorry --non-trivial
lemma new_lemma_51385 (h0 : functor.add_const (ring (has_neg_part Type)) unsigned) : @rank_condition.{1} (has_neg_part.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_neg_part.{1} Type)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_51386 (h0 : function.extfun Type (functor.add_const (complete_lattice (preorder empty)))) : @is_atomistic.{0} (preorder.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (preorder.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (complete_lattice.{0} (preorder.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_51387 (h0 : function.extfun Type group) : @is_cyclic.{0} (left_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (left_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_51388 (h2 : ring (nondiscrete_normed_field linarith.ineq)) : strong_rank_condition (nondiscrete_normed_field linarith.ineq) := sorry --non-trivial
lemma new_lemma_51389 (h0 : ring (add_comm_monoid Type)) : is_principal_ideal_ring (add_comm_monoid Type) := sorry --non-trivial
lemma new_lemma_51390 (h0 : complete_lattice (ordered_comm_ring (finset linarith.comp))) : is_compactly_generated (ordered_comm_ring (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_51391 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (normed_lattice_add_comm_group.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_lattice_add_comm_group.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_51392 (h0 : topological_space (with_bot (has_ssubset linarith.ineq))) : irreducible_space (with_bot (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_51393 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @irreducible_space.{0} (linear_ordered_semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) topological_space.{0}) (linear_ordered_semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_51394 (h0 : functor.add_const (add_monoid (normed_comm_ring pos)) pos) : @add_monoid.fg.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (add_monoid.{0} (normed_comm_ring.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_51395 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (add_left_cancel_semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_left_cancel_semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51396 (h0 : ring (pseudo_metric_space (option (option empty)))) : strong_rank_condition (pseudo_metric_space (option (option empty))) := sorry --non-trivial
lemma new_lemma_51397 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @rank_condition.{1} (cancel_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 ring.{1}) (cancel_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_51398 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (finset.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (finset.{0} pos))  := sorry --non-trivial
lemma new_lemma_51399 (h0 : functor.add_const (topological_space (bin_tree num)) (semiring num)) : @locally_compact_space.{0} (bin_tree.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (bin_tree.{0} num)) (semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_51400 (h0 : list (finset (has_neg_part pos))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_51401 (h0 : functor.add_const (group (add_cancel_monoid pos)) unsigned) : @is_cyclic.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (add_cancel_monoid.{0} pos)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_51402 (h0 : topological_space (with_bot (has_inv linarith.comp_source))) : totally_disconnected_space (with_bot (has_inv linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_51403 (h0 : topological_space (cancel_monoid (has_add (has_add environment.implicit_infer_kind)))) : path_connected_space (cancel_monoid (has_add (has_add environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_51404 (h0 : functor.add_const (group (ring pos)) pos) : @is_simple_group.{0} (ring.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (ring.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_51405 (h0 : set (set string.iterator_imp)) : is_pi_system h0 := sorry --non-trivial
lemma new_lemma_51406 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (canonically_linear_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (canonically_linear_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_51407 (h0 : function.extfun (Type 1) (functor.comp group semigroup)) : @is_cyclic.{1} (semigroup.{1} Type) (@functor.comp.run.{1 1 1} group.{1} semigroup.{1} Type (@functor.comp.run.{1 1 1} group.{1} semigroup.{1} Type (@function.extfun_app.{3 2} (Type 1) (functor.comp.{1 1 1} group.{1} semigroup.{1}) h0 Type)))  := sorry --non-trivial
lemma new_lemma_51408 (h0 : topological_space (has_to_string (has_add (has_add (has_add environment.implicit_infer_kind))))) : t1_space (has_to_string (has_add (has_add (has_add environment.implicit_infer_kind)))) := sorry --non-trivial
lemma new_lemma_51409 (h0 : group (pseudo_metric_space (option (option (option (option unsigned)))))) : normalizer_condition (pseudo_metric_space (option (option (option (option unsigned))))) := sorry --non-trivial
lemma new_lemma_51410 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : countable_Inter_filter (function.extfun_app (function.extfun_app h0 filter) (has_pos_part real)) := sorry --non-trivial
lemma new_lemma_51411 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (boolean_algebra.core.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (boolean_algebra.core.{0} empty))  := sorry --non-trivial
lemma new_lemma_51412 (h0 : add_group (uniform_space (metric_space reducibility_hints))) : is_add_cyclic (uniform_space (metric_space reducibility_hints)) := sorry --non-trivial
lemma new_lemma_51413 (h0 : function.extfun Type topological_space) : @normal_space.{0} (linear_ordered_cancel_comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_cancel_comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_51414 (h1 : has_lt (mul_one_class (mul_one_class (normed_field (normed_field (mul_one_class enat)))))) : no_max_order (mul_one_class (mul_one_class (normed_field (normed_field (mul_one_class enat))))) := sorry --non-trivial
lemma new_lemma_51415 (h0 : semiring (has_nndist (finset Type))) : is_noetherian_ring (has_nndist (finset Type)) := sorry --non-trivial
lemma new_lemma_51416 (h0 : functor.add_const (function.extfun Type group) Type) : @is_simple_group.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type group.{0}) Type h0) (add_cancel_monoid.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_51417 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (as_linear_order.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (as_linear_order.{0} empty))  := sorry --non-trivial
lemma new_lemma_51418 (h0 : functor.add_const (topological_space (ring unsigned)) name) : @t0_space.{0} (ring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_51419 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (has_Inf.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_Inf.{0} real))  := sorry --non-trivial
lemma new_lemma_51420 (h0 : functor.add_const (function.extfun Type add_group) Type) : @is_add_cyclic.{0} pos (@function.extfun_app.{2 1} Type add_group.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type add_group.{0}) Type h0) pos)  := sorry --non-trivial
lemma new_lemma_51421 (h0 : functor.add_const (topological_space (has_bot empty)) empty) : @loc_path_connected_space.{0} (has_bot.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_bot.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_51422 (h0 : ring (ring (complete_semilattice_Sup linarith.comp))) : is_principal_ideal_ring (ring (complete_semilattice_Sup linarith.comp)) := sorry --non-trivial
lemma new_lemma_51423 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (measure_theory.measure_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measure_theory.measure_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_51424 (h0 : functor.add_const (topological_space (add_cancel_comm_monoid empty)) empty) : @normal_space.{0} (add_cancel_comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_comm_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_51425 (h0 : not (function.extfun Type topological_space -> false)) : @irreducible_space.{0} (linear_ordered_semiring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (linear_ordered_semiring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_51426 (h0 : uniform_space (semi_normed_ring (mul_one_class linarith.ineq))) : complete_space (semi_normed_ring (mul_one_class linarith.ineq)) := sorry --non-trivial
lemma new_lemma_51427 (h0 : group (with_bot (semiring congr_arg_kind))) : is_cyclic (with_bot (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_51428 (h0 : topological_space (has_le std_gen)) : totally_disconnected_space (has_le std_gen) := sorry --non-trivial
lemma new_lemma_51429 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (semiring.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_51430 (h0 : topological_space (sub_neg_monoid (has_add (has_Inf pos)))) : topological_space.separable_space (sub_neg_monoid (has_add (has_Inf pos))) := sorry --non-trivial
lemma new_lemma_51431 (h0 : function.extfun Type (prod (cancel_monoid congr_arg_kind))) : id_rel (function.extfun_app h0 (cancel_monoid congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_51432 (h0 : not (uniform_space (normed_group linarith.comp) -> false)) : @separated_space.{0} (normed_group.{0} linarith.comp) (@classical.by_contradiction'.{1} (uniform_space.{0} (normed_group.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_51433 (h1 : add_group (normed_group to_additive.value_type)) : is_add_cyclic (normed_group to_additive.value_type) := sorry --non-trivial
lemma new_lemma_51434 (h0 : topological_space (comm_semigroup linarith.comp)) : path_connected_space (comm_semigroup linarith.comp) := sorry --non-trivial
lemma new_lemma_51435 (h0 : not (topological_space (measure_theory.measure_space num) -> false)) : @topological_space.separable_space.{0} (measure_theory.measure_space.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (measure_theory.measure_space.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_51436 (h0 : functor.add_const (uniform_space (has_add linarith.comp)) (finset Type)) : @complete_space.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 1} (uniform_space.{0} (has_add.{0} linarith.comp)) (finset.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_51437 (h0 : measurable_space (has_nnnorm linarith.ineq)) (h1 : has_sup (has_nnnorm linarith.ineq)) : has_measurable_sup₂ (has_nnnorm linarith.ineq) := sorry --non-trivial
lemma new_lemma_51438 (h0 : group (monoid empty)) : normalizer_condition (monoid empty) := sorry --non-trivial
lemma new_lemma_51439 (h0 : topological_space (with_bot (semiring fun_info))) : path_connected_space (with_bot (semiring fun_info)) := sorry --non-trivial
lemma new_lemma_51440 (h0 : topological_space (comm_group pos)) : normal_space (comm_group pos) := sorry --non-trivial
lemma new_lemma_51441 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (preorder.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (preorder.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_51442 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (add_group.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_group.{0} num))  := sorry --non-trivial
lemma new_lemma_51443 (h0 : group (id empty)) : normalizer_condition (id empty) := sorry --non-trivial
lemma new_lemma_51444 (h0 : functor.add_const (monoid (complete_distrib_lattice Type)) pos) : @monoid.fg.{1} (complete_distrib_lattice.{1} Type) (@functor.add_const.run.{1 0} (monoid.{1} (complete_distrib_lattice.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_51445 (h0 : functor.add_const (group (comm_group Type)) pos) : @group.fg.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (comm_group.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_51446 (h0 : topological_space (ordered_comm_ring (has_Inf Type))) : normal_space (ordered_comm_ring (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_51447 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (has_star unsigned)) := sorry --non-trivial
lemma new_lemma_51448 (h0 : uniform_space (option pos)) : complete_space (option pos) := sorry --non-trivial
lemma new_lemma_51449 (h0 : ring (has_pos_part (ring pos))) : rank_condition (has_pos_part (ring pos)) := sorry --non-trivial
lemma new_lemma_51450 (h0 : topological_space (measurable_space.dynkin_system num)) : discrete_topology (measurable_space.dynkin_system num) := sorry --non-trivial
lemma new_lemma_51451 (h0 : add_group (complete_distrib_lattice (option (option (option empty))))) : is_add_cyclic (complete_distrib_lattice (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_51452 (h0 : topological_space (add_cancel_monoid (boolean_algebra Type))) : totally_separated_space (add_cancel_monoid (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_51453 (h0 : not (function.extfun Type ring -> false)) : @strong_rank_condition.{0} (left_cancel_semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (left_cancel_semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51454 (h0 : topological_space (canonically_ordered_comm_semiring (has_add Type))) : normal_space (canonically_ordered_comm_semiring (has_add Type)) := sorry --non-trivial
lemma new_lemma_51455 (h0 : ring (has_union (has_norm (has_norm (has_norm unsigned))))) : is_domain (has_union (has_norm (has_norm (has_norm unsigned)))) := sorry --non-trivial
lemma new_lemma_51456 (h1 : ring (linear_ordered_add_comm_group fun_info)) : is_domain (linear_ordered_add_comm_group fun_info) := sorry --non-trivial
lemma new_lemma_51457 (h0 : function.extfun Type topological_space) : @t1_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semigroup.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_51458 (h0 : not (add_group (topological_space to_additive.value_type) -> false)) : @is_add_cyclic.{0} (topological_space.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (add_group.{0} (topological_space.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_51459 (h0 : topological_space (left_cancel_semigroup (semiring (semiring num)))) : topological_space.separable_space (left_cancel_semigroup (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_51460 (h0 : topological_space (semi_normed_comm_ring (random_gen (has_ssubset linarith.ineq)))) : locally_compact_space (semi_normed_comm_ring (random_gen (has_ssubset linarith.ineq))) := sorry --non-trivial
lemma new_lemma_51461 (h0 : topological_space (has_ssubset (mul_one_class char))) : totally_disconnected_space (has_ssubset (mul_one_class char)) := sorry --non-trivial
lemma new_lemma_51462 (h0 : group (has_add (has_nndist pos))) : is_simple_group (has_add (has_nndist pos)) := sorry --non-trivial
lemma new_lemma_51463 (h0 : topological_space (has_zero (has_to_string Type))) : loc_path_connected_space (has_zero (has_to_string Type)) := sorry --non-trivial
lemma new_lemma_51464 (h1 : topological_space (has_compl string_imp)) : t0_space (has_compl string_imp) := sorry --non-trivial
lemma new_lemma_51465 (h0 : topological_space (simple_graph enat)) (h2 : preorder (simple_graph enat)) : order_closed_topology (simple_graph enat) := sorry --non-trivial
lemma new_lemma_51466 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @group.fg.{0} (measurable_space.{0} fun_info) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) group.{0}) (measurable_space.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_51467 (h0 : function.extfun Type group) : @is_cyclic.{0} (with_bot.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (with_bot.{0} empty))  := sorry --non-trivial
lemma new_lemma_51468 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} fun_info (@function.extfun_app.{2 1} Type topological_space.{0} h0 fun_info)  := sorry --non-trivial
lemma new_lemma_51469 (h0 : not (has_mem.mem (has_emptyc num) has_emptyc.emptyc -> false)) : @totally_separated_space.{0} (has_emptyc.{0} num) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_emptyc.{0} num) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_emptyc.{0} num) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_51470 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (ordered_comm_group.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type ring.{0} h0 (ordered_comm_group.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_51471 (h0 : group (has_norm (random_gen (has_norm fun_info)))) : normalizer_condition (has_norm (random_gen (has_norm fun_info))) := sorry --non-trivial
lemma new_lemma_51472 (h0 : complete_lattice (measurable_space linarith.comp_source)) : is_compactly_generated (measurable_space linarith.comp_source) := sorry --non-trivial
lemma new_lemma_51473 (h0 : topological_space (sub_neg_monoid linarith.comp)) : discrete_topology (sub_neg_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_51474 (h0 : fin has_zero.zero) : @sequential_space.{0} (ordered_comm_monoid.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (ordered_comm_monoid.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_51475 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (has_dist.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_dist.{0} empty))  := sorry --non-trivial
lemma new_lemma_51476 (h0 : list (mul_zero_class (has_nndist Type))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_51477 (h0 : add_group (has_zero (has_add unsigned))) : is_add_cyclic (has_zero (has_add unsigned)) := sorry --non-trivial
lemma new_lemma_51478 (h0 : add_group (dlist (has_inv linarith.ineq))) : is_add_cyclic (dlist (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_51479 (h0 : functor.add_const (add_group (add_semigroup empty)) num) : @is_add_cyclic.{0} (add_semigroup.{0} empty) (@functor.add_const.run.{0 0} (add_group.{0} (add_semigroup.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_51480 (h0 : ring (has_lt (mul_one_class string.iterator_imp))) : rank_condition (has_lt (mul_one_class string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_51481 (h0 : cancel_comm_monoid_with_zero (comm_group (normed_comm_ring (boolean_algebra pos)))) : unique_factorization_monoid (comm_group (normed_comm_ring (boolean_algebra pos))) := sorry --non-trivial
lemma new_lemma_51482 (h0 : not (complete_lattice (with_one congr_arg_kind) -> false)) : @is_atomistic.{0} (with_one.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (complete_lattice.{0} (with_one.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_51483 (h0 : prod (has_Sup num) (has_Sup num)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_51484 (h0 : fin has_zero.zero) : @normal_space.{0} (normed_lattice_add_comm_group.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (normed_lattice_add_comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_51485 (h0 : fin has_zero.zero) : @is_simple_group.{0} (ordered_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type group.{0}) h0) (ordered_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_51486 (h0 : topological_space (boolean_algebra (finset linarith.comp))) : irreducible_space (boolean_algebra (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_51487 (h0 : semiring (boolean_algebra.core (has_neg (has_to_string (has_to_string congr_arg_kind))))) : is_noetherian_ring (boolean_algebra.core (has_neg (has_to_string (has_to_string congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_51488 (h0 : ring (has_neg_part pos)) : rank_condition (has_neg_part pos) := sorry --non-trivial
lemma new_lemma_51489 (h0 : topological_space (monoid_with_zero (option pos))) : normal_space (monoid_with_zero (option pos)) := sorry --non-trivial
lemma new_lemma_51490 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_51491 (h1 : measurable_space (mul_one_class char)) (h2 : measure_theory.measure (mul_one_class char)) : measure_theory.is_finite_measure h2 := sorry --non-trivial
lemma new_lemma_51492 (h0 : ring (add_cancel_monoid (has_Inf linarith.comp))) : strong_rank_condition (add_cancel_monoid (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_51493 (h0 : ring (mul_one_class environment.projection_info)) : strong_rank_condition (mul_one_class environment.projection_info) := sorry --non-trivial
lemma new_lemma_51494 (h0 : uniform_space (has_top (has_top empty))) : complete_space (has_top (has_top empty)) := sorry --non-trivial
lemma new_lemma_51495 (h0 : topological_space (measurable_space (has_norm linarith.ineq))) : locally_compact_space (measurable_space (has_norm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_51496 (h0 : monoid (canonically_ordered_comm_semiring num) -> monoid (canonically_ordered_comm_semiring num) -> Prop) : is_per (monoid (canonically_ordered_comm_semiring num)) h0 := sorry --non-trivial
lemma new_lemma_51497 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (comm_group.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (comm_group.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_51498 (h0 : functor.add_const (topological_space znum) (option (option (option empty)))) : @path_connected_space.{0} znum (@functor.add_const.run.{0 0} (topological_space.{0} znum) (option.{0} (option.{0} (option.{0} empty))) h0)  := sorry --non-trivial
lemma new_lemma_51499 (h0 : ring (has_one (semiring (semiring (semiring (semiring fun_info)))))) : is_domain (has_one (semiring (semiring (semiring (semiring fun_info))))) := sorry --non-trivial
lemma new_lemma_51500 (h0 : not (add_monoid name -> false)) : @add_monoid.fg.{0} name (@classical.by_contradiction'.{1} (add_monoid.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_51501 (h0 : ring (has_add (finset (ring linarith.comp)))) : is_principal_ideal_ring (has_add (finset (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_51502 (h0 : not (add_group (has_append char) -> false)) : @is_add_cyclic.{0} (has_append.{0} char) (@classical.by_contradiction'.{1} (add_group.{0} (has_append.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_51503 (h0 : group (sub_neg_monoid pos)) : is_simple_group (sub_neg_monoid pos) := sorry --non-trivial
lemma new_lemma_51504 (h0 : topological_space (linear_ordered_field (option ennreal))) : totally_disconnected_space (linear_ordered_field (option ennreal)) := sorry --non-trivial
lemma new_lemma_51505 (h0 : ordered_add_comm_monoid (has_Inf (has_neg (ring pos)))) : archimedean (has_Inf (has_neg (ring pos))) := sorry --non-trivial
lemma new_lemma_51506 (h0 : topological_space (has_add (has_neg linarith.comp))) : totally_disconnected_space (has_add (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_51507 (h0 : not (ring string_imp -> false)) : @rank_condition.{0} string_imp (@classical.by_contradiction'.{1} (ring.{0} string_imp) h0)  := sorry --non-trivial
lemma new_lemma_51508 (h0 : topological_space (complete_distrib_lattice (cancel_monoid Type))) : t1_space (complete_distrib_lattice (cancel_monoid Type)) := sorry --non-trivial
lemma new_lemma_51509 (h0 : not (topological_space (linear_ordered_comm_ring empty) -> false)) : @totally_separated_space.{0} (linear_ordered_comm_ring.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (linear_ordered_comm_ring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_51510 (h0 : topological_space (has_to_string unsigned)) : normal_space (has_to_string unsigned) := sorry --non-trivial
lemma new_lemma_51511 (h0 : functor.add_const (ring (boolean_algebra.core unsigned)) environment.implicit_infer_kind) : @strong_rank_condition.{0} (boolean_algebra.core.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.core.{0} unsigned)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_51512 (h0 : not (ring (fintype (has_nnnorm fun_info)) -> false)) : @is_domain.{0} (fintype.{0} (has_nnnorm.{0} fun_info)) (@classical.by_contradiction'.{1} (ring.{0} (fintype.{0} (has_nnnorm.{0} fun_info))) h0)  := sorry --non-trivial
lemma new_lemma_51513 (h0 : topological_space (has_top (random_gen (random_gen linarith.ineq)))) : path_connected_space (has_top (random_gen (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_51514 (h0 : not (function.extfun Type ring -> false)) : @is_principal_ideal_ring.{0} (has_sub.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (has_sub.{0} empty))  := sorry --non-trivial
lemma new_lemma_51515 (h0 : function.extfun nat fin) : @is_domain.{0} (with_one.{0} fun_info) (@matrix.vec_empty.{0} (ring.{0} (with_one.{0} fun_info)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_51516 (h0 : topological_space (ordered_comm_monoid real)) : irreducible_space (ordered_comm_monoid real) := sorry --non-trivial
lemma new_lemma_51517 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @irreducible_space.{0} (boolean_algebra.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) topological_space.{0}) (boolean_algebra.{0} name))  := sorry --non-trivial
lemma new_lemma_51518 (h0 : functor.add_const (list (has_to_string environment.implicit_infer_kind)) (has_neg pos)) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51519 (h0 : functor.add_const (semiring (has_nndist unsigned)) Type) : @is_noetherian_ring.{0} (has_nndist.{0} unsigned) (@functor.add_const.run.{0 1} (semiring.{0} (has_nndist.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_51520 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (boolean_algebra.core.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (boolean_algebra.core.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_51521 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (has_neg_part.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_neg_part.{0} pos))  := sorry --non-trivial
lemma new_lemma_51522 (h0 : functor.add_const (complete_lattice (complete_distrib_lattice unsigned)) unsigned) : @complete_lattice.is_Sup_finite_compact.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (complete_distrib_lattice.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_51523 (h0 : topological_space (has_nndist (option ennreal))) : preconnected_space (has_nndist (option ennreal)) := sorry --non-trivial
lemma new_lemma_51524 (h0 : functor.comp topological_space has_neg_part Type) : @topological_space.separable_space.{1} (has_neg_part.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} has_neg_part.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_51525 (h0 : has_le (fintype to_additive.value_type)) : no_bot_order (fintype to_additive.value_type) := sorry --non-trivial
lemma new_lemma_51526 (h0 : uniform_space (nondiscrete_normed_field environment.projection_info)) : complete_space (nondiscrete_normed_field environment.projection_info) := sorry --non-trivial
lemma new_lemma_51527 (h0 : list (simple_graph congr_arg_kind)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_51528 (h0 : not (has_mem.mem (normed_group linarith.comp_source) has_emptyc.emptyc -> false)) : @totally_disconnected_space.{0} (normed_group.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type topological_space.{0} (normed_group.{0} linarith.comp_source) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (normed_group.{0} linarith.comp_source) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_51529 (h1 : add_group (normed_field (normed_field std_gen))) : is_add_cyclic (normed_field (normed_field std_gen)) := sorry --non-trivial
lemma new_lemma_51530 (h0 : functor.add_const (ring (has_add linarith.comp)) Type) : @rank_condition.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 1} (ring.{0} (has_add.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_51531 (h0 : fin has_zero.zero) : @totally_separated_space.{0} (ordered_comm_monoid.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (ordered_comm_monoid.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_51532 (h0 : ring (semi_normed_ring (has_nnnorm linarith.ineq))) : strong_rank_condition (semi_normed_ring (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_51533 (h0 : topological_space (sub_neg_monoid (ordered_comm_monoid Type))) : normal_space (sub_neg_monoid (ordered_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_51534 (h0 : ring (comm_group name)) : rank_condition (comm_group name) := sorry --non-trivial
lemma new_lemma_51535 (h0 : group (generalized_boolean_algebra (has_add Type))) : normalizer_condition (generalized_boolean_algebra (has_add Type)) := sorry --non-trivial
lemma new_lemma_51536 (h0 : monoid (add_comm_monoid (has_neg_part environment.implicit_infer_kind))) : monoid.fg (add_comm_monoid (has_neg_part environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_51537 (h0 : functor.add_const (finset (filter empty)) empty) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51538 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (add_comm_monoid pos)) := sorry --non-trivial
lemma new_lemma_51539 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (add_semigroup.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_51540 (h0 : group (has_lt to_additive.value_type)) : is_cyclic (has_lt to_additive.value_type) := sorry --non-trivial
lemma new_lemma_51541 (h0 : topological_space (random_gen (has_top linarith.ineq))) : t0_space (random_gen (has_top linarith.ineq)) := sorry --non-trivial
lemma new_lemma_51542 (h0 : functor.add_const (topological_space (monoid unsigned)) empty) : @preirreducible_space.{0} (monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (monoid.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_51543 (h0 : topological_space (mul_one_class (has_ssubset ereal))) : path_connected_space (mul_one_class (has_ssubset ereal)) := sorry --non-trivial
lemma new_lemma_51544 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (dlist.{0} string_imp) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (dlist.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_51545 (h0 : complete_lattice (has_emptyc (has_inv (has_top fun_info)))) : complete_lattice.is_Sup_finite_compact (has_emptyc (has_inv (has_top fun_info))) := sorry --non-trivial
lemma new_lemma_51546 (h0 : char -> topological_space (mul_one_class fun_info)) (h1 : char) (h2 : unit) : @path_connected_space.{0} (mul_one_class.{0} fun_info) (@matrix.col.{0 0} char (topological_space.{0} (mul_one_class.{0} fun_info)) h0 h1 h2)  := sorry --non-trivial
lemma new_lemma_51547 (h0 : functor.add_const (group (mul_zero_class environment.implicit_infer_kind)) unsigned) : @is_cyclic.{0} (mul_zero_class.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (mul_zero_class.{0} environment.implicit_infer_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_51548 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (has_top.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_group.{0} h0 (has_top.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_51549 (h0 : group (measurable_space (has_norm (random_gen (random_gen num))))) : normalizer_condition (measurable_space (has_norm (random_gen (random_gen num)))) := sorry --non-trivial
lemma new_lemma_51550 (h0 : functor.add_const (group (non_assoc_semiring empty)) empty) : @normalizer_condition.{0} (non_assoc_semiring.{0} empty) (@functor.add_const.run.{0 0} (group.{0} (non_assoc_semiring.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_51551 (h0 : not (lattice (comm_ring (random_gen string.iterator_imp)) -> false)) : @is_modular_lattice.{0} (comm_ring.{0} (random_gen.{0} string.iterator_imp)) (@classical.by_contradiction'.{1} (lattice.{0} (comm_ring.{0} (random_gen.{0} string.iterator_imp))) h0)  := sorry --non-trivial
lemma new_lemma_51552 (h0 : has_mem.mem (complete_semilattice_Sup linarith.ineq) has_emptyc.emptyc) : @is_cyclic.{0} (complete_semilattice_Sup.{0} linarith.ineq) (@finset.pi.empty.{1 0} Type group.{0} (complete_semilattice_Sup.{0} linarith.ineq) h0)  := sorry --non-trivial
lemma new_lemma_51553 (h0 : add_monoid (left_cancel_monoid (semiring (semiring num)))) : add_monoid.fg (left_cancel_monoid (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_51554 (h0 : list (monoid (comm_monoid (comm_monoid (comm_monoid (comm_monoid (comm_monoid (comm_monoid unsigned)))))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_51555 (h0 : functor.add_const (uniform_space (finset linarith.comp)) linarith.comp) : @complete_space.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (finset.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51556 (h0 : add_group (complete_distrib_lattice (has_add pos))) : is_add_cyclic (complete_distrib_lattice (has_add pos)) := sorry --non-trivial
lemma new_lemma_51557 (h0 : fin has_zero.zero) : @preconnected_space.{0} (simple_graph.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (simple_graph.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_51558 (h0 : not (topological_space (has_top to_additive.value_type) -> false)) : @locally_compact_space.{0} (has_top.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (has_top.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_51559 (h0 : topological_space string_imp) : locally_compact_space string_imp := sorry --non-trivial
lemma new_lemma_51560 (h0 : group (has_neg_part (has_add pos))) : is_simple_group (has_neg_part (has_add pos)) := sorry --non-trivial
lemma new_lemma_51561 (h0 : functor.add_const (finset (has_Inf linarith.comp)) Type) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51562 (h0 : topological_space (ordered_comm_monoid Type)) : sequential_space (ordered_comm_monoid Type) := sorry --non-trivial
lemma new_lemma_51563 (h0 : topological_space (measurable_space linarith.ineq)) : totally_disconnected_space (measurable_space linarith.ineq) := sorry --non-trivial
lemma new_lemma_51564 (h0 : function.extfun Type (functor.comp topological_space has_neg)) : @path_connected_space.{0} (has_neg.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_neg.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} has_neg.{0}) h0 name))  := sorry --non-trivial
lemma new_lemma_51565 (h0 : not (add_group (with_zero char) -> false)) : @is_add_cyclic.{0} (with_zero.{0} char) (@classical.by_contradiction'.{1} (add_group.{0} (with_zero.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_51566 (h0 : semiring (linear_ordered_field name)) : is_noetherian_ring (linear_ordered_field name) := sorry --non-trivial
lemma new_lemma_51567 (h0 : topological_space (has_neg (has_add (has_add pos)))) : t1_space (has_neg (has_add (has_add pos))) := sorry --non-trivial
lemma new_lemma_51568 (h0 : add_group (comm_ring (has_inv (random_gen (dlist to_additive.value_type))))) : is_add_cyclic (comm_ring (has_inv (random_gen (dlist to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_51569 (h0 : filter (sub_neg_monoid (has_bot real))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_51570 (h0 : topological_space (has_zero (cancel_monoid pos))) : path_connected_space (has_zero (cancel_monoid pos)) := sorry --non-trivial
lemma new_lemma_51571 (h0 : complete_lattice (id (option empty))) : is_atomistic (id (option empty)) := sorry --non-trivial
lemma new_lemma_51572 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (boolean_algebra.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_51573 (h0 : complete_lattice (mul_one_class (mul_one_class char))) : complete_lattice.is_Sup_finite_compact (mul_one_class (mul_one_class char)) := sorry --non-trivial
lemma new_lemma_51574 (h0 : pnat) (h1 : with_bot (ulower (fin has_zero.zero))) (h2 : ne h1 has_bot.bot) : pnat.coprime h0 (matrix.vec_empty (ulower.up (with_bot.unbot h1 h2))) := sorry --non-trivial
lemma new_lemma_51575 (h0 : ordered_add_comm_monoid (has_edist (semiring empty))) : archimedean (has_edist (semiring empty)) := sorry --non-trivial
lemma new_lemma_51576 (h0 : ordered_comm_monoid (simple_graph Type)) : has_exists_mul_of_le (simple_graph Type) := sorry --non-trivial
lemma new_lemma_51577 (h0 : cancel_comm_monoid_with_zero (sub_neg_monoid (ordered_comm_monoid linarith.comp))) : unique_factorization_monoid (sub_neg_monoid (ordered_comm_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_51578 (h0 : functor.add_const (function.extfun (Type 1) list) Type) : list.nodup (function.extfun_app (functor.add_const.run h0) (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_51579 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (comm_monoid empty)) := sorry --non-trivial
lemma new_lemma_51580 (h0 : filter (has_neg_part (ring pos))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_51581 (h0 : functor.add_const (cancel_comm_monoid_with_zero (ring linarith.comp)) name) : @unique_factorization_monoid.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (ring.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_51582 (h0 : ring (option empty)) : is_domain (option empty) := sorry --non-trivial
lemma new_lemma_51583 (h0 : uniform_space (has_one (has_top (linear_ordered_semiring num)))) : complete_space (has_one (has_top (linear_ordered_semiring num))) := sorry --non-trivial
lemma new_lemma_51584 (h0 : complete_lattice (non_unital_non_assoc_semiring (random_gen char))) : complete_lattice.is_Sup_finite_compact (non_unital_non_assoc_semiring (random_gen char)) := sorry --non-trivial
lemma new_lemma_51585 (h0 : functor.add_const (ring (has_pos_part Type)) name) : @rank_condition.{1} (has_pos_part.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_pos_part.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_51586 (h0 : function.extfun Type topological_space) : @t1_space.{0} (has_star.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_star.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51587 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : list.nodup (function.extfun_app (function.extfun_app h0 list) (comm_ring string_imp)) := sorry --non-trivial
lemma new_lemma_51588 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (denumerable.{0} linarith.ineq) (@function.extfun_app.{2 1} Type add_group.{0} h0 (denumerable.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_51589 (h0 : not (function.extfun Type topological_space -> false)) : @totally_disconnected_space.{0} (measurable_space.dynkin_system.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (measurable_space.dynkin_system.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51590 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @discrete_topology.{1} (comm_group.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (comm_group.{1} Type))  := sorry --non-trivial
lemma new_lemma_51591 (h0 : topological_space (has_zero (has_add (has_add linarith.comp)))) : normal_space (has_zero (has_add (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_51592 (h0 : has_zero pos -> has_zero pos -> Prop) : is_symm (has_zero pos) h0 := sorry --non-trivial
lemma new_lemma_51593 (h0 : functor.add_const (topological_space (add_cancel_monoid unsigned)) empty) : @path_connected_space.{0} (add_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_51594 (h0 : function.extfun Type ring) : @is_domain.{0} (nondiscrete_normed_field.{0} linarith.ineq) (@function.extfun_app.{2 1} Type ring.{0} h0 (nondiscrete_normed_field.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_51595 (h0 : nat -> nat -> Prop) (h1 : part nat) : set.finite (functor.liftr h0 h1) := sorry --non-trivial
lemma new_lemma_51596 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (partial_order.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (partial_order.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_51597 (h0 : finset (has_neg (has_nndist name))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_51598 (h0 : function.extfun nat fin) : @is_principal_ideal_ring.{1} (ordered_comm_monoid.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (ordered_comm_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_51599 (h0 : semiring (canonically_ordered_comm_semiring (ordered_ring (has_neg (ring (ring Type)))))) : is_noetherian_ring (canonically_ordered_comm_semiring (ordered_ring (has_neg (ring (ring Type))))) := sorry --non-trivial
lemma new_lemma_51600 (h0 : function.extfun Type ring) : @is_domain.{0} (complete_semilattice_Sup.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} h0 (complete_semilattice_Sup.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_51601 (h0 : filter (monoid_with_zero (option (option pos)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_51602 (h0 : functor.add_const (ring (add_cancel_monoid Type)) linarith.comp) : @is_principal_ideal_ring.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (add_cancel_monoid.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51603 (h0 : additive ereal -> additive ereal -> Prop) : is_per (additive ereal) h0 := sorry --non-trivial
lemma new_lemma_51604 (h0 : not (topological_space (with_one num) -> false)) : @totally_separated_space.{0} (with_one.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (with_one.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_51605 (h0 : finset (add_cancel_monoid (boolean_algebra name))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_51606 (h0 : list (add_cancel_monoid (has_add (comm_group Type)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_51607 (h0 : topological_space (has_Inf (ordered_comm_monoid real))) : irreducible_space (has_Inf (ordered_comm_monoid real)) := sorry --non-trivial
lemma new_lemma_51608 (h0 : topological_space (cancel_monoid (boolean_algebra.core ennreal))) : path_connected_space (cancel_monoid (boolean_algebra.core ennreal)) := sorry --non-trivial
lemma new_lemma_51609 (h0 : functor.add_const (topological_space (complete_distrib_lattice environment.implicit_infer_kind)) pos) : @locally_compact_space.{0} (complete_distrib_lattice.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_51610 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (has_add.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_add.{0} num))  := sorry --non-trivial
lemma new_lemma_51611 (h0 : group (has_emptyc linarith.comp_source)) : group.fg (has_emptyc linarith.comp_source) := sorry --non-trivial
lemma new_lemma_51612 (h0 : functor.add_const (ring (normed_comm_ring name)) environment.implicit_infer_kind) : @rank_condition.{0} (normed_comm_ring.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (normed_comm_ring.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_51613 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (semiring.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_51614 (h1 : topological_space (has_nnnorm reducibility_hints)) : t0_space (has_nnnorm reducibility_hints) := sorry --non-trivial
lemma new_lemma_51615 (h0 : topological_space (boolean_algebra (finset (has_pos_part (has_Inf Type))))) : locally_compact_space (boolean_algebra (finset (has_pos_part (has_Inf Type)))) := sorry --non-trivial
lemma new_lemma_51616 (h0 : functor.add_const (function.extfun Type group) (ring (has_to_string (ring environment.implicit_infer_kind)))) : @normalizer_condition.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) (ring.{0} (has_to_string.{0} (ring.{0} environment.implicit_infer_kind))) h0) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_51617 (h0 : functor.add_const (function.extfun Type topological_space) (has_pos_part (has_Inf Type))) : @sequential_space.{0} (has_to_string.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) (has_pos_part.{1} (has_Inf.{1} Type)) h0) (has_to_string.{0} pos))  := sorry --non-trivial
lemma new_lemma_51618 (h0 : topological_space (mul_one_class to_additive.value_type)) (h1 : add_group (mul_one_class to_additive.value_type)) : topological_add_group (mul_one_class to_additive.value_type) := sorry --non-trivial
lemma new_lemma_51619 (h0 : group (random_gen (random_gen (random_gen to_additive.value_type)))) : normalizer_condition (random_gen (random_gen (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_51620 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (semiring.{0} (semiring.{0} unsigned)) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (semiring.{0} (semiring.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_51621 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (with_one.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_one.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_51622 (h0 : ring (has_add (has_add (has_Inf Type)))) : is_principal_ideal_ring (has_add (has_add (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_51623 (h0 : functor.add_const (topological_space (finset linarith.comp)) name) : @sequential_space.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_51624 (h0 : group (comm_ring (add_cancel_comm_monoid ennreal))) : is_cyclic (comm_ring (add_cancel_comm_monoid ennreal)) := sorry --non-trivial
lemma new_lemma_51625 (h0 : function.extfun Type group) : @is_cyclic.{0} fun_info (@function.extfun_app.{2 1} Type group.{0} h0 fun_info)  := sorry --non-trivial
lemma new_lemma_51626 (h0 : ring (comm_semigroup (has_bot (sub_neg_monoid (has_add real))))) : rank_condition (comm_semigroup (has_bot (sub_neg_monoid (has_add real)))) := sorry --non-trivial
lemma new_lemma_51627 (h0 : monoid (has_Sup (semiring (semiring empty)))) : monoid.fg (has_Sup (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_51628 (h0 : add_group (uniform_space (has_lt char))) : is_add_cyclic (uniform_space (has_lt char)) := sorry --non-trivial
lemma new_lemma_51629 (h0 : ring (complete_semilattice_Sup (random_gen (random_gen (random_gen to_additive.value_type))))) : is_domain (complete_semilattice_Sup (random_gen (random_gen (random_gen to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_51630 (h0 : complete_lattice real) : is_atomistic real := sorry --non-trivial
lemma new_lemma_51631 (h0 : monoid (linear_ordered_add_comm_group (random_gen num))) : monoid.fg (linear_ordered_add_comm_group (random_gen num)) := sorry --non-trivial
lemma new_lemma_51632 (h0 : topological_space (has_Inf (has_add (has_add (has_add linarith.comp))))) : locally_compact_space (has_Inf (has_add (has_add (has_add linarith.comp)))) := sorry --non-trivial
lemma new_lemma_51633 (h0 : add_monoid (boolean_algebra (has_zero (ring Type)))) : add_monoid.fg (boolean_algebra (has_zero (ring Type))) := sorry --non-trivial
lemma new_lemma_51634 (h0 : functor.add_const (function.extfun Type finset) linarith.comp) : finset.nonempty (function.extfun_app (functor.add_const.run h0) environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_51635 (h0 : topological_space (add_cancel_monoid (semigroup Type))) : preconnected_space (add_cancel_monoid (semigroup Type)) := sorry --non-trivial
lemma new_lemma_51636 (h0 : add_group (normed_field (mul_one_class char))) : is_add_cyclic (normed_field (mul_one_class char)) := sorry --non-trivial
lemma new_lemma_51637 (h0 : ring (semi_normed_comm_ring (has_ssubset linarith.ineq))) : is_domain (semi_normed_comm_ring (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_51638 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (boolean_algebra.core.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (boolean_algebra.core.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51639 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (has_add.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_add.{0} name))  := sorry --non-trivial
lemma new_lemma_51640 (h0 : ring (comm_monoid (option (option empty)))) : rank_condition (comm_monoid (option (option empty))) := sorry --non-trivial
lemma new_lemma_51641 (h0 : topological_space (normed_comm_ring (comm_group name))) : t0_space (normed_comm_ring (comm_group name)) := sorry --non-trivial
lemma new_lemma_51642 (h0 : functor.add_const (uniform_space (has_star empty)) empty) : @complete_space.{0} (has_star.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_star.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_51643 (h0 : group (ordered_comm_ring (generalized_boolean_algebra name))) : is_simple_group (ordered_comm_ring (generalized_boolean_algebra name)) := sorry --non-trivial
lemma new_lemma_51644 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @t0_space.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_51645 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (left_cancel_semigroup congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_51646 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (add_comm_monoid environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_51647 (h0 : not (topological_space (complete_linear_order congr_arg_kind) -> false)) : @irreducible_space.{0} (complete_linear_order.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (complete_linear_order.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_51648 (h0 : prod (add_right_cancel_monoid congr_arg_kind) (add_right_cancel_monoid congr_arg_kind)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_51649 (h1 : complete_lattice (semi_normed_ring char)) : is_compactly_generated (semi_normed_ring char) := sorry --non-trivial
lemma new_lemma_51650 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (canonically_ordered_add_monoid empty)) := sorry --non-trivial
lemma new_lemma_51651 (h0 : fin has_zero.zero) : @complete_space.{0} (add_comm_monoid.{0} name) (@matrix.vec_empty.{0} (uniform_space.{0} (add_comm_monoid.{0} name)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_51652 (h1 : ring (denumerable char)) : rank_condition (denumerable char) := sorry --non-trivial
lemma new_lemma_51653 (h0 : uniform_space (has_add (option (option (option (mul_zero_class unsigned)))))) : separated_space (has_add (option (option (option (mul_zero_class unsigned))))) := sorry --non-trivial
lemma new_lemma_51654 (h0 : uniform_space (semi_normed_ring (random_gen (random_gen (random_gen char))))) : complete_space (semi_normed_ring (random_gen (random_gen (random_gen char)))) := sorry --non-trivial
lemma new_lemma_51655 (h0 : function.extfun (Type 1) (functor.comp topological_space ring)) : @totally_disconnected_space.{1} (ring.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} ring.{1} Type (@function.extfun_app.{3 2} (Type 1) (functor.comp.{1 1 1} topological_space.{1} ring.{1}) h0 Type))  := sorry --non-trivial
lemma new_lemma_51656 (h0 : topological_space (boolean_algebra.core unsigned)) : t0_space (boolean_algebra.core unsigned) := sorry --non-trivial
lemma new_lemma_51657 (h0 : ring (partial_order (semiring unsigned))) : is_domain (partial_order (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_51658 (h0 : functor.add_const (finset (has_neg Type)) pos) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51659 (h0 : not (topological_space (measurable_space.dynkin_system num) -> false)) : @topological_space.separable_space.{0} (measurable_space.dynkin_system.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (measurable_space.dynkin_system.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_51660 (h0 : functor.add_const (cancel_comm_monoid_with_zero (non_assoc_semiring empty)) empty) : @unique_factorization_monoid.{0} (non_assoc_semiring.{0} empty) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (non_assoc_semiring.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_51661 (h0 : filter (has_norm (random_gen (random_gen (random_gen fun_info))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_51662 (h0 : functor.add_const (group num) num) : @is_cyclic.{0} num (@functor.add_const.run.{0 0} (group.{0} num) num h0)  := sorry --non-trivial
lemma new_lemma_51663 (h0 : functor.add_const (add_group (has_zero Type)) Type) : @is_add_cyclic.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 1} (add_group.{1} (has_zero.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_51664 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (sub_neg_monoid.{0} name) (@function.extfun_app.{2 1} Type ring.{0} h0 (sub_neg_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_51665 (h0 : functor.add_const (function.extfun (Type 1) ordered_comm_monoid) Type) : @has_exists_mul_of_le.{1} (add_cancel_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) ordered_comm_monoid.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) ordered_comm_monoid.{1}) Type h0) (add_cancel_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_51666 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (left_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (left_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_51667 (h0 : not (function.extfun Type monoid -> false)) : @monoid.fg.{0} (has_one.{0} num) (@function.extfun_app.{2 1} Type monoid.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type monoid.{0}) h0) (has_one.{0} num))  := sorry --non-trivial
lemma new_lemma_51668 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} unsigned (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 unsigned)  := sorry --non-trivial
lemma new_lemma_51669 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (has_inv.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_inv.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_51670 (h0 : topological_space (canonically_ordered_monoid (sub_neg_monoid name))) : sequential_space (canonically_ordered_monoid (sub_neg_monoid name)) := sorry --non-trivial
lemma new_lemma_51671 (h1 : topological_space (add_comm_semigroup enat)) (h2 : preorder (add_comm_semigroup enat)) : order_topology (add_comm_semigroup enat) := sorry --non-trivial
lemma new_lemma_51672 (h0 : filter (comm_group (add_comm_monoid environment.implicit_infer_kind))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_51673 (h0 : group (boolean_algebra.core (has_add (finset pos)))) : is_cyclic (boolean_algebra.core (has_add (finset pos))) := sorry --non-trivial
lemma new_lemma_51674 (h0 : list (has_zero (cancel_monoid (has_neg_part ennreal)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_51675 (h0 : functor.add_const (function.extfun Type ring) name) : @rank_condition.{0} (finset.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) name h0) (finset.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_51676 (h0 : not (function.extfun Type topological_space -> false)) : @normal_space.{0} (metric_space.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (metric_space.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51677 (h0 : comm_semigroup (has_bot real) -> comm_semigroup (has_bot real) -> Prop) : transitive h0 := sorry --non-trivial
lemma new_lemma_51678 (h0 : function.extfun Type topological_space) : @normal_space.{0} (pseudo_metric_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (pseudo_metric_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_51679 (h0 : functor.add_const (topological_space (complete_distrib_lattice Type)) linarith.comp) : @topological_space.separable_space.{1} (complete_distrib_lattice.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (complete_distrib_lattice.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51680 (h0 : topological_space (has_add congr_arg_kind)) : t1_space (has_add congr_arg_kind) := sorry --non-trivial
lemma new_lemma_51681 (h0 : not (has_mem.mem (measurable_space linarith.comp_source) has_emptyc.emptyc -> false)) : @path_connected_space.{0} (measurable_space.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type topological_space.{0} (measurable_space.{0} linarith.comp_source) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (measurable_space.{0} linarith.comp_source) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_51682 (h0 : functor.add_const (topological_space (add_group_with_zero_nhd empty)) (semiring empty)) : @path_connected_space.{0} (add_group_with_zero_nhd.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (add_group_with_zero_nhd.{0} empty)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_51683 (h0 : functor.add_const (topological_space (free_add_monoid empty)) (semiring empty)) : @discrete_topology.{0} (free_add_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (free_add_monoid.{0} empty)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_51684 (h0 : topological_space (has_inv (has_nnnorm to_additive.value_type))) : locally_compact_space (has_inv (has_nnnorm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_51685 (h0 : cancel_comm_monoid_with_zero (canonically_ordered_comm_semiring (option unsigned))) : unique_factorization_monoid (canonically_ordered_comm_semiring (option unsigned)) := sorry --non-trivial
lemma new_lemma_51686 (h0 : functor.add_const (function.extfun Type ring) (semiring congr_arg_kind)) : @is_principal_ideal_ring.{0} nnreal (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) (semiring.{0} congr_arg_kind) h0) nnreal)  := sorry --non-trivial
lemma new_lemma_51687 (h0 : ring (finset (option (option (option (option (option (option ennreal)))))))) : strong_rank_condition (finset (option (option (option (option (option (option ennreal))))))) := sorry --non-trivial
lemma new_lemma_51688 (h0 : functor.comp topological_space semigroup name) : @irreducible_space.{0} (semigroup.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} semigroup.{0} name h0)  := sorry --non-trivial
lemma new_lemma_51689 (h0 : functor.add_const (list (has_neg (add_comm_monoid name))) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51690 (h0 : complete_lattice (has_ssubset (random_gen char))) : complete_lattice.is_Sup_finite_compact (has_ssubset (random_gen char)) := sorry --non-trivial
lemma new_lemma_51691 (h0 : functor.add_const (add_monoid (normed_comm_ring pos)) (has_neg linarith.comp)) : @add_monoid.fg.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (add_monoid.{0} (normed_comm_ring.{0} pos)) (has_neg.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_51692 (h0 : topological_space (option (semiring (semiring unsigned)))) : totally_separated_space (option (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_51693 (h0 : group (linear_ordered_add_comm_group fun_info)) : group.fg (linear_ordered_add_comm_group fun_info) := sorry --non-trivial
lemma new_lemma_51694 (h0 : functor.add_const (group (has_nndist pos)) pos) : @is_cyclic.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_nndist.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_51695 (h0 : not (function.extfun Type topological_space -> false)) : @locally_compact_space.{0} (semiring.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (semiring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51696 (h0 : ring (has_top (semiring num))) : is_principal_ideal_ring (has_top (semiring num)) := sorry --non-trivial
lemma new_lemma_51697 (h0 : topological_space (has_union (semiring congr_arg_kind))) : totally_separated_space (has_union (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_51698 (h0 : function.extfun Type (functor.add_const Prop)) : functor.add_const.run (function.extfun_app h0 (has_norm num)) := sorry --non-trivial
lemma new_lemma_51699 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (semigroup.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semigroup.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_51700 (h0 : ring (has_neg (has_add environment.implicit_infer_kind))) : strong_rank_condition (has_neg (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_51701 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @complete_space.{0} (measurable_space.dynkin_system.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) uniform_space.{0}) (measurable_space.dynkin_system.{0} empty))  := sorry --non-trivial
lemma new_lemma_51702 (h0 : topological_space (has_neg (finset pos))) : path_connected_space (has_neg (finset pos)) := sorry --non-trivial
lemma new_lemma_51703 (h0 : functor.add_const (complete_lattice (has_nndist pos)) linarith.comp) : @complete_lattice.is_Sup_finite_compact.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_nndist.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51704 (h0 : group (add_comm_monoid (finset (has_Inf (has_pos_part real))))) : is_cyclic (add_comm_monoid (finset (has_Inf (has_pos_part real)))) := sorry --non-trivial
lemma new_lemma_51705 (h0 : functor.add_const (topological_space (add_comm_monoid pos)) environment.implicit_infer_kind) : @preconnected_space.{0} (add_comm_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (add_comm_monoid.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_51706 (h0 : uniform_space (measurable_space (has_top linarith.comp_source))) : complete_space (measurable_space (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_51707 (h0 : topological_space (has_Inf (has_add (finset pos)))) : locally_compact_space (has_Inf (has_add (finset pos))) := sorry --non-trivial
lemma new_lemma_51708 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (group_with_zero.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (group_with_zero.{0} empty))  := sorry --non-trivial
lemma new_lemma_51709 (h0 : prod (has_add (monoid_with_zero pos)) (has_add (monoid_with_zero pos))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_51710 (h0 : cancel_comm_monoid_with_zero (has_Inf (has_Inf linarith.comp))) : unique_factorization_monoid (has_Inf (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_51711 (h0 : functor.add_const (topological_space (has_dist empty)) num) : @discrete_topology.{0} (has_dist.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_dist.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_51712 (h1 : topological_space (random_gen string_imp)) : path_connected_space (random_gen string_imp) := sorry --non-trivial
lemma new_lemma_51713 (h0 : filter (mul_zero_class (semiring (semiring num)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_51714 (h0 : topological_space (has_pos_part (has_Inf (sub_neg_monoid Type)))) : normal_space (has_pos_part (has_Inf (sub_neg_monoid Type))) := sorry --non-trivial
lemma new_lemma_51715 (h0 : function.extfun nat fin) : @complete_space.{0} (canonically_linear_ordered_monoid.{0} real) (@matrix.vec_empty.{0} (uniform_space.{0} (canonically_linear_ordered_monoid.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_51716 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem group)) : @is_cyclic.{0} (complete_semilattice_Sup.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) group.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) group.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (complete_semilattice_Sup.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_51717 (h0 : add_group (nondiscrete_normed_field (add_comm_semigroup environment.projection_info))) : is_add_cyclic (nondiscrete_normed_field (add_comm_semigroup environment.projection_info)) := sorry --non-trivial
lemma new_lemma_51718 (h0 : complete_lattice (has_edist empty)) : is_compactly_generated (has_edist empty) := sorry --non-trivial
lemma new_lemma_51719 (h0 : complete_lattice (linear_ordered_comm_ring (option unsigned))) : complete_lattice.is_Sup_finite_compact (linear_ordered_comm_ring (option unsigned)) := sorry --non-trivial
lemma new_lemma_51720 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring ennreal)) pos) : @irreducible_space.{0} (canonically_ordered_comm_semiring.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_comm_semiring.{0} ennreal)) pos h0)  := sorry --non-trivial
lemma new_lemma_51721 (h0 : monoid (has_zero (normed_comm_ring (finset pos)))) : monoid.fg (has_zero (normed_comm_ring (finset pos))) := sorry --non-trivial
lemma new_lemma_51722 (h0 : uniform_space (cancel_monoid (mul_zero_class pos))) : separated_space (cancel_monoid (mul_zero_class pos)) := sorry --non-trivial
lemma new_lemma_51723 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @t0_space.{0} (has_nndist.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (has_nndist.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_51724 (h0 : group (has_add environment.implicit_infer_kind)) : normalizer_condition (has_add environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_51725 (h0 : complete_lattice (has_ssubset fun_info)) : complete_lattice.is_Sup_finite_compact (has_ssubset fun_info) := sorry --non-trivial
lemma new_lemma_51726 (h0 : functor.add_const (function.extfun (Type 1) ring) pos) : @strong_rank_condition.{1} (generalized_boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) ring.{1}) pos h0) (generalized_boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_51727 (h0 : functor.add_const (topological_space (simple_graph linarith.comp)) (ring name)) : @normal_space.{0} (simple_graph.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (simple_graph.{0} linarith.comp)) (ring.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_51728 (h0 : topological_space (complete_semilattice_Sup (has_inv (has_inv (has_ssubset linarith.ineq))))) : t0_space (complete_semilattice_Sup (has_inv (has_inv (has_ssubset linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_51729 (h1 : uniform_space (has_add linarith.comp_source)) : complete_space (has_add linarith.comp_source) := sorry --non-trivial
lemma new_lemma_51730 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_simple_group.{0} (semigroup.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (semigroup.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_51731 (h2 : topological_space linarith.ineq) : t0_space linarith.ineq := sorry --non-trivial
lemma new_lemma_51732 (h4 : ring (has_nnnorm char)) : rank_condition (has_nnnorm char) := sorry --non-trivial
lemma new_lemma_51733 (h0 : functor.add_const (topological_space (has_add environment.implicit_infer_kind)) (has_to_string (has_zero pos))) : @preirreducible_space.{0} (has_add.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} environment.implicit_infer_kind)) (has_to_string.{0} (has_zero.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_51734 (h0 : uniform_space (add_comm_monoid (option (option (option (option (option ennreal))))))) : separated_space (add_comm_monoid (option (option (option (option (option ennreal)))))) := sorry --non-trivial
lemma new_lemma_51735 (h0 : function.extfun Type (functor.add_const (function.extfun Type complete_lattice))) : @complete_lattice.is_Sup_finite_compact.{0} (has_neg.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) name (@function.extfun_app.{2 2} Type (functor.add_const.{1 0} (function.extfun.{2 1} Type complete_lattice.{0})) h0 name)) (has_neg.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_51736 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (has_sub.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_sub.{0} empty))  := sorry --non-trivial
lemma new_lemma_51737 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (has_neg.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_neg.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_51738 (h0 : not (function.extfun Type topological_space -> false)) : @preirreducible_space.{0} (add_group.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (add_group.{0} num))  := sorry --non-trivial
lemma new_lemma_51739 (h0 : group (ring name)) : normalizer_condition (ring name) := sorry --non-trivial
lemma new_lemma_51740 (h0 : add_monoid (add_cancel_monoid (finset (mul_one_class environment.implicit_infer_kind)))) : add_monoid.fg (add_cancel_monoid (finset (mul_one_class environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_51741 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (measurable_space.dynkin_system.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (measurable_space.dynkin_system.{0} empty))  := sorry --non-trivial
lemma new_lemma_51742 (h0 : functor.add_const (semiring (comm_group pos)) pos) : @is_noetherian_ring.{0} (comm_group.{0} pos) (@functor.add_const.run.{0 0} (semiring.{0} (comm_group.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_51743 (h0 : functor.add_const (function.extfun Type complete_lattice) pos) : @complete_lattice.is_Sup_finite_compact.{0} (has_neg.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) pos h0) (has_neg.{0} name))  := sorry --non-trivial
lemma new_lemma_51744 (h0 : function.extfun Type group) : @is_cyclic.{0} (dlist.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} h0 (dlist.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_51745 (h0 : functor.add_const Prop (mul_zero_class Type)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_51746 (h1 : add_group (distrib (has_nnnorm reducibility_hints))) : is_add_cyclic (distrib (has_nnnorm reducibility_hints)) := sorry --non-trivial
lemma new_lemma_51747 (h0 : cancel_comm_monoid_with_zero (ordered_comm_monoid (has_to_string pos))) : unique_factorization_monoid (ordered_comm_monoid (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_51748 (h0 : topological_space (ring (has_nndist environment.implicit_infer_kind))) : normal_space (ring (has_nndist environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_51749 (h0 : ring (simple_graph empty)) : is_principal_ideal_ring (simple_graph empty) := sorry --non-trivial
lemma new_lemma_51750 (h0 : functor.add_const (topological_space (has_Inf pos)) (finset pos)) : @loc_path_connected_space.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} pos)) (finset.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_51751 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_51752 (h0 : ring (has_pos_part (has_add name))) : is_principal_ideal_ring (has_pos_part (has_add name)) := sorry --non-trivial
lemma new_lemma_51753 (h0 : topological_space (sub_neg_monoid name)) : normal_space (sub_neg_monoid name) := sorry --non-trivial
lemma new_lemma_51754 (h0 : functor.add_const (function.extfun Type monoid) name) : @monoid.fg.{0} pos (@function.extfun_app.{2 1} Type monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type monoid.{0}) name h0) pos)  := sorry --non-trivial
lemma new_lemma_51755 (h0 : topological_space (has_to_string unsigned)) : topological_space.separable_space (has_to_string unsigned) := sorry --non-trivial
lemma new_lemma_51756 (h0 : list (has_top (random_gen (has_norm (has_top (distrib_lattice (has_norm string_imp))))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_51757 (h0 : ordered_comm_monoid (semigroup (has_nndist pos))) : has_exists_mul_of_le (semigroup (has_nndist pos)) := sorry --non-trivial
lemma new_lemma_51758 (h0 : fin has_zero.zero) : @t0_space.{0} (generalized_boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (generalized_boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_51759 (h0 : topological_space (sub_neg_monoid pos)) : normal_space (sub_neg_monoid pos) := sorry --non-trivial
lemma new_lemma_51760 (h0 : functor.add_const (topological_space (has_nndist linarith.comp)) pos) : @regular_space.{0} (has_nndist.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_51761 (h0 : topological_space (complete_distrib_lattice ennreal)) : topological_space.separable_space (complete_distrib_lattice ennreal) := sorry --non-trivial
lemma new_lemma_51762 (h0 : functor.add_const (list (has_pos_part pos)) pos) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51763 (h0 : topological_space (complete_distrib_lattice (has_Inf pos))) : totally_separated_space (complete_distrib_lattice (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_51764 (h0 : group (partial_order (semiring empty))) : group.fg (partial_order (semiring empty)) := sorry --non-trivial
lemma new_lemma_51765 (h0 : ring (simple_graph string.iterator_imp)) : rank_condition (simple_graph string.iterator_imp) := sorry --non-trivial
lemma new_lemma_51766 (h0 : list (has_neg (add_comm_monoid environment.implicit_infer_kind))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_51767 (h0 : topological_space (linear_ordered_add_comm_group (has_top linarith.comp_source))) : totally_separated_space (linear_ordered_add_comm_group (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_51768 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (has_neg_part name)) := sorry --non-trivial
lemma new_lemma_51769 (h0 : functor.add_const (uniform_space (generalized_boolean_algebra Type)) pos) : @separated_space.{1} (generalized_boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (uniform_space.{1} (generalized_boolean_algebra.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_51770 (h0 : filter (has_neg (has_neg (has_add pos)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_51771 (h0 : complete_lattice (measure_theory.measure_space congr_arg_kind)) : is_atomistic (measure_theory.measure_space congr_arg_kind) := sorry --non-trivial
lemma new_lemma_51772 (h0 : functor.add_const (topological_space (cancel_monoid ennreal)) name) : @topological_space.separable_space.{0} (cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} ennreal)) name h0)  := sorry --non-trivial
lemma new_lemma_51773 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (complete_semilattice_Sup.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (complete_semilattice_Sup.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_51774 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (add_comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51775 (h0 : functor.add_const (ring (add_comm_monoid name)) name) : @strong_rank_condition.{0} (add_comm_monoid.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (add_comm_monoid.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_51776 (h0 : topological_space (denumerable (has_ssubset string_imp))) : t0_space (denumerable (has_ssubset string_imp)) := sorry --non-trivial
lemma new_lemma_51777 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @is_domain.{0} (add_right_cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) ring.{0}) (add_right_cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_51778 (h0 : ordered_add_comm_monoid (comm_semigroup (sub_neg_monoid (has_bot (complete_distrib_lattice pos))))) : archimedean (comm_semigroup (sub_neg_monoid (has_bot (complete_distrib_lattice pos)))) := sorry --non-trivial
lemma new_lemma_51779 (h0 : ring (mul_one_class fun_info)) : rank_condition (mul_one_class fun_info) := sorry --non-trivial
lemma new_lemma_51780 (h0 : function.extfun Type (functor.add_const (topological_space (partial_order unsigned)))) : @loc_path_connected_space.{0} (partial_order.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (partial_order.{0} unsigned)) congr_arg_kind (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (partial_order.{0} unsigned))) h0 congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_51781 (h3 : ring (random_gen to_additive.value_type)) : is_domain (random_gen to_additive.value_type) := sorry --non-trivial
lemma new_lemma_51782 (h0 : has_mem.mem group has_emptyc.emptyc) : @normalizer_condition.{0} (with_bot.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) group.{0} h0) (with_bot.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_51783 (h0 : monoid (normed_comm_ring (ring environment.implicit_infer_kind))) : monoid.fg (normed_comm_ring (ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_51784 (h1 : has_lt (mul_one_class (mul_one_class (mul_one_class enat)))) : no_max_order (mul_one_class (mul_one_class (mul_one_class enat))) := sorry --non-trivial
lemma new_lemma_51785 (h0 : function.extfun Type group) : @group.fg.{0} (mul_zero_class.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (mul_zero_class.{0} name))  := sorry --non-trivial
lemma new_lemma_51786 (h0 : functor.add_const (list (has_to_string Type)) environment.implicit_infer_kind) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51787 (h0 : topological_space (linear_ordered_add_comm_group (has_norm linarith.comp_source))) : totally_separated_space (linear_ordered_add_comm_group (has_norm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_51788 (h0 : functor.add_const (topological_space (has_neg Type)) environment.implicit_infer_kind) : @totally_separated_space.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_neg.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_51789 (h0 : fin has_zero.zero) : @complete_space.{0} (ordered_comm_monoid.{0} real) (@matrix.vec_empty.{0} (uniform_space.{0} (ordered_comm_monoid.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_51790 (h0 : topological_space (has_nnnorm (random_gen char))) : locally_compact_space (has_nnnorm (random_gen char)) := sorry --non-trivial
lemma new_lemma_51791 (h0 : list (linear_ordered_add_comm_group fun_info)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_51792 (h0 : functor.add_const (list (has_nndist linarith.comp)) (finset (finset environment.implicit_infer_kind))) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51793 (h0 : ring (option num)) : strong_rank_condition (option num) := sorry --non-trivial
lemma new_lemma_51794 (h0 : topological_space (add_comm_monoid (has_neg_part (finset Type)))) : topological_space.separable_space (add_comm_monoid (has_neg_part (finset Type))) := sorry --non-trivial
lemma new_lemma_51795 (h0 : has_lt (mul_one_class linarith.comp_source)) : no_max_order (mul_one_class linarith.comp_source) := sorry --non-trivial
lemma new_lemma_51796 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (option.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} h0 (option.{0} pos))  := sorry --non-trivial
lemma new_lemma_51797 (h0 : group (comm_ring (div_inv_monoid fun_info))) : is_cyclic (comm_ring (div_inv_monoid fun_info)) := sorry --non-trivial
lemma new_lemma_51798 (h0 : list (add_cancel_monoid (has_neg pos))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_51799 (h0 : topological_space (normed_comm_ring name)) : discrete_topology (normed_comm_ring name) := sorry --non-trivial
lemma new_lemma_51800 (h2 : monoid (complete_semilattice_Sup congr_arg_kind)) : monoid.fg (complete_semilattice_Sup congr_arg_kind) := sorry --non-trivial
lemma new_lemma_51801 (h0 : ring (has_emptyc (semiring (semiring congr_arg_kind)))) : is_domain (has_emptyc (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_51802 (h0 : functor.add_const (list (normed_comm_ring environment.implicit_infer_kind)) linarith.comp) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51803 (h0 : filter (has_to_string (has_nndist Type))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_51804 (h0 : uniform_space (cancel_monoid environment.implicit_infer_kind)) : separated_space (cancel_monoid environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_51805 (h0 : topological_space (semi_normed_comm_ring environment.projection_info)) : totally_disconnected_space (semi_normed_comm_ring environment.projection_info) := sorry --non-trivial
lemma new_lemma_51806 (h0 : functor.add_const (topological_space (has_pos_part pos)) (has_Inf pos)) : @t0_space.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_pos_part.{0} pos)) (has_Inf.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_51807 (h0 : function.extfun Type (functor.comp ring canonically_linear_ordered_monoid)) : @rank_condition.{0} (canonically_linear_ordered_monoid.{0} name) (@functor.comp.run.{0 0 0} ring.{0} canonically_linear_ordered_monoid.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} ring.{0} canonically_linear_ordered_monoid.{0}) h0 name))  := sorry --non-trivial
lemma new_lemma_51808 (h0 : group (has_one linarith.comp)) : group.fg (has_one linarith.comp) := sorry --non-trivial
lemma new_lemma_51809 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (has_Sup.{0} empty) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (has_Sup.{0} empty))  := sorry --non-trivial
lemma new_lemma_51810 (h0 : complete_lattice (measurable_space (comm_ring linarith.comp_source))) : is_compactly_generated (measurable_space (comm_ring linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_51811 (h0 : functor.add_const (topological_space (ring pos)) name) : @discrete_topology.{0} (ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_51812 (h0 : list (complete_semilattice_Sup (has_nnnorm (denumerable linarith.comp_source)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_51813 (h0 : monoid (with_one (has_norm fun_info))) : monoid.fg (with_one (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_51814 (h0 : complete_lattice (add_comm_semigroup string.iterator_imp)) : is_atomistic (add_comm_semigroup string.iterator_imp) := sorry --non-trivial
lemma new_lemma_51815 (h0 : ring (semiring (semiring empty))) : is_domain (semiring (semiring empty)) := sorry --non-trivial
lemma new_lemma_51816 (h0 : functor.add_const (function.extfun Type complete_lattice) (option pos)) : @is_compactly_generated.{0} (finset.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) (option.{0} pos) h0) (finset.{0} pos))  := sorry --non-trivial
lemma new_lemma_51817 (h0 : semiring (finset num)) : is_noetherian_ring (finset num) := sorry --non-trivial
lemma new_lemma_51818 (h1 : ring (ordered_comm_semiring linarith.comp_source)) : is_domain (ordered_comm_semiring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_51819 (h0 : add_group (has_nnnorm (mul_one_class string.iterator_imp))) : is_add_cyclic (has_nnnorm (mul_one_class string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_51820 (h0 : topological_space (has_pos_part (has_neg (has_add pos)))) : discrete_topology (has_pos_part (has_neg (has_add pos))) := sorry --non-trivial
lemma new_lemma_51821 (h0 : function.extfun Type group) : @is_cyclic.{0} (linear_ordered_comm_group.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type group.{0} h0 (linear_ordered_comm_group.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_51822 (h0 : not (function.extfun Type topological_space -> false)) : @t0_space.{0} pos (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) pos)  := sorry --non-trivial
lemma new_lemma_51823 (h0 : functor.comp ordered_add_comm_monoid has_neg linarith.comp) : @archimedean.{0} (has_neg.{0} linarith.comp) (@functor.comp.run.{0 0 0} ordered_add_comm_monoid.{0} has_neg.{0} linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51824 (h0 : group (linear_ordered_add_comm_group (option string_imp))) : is_cyclic (linear_ordered_add_comm_group (option string_imp)) := sorry --non-trivial
lemma new_lemma_51825 (h0 : functor.add_const (function.extfun (Type 1) semiring) Type) : @is_noetherian_ring.{1} (has_add.{1} Type) (@function.extfun_app.{3 2} (Type 1) semiring.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) semiring.{1}) Type h0) (has_add.{1} Type))  := sorry --non-trivial
lemma new_lemma_51826 (h0 : ring (has_to_string (boolean_algebra.core name))) : strong_rank_condition (has_to_string (boolean_algebra.core name)) := sorry --non-trivial
lemma new_lemma_51827 (h0 : function.extfun Type topological_space) : @normal_space.{0} (mul_zero_class.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (mul_zero_class.{0} num))  := sorry --non-trivial
lemma new_lemma_51828 (h0 : group (denumerable (random_gen (has_inv (has_inv (random_gen linarith.ineq)))))) : normalizer_condition (denumerable (random_gen (has_inv (has_inv (random_gen linarith.ineq))))) := sorry --non-trivial
lemma new_lemma_51829 (h1 : filter (has_top string_imp)) : countable_Inter_filter h1 := sorry --non-trivial
lemma new_lemma_51830 (h0 : functor.add_const (topological_space (has_neg_part Type)) (has_neg linarith.comp)) : @topological_space.separable_space.{1} (has_neg_part.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_neg_part.{1} Type)) (has_neg.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_51831 (h0 : topological_space (linear_ordered_field (option (option unsigned)))) : preirreducible_space (linear_ordered_field (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_51832 (h0 : topological_space (ordered_comm_group empty)) : locally_compact_space (ordered_comm_group empty) := sorry --non-trivial
lemma new_lemma_51833 (h0 : topological_space (ring (normed_comm_ring (comm_group unsigned)))) : regular_space (ring (normed_comm_ring (comm_group unsigned))) := sorry --non-trivial
lemma new_lemma_51834 (h0 : ring (has_add (sub_neg_monoid real))) : rank_condition (has_add (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_51835 (h0 : functor.add_const (topological_space (ring Type)) environment.implicit_infer_kind) : @totally_separated_space.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (ring.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_51836 (h1 : complete_lattice (has_nnnorm string_imp)) : is_compactly_generated (has_nnnorm string_imp) := sorry --non-trivial
lemma new_lemma_51837 (h0 : ordered_comm_monoid (has_add (ring linarith.comp))) : has_exists_mul_of_le (has_add (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_51838 (h0 : functor.add_const (topological_space (preorder congr_arg_kind)) unsigned) : @t0_space.{0} (preorder.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_51839 (h0 : topological_space (has_bot (has_bot real))) : preirreducible_space (has_bot (has_bot real)) := sorry --non-trivial
lemma new_lemma_51840 (h0 : complete_lattice (ring (comm_group Type))) : complete_lattice.is_Sup_finite_compact (ring (comm_group Type)) := sorry --non-trivial
lemma new_lemma_51841 (h0 : topological_space (generalized_boolean_algebra (ring pos))) : t1_space (generalized_boolean_algebra (ring pos)) := sorry --non-trivial
lemma new_lemma_51842 (h0 : add_group (option (option (option pos)))) : is_add_cyclic (option (option (option pos))) := sorry --non-trivial
lemma new_lemma_51843 (h0 : add_comm_semigroup linarith.ineq -> add_comm_semigroup linarith.ineq -> add_comm_semigroup linarith.ineq) (h1 : add_comm_semigroup linarith.ineq) : right_identity h0 h1 := sorry --non-trivial
lemma new_lemma_51844 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (normed_group.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (normed_group.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_51845 (h0 : topological_space (bin_tree (semiring unsigned))) : preirreducible_space (bin_tree (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_51846 (h0 : ring (has_neg_part (complete_distrib_lattice Type))) : rank_condition (has_neg_part (complete_distrib_lattice Type)) := sorry --non-trivial
lemma new_lemma_51847 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (metric_space.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (metric_space.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_51848 (h0 : functor.add_const (topological_space (complete_distrib_lattice linarith.comp)) Type) : @t1_space.{0} (complete_distrib_lattice.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (complete_distrib_lattice.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_51849 (h0 : function.extfun Type group) : @is_cyclic.{0} (has_top.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} h0 (has_top.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_51850 (h0 : list (linear_ordered_field pos)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_51851 (h0 : functor.add_const (topological_space (has_zero Type)) Type) : @preirreducible_space.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (has_zero.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_51852 (h0 : topological_space (dlist (has_nnnorm (has_nnnorm (random_gen (has_nnnorm linarith.ineq)))))) : totally_disconnected_space (dlist (has_nnnorm (has_nnnorm (random_gen (has_nnnorm linarith.ineq))))) := sorry --non-trivial
lemma new_lemma_51853 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (measurable_space.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measurable_space.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_51854 (h0 : topological_space (uniform_space (has_nnnorm (mul_one_class (mul_one_class linarith.comp_source))))) : t0_space (uniform_space (has_nnnorm (mul_one_class (mul_one_class linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_51855 (h0 : semiring (measurable_space.dynkin_system (semiring (semiring unsigned)))) : is_noetherian_ring (measurable_space.dynkin_system (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_51856 (h0 : fin has_zero.zero) : @is_add_cyclic.{0} (canonically_ordered_monoid.{0} name) (@function.extfun_app.{2 1} Type add_group.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type add_group.{0}) h0) (canonically_ordered_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_51857 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (free_add_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (free_add_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_51858 (h0 : prod (has_union (semiring (semiring (semiring num)))) (has_union (semiring (semiring (semiring num))))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_51859 (h0 : group (comm_group (boolean_algebra pos))) : group.fg (comm_group (boolean_algebra pos)) := sorry --non-trivial
lemma new_lemma_51860 (h0 : fin has_zero.zero) : @locally_compact_space.{0} (ordered_comm_ring.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (ordered_comm_ring.{0} name))  := sorry --non-trivial
lemma new_lemma_51861 (h0 : add_group (measurable_space.dynkin_system (semiring (semiring unsigned)))) : is_add_cyclic (measurable_space.dynkin_system (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_51862 (h3 : not (ring (distrib to_additive.value_type) -> false)) : @is_domain.{0} (distrib.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (distrib.{0} to_additive.value_type)) h3)  := sorry --non-trivial
lemma new_lemma_51863 (h1 : has_lt (distrib string_imp)) : no_max_order (distrib string_imp) := sorry --non-trivial
lemma new_lemma_51864 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (measure_theory.measure_space.{0} empty) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (measure_theory.measure_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_51865 (h0 : topological_space (random_gen (has_norm congr_arg_kind))) : discrete_topology (random_gen (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_51866 (h0 : functor.add_const (topological_space (bin_tree empty)) num) : @irreducible_space.{0} (bin_tree.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (bin_tree.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_51867 (h0 : functor.add_const (topological_space (has_Inf pos)) (has_neg name)) : @preirreducible_space.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} pos)) (has_neg.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_51868 (h0 : monoid (canonically_ordered_monoid (has_Inf (has_Inf real)))) : monoid.fg (canonically_ordered_monoid (has_Inf (has_Inf real))) := sorry --non-trivial
lemma new_lemma_51869 (h0 : monoid (ordered_comm_ring (finset (ring (has_add linarith.comp))))) : monoid.fg (ordered_comm_ring (finset (ring (has_add linarith.comp)))) := sorry --non-trivial
lemma new_lemma_51870 (h0 : topological_space (boolean_algebra (has_add (has_add real)))) : sequential_space (boolean_algebra (has_add (has_add real))) := sorry --non-trivial
lemma new_lemma_51871 (h0 : complete_lattice (has_zero (has_add Type))) : is_atomistic (has_zero (has_add Type)) := sorry --non-trivial
lemma new_lemma_51872 (h0 : function.extfun Type (functor.add_const (complete_lattice (free_add_monoid empty)))) : @complete_lattice.is_Sup_finite_compact.{0} (free_add_monoid.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (free_add_monoid.{0} empty)) (semiring.{0} empty) (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (complete_lattice.{0} (free_add_monoid.{0} empty))) h0 (semiring.{0} empty)))  := sorry --non-trivial
lemma new_lemma_51873 (h0 : has_mem.mem (with_bot congr_arg_kind) has_emptyc.emptyc) : @is_cyclic.{0} (with_bot.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type group.{0} (with_bot.{0} congr_arg_kind) h0)  := sorry --non-trivial
lemma new_lemma_51874 (h0 : ring (uniform_space (mul_one_class string_imp))) : is_domain (uniform_space (mul_one_class string_imp)) := sorry --non-trivial
lemma new_lemma_51875 (h0 : ring (normed_group (random_gen linarith.ineq))) : rank_condition (normed_group (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_51876 (h0 : not (topological_space (option empty) -> false)) : @discrete_topology.{0} (option.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (option.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_51877 (h0 : function.extfun nat fin) : @rank_condition.{0} (normed_lattice_add_comm_group.{0} pos) (@matrix.vec_empty.{0} (ring.{0} (normed_lattice_add_comm_group.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_51878 (h0 : group (ordered_comm_monoid (has_add (has_add linarith.comp)))) : group.fg (ordered_comm_monoid (has_add (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_51879 (h1 : topological_space (measurable_space (has_top to_additive.value_type))) : totally_separated_space (measurable_space (has_top to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_51880 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (has_star.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (has_star.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51881 (h0 : not (cancel_comm_monoid_with_zero (complete_linear_order num) -> false)) : @unique_factorization_monoid.{0} (complete_linear_order.{0} num) (@classical.by_contradiction'.{1} (cancel_comm_monoid_with_zero.{0} (complete_linear_order.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_51882 (h0 : topological_space (has_top (semiring (has_norm congr_arg_kind)))) : irreducible_space (has_top (semiring (has_norm congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_51883 (h0 : monoid (has_emptyc (has_top linarith.comp_source))) : monoid.fg (has_emptyc (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_51884 (h0 : topological_space (has_Inf (has_add pos))) : t0_space (has_Inf (has_add pos)) := sorry --non-trivial
lemma new_lemma_51885 (h0 : function.extfun Type (functor.add_const (function.extfun Type complete_lattice))) : @complete_lattice.is_Sup_finite_compact.{0} (ordered_cancel_add_comm_monoid.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) unsigned (@function.extfun_app.{2 2} Type (functor.add_const.{1 0} (function.extfun.{2 1} Type complete_lattice.{0})) h0 unsigned)) (ordered_cancel_add_comm_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_51886 (h0 : ordered_add_comm_monoid (monoid_with_zero (option unsigned))) : archimedean (monoid_with_zero (option unsigned)) := sorry --non-trivial
lemma new_lemma_51887 (h0 : not (group (has_union empty) -> false)) : @is_cyclic.{0} (has_union.{0} empty) (@classical.by_contradiction'.{1} (group.{0} (has_union.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_51888 (h0 : list (add_group (semi_normed_ring (has_nnnorm (has_ssubset (mul_one_class char)))))) (h1 : ne h0 list.nil) : @is_add_cyclic.{0} (semi_normed_ring.{0} (has_nnnorm.{0} (has_ssubset.{0} (mul_one_class.{0} char)))) (@list.last.{0} (add_group.{0} (semi_normed_ring.{0} (has_nnnorm.{0} (has_ssubset.{0} (mul_one_class.{0} char))))) h0 h1)  := sorry --non-trivial
lemma new_lemma_51889 (h0 : function.extfun Type (functor.comp ordered_comm_monoid add_cancel_monoid)) : @has_exists_mul_of_le.{0} (add_cancel_monoid.{0} name) (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} add_cancel_monoid.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} ordered_comm_monoid.{0} add_cancel_monoid.{0}) h0 name))  := sorry --non-trivial
lemma new_lemma_51890 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (canonically_ordered_comm_semiring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (canonically_ordered_comm_semiring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_51891 (h0 : topological_space (semiring (semiring (semiring empty)))) : preirreducible_space (semiring (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_51892 (h0 : has_mem.mem (with_bot empty) has_emptyc.emptyc) : @is_domain.{0} (with_bot.{0} empty) (@finset.pi.empty.{1 0} Type ring.{0} (with_bot.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_51893 (h0 : topological_space (has_neg ennreal)) : normal_space (has_neg ennreal) := sorry --non-trivial
lemma new_lemma_51894 (h0 : filter (has_neg (finset (has_neg linarith.comp)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_51895 (h0 : topological_space (has_to_string (option ennreal))) : t1_space (has_to_string (option ennreal)) := sorry --non-trivial
lemma new_lemma_51896 (h0 : functor.add_const (topological_space (has_zero pos)) unsigned) : @totally_separated_space.{0} (has_zero.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} pos)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_51897 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (finset.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (finset.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51898 (h0 : not (topological_space (complete_linear_order unsigned) -> false)) : @path_connected_space.{0} (complete_linear_order.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (complete_linear_order.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_51899 (h0 : topological_space (normed_group (with_bot to_additive.value_type))) : locally_compact_space (normed_group (with_bot to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_51900 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (has_one.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_one.{0} num))  := sorry --non-trivial
lemma new_lemma_51901 (h0 : function.extfun (Type 1) add_monoid) : @add_monoid.fg.{1} (simple_graph.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_monoid.{1} h0 (simple_graph.{1} Type))  := sorry --non-trivial
lemma new_lemma_51902 (h0 : ring (has_top (semiring empty))) : is_domain (has_top (semiring empty)) := sorry --non-trivial
lemma new_lemma_51903 (h0 : topological_space (has_zero num)) : t0_space (has_zero num) := sorry --non-trivial
lemma new_lemma_51904 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (linear_ordered_field.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_field.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_51905 (h0 : function.extfun (finset Type) (has_mem.mem (id empty))) : @irreducible_space.{0} (@id.{2} Type empty) (@finset.pi.empty.{1 0} Type topological_space.{0} (@id.{2} Type empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (@id.{2} Type empty)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_51906 (h0 : not (monoid (bin_tree (has_star (semiring (semiring (semiring congr_arg_kind))))) -> false)) : @monoid.fg.{0} (bin_tree.{0} (has_star.{0} (semiring.{0} (semiring.{0} (semiring.{0} congr_arg_kind))))) (@classical.by_contradiction'.{1} (monoid.{0} (bin_tree.{0} (has_star.{0} (semiring.{0} (semiring.{0} (semiring.{0} congr_arg_kind)))))) h0)  := sorry --non-trivial
lemma new_lemma_51907 (h0 : function.extfun nat fin) : @normalizer_condition.{0} (has_Inf.{0} real) (@matrix.vec_empty.{0} (group.{0} (has_Inf.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_51908 (h0 : functor.add_const (function.extfun (Type 1) ordered_add_comm_monoid) pos) : @archimedean.{1} (has_zero.{1} Type) (@function.extfun_app.{3 2} (Type 1) ordered_add_comm_monoid.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) ordered_add_comm_monoid.{1}) pos h0) (has_zero.{1} Type))  := sorry --non-trivial
lemma new_lemma_51909 (h0 : functor.add_const (ring (ring linarith.comp)) linarith.comp) : @is_domain.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (ring.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51910 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (has_zero.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_zero.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_51911 (h0 : monoid (has_top (random_gen linarith.comp_source))) : monoid.fg (has_top (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_51912 (h0 : ring (comm_ring (random_gen reducibility_hints))) : rank_condition (comm_ring (random_gen reducibility_hints)) := sorry --non-trivial
lemma new_lemma_51913 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (normed_comm_ring.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_comm_ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51914 (h0 : heq (semi_normed_comm_ring linarith.comp_source) (semi_normed_comm_ring fun_info)) (h1 : uniform_space (semi_normed_comm_ring linarith.comp_source)) : @complete_space.{0} (semi_normed_comm_ring.{0} fun_info) (@heq.elim.{2 1} Type (semi_normed_comm_ring.{0} linarith.comp_source) uniform_space.{0} (semi_normed_comm_ring.{0} fun_info) h0 h1)  := sorry --non-trivial
lemma new_lemma_51915 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (has_neg.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_neg.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51916 (h0 : semiring fun_info) (h2 : fun_info) : even h2 := sorry --non-trivial
lemma new_lemma_51917 (h0 : functor.add_const (ring (has_zero pos)) Type) : @is_domain.{0} (has_zero.{0} pos) (@functor.add_const.run.{0 1} (ring.{0} (has_zero.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_51918 (h0 : group (boolean_algebra (has_add (comm_group (has_add name))))) : is_cyclic (boolean_algebra (has_add (comm_group (has_add name)))) := sorry --non-trivial
lemma new_lemma_51919 (h0 : functor.add_const (cancel_comm_monoid_with_zero (comm_group name)) Type) : @unique_factorization_monoid.{0} (comm_group.{0} name) (@functor.add_const.run.{0 1} (cancel_comm_monoid_with_zero.{0} (comm_group.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_51920 (h0 : functor.add_const (topological_space (mul_zero_class congr_arg_kind)) unsigned) : @totally_separated_space.{0} (mul_zero_class.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (mul_zero_class.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_51921 (h0 : functor.add_const (add_group (generalized_boolean_algebra linarith.comp)) (ring linarith.comp)) : @is_add_cyclic.{0} (generalized_boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_group.{0} (generalized_boolean_algebra.{0} linarith.comp)) (ring.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_51922 (h0 : not (topological_space (non_unital_non_assoc_semiring to_additive.value_type) -> false)) : @path_connected_space.{0} (non_unital_non_assoc_semiring.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (non_unital_non_assoc_semiring.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_51923 (h0 : functor.add_const (fin has_zero.zero) real) : @rank_condition.{1} (sub_neg_monoid.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (sub_neg_monoid.{1} Type)) (@functor.add_const.run.{0 0} (fin (@has_zero.zero.{0} nat nat.has_zero)) real h0))  := sorry --non-trivial
lemma new_lemma_51924 (h0 : monoid (denumerable congr_arg_kind)) : monoid.fg (denumerable congr_arg_kind) := sorry --non-trivial
lemma new_lemma_51925 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (option.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (option.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51926 (h0 : functor.add_const (finset (complete_distrib_lattice linarith.comp)) (has_add pos)) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51927 (h0 : function.extfun Type group) : @is_simple_group.{0} (simple_graph.{0} pos) (@function.extfun_app.{2 1} Type group.{0} h0 (simple_graph.{0} pos))  := sorry --non-trivial
lemma new_lemma_51928 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (encodable.{0} linarith.ineq) (@function.extfun_app.{2 1} Type add_group.{0} h0 (encodable.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_51929 (h0 : ordered_add_comm_monoid (complete_distrib_lattice ennreal)) : archimedean (complete_distrib_lattice ennreal) := sorry --non-trivial
lemma new_lemma_51930 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (random_gen.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (random_gen.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_51931 (h0 : ring (distrib_lattice char)) : rank_condition (distrib_lattice char) := sorry --non-trivial
lemma new_lemma_51932 (h0 : semiring (left_cancel_semigroup unsigned)) : is_noetherian_ring (left_cancel_semigroup unsigned) := sorry --non-trivial
lemma new_lemma_51933 (h0 : topological_space (ring (has_neg linarith.comp))) : loc_path_connected_space (ring (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_51934 (h0 : function.extfun Type group) : @group.fg.{0} (topological_space.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} h0 (topological_space.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_51935 (h0 : functor.add_const (topological_space (has_Inf linarith.comp)) (has_neg (has_neg Type))) : @t0_space.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (has_Inf.{0} linarith.comp)) (has_neg.{1} (has_neg.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_51936 (h0 : topological_space (has_one (random_gen linarith.comp))) : discrete_topology (has_one (random_gen linarith.comp)) := sorry --non-trivial
lemma new_lemma_51937 (h0 : functor.add_const (finset (ring pos)) pos) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51938 (h0 : ring (comm_group (has_neg_part (has_to_string (comm_group ennreal))))) : rank_condition (comm_group (has_neg_part (has_to_string (comm_group ennreal)))) := sorry --non-trivial
lemma new_lemma_51939 (h0 : functor.add_const (ordered_comm_monoid (has_nndist ennreal)) pos) : @has_exists_mul_of_le.{0} (has_nndist.{0} ennreal) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (has_nndist.{0} ennreal)) pos h0)  := sorry --non-trivial
lemma new_lemma_51940 (h0 : topological_space (simple_graph (ordered_comm_ring Type))) : t0_space (simple_graph (ordered_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_51941 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (add_cancel_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (add_cancel_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_51942 (h0 : ring (semi_normed_comm_ring (mul_one_class (mul_one_class reducibility_hints)))) : is_domain (semi_normed_comm_ring (mul_one_class (mul_one_class reducibility_hints))) := sorry --non-trivial
lemma new_lemma_51943 (h0 : ordered_add_comm_monoid (normed_lattice_add_comm_group (add_comm_monoid real))) : archimedean (normed_lattice_add_comm_group (add_comm_monoid real)) := sorry --non-trivial
lemma new_lemma_51944 (h0 : topological_space (normed_comm_ring Type)) : t1_space (normed_comm_ring Type) := sorry --non-trivial
lemma new_lemma_51945 (h0 : monoid (cancel_monoid (add_comm_monoid unsigned))) : monoid.fg (cancel_monoid (add_comm_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_51946 (h1 : not (topological_space (random_gen linarith.comp) -> false)) : @irreducible_space.{0} (random_gen.{0} linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} linarith.comp)) h1)  := sorry --non-trivial
lemma new_lemma_51947 (h0 : ring (div_inv_monoid linarith.comp_source)) : strong_rank_condition (div_inv_monoid linarith.comp_source) := sorry --non-trivial
lemma new_lemma_51948 (h0 : comm_ring char) (h1 : ring char) (h2 : algebra char char) : algebra.is_algebraic char char := sorry --non-trivial
lemma new_lemma_51949 (h0 : group (has_one (has_norm (has_norm (semiring empty))))) : group.fg (has_one (has_norm (has_norm (semiring empty)))) := sorry --non-trivial
lemma new_lemma_51950 (h2 : ring (uniform_space string_imp)) : strong_rank_condition (uniform_space string_imp) := sorry --non-trivial
lemma new_lemma_51951 (h0 : topological_space (simple_graph (finset (has_pos_part (finset linarith.comp))))) : t0_space (simple_graph (finset (has_pos_part (finset linarith.comp)))) := sorry --non-trivial
lemma new_lemma_51952 (h0 : topological_space (encodable (has_nnnorm fun_info))) : totally_disconnected_space (encodable (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_51953 (h0 : functor.add_const (topological_space (plift empty)) (semiring (semiring empty))) : @totally_separated_space.{1} (plift.{1} empty) (@functor.add_const.run.{1 0} (topological_space.{1} (plift.{1} empty)) (semiring.{0} (semiring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_51954 (h1 : group (normed_field char)) : is_cyclic (normed_field char) := sorry --non-trivial
lemma new_lemma_51955 (h0 : ring (has_pos_part (ring pos))) : strong_rank_condition (has_pos_part (ring pos)) := sorry --non-trivial
lemma new_lemma_51956 (h0 : topological_space (semigroup ennreal)) : preconnected_space (semigroup ennreal) := sorry --non-trivial
lemma new_lemma_51957 (h0 : uniform_space (has_inter congr_arg_kind)) : complete_space (has_inter congr_arg_kind) := sorry --non-trivial
lemma new_lemma_51958 (h0 : functor.add_const (topological_space (ordered_comm_ring Type)) (has_neg name)) : @preconnected_space.{1} (ordered_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (ordered_comm_ring.{1} Type)) (has_neg.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_51959 (h0 : complete_lattice (add_monoid (has_nnnorm linarith.comp_source))) : complete_lattice.is_Sup_finite_compact (add_monoid (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_51960 (h0 : uniform_space (measurable_space (random_gen (random_gen to_additive.value_type)))) : complete_space (measurable_space (random_gen (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_51961 (h0 : ring (metric_space (semi_normed_ring char))) : strong_rank_condition (metric_space (semi_normed_ring char)) := sorry --non-trivial
lemma new_lemma_51962 (h0 : function.extfun Type (functor.add_const Prop)) : functor.add_const.run (function.extfun_app h0 (linear_ordered_semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_51963 (h0 : cancel_comm_monoid_with_zero (has_sub (semiring (semiring (semiring (semiring empty)))))) : unique_factorization_monoid (has_sub (semiring (semiring (semiring (semiring empty))))) := sorry --non-trivial
lemma new_lemma_51964 (h0 : functor.add_const (finset (has_zero environment.implicit_infer_kind)) linarith.comp) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51965 (h0 : ring (has_norm (has_norm (has_norm to_additive.value_type)))) : is_domain (has_norm (has_norm (has_norm to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_51966 (h0 : functor.comp ring has_neg_part pos) : @is_domain.{0} (has_neg_part.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (has_neg_part.{0} pos)) unsigned (@functor.comp.run.{0 0 0} ring.{0} has_neg_part.{0} pos h0))  := sorry --non-trivial
lemma new_lemma_51967 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (with_one.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (with_one.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_51968 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_to_string.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_to_string.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_51969 (h0 : functor.add_const (complete_lattice (normed_comm_ring (ring linarith.comp))) environment.implicit_infer_kind) : @is_compactly_generated.{0} (normed_comm_ring.{0} (ring.{0} linarith.comp)) (@functor.add_const.run.{0 0} (complete_lattice.{0} (normed_comm_ring.{0} (ring.{0} linarith.comp))) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_51970 (h0 : functor.add_const (finset (semigroup Type)) Type) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_51971 (h0 : add_group (with_one (random_gen (has_norm fun_info)))) : is_add_cyclic (with_one (random_gen (has_norm fun_info))) := sorry --non-trivial
lemma new_lemma_51972 (h1 : ring (semi_normed_comm_ring char)) : strong_rank_condition (semi_normed_comm_ring char) := sorry --non-trivial
lemma new_lemma_51973 (h0 : functor.add_const (topological_space pos) pos) : @preirreducible_space.{0} pos (@functor.add_const.run.{0 0} (topological_space.{0} pos) pos h0)  := sorry --non-trivial
lemma new_lemma_51974 (h2 : ring (dlist to_additive.value_type)) : is_domain (dlist to_additive.value_type) := sorry --non-trivial
lemma new_lemma_51975 (h0 : functor.add_const (topological_space (has_zero Type)) Type) : @discrete_topology.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (has_zero.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_51976 (h0 : functor.add_const (topological_space (add_cancel_monoid num)) num) : @t1_space.{0} (add_cancel_monoid.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_51977 (h0 : not (ring (add_right_cancel_monoid num) -> false)) : @is_domain.{0} (add_right_cancel_monoid.{0} num) (@classical.by_contradiction'.{1} (ring.{0} (add_right_cancel_monoid.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_51978 (h0 : ordered_add_comm_monoid (ordered_comm_ring (has_bot (has_Inf (has_Inf (has_Inf real)))))) : archimedean (ordered_comm_ring (has_bot (has_Inf (has_Inf (has_Inf real))))) := sorry --non-trivial
lemma new_lemma_51979 (h0 : filter (semigroup (has_add linarith.comp))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_51980 (h1 : string.iterator_imp) : set.finite (eq h1) := sorry --non-trivial
lemma new_lemma_51981 (h0 : ring (nondiscrete_normed_field (add_comm_semigroup (normed_field linarith.ineq)))) : strong_rank_condition (nondiscrete_normed_field (add_comm_semigroup (normed_field linarith.ineq))) := sorry --non-trivial
lemma new_lemma_51982 (h0 : uniform_space (canonically_ordered_add_monoid num)) : separated_space (canonically_ordered_add_monoid num) := sorry --non-trivial
lemma new_lemma_51983 (h0 : functor.add_const (topological_space (has_to_string Type)) congr_arg_kind) : @regular_space.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_to_string.{1} Type)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_51984 (h1 : filter (add_left_cancel_monoid (has_nnnorm (has_nnnorm linarith.ineq)))) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_51985 (h0 : functor.add_const (group (has_neg_part name)) linarith.comp) : @group.fg.{0} (has_neg_part.{0} name) (@functor.add_const.run.{0 0} (group.{0} (has_neg_part.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_51986 (h0 : add_monoid string.iterator_imp) (h1 : ring (has_le (add_units string.iterator_imp))) : strong_rank_condition (has_le (add_units string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_51987 (h0 : filter (comm_monoid empty)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_51988 (h0 : group (plift congr_arg_kind)) : normalizer_condition (plift congr_arg_kind) := sorry --non-trivial
lemma new_lemma_51989 (h0 : functor.add_const (topological_space (finset pos)) (has_add Type)) : @path_connected_space.{0} (finset.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (finset.{0} pos)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_51990 (h0 : functor.add_const (function.extfun Type semiring) real) : @is_noetherian_ring.{0} (finset.{0} real) (@function.extfun_app.{2 1} Type semiring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type semiring.{0}) real h0) (finset.{0} real))  := sorry --non-trivial
lemma new_lemma_51991 (h0 : fin has_zero.zero) : @add_monoid.fg.{0} (sub_neg_monoid.{0} linarith.comp) (@matrix.vec_empty.{0} (add_monoid.{0} (sub_neg_monoid.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_51992 (h0 : topological_space (has_nndist (boolean_algebra name))) : loc_path_connected_space (has_nndist (boolean_algebra name)) := sorry --non-trivial
lemma new_lemma_51993 (h0 : not (monoid unsigned -> false)) : @monoid.fg.{0} unsigned (@classical.by_contradiction'.{1} (monoid.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_51994 (h0 : group (ordered_comm_ring (has_neg name))) : normalizer_condition (ordered_comm_ring (has_neg name)) := sorry --non-trivial
lemma new_lemma_51995 (h0 : function.extfun nat fin) : @has_exists_mul_of_le.{0} (has_pos_part.{0} real) (@matrix.vec_empty.{0} (ordered_comm_monoid.{0} (has_pos_part.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_51996 (h0 : topological_space (random_gen (measurable_space linarith.comp))) : preirreducible_space (random_gen (measurable_space linarith.comp)) := sorry --non-trivial
lemma new_lemma_51997 (h0 : function.extfun Type group) : @normalizer_condition.{0} (generalized_boolean_algebra.{0} real) (@function.extfun_app.{2 1} Type group.{0} h0 (generalized_boolean_algebra.{0} real))  := sorry --non-trivial
lemma new_lemma_51998 (h0 : topological_space (has_compl to_additive.value_type)) (h1 : preorder (has_compl to_additive.value_type)) : order_closed_topology (has_compl to_additive.value_type) := sorry --non-trivial
lemma new_lemma_51999 (h0 : functor.comp ring boolean_algebra.core Type) : @strong_rank_condition.{1} (boolean_algebra.core.{1} Type) (@functor.comp.run.{1 1 1} ring.{1} boolean_algebra.core.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_52000 (h0 : not (function.extfun Type monoid -> false)) : @monoid.fg.{0} (with_one.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type monoid.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type monoid.{0}) h0) (with_one.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_52001 (h0 : Type -> Type) (h1 : nat) (h2 : ring (nat.iterate h0 h1 string.iterator_imp)) : rank_condition (nat.iterate h0 h1 string.iterator_imp) := sorry --non-trivial
lemma new_lemma_52002 (h0 : topological_space (has_to_string (has_neg_part linarith.comp))) : t0_space (has_to_string (has_neg_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_52003 (h0 : monoid (complete_semilattice_Sup empty)) : monoid.fg (complete_semilattice_Sup empty) := sorry --non-trivial
lemma new_lemma_52004 (h0 : complete_lattice (has_edist unsigned)) : is_compactly_generated (has_edist unsigned) := sorry --non-trivial
lemma new_lemma_52005 (h0 : functor.add_const (list (left_cancel_monoid unsigned)) congr_arg_kind) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52006 (h0 : has_mem.mem (with_one empty) has_emptyc.emptyc) : filter.ne_bot (finset.pi.empty filter (with_one empty) h0) := sorry --non-trivial
lemma new_lemma_52007 (h0 : function.extfun nat fin) : @normal_space.{0} (has_bot.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero))) (has_bot.{0} name))  := sorry --non-trivial
lemma new_lemma_52008 (h0 : functor.add_const (monoid (finset unsigned)) name) : @monoid.fg.{0} (finset.{0} unsigned) (@functor.add_const.run.{0 0} (monoid.{0} (finset.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_52009 (h0 : not (ring (has_one congr_arg_kind) -> false)) : @is_principal_ideal_ring.{0} (has_one.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (ring.{0} (has_one.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_52010 (h0 : complete_lattice (complete_semilattice_Sup (semiring (semiring fun_info)))) : is_atomistic (complete_semilattice_Sup (semiring (semiring fun_info))) := sorry --non-trivial
lemma new_lemma_52011 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (fintype.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (fintype.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_52012 (h0 : ring (linear_ordered_semiring (has_top linarith.comp))) : is_domain (linear_ordered_semiring (has_top linarith.comp)) := sorry --non-trivial
lemma new_lemma_52013 (h0 : complete_lattice (nondiscrete_normed_field to_additive.value_type)) : complete_lattice.is_Sup_finite_compact (nondiscrete_normed_field to_additive.value_type) := sorry --non-trivial
lemma new_lemma_52014 (h0 : uniform_space (finset (has_neg Type))) : complete_space (finset (has_neg Type)) := sorry --non-trivial
lemma new_lemma_52015 (h0 : list (topological_space auto.case_option)) : @loc_path_connected_space.{0} auto.case_option (@list.head.{0} (topological_space.{0} auto.case_option) (@inhabited_topological_space.{0} auto.case_option) h0)  := sorry --non-trivial
lemma new_lemma_52016 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (has_dist.{0} num) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (has_dist.{0} num))  := sorry --non-trivial
lemma new_lemma_52017 (h0 : ring (ring (comm_group (add_comm_monoid name)))) : rank_condition (ring (comm_group (add_comm_monoid name))) := sorry --non-trivial
lemma new_lemma_52018 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (random_gen.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (random_gen.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_52019 (h0 : monoid (semigroup (finset (boolean_algebra.core Type)))) : monoid.fg (semigroup (finset (boolean_algebra.core Type))) := sorry --non-trivial
lemma new_lemma_52020 (h0 h1 : multiset (has_one char)) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_52021 (h0 : group (normed_comm_ring (ring (finset (finset (finset (finset name))))))) : normalizer_condition (normed_comm_ring (ring (finset (finset (finset (finset name)))))) := sorry --non-trivial
lemma new_lemma_52022 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (distrib_lattice.{0} linarith.ineq) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (distrib_lattice.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_52023 (h0 : ring (normed_comm_ring (has_neg (finset (has_neg linarith.comp))))) : is_domain (normed_comm_ring (has_neg (finset (has_neg linarith.comp)))) := sorry --non-trivial
lemma new_lemma_52024 (h0 : ring (has_star num)) : is_domain (has_star num) := sorry --non-trivial
lemma new_lemma_52025 (h0 : topological_space (ordered_comm_monoid (has_neg (has_Inf linarith.comp)))) : locally_compact_space (ordered_comm_monoid (has_neg (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_52026 (h0 : set (nondiscrete_normed_field enat -> ereal)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_52027 (h0 : group (has_neg_part (finset name))) : is_cyclic (has_neg_part (finset name)) := sorry --non-trivial
lemma new_lemma_52028 (h1 : reducibility_hints -> reducibility_hints -> Prop) : is_partial_order reducibility_hints h1 := sorry --non-trivial
lemma new_lemma_52029 (h0 : topological_space (finset (finset (finset (finset pos))))) : topological_space.separable_space (finset (finset (finset (finset pos)))) := sorry --non-trivial
lemma new_lemma_52030 (h0 : add_group (has_neg (has_add environment.implicit_infer_kind))) : is_add_cyclic (has_neg (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_52031 (h0 : topological_space (complete_distrib_lattice (has_Inf Type))) : preconnected_space (complete_distrib_lattice (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_52032 (h0 : not (uniform_space (add_group congr_arg_kind) -> false)) : @complete_space.{0} (add_group.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (uniform_space.{0} (add_group.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_52033 (h0 : monoid (canonically_linear_ordered_monoid (sub_neg_monoid (has_bot Type)))) : monoid.fg (canonically_linear_ordered_monoid (sub_neg_monoid (has_bot Type))) := sorry --non-trivial
lemma new_lemma_52034 (h0 : functor.add_const (function.extfun (Type 1) ring) Type) : @strong_rank_condition.{1} (has_pos_part.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) ring.{1}) Type h0) (has_pos_part.{1} Type))  := sorry --non-trivial
lemma new_lemma_52035 (h0 : ring (boolean_algebra.core ennreal)) : is_principal_ideal_ring (boolean_algebra.core ennreal) := sorry --non-trivial
lemma new_lemma_52036 (h0 : add_group (distrib (mul_one_class char))) : is_add_cyclic (distrib (mul_one_class char)) := sorry --non-trivial
lemma new_lemma_52037 (h0 : function.extfun Type ring) : @is_domain.{0} (comm_ring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type ring.{0} h0 (comm_ring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_52038 (h0 : function.extfun Type group) : @group.fg.{0} (omega_complete_partial_order.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (omega_complete_partial_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52039 (h0 : functor.add_const (topological_space (has_bot name)) real) : @t0_space.{0} (has_bot.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_bot.{0} name)) real h0)  := sorry --non-trivial
lemma new_lemma_52040 (h0 : functor.comp cancel_comm_monoid_with_zero finset Type) : @unique_factorization_monoid.{1} (finset.{1} Type) (@functor.comp.run.{1 1 1} cancel_comm_monoid_with_zero.{1} finset.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_52041 (h0 : topological_space (has_pos_part (finset (has_pos_part pos)))) : totally_separated_space (has_pos_part (finset (has_pos_part pos))) := sorry --non-trivial
lemma new_lemma_52042 (h0 : has_mem.mem (has_emptyc linarith.comp_source) has_emptyc.emptyc) : @irreducible_space.{0} (has_emptyc.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_emptyc.{0} linarith.comp_source) h0)  := sorry --non-trivial
lemma new_lemma_52043 (h0 : functor.add_const (ring (has_pos_part linarith.comp)) Type) : @rank_condition.{0} (has_pos_part.{0} linarith.comp) (@functor.add_const.run.{0 1} (ring.{0} (has_pos_part.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_52044 (h5 : add_group (add_monoid (has_nnnorm to_additive.value_type))) : is_add_cyclic (add_monoid (has_nnnorm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_52045 (h0 : functor.add_const (topological_space (measure_theory.measure_space congr_arg_kind)) congr_arg_kind) : @totally_separated_space.{0} (measure_theory.measure_space.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (measure_theory.measure_space.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_52046 (h0 : functor.add_const (topological_space (cancel_monoid empty)) unsigned) : @irreducible_space.{0} (cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_52047 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t1_space.{0} (has_inter.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_inter.{0} empty))  := sorry --non-trivial
lemma new_lemma_52048 (h0 : ring ereal) (h1 : add_group (subring ereal)) : is_simple_add_group (subring ereal) := sorry --non-trivial
lemma new_lemma_52049 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (complete_semilattice_Sup.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (complete_semilattice_Sup.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_52050 (h0 : functor.add_const (topological_space (has_to_string unsigned)) name) : @preconnected_space.{0} (has_to_string.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_52051 (h0 : filter (linear_ordered_cancel_comm_monoid (option empty))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_52052 (h0 : function.extfun (finset Type) (has_mem.mem (complete_semilattice_Sup congr_arg_kind))) : @locally_compact_space.{0} (complete_semilattice_Sup.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type topological_space.{0} (complete_semilattice_Sup.{0} congr_arg_kind) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (complete_semilattice_Sup.{0} congr_arg_kind)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_52053 (h0 : finset (has_bot (has_Inf real))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_52054 (h0 : topological_space (comm_ring (random_gen (random_gen linarith.comp_source)))) : t0_space (comm_ring (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_52055 (h0 : function.extfun (Type 1) finset) : finset.nonempty (function.extfun_app h0 (complete_distrib_lattice Type)) := sorry --non-trivial
lemma new_lemma_52056 (h0 : topological_space (semi_normed_ring linarith.comp_source)) : t0_space (semi_normed_ring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_52057 (h0 : filter (finset (has_pos_part (finset (ring (has_Inf (normed_comm_ring (has_neg Type)))))))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_52058 (h0 : not (group (distrib_lattice to_additive.value_type) -> false)) : @group.fg.{0} (distrib_lattice.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (group.{0} (distrib_lattice.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_52059 (h0 : group (linear_ordered_add_comm_group (random_gen (random_gen to_additive.value_type)))) : is_cyclic (linear_ordered_add_comm_group (random_gen (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_52060 (h0 : topological_space pos) : totally_separated_space pos := sorry --non-trivial
lemma new_lemma_52061 (h0 : functor.add_const (ordered_add_comm_monoid (normed_linear_ordered_group num)) empty) : @archimedean.{0} (normed_linear_ordered_group.{0} num) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (normed_linear_ordered_group.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_52062 (h0 : complete_lattice (has_one unsigned)) : is_atomistic (has_one unsigned) := sorry --non-trivial
lemma new_lemma_52063 (h0 : functor.add_const (add_monoid (comm_group linarith.comp)) pos) : @add_monoid.fg.{0} (comm_group.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_monoid.{0} (comm_group.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_52064 (h0 : functor.add_const (topological_space (add_cancel_monoid Type)) (has_neg name)) : @topological_space.separable_space.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (add_cancel_monoid.{1} Type)) (has_neg.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_52065 (h0 : functor.add_const (uniform_space (has_zero Type)) (has_neg linarith.comp)) : @separated_space.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (uniform_space.{1} (has_zero.{1} Type)) (has_neg.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_52066 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (add_left_cancel_semigroup empty)) := sorry --non-trivial
lemma new_lemma_52067 (h0 : topological_space (add_cancel_monoid (has_add (has_add linarith.comp)))) : normal_space (add_cancel_monoid (has_add (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_52068 (h0 : functor.add_const (topological_space (boolean_algebra environment.implicit_infer_kind)) name) : @preirreducible_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_52069 (h0 : ordered_add_comm_monoid (has_neg (finset (ring pos)))) : archimedean (has_neg (finset (ring pos))) := sorry --non-trivial
lemma new_lemma_52070 (h0 : ordered_add_comm_monoid (semigroup (option (option (option empty))))) : archimedean (semigroup (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_52071 (h0 : group (has_compl linarith.ineq)) : is_cyclic (has_compl linarith.ineq) := sorry --non-trivial
lemma new_lemma_52072 (h0 : fin has_zero.zero) : @group.fg.{0} (ring.{0} linarith.comp) (@matrix.vec_empty.{0} (group.{0} (ring.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_52073 (h0 : filter (has_add (has_add (has_add (has_add pos))))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_52074 (h0 : ring (has_ssubset (has_ssubset fun_info))) : rank_condition (has_ssubset (has_ssubset fun_info)) := sorry --non-trivial
lemma new_lemma_52075 (h0 : functor.add_const (topological_space (boolean_algebra linarith.comp)) Type) : @discrete_topology.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_52076 (h0 : ring (comm_group name)) : is_principal_ideal_ring (comm_group name) := sorry --non-trivial
lemma new_lemma_52077 (h0 : ring (has_add (finset pos))) : strong_rank_condition (has_add (finset pos)) := sorry --non-trivial
lemma new_lemma_52078 (h0 : functor.add_const (uniform_space (has_neg Type)) environment.implicit_infer_kind) : @separated_space.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (uniform_space.{1} (has_neg.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_52079 (h0 : not (ring (complete_semilattice_Sup fun_info) -> false)) : @is_domain.{0} (complete_semilattice_Sup.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (complete_semilattice_Sup.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_52080 (h0 : topological_space (ordered_ring (semiring (semiring congr_arg_kind)))) : irreducible_space (ordered_ring (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_52081 (h0 : prod (linear_ordered_comm_group (option unsigned)) (linear_ordered_comm_group (option unsigned))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_52082 (h0 : topological_space (complete_semilattice_Sup num)) : topological_space.separable_space (complete_semilattice_Sup num) := sorry --non-trivial
lemma new_lemma_52083 (h0 : functor.add_const (topological_space (ordered_ring unsigned)) num) : @normal_space.{0} (ordered_ring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_ring.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_52084 (h0 : has_mem.mem monoid has_emptyc.emptyc) : @monoid.fg.{0} (normed_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type monoid.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) monoid.{0} h0) (normed_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52085 (h0 : complete_lattice (has_to_string (has_add environment.implicit_infer_kind))) : complete_lattice.is_Sup_finite_compact (has_to_string (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_52086 (h0 : functor.add_const (ring (has_star unsigned)) empty) : @is_domain.{0} (has_star.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (has_star.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_52087 (h0 : not (ring (has_nnnorm string.iterator_imp) -> false)) : @rank_condition.{0} (has_nnnorm.{0} string.iterator_imp) (@classical.by_contradiction'.{1} (ring.{0} (has_nnnorm.{0} string.iterator_imp)) h0)  := sorry --non-trivial
lemma new_lemma_52088 (h0 : topological_space (has_div char)) : path_connected_space (has_div char) := sorry --non-trivial
lemma new_lemma_52089 (h1 : ring (has_ssubset string_imp)) : rank_condition (has_ssubset string_imp) := sorry --non-trivial
lemma new_lemma_52090 (h0 : functor.add_const (uniform_space (complete_distrib_lattice empty)) empty) : @complete_space.{0} (complete_distrib_lattice.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (complete_distrib_lattice.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_52091 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @strong_rank_condition.{1} (plift.{1} unsigned) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 ring.{1}) (plift.{1} unsigned))  := sorry --non-trivial
lemma new_lemma_52092 (h0 : cancel_comm_monoid_with_zero (has_bot real)) : unique_factorization_monoid (has_bot real) := sorry --non-trivial
lemma new_lemma_52093 (h0 : cancel_comm_monoid_with_zero (comm_group name)) : unique_factorization_monoid (comm_group name) := sorry --non-trivial
lemma new_lemma_52094 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (sub_neg_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (sub_neg_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_52095 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (has_Inf.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_Inf.{0} name))  := sorry --non-trivial
lemma new_lemma_52096 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (complete_linear_order.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_linear_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52097 (h0 : has_mem.mem (metric_space unsigned) has_emptyc.emptyc) : @preirreducible_space.{0} (metric_space.{0} unsigned) (@finset.pi.empty.{1 0} Type topological_space.{0} (metric_space.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_52098 (h0 : add_group (measurable_space (has_union (has_union linarith.comp)))) : is_add_cyclic (measurable_space (has_union (has_union linarith.comp))) := sorry --non-trivial
lemma new_lemma_52099 (h0 : functor.add_const (functor.add_const (topological_space Type) linarith.comp) pos) : @preirreducible_space.{1} Type (@functor.add_const.run.{1 0} (topological_space.{1} Type) linarith.comp (@functor.add_const.run.{1 0} (functor.add_const.{1 0} (topological_space.{1} Type) linarith.comp) pos h0))  := sorry --non-trivial
lemma new_lemma_52100 (h0 : functor.add_const (finset (has_add ennreal)) unsigned) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52101 (h0 : function.extfun Type group) : @group.fg.{0} (random_gen.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} h0 (random_gen.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_52102 (h0 : functor.add_const (cancel_comm_monoid_with_zero (boolean_algebra.core Type)) Type) : @unique_factorization_monoid.{1} (boolean_algebra.core.{1} Type) (@functor.add_const.run.{1 1} (cancel_comm_monoid_with_zero.{1} (boolean_algebra.core.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_52103 (h0 : ring (has_pos_part (finset linarith.comp))) : strong_rank_condition (has_pos_part (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_52104 (h0 : complete_lattice (with_one (with_one to_additive.value_type))) : is_compactly_generated (with_one (with_one to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_52105 (h0 : ring (left_cancel_semigroup (semiring num))) : strong_rank_condition (left_cancel_semigroup (semiring num)) := sorry --non-trivial
lemma new_lemma_52106 (h0 : functor.add_const (functor.add_const (complete_lattice (boolean_algebra linarith.comp)) Type) linarith.comp) : @is_compactly_generated.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 1} (complete_lattice.{0} (boolean_algebra.{0} linarith.comp)) Type (@functor.add_const.run.{0 0} (functor.add_const.{0 1} (complete_lattice.{0} (boolean_algebra.{0} linarith.comp)) Type) linarith.comp h0))  := sorry --non-trivial
lemma new_lemma_52107 (h0 : topological_space (has_inter (option (option empty)))) : totally_separated_space (has_inter (option (option empty))) := sorry --non-trivial
lemma new_lemma_52108 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (with_one.{0} linarith.comp) (@function.extfun_app.{2 1} Type monoid.{0} h0 (with_one.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52109 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (has_star.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_star.{0} num))  := sorry --non-trivial
lemma new_lemma_52110 (h0 : complete_lattice (random_gen (has_top fun_info))) : complete_lattice.is_Sup_finite_compact (random_gen (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_52111 (h0 : add_monoid (has_neg (mul_zero_class name))) : add_monoid.fg (has_neg (mul_zero_class name)) := sorry --non-trivial
lemma new_lemma_52112 (h0 : uniform_space (canonically_ordered_monoid num)) : separated_space (canonically_ordered_monoid num) := sorry --non-trivial
lemma new_lemma_52113 (h1 : add_group (semi_normed_comm_ring linarith.comp_source)) : is_add_cyclic (semi_normed_comm_ring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_52114 (h0 : ring (add_comm_monoid congr_arg_kind)) : rank_condition (add_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52115 (h0 : group (distrib (has_nnnorm (comm_ring (denumerable reducibility_hints))))) : is_cyclic (distrib (has_nnnorm (comm_ring (denumerable reducibility_hints)))) := sorry --non-trivial
lemma new_lemma_52116 (h0 : char -> char -> Prop) (h1 : char) (h2 : list char) : list.chain h0 h1 h2 := sorry --non-trivial
lemma new_lemma_52117 (h0 : ordered_comm_monoid (finset (has_neg_part linarith.comp))) : has_exists_mul_of_le (finset (has_neg_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_52118 (h0 : prod (linear_ordered_comm_ring empty) (linear_ordered_comm_ring empty)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_52119 (h0 : add_monoid (mul_zero_class ennreal)) : add_monoid.fg (mul_zero_class ennreal) := sorry --non-trivial
lemma new_lemma_52120 (h0 : group (semiring (has_norm (has_norm num)))) : is_cyclic (semiring (has_norm (has_norm num))) := sorry --non-trivial
lemma new_lemma_52121 (h0 : filter (boolean_algebra pos)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_52122 (h0 : not (topological_space (id congr_arg_kind) -> false)) : @totally_separated_space.{0} (@id.{2} Type congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (@id.{2} Type congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_52123 (h0 : topological_space (add_cancel_monoid (has_Inf (add_cancel_monoid (has_add Type))))) : irreducible_space (add_cancel_monoid (has_Inf (add_cancel_monoid (has_add Type)))) := sorry --non-trivial
lemma new_lemma_52124 (h0 : uniform_space (distrib_lattice (canonically_linear_ordered_monoid linarith.ineq))) : complete_space (distrib_lattice (canonically_linear_ordered_monoid linarith.ineq)) := sorry --non-trivial
lemma new_lemma_52125 (h0 : function.extfun (Type 1) group) : @group.fg.{1} (has_neg.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} h0 (has_neg.{1} Type))  := sorry --non-trivial
lemma new_lemma_52126 (h0 : complete_lattice (normed_group (random_gen fun_info))) : complete_lattice.is_Sup_finite_compact (normed_group (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_52127 (h0 : ring (has_bot (ordered_comm_monoid real))) : rank_condition (has_bot (ordered_comm_monoid real)) := sorry --non-trivial
lemma new_lemma_52128 (h0 : not (topological_space (has_one num) -> false)) : @path_connected_space.{0} (has_one.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (has_one.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_52129 (h0 : topological_space (has_zero (finset (ring linarith.comp)))) : loc_path_connected_space (has_zero (finset (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_52130 (h0 : group (partial_order (semiring empty))) : normalizer_condition (partial_order (semiring empty)) := sorry --non-trivial
lemma new_lemma_52131 (h0 : topological_space (encodable (random_gen fun_info))) : irreducible_space (encodable (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_52132 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @separated_space.{0} (has_pos_part.{0} linarith.comp) (@matrix.vec_empty.{0} (uniform_space.{0} (has_pos_part.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_52133 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (measurable_space.dynkin_system.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (measurable_space.dynkin_system.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_52134 (h0 : ring (semi_normed_ring (comm_ring (comm_ring linarith.ineq)))) : rank_condition (semi_normed_ring (comm_ring (comm_ring linarith.ineq))) := sorry --non-trivial
lemma new_lemma_52135 (h0 : complete_lattice (topological_space string_imp)) : is_compactly_generated (topological_space string_imp) := sorry --non-trivial
lemma new_lemma_52136 (h1 : topological_space (comm_ring (random_gen (random_gen (random_gen char))))) : t0_space (comm_ring (random_gen (random_gen (random_gen char)))) := sorry --non-trivial
lemma new_lemma_52137 (h0 : functor.add_const (topological_space (has_neg pos)) name) : @irreducible_space.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_52138 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (ring.{0} (option.{0} congr_arg_kind)) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (ring.{0} (option.{0} congr_arg_kind)))  := sorry --non-trivial
lemma new_lemma_52139 (h0 : uniform_space (with_bot (semiring (has_norm congr_arg_kind)))) : separated_space (with_bot (semiring (has_norm congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_52140 (h0 : complete_lattice (multiplicative enat)) : is_compactly_generated (multiplicative enat) := sorry --non-trivial
lemma new_lemma_52141 (h0 : add_group (has_norm fun_info)) : is_add_cyclic (has_norm fun_info) := sorry --non-trivial
lemma new_lemma_52142 (h0 : function.extfun Type ring) : @is_domain.{0} (canonically_linear_ordered_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (canonically_linear_ordered_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52143 (h0 : add_monoid (comm_semigroup (has_bot (comm_semigroup Type)))) : add_monoid.fg (comm_semigroup (has_bot (comm_semigroup Type))) := sorry --non-trivial
lemma new_lemma_52144 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (measure_theory.measure_space.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (measure_theory.measure_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_52145 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (normed_group.{0} string_imp) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (normed_group.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_52146 (h0 : ring (has_one unsigned)) : rank_condition (has_one unsigned) := sorry --non-trivial
lemma new_lemma_52147 (h0 : add_monoid (monoid congr_arg_kind)) : add_monoid.fg (monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52148 (h0 : uniform_space (id (semiring num))) : complete_space (id (semiring num)) := sorry --non-trivial
lemma new_lemma_52149 (h0 : group (left_cancel_monoid num)) : is_simple_group (left_cancel_monoid num) := sorry --non-trivial
lemma new_lemma_52150 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (finset congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_52151 (h3 : ring fun_info) : is_domain fun_info := sorry --non-trivial
lemma new_lemma_52152 (h0 : ring (comm_semigroup (complete_distrib_lattice (has_bot pos)))) : rank_condition (comm_semigroup (complete_distrib_lattice (has_bot pos))) := sorry --non-trivial
lemma new_lemma_52153 (h1 : has_neg (mul_one_class (normed_field std_gen))) (h2 : measurable_space (mul_one_class (normed_field std_gen))) : has_measurable_neg (mul_one_class (normed_field std_gen)) := sorry --non-trivial
lemma new_lemma_52154 (h0 : functor.comp topological_space semigroup Type) : @path_connected_space.{1} (semigroup.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} semigroup.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_52155 (h0 : add_group (add_cancel_comm_monoid (add_cancel_comm_monoid reducibility_hints))) : is_add_cyclic (add_cancel_comm_monoid (add_cancel_comm_monoid reducibility_hints)) := sorry --non-trivial
lemma new_lemma_52156 (h0 : ring (option congr_arg_kind)) : is_principal_ideal_ring (option congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52157 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (preorder.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (preorder.{0} empty))  := sorry --non-trivial
lemma new_lemma_52158 (h0 : functor.add_const (add_monoid (add_cancel_monoid environment.implicit_infer_kind)) environment.implicit_infer_kind) : @add_monoid.fg.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (add_monoid.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_52159 (h0 : functor.add_const (topological_space (measure_theory.measure_space num)) num) : @preirreducible_space.{0} (measure_theory.measure_space.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (measure_theory.measure_space.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_52160 (h0 : add_monoid (generalized_boolean_algebra (has_Inf linarith.comp))) : add_monoid.fg (generalized_boolean_algebra (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_52161 (h0 : functor.add_const (list (normed_comm_ring name)) pos) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52162 (h0 : functor.add_const (cancel_comm_monoid_with_zero (option num)) (semiring (semiring num))) : @unique_factorization_monoid.{0} (option.{0} num) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (option.{0} num)) (semiring.{0} (semiring.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_52163 (h0 : functor.comp ring ring name) : @rank_condition.{0} (ring.{0} name) (@functor.comp.run.{0 0 0} ring.{0} ring.{0} name h0)  := sorry --non-trivial
lemma new_lemma_52164 (h0 : filter (comm_group (option unsigned))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_52165 (h0 : topological_space (has_zero (has_neg_part Type))) : loc_path_connected_space (has_zero (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_52166 (h0 : group (has_neg (has_neg_part Type))) : is_simple_group (has_neg (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_52167 (h0 : function.extfun (finset Type) (has_mem.mem (with_bot empty))) : @totally_separated_space.{0} (with_bot.{0} empty) (@finset.pi.empty.{1 0} Type topological_space.{0} (with_bot.{0} empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_bot.{0} empty)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_52168 (h0 : monoid (linear_ordered_field empty)) : monoid.fg (linear_ordered_field empty) := sorry --non-trivial
lemma new_lemma_52169 (h0 : filter (semigroup ennreal)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_52170 (h1 h2 : multiset (has_div std_gen)) : multiset.disjoint h1 h2 := sorry --non-trivial
lemma new_lemma_52171 (h0 : group (denumerable (has_nnnorm (has_nnnorm (has_top (random_gen fun_info)))))) : group.fg (denumerable (has_nnnorm (has_nnnorm (has_top (random_gen fun_info))))) := sorry --non-trivial
lemma new_lemma_52172 (h0 : function.extfun Type (prod (add_comm_monoid unsigned))) : id_rel (function.extfun_app h0 (add_comm_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_52173 (h0 : functor.comp topological_space semigroup environment.implicit_infer_kind) : @sequential_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} topological_space.{0} semigroup.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_52174 (h0 : ring (normed_comm_ring (option pos))) : is_principal_ideal_ring (normed_comm_ring (option pos)) := sorry --non-trivial
lemma new_lemma_52175 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @t0_space.{1} (ordered_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (ordered_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_52176 (h0 : filter (has_neg_part name)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_52177 (h0 : ring (complete_distrib_lattice (option (option unsigned)))) : is_principal_ideal_ring (complete_distrib_lattice (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_52178 (h0 : functor.add_const (complete_lattice (mul_zero_class empty)) (option unsigned)) : @complete_lattice.is_Sup_finite_compact.{0} (mul_zero_class.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (mul_zero_class.{0} empty)) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_52179 (h0 : function.extfun Type topological_space) : @t0_space.{0} (with_bot.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_bot.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52180 (h0 : add_group (has_div (has_nnnorm (has_nnnorm enat)))) : is_add_cyclic (has_div (has_nnnorm (has_nnnorm enat))) := sorry --non-trivial
lemma new_lemma_52181 (h0 : not (group (id unsigned) -> false)) : @group.fg.{0} (@id.{2} Type unsigned) (@classical.by_contradiction'.{1} (group.{0} (@id.{2} Type unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_52182 (h0 : function.extfun (Type 1) group) : @group.fg.{1} (ordered_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} h0 (ordered_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_52183 (h0 : ring (boolean_algebra (comm_group Type))) : rank_condition (boolean_algebra (comm_group Type)) := sorry --non-trivial
lemma new_lemma_52184 (h0 : not (topological_space (with_bot empty) -> false)) : @totally_separated_space.{0} (with_bot.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (with_bot.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_52185 (h0 : topological_space (has_pos_part (has_neg Type))) : totally_disconnected_space (has_pos_part (has_neg Type)) := sorry --non-trivial
lemma new_lemma_52186 (h0 : topological_space (ordered_comm_monoid (has_Inf linarith.comp))) : loc_path_connected_space (ordered_comm_monoid (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_52187 (h0 : topological_space (has_emptyc (random_gen linarith.ineq))) : totally_separated_space (has_emptyc (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_52188 (h0 : add_group (distrib_lattice (has_norm (has_top to_additive.value_type)))) : is_add_cyclic (distrib_lattice (has_norm (has_top to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_52189 (h0 : topological_space (linear_ordered_field (option ennreal))) : t1_space (linear_ordered_field (option ennreal)) := sorry --non-trivial
lemma new_lemma_52190 (h0 : functor.add_const (topological_space (has_nndist Type)) (has_to_string pos)) : @t1_space.{1} (has_nndist.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_nndist.{1} Type)) (has_to_string.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_52191 (h0 : finset (has_to_string (has_neg_part real))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_52192 (h0 : functor.add_const (group (has_add pos)) pos) : @is_cyclic.{0} (has_add.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_add.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_52193 (h0 : function.extfun Type topological_space) : @normal_space.{0} (has_union.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_union.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52194 (h0 : topological_space (normed_group (has_norm (random_gen empty)))) : locally_compact_space (normed_group (has_norm (random_gen empty))) := sorry --non-trivial
lemma new_lemma_52195 (h1 : group (with_one linarith.comp_source)) : normalizer_condition (with_one linarith.comp_source) := sorry --non-trivial
lemma new_lemma_52196 (h0 : add_monoid (comm_group environment.implicit_infer_kind)) : add_monoid.fg (comm_group environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_52197 (h0 : cancel_comm_monoid_with_zero (add_cancel_monoid (option num))) : unique_factorization_monoid (add_cancel_monoid (option num)) := sorry --non-trivial
lemma new_lemma_52198 (h0 : fin has_zero.zero) : @is_cyclic.{0} (canonically_ordered_monoid.{0} real) (@matrix.vec_empty.{0} (group.{0} (canonically_ordered_monoid.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_52199 (h0 : topological_space (generalized_boolean_algebra (ring linarith.comp))) : t1_space (generalized_boolean_algebra (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_52200 (h0 : group (dlist (random_gen linarith.ineq))) : is_cyclic (dlist (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_52201 (h1 : ring (has_inf (add_comm_semigroup string.iterator_imp))) : is_domain (has_inf (add_comm_semigroup string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_52202 (h0 : set (set (random_gen (has_inv (has_inv (has_inv (has_inv (has_inv (has_inv fun_info))))))))) : is_countably_spanning h0 := sorry --non-trivial
lemma new_lemma_52203 (h0 : uniform_space (add_cancel_monoid (has_nndist (has_add (has_add (semigroup (semigroup Type))))))) : complete_space (add_cancel_monoid (has_nndist (has_add (has_add (semigroup (semigroup Type)))))) := sorry --non-trivial
lemma new_lemma_52204 (h0 : topological_space (add_left_cancel_semigroup (option empty))) : loc_path_connected_space (add_left_cancel_semigroup (option empty)) := sorry --non-trivial
lemma new_lemma_52205 (h2 : function.extfun Type topological_space) : @path_connected_space.{0} (complete_semilattice_Sup.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h2 (complete_semilattice_Sup.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_52206 (h0 : uniform_space (has_add (finset linarith.comp))) : complete_space (has_add (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_52207 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (@id.{2} Type linarith.comp_source) (@function.extfun_app.{2 1} Type monoid.{0} h0 (@id.{2} Type linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_52208 (h0 : monoid (add_cancel_monoid (option empty))) : monoid.fg (add_cancel_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_52209 (h0 : functor.add_const (topological_space (generalized_boolean_algebra pos)) linarith.comp) : @regular_space.{0} (generalized_boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (generalized_boolean_algebra.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_52210 (h0 : functor.add_const (function.extfun (Type 1) group) pos) : @is_simple_group.{1} (has_add.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) pos h0) (has_add.{1} Type))  := sorry --non-trivial
lemma new_lemma_52211 (h0 : topological_space (has_nndist unsigned)) : irreducible_space (has_nndist unsigned) := sorry --non-trivial
lemma new_lemma_52212 (h0 : topological_space (cancel_monoid (has_add pos))) : locally_compact_space (cancel_monoid (has_add pos)) := sorry --non-trivial
lemma new_lemma_52213 (h0 : topological_space (semigroup (boolean_algebra.core pos))) : loc_path_connected_space (semigroup (boolean_algebra.core pos)) := sorry --non-trivial
lemma new_lemma_52214 (h0 : topological_space (add_comm_monoid (has_neg_part name))) : preconnected_space (add_comm_monoid (has_neg_part name)) := sorry --non-trivial
lemma new_lemma_52215 (h0 h1 : multiset to_additive.value_type) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_52216 (h0 : ordered_add_comm_monoid (has_neg (option num))) : archimedean (has_neg (option num)) := sorry --non-trivial
lemma new_lemma_52217 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (ordered_cancel_add_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_cancel_add_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_52218 (h0 : functor.add_const (ring (has_Sup empty)) empty) : @rank_condition.{0} (has_Sup.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (has_Sup.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_52219 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (with_zero linarith.ineq)) := sorry --non-trivial
lemma new_lemma_52220 (h0 : topological_space (has_top (semiring unsigned))) : totally_disconnected_space (has_top (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_52221 (h0 : group (with_bot (random_gen (random_gen string_imp)))) : normalizer_condition (with_bot (random_gen (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_52222 (h0 : functor.comp list pseudo_metric_space pos) : palindrome (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_52223 (h0 : topological_space (finset (finset environment.implicit_infer_kind))) : t1_space (finset (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_52224 (h0 : monoid (normed_comm_ring (has_add (comm_group Type)))) : monoid.fg (normed_comm_ring (has_add (comm_group Type))) := sorry --non-trivial
lemma new_lemma_52225 (h0 : complete_lattice (has_to_string (option (option num)))) : is_atomistic (has_to_string (option (option num))) := sorry --non-trivial
lemma new_lemma_52226 (h1 : topological_space (denumerable char)) : path_connected_space (denumerable char) := sorry --non-trivial
lemma new_lemma_52227 (h0 : group (has_to_string (has_add (has_add Type)))) : is_cyclic (has_to_string (has_add (has_add Type))) := sorry --non-trivial
lemma new_lemma_52228 (h0 : topological_space (option ennreal)) : normal_space (option ennreal) := sorry --non-trivial
lemma new_lemma_52229 (h0 : functor.add_const (finset (cancel_monoid name)) name) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52230 (h0 : int) (h1 : int -> char) (h2 : coe_sort (set.range h1)) : int.lt h0 (set.range_splitting h1 h2) := sorry --non-trivial
lemma new_lemma_52231 (h1 : topological_space (has_compl fun_info)) : totally_disconnected_space (has_compl fun_info) := sorry --non-trivial
lemma new_lemma_52232 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (add_cancel_monoid.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_52233 (h0 : ordered_add_comm_monoid (normed_lattice_add_comm_group (has_add (comm_semigroup name)))) : archimedean (normed_lattice_add_comm_group (has_add (comm_semigroup name))) := sorry --non-trivial
lemma new_lemma_52234 (h0 : ring (add_cancel_comm_monoid (mul_one_class char))) : strong_rank_condition (add_cancel_comm_monoid (mul_one_class char)) := sorry --non-trivial
lemma new_lemma_52235 (h0 : functor.add_const (add_group (linear_ordered_add_comm_monoid_with_top empty)) (option empty)) : @is_add_cyclic.{0} (linear_ordered_add_comm_monoid_with_top.{0} empty) (@functor.add_const.run.{0 0} (add_group.{0} (linear_ordered_add_comm_monoid_with_top.{0} empty)) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_52236 (h0 : filter (normed_comm_ring (finset (finset Type)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_52237 (h0 : has_mem.mem group has_emptyc.emptyc) : @group.fg.{0} (@id.{2} Type num) (@function.extfun_app.{2 1} Type group.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) group.{0} h0) (@id.{2} Type num))  := sorry --non-trivial
lemma new_lemma_52238 (h1 : not (group (with_one fun_info) -> false)) : @is_cyclic.{0} (with_one.{0} fun_info) (@classical.by_contradiction'.{1} (group.{0} (with_one.{0} fun_info)) h1)  := sorry --non-trivial
lemma new_lemma_52239 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (add_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (add_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52240 (h0 : ordered_add_comm_monoid (sub_neg_monoid (has_neg real))) : archimedean (sub_neg_monoid (has_neg real)) := sorry --non-trivial
lemma new_lemma_52241 (h0 : semiring (nondiscrete_normed_field (add_comm_semigroup environment.projection_info))) (h1 : ideal (nondiscrete_normed_field (add_comm_semigroup environment.projection_info))) : ideal.fg h1 := sorry --non-trivial
lemma new_lemma_52242 (h0 : functor.add_const (add_monoid (has_edist unsigned)) unsigned) : @add_monoid.fg.{0} (has_edist.{0} unsigned) (@functor.add_const.run.{0 0} (add_monoid.{0} (has_edist.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_52243 (h0 : functor.add_const (add_monoid (ordered_comm_monoid linarith.comp)) (has_pos_part pos)) : @add_monoid.fg.{0} (ordered_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_monoid.{0} (ordered_comm_monoid.{0} linarith.comp)) (has_pos_part.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_52244 (h0 : set (nondiscrete_normed_field environment.projection_info -> ereal)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_52245 (h0 : topological_space (has_add (has_add linarith.comp))) : topological_space.separable_space (has_add (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_52246 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : palindrome (function.extfun_app (function.extfun_app h0 list) (boolean_algebra.core Type)) := sorry --non-trivial
lemma new_lemma_52247 (h0 : topological_space (normed_group (random_gen empty))) : totally_disconnected_space (normed_group (random_gen empty)) := sorry --non-trivial
lemma new_lemma_52248 (h0 : function.extfun Type group) : @normalizer_condition.{0} (has_neg_part.{0} pos) (@function.extfun_app.{2 1} Type group.{0} h0 (has_neg_part.{0} pos))  := sorry --non-trivial
lemma new_lemma_52249 (h0 : ordered_comm_monoid (generalized_boolean_algebra (has_Inf name))) : has_exists_mul_of_le (generalized_boolean_algebra (has_Inf name)) := sorry --non-trivial
lemma new_lemma_52250 (h0 : uniform_space (with_bot (has_norm linarith.ineq))) : complete_space (with_bot (has_norm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_52251 (h1 : complete_lattice (has_lt linarith.ineq)) : is_compactly_generated (has_lt linarith.ineq) := sorry --non-trivial
lemma new_lemma_52252 (h0 : uniform_space (with_one (measurable_space linarith.comp_source))) : complete_space (with_one (measurable_space linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_52253 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (has_norm.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_norm.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_52254 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (ring.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} h0 (ring.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_52255 (h0 : functor.add_const (ring (linear_ordered_cancel_add_comm_monoid empty)) num) : @is_domain.{0} (linear_ordered_cancel_add_comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (linear_ordered_cancel_add_comm_monoid.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_52256 (h0 : topological_space (has_to_string (has_to_string (finset (finset linarith.comp))))) : irreducible_space (has_to_string (has_to_string (finset (finset linarith.comp)))) := sorry --non-trivial
lemma new_lemma_52257 (h0 : group (has_to_string pos)) : is_simple_group (has_to_string pos) := sorry --non-trivial
lemma new_lemma_52258 (h0 : group (normed_field (has_nnnorm (semi_normed_ring char)))) : is_cyclic (normed_field (has_nnnorm (semi_normed_ring char))) := sorry --non-trivial
lemma new_lemma_52259 (h0 : functor.add_const (filter (has_add pos)) name) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52260 (h0 : topological_space (ring (normed_comm_ring linarith.comp))) : t0_space (ring (normed_comm_ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_52261 (h0 : list (ulower Prop)) : @ulower.up.{0} Prop encodable.Prop (@list.head.{0} (@ulower.{0} Prop encodable.Prop) (@ulower.inhabited.{0} Prop encodable.Prop sort.inhabited.{0}) h0)  := sorry --non-trivial
lemma new_lemma_52262 (h1 : group (has_ssubset to_additive.value_type)) : group.fg (has_ssubset to_additive.value_type) := sorry --non-trivial
lemma new_lemma_52263 (h0 : complete_lattice (with_one (random_gen (random_gen (random_gen num))))) : complete_lattice.is_Sup_finite_compact (with_one (random_gen (random_gen (random_gen num)))) := sorry --non-trivial
lemma new_lemma_52264 (h0 : functor.add_const (topological_space (canonically_ordered_monoid pos)) linarith.comp) : @totally_disconnected_space.{0} (canonically_ordered_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_monoid.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_52265 (h0 : topological_space (option (semiring congr_arg_kind))) : t0_space (option (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_52266 (h0 : add_monoid (canonically_ordered_monoid name)) : add_monoid.fg (canonically_ordered_monoid name) := sorry --non-trivial
lemma new_lemma_52267 (h0 : uniform_space (non_assoc_semiring (semiring unsigned))) : separated_space (non_assoc_semiring (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_52268 (h0 : ring (has_add char)) : rank_condition (has_add char) := sorry --non-trivial
lemma new_lemma_52269 (h0 : monoid (dlist fun_info)) : monoid.fg (dlist fun_info) := sorry --non-trivial
lemma new_lemma_52270 (h0 : functor.add_const (topological_space (has_Sup empty)) num) : @topological_space.separable_space.{0} (has_Sup.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Sup.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_52271 (h0 : group (complete_distrib_lattice (option (option (option pos))))) : is_simple_group (complete_distrib_lattice (option (option (option pos)))) := sorry --non-trivial
lemma new_lemma_52272 (h0 : topological_space (has_emptyc (has_inv fun_info))) : path_connected_space (has_emptyc (has_inv fun_info)) := sorry --non-trivial
lemma new_lemma_52273 (h0 : add_monoid (canonically_linear_ordered_monoid pos)) : add_monoid.fg (canonically_linear_ordered_monoid pos) := sorry --non-trivial
lemma new_lemma_52274 (h0 : topological_space (has_to_string (cancel_monoid Type))) : t0_space (has_to_string (cancel_monoid Type)) := sorry --non-trivial
lemma new_lemma_52275 (h0 : ring (semi_normed_ring (normed_field (fintype char)))) : is_domain (semi_normed_ring (normed_field (fintype char))) := sorry --non-trivial
lemma new_lemma_52276 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} ennreal (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) ennreal)  := sorry --non-trivial
lemma new_lemma_52277 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @totally_disconnected_space.{0} (measurable_space.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (measurable_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_52278 (h0 : group (sub_neg_monoid (has_add name))) : normalizer_condition (sub_neg_monoid (has_add name)) := sorry --non-trivial
lemma new_lemma_52279 (h0 : function.extfun Type complete_lattice) : is_atomistic (measurable_space to_additive.value_type) := sorry --non-trivial
lemma new_lemma_52280 (h1 : not (function.extfun Type complete_lattice -> false)) : @is_atomistic.{0} (has_norm.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h1) (has_norm.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52281 (h1 : complete_lattice (has_top (random_gen (has_nnnorm (has_nnnorm string_imp))))) : is_compactly_generated (has_top (random_gen (has_nnnorm (has_nnnorm string_imp)))) := sorry --non-trivial
lemma new_lemma_52282 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (with_bot.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (with_bot.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52283 (h0 : add_group (complete_distrib_lattice (ring Type))) : is_add_cyclic (complete_distrib_lattice (ring Type)) := sorry --non-trivial
lemma new_lemma_52284 (h0 : functor.add_const (add_monoid (has_nndist name)) pos) : @add_monoid.fg.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 0} (add_monoid.{0} (has_nndist.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_52285 (h0 : topological_space (has_Inf (has_Inf linarith.comp))) : irreducible_space (has_Inf (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_52286 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (boolean_algebra.{0} name) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (boolean_algebra.{0} name))  := sorry --non-trivial
lemma new_lemma_52287 (h0 : topological_space (mul_zero_class (boolean_algebra.core (has_add real)))) : topological_space.separable_space (mul_zero_class (boolean_algebra.core (has_add real))) := sorry --non-trivial
lemma new_lemma_52288 (h0 : functor.add_const (group (ordered_comm_ring linarith.comp)) (finset Type)) : @normalizer_condition.{0} (ordered_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 1} (group.{0} (ordered_comm_ring.{0} linarith.comp)) (finset.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_52289 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (mul_zero_class.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (mul_zero_class.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_52290 (h3 : topological_space (distrib (mul_one_class linarith.ineq))) (h4 : preorder (distrib (mul_one_class linarith.ineq))) : order_topology (distrib (mul_one_class linarith.ineq)) := sorry --non-trivial
lemma new_lemma_52291 (h0 : topological_space (add_comm_monoid (has_neg_part (finset (finset environment.implicit_infer_kind))))) : discrete_topology (add_comm_monoid (has_neg_part (finset (finset environment.implicit_infer_kind)))) := sorry --non-trivial
lemma new_lemma_52292 (h0 : functor.add_const (topological_space (mul_zero_class Type)) Type) : @irreducible_space.{1} (mul_zero_class.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (mul_zero_class.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_52293 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (has_neg.{0} pos) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (has_neg.{0} pos))  := sorry --non-trivial
lemma new_lemma_52294 (h0 : topological_space (semigroup num)) : totally_separated_space (semigroup num) := sorry --non-trivial
lemma new_lemma_52295 (h0 : not (function.extfun Type topological_space -> false)) : @path_connected_space.{0} (linear_ordered_comm_monoid.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (linear_ordered_comm_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_52296 (h0 : not (function.extfun Type ring -> false)) : @is_domain.{0} (add_right_cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (add_right_cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52297 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (has_inter.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_inter.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_52298 (h0 : add_group (normed_field (has_nnnorm (topological_space linarith.comp_source)))) : is_add_cyclic (normed_field (has_nnnorm (topological_space linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_52299 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52300 (h0 : not (complete_lattice (with_bot to_additive.value_type) -> false)) : @is_compactly_generated.{0} (with_bot.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (complete_lattice.{0} (with_bot.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_52301 (h0 : functor.add_const (function.extfun (Type 1) uniform_space) linarith.comp) : @complete_space.{1} (has_add.{1} Type) (@function.extfun_app.{3 2} (Type 1) uniform_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) uniform_space.{1}) linarith.comp h0) (has_add.{1} Type))  := sorry --non-trivial
lemma new_lemma_52302 (h0 : functor.add_const (ordered_comm_monoid (semigroup environment.implicit_infer_kind)) linarith.comp) : @has_exists_mul_of_le.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (semigroup.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_52303 (h0 : functor.add_const (topological_space (generalized_boolean_algebra linarith.comp)) name) : @path_connected_space.{0} (generalized_boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (generalized_boolean_algebra.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_52304 (h2 : filter (div_inv_monoid (has_nnnorm char))) : filter.ne_bot h2 := sorry --non-trivial
lemma new_lemma_52305 (h0 : monoid (id (random_gen (random_gen string_imp)))) : monoid.fg (id (random_gen (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_52306 (h0 : ring (canonically_linear_ordered_monoid linarith.comp_source)) : is_domain (canonically_linear_ordered_monoid linarith.comp_source) := sorry --non-trivial
lemma new_lemma_52307 (h0 : fin has_zero.zero) : @strong_rank_condition.{0} (canonically_ordered_monoid.{0} pos) (@matrix.vec_empty.{0} (ring.{0} (canonically_ordered_monoid.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_52308 (h0 : ring (has_div char)) : rank_condition (has_div char) := sorry --non-trivial
lemma new_lemma_52309 (h0 : function.extfun Type group) : @group.fg.{0} (generalized_boolean_algebra.{0} real) (@function.extfun_app.{2 1} Type group.{0} h0 (generalized_boolean_algebra.{0} real))  := sorry --non-trivial
lemma new_lemma_52310 (h0 : topological_space real.angle) : normal_space real.angle := sorry --non-trivial
lemma new_lemma_52311 (h0 : ordered_add_comm_monoid (canonically_ordered_monoid (has_Inf name))) : archimedean (canonically_ordered_monoid (has_Inf name)) := sorry --non-trivial
lemma new_lemma_52312 (h0 : uniform_space (has_add linarith.ineq)) : complete_space (has_add linarith.ineq) := sorry --non-trivial
lemma new_lemma_52313 (h0 : function.extfun (Type 1) group) : @group.fg.{1} (canonically_ordered_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} h0 (canonically_ordered_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_52314 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (canonically_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (canonically_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_52315 (h0 : complete_lattice (normed_group (has_top (has_top (has_top linarith.comp_source))))) : is_atomistic (normed_group (has_top (has_top (has_top linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_52316 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (as_linear_order.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (as_linear_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52317 (h0 : functor.add_const (complete_lattice (boolean_algebra.core Type)) Type) : @is_atomistic.{1} (boolean_algebra.core.{1} Type) (@functor.add_const.run.{1 1} (complete_lattice.{1} (boolean_algebra.core.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_52318 (h0 : complete_lattice (semiring (has_norm empty))) : is_compactly_generated (semiring (has_norm empty)) := sorry --non-trivial
lemma new_lemma_52319 (h0 : topological_space (dlist (add_monoid (has_inv fun_info)))) : irreducible_space (dlist (add_monoid (has_inv fun_info))) := sorry --non-trivial
lemma new_lemma_52320 (h0 : ordered_add_comm_monoid (generalized_boolean_algebra (has_pos_part linarith.comp))) : archimedean (generalized_boolean_algebra (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_52321 (h0 : cancel_comm_monoid_with_zero (semigroup environment.implicit_infer_kind)) : unique_factorization_monoid (semigroup environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_52322 (h0 : topological_space (mul_zero_class environment.implicit_infer_kind)) : totally_disconnected_space (mul_zero_class environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_52323 (h0 : function.extfun Type (functor.add_const (functor.comp topological_space semigroup pos))) : @loc_path_connected_space.{0} (semigroup.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} semigroup.{0} pos (@functor.add_const.run.{0 0} (functor.comp.{0 0 0} topological_space.{0} semigroup.{0} pos) name (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (functor.comp.{0 0 0} topological_space.{0} semigroup.{0} pos)) h0 name)))  := sorry --non-trivial
lemma new_lemma_52324 (h0 : uniform_space (semiring (random_gen linarith.comp))) : complete_space (semiring (random_gen linarith.comp)) := sorry --non-trivial
lemma new_lemma_52325 (h0 : group (linear_ordered_add_comm_group (has_nnnorm (random_gen char)))) : is_cyclic (linear_ordered_add_comm_group (has_nnnorm (random_gen char))) := sorry --non-trivial
lemma new_lemma_52326 (h0 : functor.add_const (filter (ring linarith.comp)) (has_to_string environment.implicit_infer_kind)) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52327 (h0 : topological_space (normed_field std_gen)) (h1 : preorder (normed_field std_gen)) : order_closed_topology (normed_field std_gen) := sorry --non-trivial
lemma new_lemma_52328 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (boolean_algebra.core.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (boolean_algebra.core.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52329 (h0 : topological_space (semigroup (has_add unsigned))) : sequential_space (semigroup (has_add unsigned)) := sorry --non-trivial
lemma new_lemma_52330 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_inv.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_inv.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_52331 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (has_neg_part.{0} name) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_neg_part.{0} name))  := sorry --non-trivial
lemma new_lemma_52332 (h0 : functor.add_const (topological_space (has_nndist name)) name) : @irreducible_space.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_52333 (h0 : topological_space (has_to_string (comm_group (semigroup (boolean_algebra.core name))))) : preconnected_space (has_to_string (comm_group (semigroup (boolean_algebra.core name)))) := sorry --non-trivial
lemma new_lemma_52334 (h0 : ring (sub_neg_monoid (has_pos_part pos))) : is_principal_ideal_ring (sub_neg_monoid (has_pos_part pos)) := sorry --non-trivial
lemma new_lemma_52335 (h0 : complete_lattice (has_compl (random_gen (random_gen string_imp)))) : is_compactly_generated (has_compl (random_gen (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_52336 (h0 : functor.add_const (function.extfun Type ordered_comm_monoid) Type) : @has_exists_mul_of_le.{0} (has_add.{0} linarith.comp) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) Type h0) (has_add.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52337 (h0 : ring (distrib to_additive.value_type)) : rank_condition (distrib to_additive.value_type) := sorry --non-trivial
lemma new_lemma_52338 (h0 : group (generalized_boolean_algebra (has_add (has_add (has_add linarith.comp))))) : is_cyclic (generalized_boolean_algebra (has_add (has_add (has_add linarith.comp)))) := sorry --non-trivial
lemma new_lemma_52339 (h0 : topological_space (add_right_cancel_monoid congr_arg_kind)) : preirreducible_space (add_right_cancel_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52340 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : palindrome (function.extfun_app (function.extfun_app h0 list) (semigroup linarith.comp)) := sorry --non-trivial
lemma new_lemma_52341 (h0 : monoid (semiring (semiring empty))) : monoid.fg (semiring (semiring empty)) := sorry --non-trivial
lemma new_lemma_52342 (h0 : ring (has_compl (random_gen (random_gen string_imp)))) : is_domain (has_compl (random_gen (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_52343 (h0 : functor.add_const (add_monoid (add_cancel_comm_monoid empty)) empty) : @add_monoid.fg.{0} (add_cancel_comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (add_monoid.{0} (add_cancel_comm_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_52344 (h0 : uniform_space (has_Sup (semiring empty))) : separated_space (has_Sup (semiring empty)) := sorry --non-trivial
lemma new_lemma_52345 (h0 : functor.add_const (group (normed_comm_ring linarith.comp)) pos) : @is_cyclic.{0} (normed_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (normed_comm_ring.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_52346 (h0 : not (group (has_append to_additive.value_type) -> false)) : @is_cyclic.{0} (has_append.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (group.{0} (has_append.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_52347 (h0 : functor.add_const (ring (boolean_algebra environment.implicit_infer_kind)) pos) : @is_domain.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_52348 (h0 : functor.add_const (topological_space (pseudo_metric_space ennreal)) (option (option ennreal))) : @t0_space.{0} (pseudo_metric_space.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (pseudo_metric_space.{0} ennreal)) (option.{0} (option.{0} ennreal)) h0)  := sorry --non-trivial
lemma new_lemma_52349 (h0 : not (topological_space (mul_zero_class empty) -> false)) : @discrete_topology.{0} (mul_zero_class.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (mul_zero_class.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_52350 (h0 : functor.add_const (function.extfun (Type 1) topological_space) pos) : @loc_path_connected_space.{1} (ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) pos h0) (ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_52351 (h0 : add_group (has_emptyc (random_gen (has_top linarith.comp_source)))) : is_add_cyclic (has_emptyc (random_gen (has_top linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_52352 (h0 : complete_lattice (non_assoc_semiring (semiring (semiring (semiring empty))))) : is_compactly_generated (non_assoc_semiring (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_52353 (h0 : function.extfun Type (functor.add_const (semiring znum))) : @is_noetherian_ring.{0} znum (@functor.add_const.run.{0 0} (semiring.{0} znum) unsigned (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (semiring.{0} znum)) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_52354 (h0 : ring (normed_group (semiring (semiring unsigned)))) : strong_rank_condition (normed_group (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_52355 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (ordered_cancel_add_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (ordered_cancel_add_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_52356 (h0 : functor.add_const (topological_space (add_cancel_monoid ennreal)) name) : @topological_space.separable_space.{0} (add_cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} ennreal)) name h0)  := sorry --non-trivial
lemma new_lemma_52357 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (with_one.{0} (has_top.{0} linarith.comp_source)) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (with_one.{0} (has_top.{0} linarith.comp_source)))  := sorry --non-trivial
lemma new_lemma_52358 (h0 : function.extfun fun_info (fun (x : fun_info), Prop)) : @infi.{0 1} Prop (@conditionally_complete_lattice.to_has_Inf.{0} Prop (@complete_lattice.to_conditionally_complete_lattice.{0} Prop Prop.complete_lattice)) fun_info (@function.extfun_app.{1 1} fun_info (λ (x : fun_info), Prop) h0)  := sorry --non-trivial
lemma new_lemma_52359 (h0 : topological_space (distrib_lattice (boolean_algebra.core linarith.ineq))) : t0_space (distrib_lattice (boolean_algebra.core linarith.ineq)) := sorry --non-trivial
lemma new_lemma_52360 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (comm_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (comm_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52361 (h0 : topological_space (random_gen (semiring unsigned))) : path_connected_space (random_gen (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_52362 (h1 : uniform_space (nondiscrete_normed_field (normed_field char))) : complete_space (nondiscrete_normed_field (normed_field char)) := sorry --non-trivial
lemma new_lemma_52363 (h0 : topological_space (boolean_algebra (has_neg_part pos))) : preconnected_space (boolean_algebra (has_neg_part pos)) := sorry --non-trivial
lemma new_lemma_52364 (h0 : functor.add_const (topological_space (complete_distrib_lattice Type)) environment.implicit_infer_kind) : @preirreducible_space.{1} (complete_distrib_lattice.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (complete_distrib_lattice.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_52365 (h0 : topological_space (distrib_lattice (has_nnnorm linarith.comp_source))) : path_connected_space (distrib_lattice (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_52366 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @discrete_topology.{0} real.angle (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) real.angle)  := sorry --non-trivial
lemma new_lemma_52367 (h0 : functor.add_const (topological_space (has_pos_part pos)) pos) : @path_connected_space.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_pos_part.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_52368 (h0 : list (with_one (with_one fun_info))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_52369 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (add_left_cancel_semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (add_left_cancel_semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52370 (h0 : finset (cancel_monoid (option pos))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_52371 (h0 : topological_space (boolean_algebra.core (has_add (has_add (has_add (has_add name)))))) : t0_space (boolean_algebra.core (has_add (has_add (has_add (has_add name))))) := sorry --non-trivial
lemma new_lemma_52372 (h0 : functor.add_const (filter (boolean_algebra.core name)) Type) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52373 (h0 : add_group (ordered_comm_ring (has_Inf (boolean_algebra.core (ring linarith.comp))))) : is_add_cyclic (ordered_comm_ring (has_Inf (boolean_algebra.core (ring linarith.comp)))) := sorry --non-trivial
lemma new_lemma_52374 (h1 : not (topological_space (simple_graph string_imp) -> false)) : @totally_disconnected_space.{0} (simple_graph.{0} string_imp) (@classical.by_contradiction'.{1} (topological_space.{0} (simple_graph.{0} string_imp)) h1)  := sorry --non-trivial
lemma new_lemma_52375 (h0 : group (has_one unsigned)) : is_cyclic (has_one unsigned) := sorry --non-trivial
lemma new_lemma_52376 (h0 : add_comm_monoid (has_add (option ennreal)) -> add_comm_monoid (has_add (option ennreal)) -> Prop) : is_symm (add_comm_monoid (has_add (option ennreal))) h0 := sorry --non-trivial
lemma new_lemma_52377 (h0 : functor.add_const (uniform_space (boolean_algebra linarith.comp)) linarith.comp) : @separated_space.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (boolean_algebra.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_52378 (h0 : topological_space (ordered_semiring (semiring congr_arg_kind))) : path_connected_space (ordered_semiring (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_52379 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (linear_ordered_field.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (linear_ordered_field.{0} empty))  := sorry --non-trivial
lemma new_lemma_52380 (h0 : topological_space (id (random_gen (random_gen (random_gen (random_gen num)))))) : path_connected_space (id (random_gen (random_gen (random_gen (random_gen num))))) := sorry --non-trivial
lemma new_lemma_52381 (h0 : complete_lattice (boolean_algebra Type)) : is_compactly_generated (boolean_algebra Type) := sorry --non-trivial
lemma new_lemma_52382 (h0 : ordered_add_comm_monoid (semigroup (has_neg environment.implicit_infer_kind))) : archimedean (semigroup (has_neg environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_52383 (h0 : not (topological_space (measure_theory.measure_space num) -> false)) : @irreducible_space.{0} (measure_theory.measure_space.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (measure_theory.measure_space.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_52384 (h0 : set (mul_one_class std_gen -> std_gen)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_52385 (h0 : functor.add_const (topological_space (semigroup linarith.comp)) linarith.comp) : @path_connected_space.{0} (semigroup.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_52386 (h0 : group (with_bot string_imp)) : is_cyclic (with_bot string_imp) := sorry --non-trivial
lemma new_lemma_52387 (h0 : topological_space (boolean_algebra.core (semigroup ennreal))) : totally_disconnected_space (boolean_algebra.core (semigroup ennreal)) := sorry --non-trivial
lemma new_lemma_52388 (h1 : ring (topological_space (has_lt string_imp))) : is_domain (topological_space (has_lt string_imp)) := sorry --non-trivial
lemma new_lemma_52389 (h0 : functor.add_const (ordered_add_comm_monoid (add_comm_monoid name)) linarith.comp) : @archimedean.{0} (add_comm_monoid.{0} name) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (add_comm_monoid.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_52390 (h0 : topological_space (with_one (random_gen (random_gen to_additive.value_type)))) : path_connected_space (with_one (random_gen (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_52391 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (complete_semilattice_Sup.{0} num) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (complete_semilattice_Sup.{0} num))  := sorry --non-trivial
lemma new_lemma_52392 (h0 : topological_space (random_gen (random_gen (random_gen linarith.comp_source)))) : irreducible_space (random_gen (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_52393 (h0 : ring (has_ssubset string_imp)) : is_domain (has_ssubset string_imp) := sorry --non-trivial
lemma new_lemma_52394 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preconnected_space.{0} (has_Inf.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_Inf.{0} name))  := sorry --non-trivial
lemma new_lemma_52395 (h0 : ring (uniform_space (mul_one_class (mul_one_class to_additive.value_type)))) : strong_rank_condition (uniform_space (mul_one_class (mul_one_class to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_52396 (h0 : function.extfun (finset Type) (has_mem.mem (normed_group linarith.ineq))) : @strong_rank_condition.{0} (normed_group.{0} linarith.ineq) (@finset.pi.empty.{1 0} Type ring.{0} (normed_group.{0} linarith.ineq) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (normed_group.{0} linarith.ineq)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_52397 (h0 : function.extfun Type group) : @is_cyclic.{0} (has_pos_part.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} h0 (has_pos_part.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52398 (h0 : topological_space (generalized_boolean_algebra (has_pos_part (has_Inf (has_neg linarith.comp))))) : t1_space (generalized_boolean_algebra (has_pos_part (has_Inf (has_neg linarith.comp)))) := sorry --non-trivial
lemma new_lemma_52399 (h0 : option (option empty) -> option (option empty) -> Prop) : is_antisymm (option (option empty)) h0 := sorry --non-trivial
lemma new_lemma_52400 (h0 : topological_space (linear_ordered_semiring (semiring (semiring (semiring unsigned))))) : totally_disconnected_space (linear_ordered_semiring (semiring (semiring (semiring unsigned)))) := sorry --non-trivial
lemma new_lemma_52401 (h0 : complete_lattice (normed_group unsigned)) : complete_lattice.is_Sup_finite_compact (normed_group unsigned) := sorry --non-trivial
lemma new_lemma_52402 (h3 : ring num) : rank_condition num := sorry --non-trivial
lemma new_lemma_52403 (h0 : topological_space (pseudo_metric_space (option unsigned))) : sequential_space (pseudo_metric_space (option unsigned)) := sorry --non-trivial
lemma new_lemma_52404 (h0 : set (prod linarith.comp_source linarith.comp_source)) (h1 : function.extfun Type (prod linarith.comp_source)) : symmetrize_rel h0 (function.extfun_app h1 linarith.comp_source) := sorry --non-trivial
lemma new_lemma_52405 (h0 : functor.add_const (group (left_cancel_monoid num)) (semiring num)) : @group.fg.{0} (left_cancel_monoid.{0} num) (@functor.add_const.run.{0 0} (group.{0} (left_cancel_monoid.{0} num)) (semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_52406 (h0 : ring (add_cancel_monoid (has_neg_part Type))) : strong_rank_condition (add_cancel_monoid (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_52407 (h0 : list (simple_graph congr_arg_kind)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_52408 (h0 : cancel_comm_monoid_with_zero (filter unsigned)) : unique_factorization_monoid (filter unsigned) := sorry --non-trivial
lemma new_lemma_52409 (h0 : group (has_emptyc (random_gen to_additive.value_type))) : is_cyclic (has_emptyc (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_52410 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (semigroup.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semigroup.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52411 (h0 : functor.add_const (ring (comm_group pos)) linarith.comp) : @strong_rank_condition.{0} (comm_group.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (comm_group.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_52412 (h0 : topological_space (comm_group pos)) : sequential_space (comm_group pos) := sorry --non-trivial
lemma new_lemma_52413 (h0 : group (linear_ordered_comm_ring (semiring (semiring (semiring congr_arg_kind))))) : group.fg (linear_ordered_comm_ring (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_52414 (h0 : has_mem.mem (with_bot congr_arg_kind) has_emptyc.emptyc) : @strong_rank_condition.{0} (with_bot.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type ring.{0} (with_bot.{0} congr_arg_kind) h0)  := sorry --non-trivial
lemma new_lemma_52415 (h0 : functor.add_const (topological_space (boolean_algebra environment.implicit_infer_kind)) (has_neg_part Type)) : @normal_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) (has_neg_part.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_52416 (h0 : filter (has_to_string name)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_52417 (h0 : topological_space (has_top (comm_monoid string_imp))) : totally_disconnected_space (has_top (comm_monoid string_imp)) := sorry --non-trivial
lemma new_lemma_52418 (h0 : topological_space (ordered_comm_ring (has_neg linarith.comp))) : preirreducible_space (ordered_comm_ring (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_52419 (h0 : function.extfun nat fin) : @is_simple_group.{1} (canonically_linear_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (group.{1} (canonically_linear_ordered_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_52420 (h0 : topological_space (has_norm (semiring fun_info))) : t0_space (has_norm (semiring fun_info)) := sorry --non-trivial
lemma new_lemma_52421 (h0 : add_monoid (add_cancel_monoid name)) : add_monoid.fg (add_cancel_monoid name) := sorry --non-trivial
lemma new_lemma_52422 (h0 : fin has_zero.zero) : @t0_space.{0} (ordered_comm_monoid.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (ordered_comm_monoid.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_52423 (h1 : num -> Prop) : @infi.{0 1} Prop (@conditionally_complete_lattice.to_has_Inf.{0} Prop (@complete_lattice.to_conditionally_complete_lattice.{0} Prop Prop.complete_lattice)) num h1  := sorry --non-trivial
lemma new_lemma_52424 (h0 : functor.add_const (function.extfun (Type 1) topological_space) linarith.comp) : @locally_compact_space.{1} (add_cancel_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) linarith.comp h0) (add_cancel_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_52425 (h0 : monoid (has_emptyc (semiring congr_arg_kind))) : monoid.fg (has_emptyc (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_52426 (h0 : ring (measurable_space empty)) : rank_condition (measurable_space empty) := sorry --non-trivial
lemma new_lemma_52427 (h0 : finset (add_cancel_monoid Type)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_52428 (h0 : topological_space (partial_order (semiring (semiring (semiring empty))))) : discrete_topology (partial_order (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_52429 (h0 : uniform_space (has_add (has_bot real))) : complete_space (has_add (has_bot real)) := sorry --non-trivial
lemma new_lemma_52430 (h0 : functor.add_const (add_group (has_nndist linarith.comp)) name) : @is_add_cyclic.{0} (has_nndist.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_group.{0} (has_nndist.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_52431 (h0 : functor.add_const (topological_space (boolean_algebra.core Type)) name) : @t0_space.{1} (boolean_algebra.core.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (boolean_algebra.core.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_52432 (h0 : topological_space (complete_distrib_lattice (ring Type))) : preirreducible_space (complete_distrib_lattice (ring Type)) := sorry --non-trivial
lemma new_lemma_52433 (h0 : functor.add_const (topological_space (semigroup linarith.comp)) linarith.comp) : @locally_compact_space.{0} (semigroup.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_52434 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @loc_path_connected_space.{1} (has_neg_part.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (has_neg_part.{1} Type))  := sorry --non-trivial
lemma new_lemma_52435 (h0 : ring (generalized_boolean_algebra (has_pos_part Type))) : strong_rank_condition (generalized_boolean_algebra (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_52436 (h0 : not (add_group (measurable_space num) -> false)) : @is_add_cyclic.{0} (measurable_space.{0} num) (@classical.by_contradiction'.{1} (add_group.{0} (measurable_space.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_52437 (h0 : topological_space (has_Sup empty)) : preirreducible_space (has_Sup empty) := sorry --non-trivial
lemma new_lemma_52438 (h0 : group (linear_ordered_semiring linarith.comp)) : normalizer_condition (linear_ordered_semiring linarith.comp) := sorry --non-trivial
lemma new_lemma_52439 (h0 : functor.add_const (group (boolean_algebra unsigned)) pos) : @normalizer_condition.{0} (boolean_algebra.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (boolean_algebra.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_52440 (h0 : list (has_neg (option ennreal))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_52441 (h0 : add_group (add_comm_semigroup (semigroup enat))) : is_add_cyclic (add_comm_semigroup (semigroup enat)) := sorry --non-trivial
lemma new_lemma_52442 (h0 : not (filter (add_right_cancel_monoid (semiring (semiring (semiring (semiring (semiring unsigned)))))) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_52443 (h0 : has_mem.mem (has_top linarith.comp_source) has_emptyc.emptyc) : filter.ne_bot (finset.pi.empty filter (has_top linarith.comp_source) h0) := sorry --non-trivial
lemma new_lemma_52444 (h0 : topological_space (add_comm_monoid congr_arg_kind)) : t0_space (add_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52445 (h1 : not (ring (random_gen string_imp) -> false)) : @strong_rank_condition.{0} (random_gen.{0} string_imp) (@classical.by_contradiction'.{1} (ring.{0} (random_gen.{0} string_imp)) h1)  := sorry --non-trivial
lemma new_lemma_52446 (h0 : functor.add_const (topological_space (has_Inf linarith.comp)) pos) : @t0_space.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_52447 (h0 : complete_lattice (linear_ordered_semiring (has_top congr_arg_kind))) : is_compactly_generated (linear_ordered_semiring (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_52448 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (has_emptyc.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (has_emptyc.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_52449 (h0 : functor.add_const (list (ordered_comm_monoid pos)) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52450 (h0 : functor.add_const (complete_lattice (add_cancel_monoid num)) empty) : @complete_lattice.is_Sup_finite_compact.{0} (add_cancel_monoid.{0} num) (@functor.add_const.run.{0 0} (complete_lattice.{0} (add_cancel_monoid.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_52451 (h0 : ordered_add_comm_monoid (ring (option (option unsigned)))) : archimedean (ring (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_52452 (h0 : ring (denumerable (random_gen to_additive.value_type))) : strong_rank_condition (denumerable (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_52453 (h0 : topological_space (has_top char)) : t0_space (has_top char) := sorry --non-trivial
lemma new_lemma_52454 (h0 : function.extfun Type topological_space) : @t0_space.{0} (sub_neg_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (sub_neg_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_52455 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (add_comm_monoid.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (add_comm_monoid.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_52456 (h0 : topological_space (semiring (has_top linarith.comp_source))) : totally_separated_space (semiring (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_52457 (h0 : functor.add_const (topological_space (complete_distrib_lattice empty)) empty) : @discrete_topology.{0} (complete_distrib_lattice.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_52458 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (has_union num)) := sorry --non-trivial
lemma new_lemma_52459 (h0 : fin has_zero.zero) : @separated_space.{0} (generalized_boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type uniform_space.{0}) h0) (generalized_boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_52460 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (ring.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52461 (h0 : topological_space (has_zero (has_add environment.implicit_infer_kind))) : t0_space (has_zero (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_52462 (h0 : functor.add_const (group (semigroup (semigroup linarith.comp))) Type) : @is_simple_group.{0} (semigroup.{0} (semigroup.{0} linarith.comp)) (@functor.add_const.run.{0 1} (group.{0} (semigroup.{0} (semigroup.{0} linarith.comp))) Type h0)  := sorry --non-trivial
lemma new_lemma_52463 (h0 : std_gen -> std_gen -> Prop) : is_per std_gen h0 := sorry --non-trivial
lemma new_lemma_52464 (h0 : ring (simple_graph (option empty))) : is_domain (simple_graph (option empty)) := sorry --non-trivial
lemma new_lemma_52465 (h0 : topological_space (comm_group (has_neg environment.implicit_infer_kind))) : irreducible_space (comm_group (has_neg environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_52466 (h0 : function.extfun Type (functor.add_const Prop)) : functor.add_const.run (function.extfun_app h0 (normed_comm_ring pos)) := sorry --non-trivial
lemma new_lemma_52467 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (has_add.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_add.{0} real))  := sorry --non-trivial
lemma new_lemma_52468 (h0 : semiring (linear_order (semiring num))) : is_noetherian_ring (linear_order (semiring num)) := sorry --non-trivial
lemma new_lemma_52469 (h0 : function.extfun Type ring) : @is_domain.{0} (linear_ordered_comm_group.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_ordered_comm_group.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_52470 (h0 : add_monoid (has_to_string (has_neg_part Type))) : add_monoid.fg (has_to_string (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_52471 (h0 : functor.add_const (topological_space (has_zero name)) Type) : @t0_space.{0} (has_zero.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (has_zero.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_52472 (h0 : function.extfun Type (functor.add_const Prop)) : functor.add_const.run (function.extfun_app h0 (has_add pos)) := sorry --non-trivial
lemma new_lemma_52473 (h0 : ring (has_bot congr_arg_kind)) : is_domain (has_bot congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52474 (h0 : topological_space (filter empty)) : path_connected_space (filter empty) := sorry --non-trivial
lemma new_lemma_52475 (h0 : group num) : is_cyclic num := sorry --non-trivial
lemma new_lemma_52476 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (complete_distrib_lattice.{0} real) (@function.extfun_app.{2 1} Type semiring.{0} h0 (complete_distrib_lattice.{0} real))  := sorry --non-trivial
lemma new_lemma_52477 (h0 : functor.add_const (monoid (normed_comm_ring pos)) environment.implicit_infer_kind) : @monoid.fg.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (monoid.{0} (normed_comm_ring.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_52478 (h0 : topological_space (boolean_algebra (has_Inf real))) : t0_space (boolean_algebra (has_Inf real)) := sorry --non-trivial
lemma new_lemma_52479 (h0 : functor.add_const (function.extfun Type ordered_comm_monoid) (ring environment.implicit_infer_kind)) : @has_exists_mul_of_le.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) (ring.{0} environment.implicit_infer_kind) h0) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52480 (h0 : topological_space (has_dist congr_arg_kind)) : t0_space (has_dist congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52481 (h2 : ring (normed_group char)) : strong_rank_condition (normed_group char) := sorry --non-trivial
lemma new_lemma_52482 (h0 : ordered_comm_monoid (canonically_ordered_comm_semiring (has_neg_part pos))) : has_exists_mul_of_le (canonically_ordered_comm_semiring (has_neg_part pos)) := sorry --non-trivial
lemma new_lemma_52483 (h0 : functor.comp topological_space normed_comm_ring name) : @path_connected_space.{0} (normed_comm_ring.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} normed_comm_ring.{0} name h0)  := sorry --non-trivial
lemma new_lemma_52484 (h0 : ring (complete_linear_order unsigned)) : rank_condition (complete_linear_order unsigned) := sorry --non-trivial
lemma new_lemma_52485 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_to_string linarith.comp)) (finset (finset linarith.comp))) : @unique_factorization_monoid.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (has_to_string.{0} linarith.comp)) (finset.{0} (finset.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_52486 (h0 : uniform_space (comm_group (mul_zero_class unsigned))) : separated_space (comm_group (mul_zero_class unsigned)) := sorry --non-trivial
lemma new_lemma_52487 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (has_star.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_star.{0} num))  := sorry --non-trivial
lemma new_lemma_52488 (h0 : topological_space (ring (normed_comm_ring environment.implicit_infer_kind))) : regular_space (ring (normed_comm_ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_52489 (h0 : functor.add_const (ring (has_nndist pos)) (boolean_algebra pos)) : @rank_condition.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (has_nndist.{0} pos)) (boolean_algebra.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_52490 (h0 : ring (finset (finset (has_add (has_add pos))))) : is_principal_ideal_ring (finset (finset (has_add (has_add pos)))) := sorry --non-trivial
lemma new_lemma_52491 (h0 : topological_space (has_zero (comm_group (has_neg_part (has_to_string pos))))) : normal_space (has_zero (comm_group (has_neg_part (has_to_string pos)))) := sorry --non-trivial
lemma new_lemma_52492 (h0 : semiring (add_cancel_monoid (comm_group (has_neg_part name)))) : is_noetherian_ring (add_cancel_monoid (comm_group (has_neg_part name))) := sorry --non-trivial
lemma new_lemma_52493 (h1 : ring (metric_space (random_gen reducibility_hints))) : rank_condition (metric_space (random_gen reducibility_hints)) := sorry --non-trivial
lemma new_lemma_52494 (h0 : topological_space (ring (normed_comm_ring unsigned))) : path_connected_space (ring (normed_comm_ring unsigned)) := sorry --non-trivial
lemma new_lemma_52495 (h0 : filter (linear_ordered_add_comm_group (random_gen (add_monoid (random_gen char))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_52496 (h0 : group (topological_space (metric_space (random_gen char)))) : is_cyclic (topological_space (metric_space (random_gen char))) := sorry --non-trivial
lemma new_lemma_52497 (h0 : functor.add_const (complete_lattice (ring environment.implicit_infer_kind)) Type) : @complete_lattice.is_Sup_finite_compact.{0} (ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (complete_lattice.{0} (ring.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_52498 (h0 : add_group (has_norm (has_top unsigned))) : is_add_cyclic (has_norm (has_top unsigned)) := sorry --non-trivial
lemma new_lemma_52499 (h0 : not (topological_space (with_bot linarith.comp) -> false)) : @totally_separated_space.{0} (with_bot.{0} linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (with_bot.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_52500 (h0 : topological_space (ordered_comm_ring (has_add (has_add linarith.comp)))) : t0_space (ordered_comm_ring (has_add (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_52501 (h0 : functor.add_const (group (boolean_algebra name)) linarith.comp) : @is_simple_group.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (group.{0} (boolean_algebra.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_52502 (h0 : functor.add_const (function.extfun (Type 1) group) (ring environment.implicit_infer_kind)) : @group.fg.{1} (finset.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) (ring.{0} environment.implicit_infer_kind) h0) (finset.{1} Type))  := sorry --non-trivial
lemma new_lemma_52503 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (generalized_boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (generalized_boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52504 (h0 : fin has_zero.zero) : @preirreducible_space.{0} (has_nndist.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_nndist.{0} real))  := sorry --non-trivial
lemma new_lemma_52505 (h0 : topological_space (has_zero (division_ring name))) : loc_path_connected_space (has_zero (division_ring name)) := sorry --non-trivial
lemma new_lemma_52506 (h1 : topological_space (mul_one_class (mul_one_class enat))) (h2 : set (mul_one_class (mul_one_class enat))) : is_path_connected h2 := sorry --non-trivial
lemma new_lemma_52507 (h0 : function.extfun (finset Type) (has_mem.mem (has_norm empty))) : @rank_condition.{0} (has_norm.{0} empty) (@finset.pi.empty.{1 0} Type ring.{0} (has_norm.{0} empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_norm.{0} empty)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_52508 (h0 : ring (preorder linarith.comp_source)) : strong_rank_condition (preorder linarith.comp_source) := sorry --non-trivial
lemma new_lemma_52509 (h0 : group (has_top (semiring unsigned))) : group.fg (has_top (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_52510 (h0 : topological_space (has_to_string congr_arg_kind)) : preconnected_space (has_to_string congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52511 (h0 : functor.add_const (group (semigroup Type)) (finset environment.implicit_infer_kind)) : @is_simple_group.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (semigroup.{1} Type)) (finset.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_52512 (h0 : group (boolean_algebra (has_Inf (finset linarith.comp)))) : is_cyclic (boolean_algebra (has_Inf (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_52513 (h0 : topological_space (plift (semiring unsigned))) : topological_space.separable_space (plift (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_52514 (h0 : topological_space (boolean_algebra.core (has_to_string (finset (has_neg_part Type))))) : totally_separated_space (boolean_algebra.core (has_to_string (finset (has_neg_part Type)))) := sorry --non-trivial
lemma new_lemma_52515 (h0 : complete_lattice (boolean_algebra.core unsigned)) : complete_lattice.is_Sup_finite_compact (boolean_algebra.core unsigned) := sorry --non-trivial
lemma new_lemma_52516 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (comm_group.{0} name) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (comm_group.{0} name))  := sorry --non-trivial
lemma new_lemma_52517 (h0 : is_R_or_C (linear_ordered_comm_group empty)) (h1 : inner_product_space (linear_ordered_comm_group empty) Mon) : @orthonormal.{0 1 0} (linear_ordered_comm_group.{0} empty) Mon.{0} h0 h1 (monoid.{0} empty) (@Mon.of.{0} empty)  := sorry --non-trivial
lemma new_lemma_52518 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (pseudo_emetric_space.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (pseudo_emetric_space.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52519 (h0 : topological_space (normed_comm_ring environment.implicit_infer_kind)) : totally_disconnected_space (normed_comm_ring environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_52520 (h0 : pnat) (h1 : fin has_zero.zero) : pnat.coprime h0 (matrix.vec_empty (ulower.up (matrix.vec_empty (id h1)))) := sorry --non-trivial
lemma new_lemma_52521 (h5 : semiring (add_comm_semigroup enat)) (h6 : ideal (add_comm_semigroup enat)) : ideal.is_prime h6 := sorry --non-trivial
lemma new_lemma_52522 (h0 : topological_space (has_add (has_nndist environment.implicit_infer_kind))) : preirreducible_space (has_add (has_nndist environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_52523 (h0 : complete_lattice (boolean_algebra (finset pos))) : complete_lattice.is_Sup_finite_compact (boolean_algebra (finset pos)) := sorry --non-trivial
lemma new_lemma_52524 (h0 : list (has_neg (has_pos_part pos))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_52525 (h0 : ring (uniform_space (has_lt (semi_normed_ring linarith.comp_source)))) : rank_condition (uniform_space (has_lt (semi_normed_ring linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_52526 (h0 : function.extfun Type group) : @is_simple_group.{0} (generalized_boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type group.{0} h0 (generalized_boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_52527 (h0 : ring (with_zero (random_gen string_imp))) : is_domain (with_zero (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_52528 (h0 : list (has_top (random_gen (random_gen (has_nnnorm linarith.comp_source))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_52529 (h0 : ring (distrib fun_info)) : rank_condition (distrib fun_info) := sorry --non-trivial
lemma new_lemma_52530 (h0 : not (function.extfun Type uniform_space -> false)) : @separated_space.{0} (with_bot.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (with_bot.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52531 (h0 : function.extfun Type topological_space) : @t1_space.{0} (monoid.{0} (option.{0} pos)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid.{0} (option.{0} pos)))  := sorry --non-trivial
lemma new_lemma_52532 (h0 : has_neg (has_ssubset environment.projection_info)) (h1 : measurable_space (has_ssubset environment.projection_info)) : has_measurable_neg (has_ssubset environment.projection_info) := sorry --non-trivial
lemma new_lemma_52533 (h0 : topological_space (distrib_lattice char)) : totally_disconnected_space (distrib_lattice char) := sorry --non-trivial
lemma new_lemma_52534 (h0 : ring (has_add (has_Inf linarith.comp))) : rank_condition (has_add (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_52535 (h0 : group (has_norm (has_nnnorm char))) : is_cyclic (has_norm (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_52536 (h1 : topological_space (dlist (has_nnnorm (has_nnnorm char)))) : totally_disconnected_space (dlist (has_nnnorm (has_nnnorm char))) := sorry --non-trivial
lemma new_lemma_52537 (h0 : not (function.extfun Type topological_space -> false)) : @locally_compact_space.{0} (has_top.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_top.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_52538 (h0 : complete_lattice (canonically_linear_ordered_monoid ennreal)) : complete_lattice.is_Sup_finite_compact (canonically_linear_ordered_monoid ennreal) := sorry --non-trivial
lemma new_lemma_52539 (h0 : fin has_zero.zero) : @normalizer_condition.{0} (ordered_comm_monoid.{0} pos) (@matrix.vec_empty.{0} (group.{0} (ordered_comm_monoid.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_52540 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (has_inv.{0} string_imp) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_inv.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_52541 (h0 : set (set ereal)) (h1 : set ereal) : filter.generate_sets h0 h1 := sorry --non-trivial
lemma new_lemma_52542 (h0 : ring (has_inv (random_gen (random_gen linarith.ineq)))) : is_domain (has_inv (random_gen (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_52543 (h0 : complete_lattice (normed_lattice_add_comm_group (has_neg name))) : is_compactly_generated (normed_lattice_add_comm_group (has_neg name)) := sorry --non-trivial
lemma new_lemma_52544 (h0 : functor.add_const (ordered_add_comm_monoid (comm_group pos)) environment.implicit_infer_kind) : @archimedean.{0} (comm_group.{0} pos) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (comm_group.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_52545 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : filter.ne_bot (function.extfun_app (function.extfun_app h0 filter) (option unsigned)) := sorry --non-trivial
lemma new_lemma_52546 (h0 : function.extfun Type group) : @is_cyclic.{0} (cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_52547 (h1 : group (random_gen (random_gen string_imp))) : group.fg (random_gen (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_52548 (h1 : ring (normed_group (random_gen string_imp))) : strong_rank_condition (normed_group (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_52549 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (comm_semigroup.{0} real) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (comm_semigroup.{0} real))  := sorry --non-trivial
lemma new_lemma_52550 (h0 : complete_lattice (mul_zero_class (has_top empty))) : is_compactly_generated (mul_zero_class (has_top empty)) := sorry --non-trivial
lemma new_lemma_52551 (h2 : complete_lattice (uniform_space to_additive.value_type)) : complete_lattice.is_Sup_finite_compact (uniform_space to_additive.value_type) := sorry --non-trivial
lemma new_lemma_52552 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_simple_group.{0} (has_zero.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_52553 (h0 : functor.add_const (topological_space (simple_graph linarith.comp)) name) : @normal_space.{0} (simple_graph.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (simple_graph.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_52554 (h0 : functor.add_const (topological_space (normed_comm_ring Type)) (boolean_algebra (has_add pos))) : @regular_space.{1} (normed_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (normed_comm_ring.{1} Type)) (boolean_algebra.{0} (has_add.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_52555 (h0 : topological_space (boolean_algebra (has_Inf (finset (has_pos_part (has_pos_part (has_Inf pos))))))) : irreducible_space (boolean_algebra (has_Inf (finset (has_pos_part (has_pos_part (has_Inf pos)))))) := sorry --non-trivial
lemma new_lemma_52556 (h0 : ring (cancel_monoid (has_add (has_nndist environment.implicit_infer_kind)))) : strong_rank_condition (cancel_monoid (has_add (has_nndist environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_52557 (h0 : topological_space (has_bot (has_neg Type))) : t1_space (has_bot (has_neg Type)) := sorry --non-trivial
lemma new_lemma_52558 (h0 : topological_space (has_pos_part (has_neg (has_add (has_add Type))))) : locally_compact_space (has_pos_part (has_neg (has_add (has_add Type)))) := sorry --non-trivial
lemma new_lemma_52559 (h0 : uniform_space (plift (semiring (semiring (semiring unsigned))))) : complete_space (plift (semiring (semiring (semiring unsigned)))) := sorry --non-trivial
lemma new_lemma_52560 (h0 : function.extfun Type ring) : @is_domain.{0} (random_gen.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} h0 (random_gen.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_52561 (h0 : topological_space (complete_semilattice_Sup unsigned)) : path_connected_space (complete_semilattice_Sup unsigned) := sorry --non-trivial
lemma new_lemma_52562 (h0 : fin has_zero.zero) : @t0_space.{0} (ordered_comm_monoid.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (ordered_comm_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_52563 (h0 : topological_space (omega_complete_partial_order unsigned)) : irreducible_space (omega_complete_partial_order unsigned) := sorry --non-trivial
lemma new_lemma_52564 (h0 : cancel_comm_monoid_with_zero (is_R_or_C (semiring (semiring (semiring (semiring empty)))))) : unique_factorization_monoid (is_R_or_C (semiring (semiring (semiring (semiring empty))))) := sorry --non-trivial
lemma new_lemma_52565 (h0 : topological_space (add_cancel_comm_monoid reducibility_hints)) : path_connected_space (add_cancel_comm_monoid reducibility_hints) := sorry --non-trivial
lemma new_lemma_52566 (h0 : functor.add_const (topological_space (semigroup environment.implicit_infer_kind)) pos) : @totally_disconnected_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_52567 (h0 : group (boolean_algebra.core (finset (finset pos)))) : normalizer_condition (boolean_algebra.core (finset (finset pos))) := sorry --non-trivial
lemma new_lemma_52568 (h0 : option empty -> option empty -> Prop) : is_equiv (option empty) h0 := sorry --non-trivial
lemma new_lemma_52569 (h0 : functor.add_const (finset (finset Type)) (finset (has_add (has_add pos)))) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52570 (h0 : complete_lattice (has_neg_part ennreal)) : is_atomistic (has_neg_part ennreal) := sorry --non-trivial
lemma new_lemma_52571 (h0 : functor.add_const (complete_lattice (complete_distrib_lattice pos)) pos) : @complete_lattice.is_Sup_finite_compact.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (complete_distrib_lattice.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_52572 (h0 : topological_space (has_to_string (has_to_string unsigned))) : loc_path_connected_space (has_to_string (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_52573 (h0 : add_group (semigroup (comm_group (has_neg_part pos)))) : is_add_cyclic (semigroup (comm_group (has_neg_part pos))) := sorry --non-trivial
lemma new_lemma_52574 (h0 : uniform_space (ordered_comm_ring (ring Type))) : complete_space (ordered_comm_ring (ring Type)) := sorry --non-trivial
lemma new_lemma_52575 (h0 : topological_space string.iterator) : path_connected_space string.iterator := sorry --non-trivial
lemma new_lemma_52576 (h0 : functor.add_const (topological_space (ordered_cancel_add_comm_monoid empty)) ennreal) : @path_connected_space.{0} (ordered_cancel_add_comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_cancel_add_comm_monoid.{0} empty)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_52577 (h0 : list (add_cancel_monoid (has_nndist pos))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_52578 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (ordered_comm_monoid name)) := sorry --non-trivial
lemma new_lemma_52579 (h0 : topological_space (has_neg (semigroup name))) : preconnected_space (has_neg (semigroup name)) := sorry --non-trivial
lemma new_lemma_52580 (h0 : ring (has_top (has_norm (has_norm empty)))) : rank_condition (has_top (has_norm (has_norm empty))) := sorry --non-trivial
lemma new_lemma_52581 (h0 : list (has_Inf (finset pos))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_52582 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @totally_disconnected_space.{1} (plift.{1} empty) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (plift.{1} empty))  := sorry --non-trivial
lemma new_lemma_52583 (h0 : functor.add_const (list (finset Type)) (finset environment.implicit_infer_kind)) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52584 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (pseudo_metric_space empty)) := sorry --non-trivial
lemma new_lemma_52585 (h0 : set (set linarith.comp_source)) (h1 : set linarith.comp_source) : filter.generate_sets h0 h1 := sorry --non-trivial
lemma new_lemma_52586 (h0 : function.extfun nat fin) : @irreducible_space.{1} (canonically_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (canonically_ordered_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_52587 (h0 : has_mem.mem (has_emptyc num) has_emptyc.emptyc) : @monoid.fg.{0} (has_emptyc.{0} num) (@finset.pi.empty.{1 0} Type monoid.{0} (has_emptyc.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_52588 (h3 : ring (simple_graph string.iterator_imp)) : is_domain (simple_graph string.iterator_imp) := sorry --non-trivial
lemma new_lemma_52589 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (ordered_cancel_add_comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (ordered_cancel_add_comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52590 (h0 : topological_space linarith.comp) : topological_space.separable_space linarith.comp := sorry --non-trivial
lemma new_lemma_52591 (h0 : topological_space (canonically_linear_ordered_monoid name)) : irreducible_space (canonically_linear_ordered_monoid name) := sorry --non-trivial
lemma new_lemma_52592 (h0 : semiring (generalized_boolean_algebra (has_Inf real))) : is_noetherian_ring (generalized_boolean_algebra (has_Inf real)) := sorry --non-trivial
lemma new_lemma_52593 (h0 : functor.add_const (function.extfun (Type 1) topological_space) name) : @totally_disconnected_space.{1} (ordered_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) name h0) (ordered_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_52594 (h0 : complete_lattice (has_top (has_top (random_gen linarith.comp_source)))) : complete_lattice.is_Sup_finite_compact (has_top (has_top (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_52595 (h0 : not (function.extfun Type ring -> false)) : @strong_rank_condition.{0} (add_group.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (add_group.{0} num))  := sorry --non-trivial
lemma new_lemma_52596 (h0 : ring (has_add (option unsigned))) : rank_condition (has_add (option unsigned)) := sorry --non-trivial
lemma new_lemma_52597 (h0 : cancel_comm_monoid_with_zero (has_zero (has_neg_part pos))) : unique_factorization_monoid (has_zero (has_neg_part pos)) := sorry --non-trivial
lemma new_lemma_52598 (h0 : functor.add_const (add_group (normed_comm_ring pos)) environment.implicit_infer_kind) : @is_add_cyclic.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (add_group.{0} (normed_comm_ring.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_52599 (h2 : ring (has_nnnorm to_additive.value_type)) : is_domain (has_nnnorm to_additive.value_type) := sorry --non-trivial
lemma new_lemma_52600 (h0 : not (ring (complete_linear_order empty) -> false)) : @rank_condition.{0} (complete_linear_order.{0} empty) (@classical.by_contradiction'.{1} (ring.{0} (complete_linear_order.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_52601 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} nnreal (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) nnreal)  := sorry --non-trivial
lemma new_lemma_52602 (h0 : add_monoid (has_to_string unsigned)) : add_monoid.fg (has_to_string unsigned) := sorry --non-trivial
lemma new_lemma_52603 (h0 : topological_space (has_norm (random_gen linarith.ineq))) : totally_disconnected_space (has_norm (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_52604 (h0 : function.extfun nat fin) : @monoid.fg.{0} (boolean_algebra.{0} pos) (@matrix.vec_empty.{0} (monoid.{0} (boolean_algebra.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_52605 (h0 : topological_space (has_pos_part (finset name))) : preirreducible_space (has_pos_part (finset name)) := sorry --non-trivial
lemma new_lemma_52606 (h0 : function.extfun Type topological_space) : @normal_space.{0} (has_neg.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_neg.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_52607 (h0 : complete_lattice (has_dist congr_arg_kind)) : is_atomistic (has_dist congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52608 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (has_norm.{0} char) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_norm.{0} char))  := sorry --non-trivial
lemma new_lemma_52609 (h0 : topological_space (ordered_comm_ring (ordered_comm_monoid real))) : regular_space (ordered_comm_ring (ordered_comm_monoid real)) := sorry --non-trivial
lemma new_lemma_52610 (h0 : functor.add_const (complete_lattice (pseudo_metric_space congr_arg_kind)) unsigned) : @complete_lattice.is_Sup_finite_compact.{0} (pseudo_metric_space.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (pseudo_metric_space.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_52611 (h0 : complete_lattice num) : is_atomistic num := sorry --non-trivial
lemma new_lemma_52612 (h0 : not (topological_space (measurable_space linarith.comp) -> false)) : @preirreducible_space.{0} (measurable_space.{0} linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (measurable_space.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_52613 (h0 : uniform_space char) : complete_space char := sorry --non-trivial
lemma new_lemma_52614 (h0 : topological_space (plift empty)) : irreducible_space (plift empty) := sorry --non-trivial
lemma new_lemma_52615 (h0 : functor.add_const (functor.add_const (ring Type) pos) pos) : @is_principal_ideal_ring.{1} Type (@functor.add_const.run.{1 0} (ring.{1} Type) pos (@functor.add_const.run.{1 0} (functor.add_const.{1 0} (ring.{1} Type) pos) pos h0))  := sorry --non-trivial
lemma new_lemma_52616 (h0 : topological_space (add_cancel_monoid (finset (has_add (has_add name))))) : totally_disconnected_space (add_cancel_monoid (finset (has_add (has_add name)))) := sorry --non-trivial
lemma new_lemma_52617 (h0 : monoid linarith.ineq) : monoid.fg linarith.ineq := sorry --non-trivial
lemma new_lemma_52618 (h0 : ordered_comm_monoid (finset (finset Type))) : has_exists_mul_of_le (finset (finset Type)) := sorry --non-trivial
lemma new_lemma_52619 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52620 (h2 : has_lt (add_comm_semigroup linarith.ineq)) : no_max_order (add_comm_semigroup linarith.ineq) := sorry --non-trivial
lemma new_lemma_52621 (h0 : functor.add_const (complete_lattice (normed_comm_ring name)) environment.implicit_infer_kind) : @is_atomistic.{0} (normed_comm_ring.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (normed_comm_ring.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_52622 (h0 : ring (has_to_string (has_Inf (has_neg (has_neg linarith.comp))))) : strong_rank_condition (has_to_string (has_Inf (has_neg (has_neg linarith.comp)))) := sorry --non-trivial
lemma new_lemma_52623 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (has_add.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_add.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52624 (h0 : not (topological_space (mul_zero_class congr_arg_kind) -> false)) : @irreducible_space.{0} (mul_zero_class.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (mul_zero_class.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_52625 (h0 : topological_space (has_sdiff (ring pos))) : locally_compact_space (has_sdiff (ring pos)) := sorry --non-trivial
lemma new_lemma_52626 (h0 : not (topological_space (has_top congr_arg_kind) -> false)) : @locally_compact_space.{0} (has_top.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (has_top.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_52627 (h0 : finset (has_star (option unsigned))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_52628 (h0 : add_group (uniform_space string_imp)) : is_add_cyclic (uniform_space string_imp) := sorry --non-trivial
lemma new_lemma_52629 (h0 : topological_space (semiring (random_gen (random_gen (random_gen (random_gen linarith.comp_source)))))) : t0_space (semiring (random_gen (random_gen (random_gen (random_gen linarith.comp_source))))) := sorry --non-trivial
lemma new_lemma_52630 (h0 : ordered_comm_monoid (boolean_algebra.core (has_to_string (comm_group Type)))) : has_exists_mul_of_le (boolean_algebra.core (has_to_string (comm_group Type))) := sorry --non-trivial
lemma new_lemma_52631 (h0 : topological_space (ordered_comm_ring (has_Inf (has_neg pos)))) : sequential_space (ordered_comm_ring (has_Inf (has_neg pos))) := sorry --non-trivial
lemma new_lemma_52632 (h0 : cancel_comm_monoid_with_zero (has_add (has_to_string unsigned))) : unique_factorization_monoid (has_add (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_52633 (h0 : has_neg (complete_linear_order unsigned)) (h1 : measurable_space (complete_linear_order unsigned)) : has_measurable_neg (complete_linear_order unsigned) := sorry --non-trivial
lemma new_lemma_52634 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_inter.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_inter.{0} empty))  := sorry --non-trivial
lemma new_lemma_52635 (h1 : topological_space (nondiscrete_normed_field (mul_one_class char))) : t0_space (nondiscrete_normed_field (mul_one_class char)) := sorry --non-trivial
lemma new_lemma_52636 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (as_linear_order.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (as_linear_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52637 (h1 : add_group (add_left_cancel_monoid (has_ssubset (fintype char)))) : is_add_cyclic (add_left_cancel_monoid (has_ssubset (fintype char))) := sorry --non-trivial
lemma new_lemma_52638 (h0 : not (filter (encodable fun_info) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_52639 (h0 : list (add_cancel_comm_monoid unsigned)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_52640 (h0 : add_group (has_top (has_inv (has_inv linarith.comp_source)))) : is_add_cyclic (has_top (has_inv (has_inv linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_52641 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (generalized_boolean_algebra.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (generalized_boolean_algebra.{0} name))  := sorry --non-trivial
lemma new_lemma_52642 (h0 : monoid (linear_ordered_field pos)) : monoid.fg (linear_ordered_field pos) := sorry --non-trivial
lemma new_lemma_52643 (h0 : functor.add_const (function.extfun (Type 1) topological_space) (has_add name)) : @locally_compact_space.{1} (add_cancel_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) (has_add.{0} name) h0) (add_cancel_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_52644 (h0 : topological_space (linear_ordered_semiring (random_gen (has_top fun_info)))) : totally_separated_space (linear_ordered_semiring (random_gen (has_top fun_info))) := sorry --non-trivial
lemma new_lemma_52645 (h0 : functor.add_const (topological_space (has_Inf Type)) Type) : @t1_space.{1} (has_Inf.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (has_Inf.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_52646 (h0 : functor.add_const Prop (has_to_string (has_to_string (has_to_string Type)))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_52647 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (has_neg_part name)) := sorry --non-trivial
lemma new_lemma_52648 (h2 : topological_space to_additive.value_type) : t0_space to_additive.value_type := sorry --non-trivial
lemma new_lemma_52649 (h1 : uniform_space (id (with_bot (with_bot to_additive.value_type)))) : complete_space (id (with_bot (with_bot to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_52650 (h0 : function.extfun (Type 1) ordered_comm_monoid) : @has_exists_mul_of_le.{1} (finset.{1} Type) (@function.extfun_app.{3 2} (Type 1) ordered_comm_monoid.{1} h0 (finset.{1} Type))  := sorry --non-trivial
lemma new_lemma_52651 (h0 : group (boolean_algebra (ring (finset Type)))) : is_simple_group (boolean_algebra (ring (finset Type))) := sorry --non-trivial
lemma new_lemma_52652 (h0 : group (has_neg (ring (finset pos)))) : group.fg (has_neg (ring (finset pos))) := sorry --non-trivial
lemma new_lemma_52653 (h0 : not (add_monoid (has_one linarith.comp) -> false)) : @add_monoid.fg.{0} (has_one.{0} linarith.comp) (@classical.by_contradiction'.{1} (add_monoid.{0} (has_one.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_52654 (h0 : functor.add_const (group (canonically_ordered_comm_semiring linarith.comp)) linarith.comp) : @group.fg.{0} (canonically_ordered_comm_semiring.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (canonically_ordered_comm_semiring.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_52655 (h0 : topological_space (semigroup (has_to_string unsigned))) : loc_path_connected_space (semigroup (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_52656 (h0 : monoid (ordered_comm_ring (has_Inf Type))) : monoid.fg (ordered_comm_ring (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_52657 (h0 : not (has_mem.mem (has_top num) has_emptyc.emptyc -> false)) : @t0_space.{0} (has_top.{0} num) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_top.{0} num) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_top.{0} num) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_52658 (h0 : topological_space (with_bot (has_top (has_top (has_top (has_top fun_info)))))) : irreducible_space (with_bot (has_top (has_top (has_top (has_top fun_info))))) := sorry --non-trivial
lemma new_lemma_52659 (h0 : uniform_space (add_comm_monoid (has_add environment.implicit_infer_kind))) : complete_space (add_comm_monoid (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_52660 (h1 : not (function.extfun Type group -> false)) : @is_cyclic.{0} empty (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h1) empty)  := sorry --non-trivial
lemma new_lemma_52661 (h0 : topological_space (has_norm (has_ssubset to_additive.value_type))) : totally_disconnected_space (has_norm (has_ssubset to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_52662 (h4 : monoid (with_one num)) : monoid.fg (with_one num) := sorry --non-trivial
lemma new_lemma_52663 (h0 : monoid_with_zero (option num) -> monoid_with_zero (option num) -> Prop) : is_symm (monoid_with_zero (option num)) h0 := sorry --non-trivial
lemma new_lemma_52664 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (normed_group.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_group.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_52665 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @has_exists_mul_of_le.{0} (has_pos_part.{0} real) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_comm_monoid.{0}) (has_pos_part.{0} real))  := sorry --non-trivial
lemma new_lemma_52666 (h0 : functor.add_const (add_group (complete_distrib_lattice linarith.comp)) (has_Inf (has_add pos))) : @is_add_cyclic.{0} (complete_distrib_lattice.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_group.{0} (complete_distrib_lattice.{0} linarith.comp)) (has_Inf.{0} (has_add.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_52667 (h0 : complete_lattice (measure_theory.measure_space congr_arg_kind)) : complete_lattice.is_Sup_finite_compact (measure_theory.measure_space congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52668 (h0 : functor.add_const (cancel_comm_monoid_with_zero (canonically_ordered_comm_semiring Type)) pos) : @unique_factorization_monoid.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (cancel_comm_monoid_with_zero.{1} (canonically_ordered_comm_semiring.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_52669 (h0 : ring (has_one (has_top (has_norm (has_norm unsigned))))) : strong_rank_condition (has_one (has_top (has_norm (has_norm unsigned)))) := sorry --non-trivial
lemma new_lemma_52670 (h0 : not (function.extfun Type topological_space -> false)) : @totally_separated_space.{0} (normed_group.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (normed_group.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_52671 (h0 : topological_space (has_bot (has_Inf (has_add pos)))) : path_connected_space (has_bot (has_Inf (has_add pos))) := sorry --non-trivial
lemma new_lemma_52672 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (sub_neg_monoid.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (sub_neg_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_52673 (h0 : functor.add_const (finset (boolean_algebra.core Type)) (has_add Type)) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52674 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (with_one.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (with_one.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52675 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (has_one.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_one.{0} empty))  := sorry --non-trivial
lemma new_lemma_52676 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (simple_graph.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (simple_graph.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52677 (h0 : monoid (finset (has_to_string ennreal))) : monoid.fg (finset (has_to_string ennreal)) := sorry --non-trivial
lemma new_lemma_52678 (h0 : functor.add_const (topological_space (ordered_ring empty)) num) : @irreducible_space.{0} (ordered_ring.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_ring.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_52679 (h0 : function.extfun Type group) : @is_cyclic.{0} (random_gen.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} h0 (random_gen.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52680 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (sub_neg_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (sub_neg_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52681 (h1 : not (complete_lattice (with_one num) -> false)) : @is_atomistic.{0} (with_one.{0} num) (@classical.by_contradiction'.{1} (complete_lattice.{0} (with_one.{0} num)) h1)  := sorry --non-trivial
lemma new_lemma_52682 (h1 : group (random_gen (random_gen to_additive.value_type))) : is_cyclic (random_gen (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_52683 (h0 : functor.add_const (topological_space (complete_distrib_lattice empty)) empty) : @preirreducible_space.{0} (complete_distrib_lattice.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_52684 (h0 : function.extfun (Type 1) uniform_space) : @separated_space.{1} (plift.{1} empty) (@function.extfun_app.{3 2} (Type 1) uniform_space.{1} h0 (plift.{1} empty))  := sorry --non-trivial
lemma new_lemma_52685 (h0 : function.extfun Type group) : @group.fg.{0} fun_info (@function.extfun_app.{2 1} Type group.{0} h0 fun_info)  := sorry --non-trivial
lemma new_lemma_52686 (h0 : filter (has_nndist name)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_52687 (h0 : topological_space (has_bot (has_Inf pos))) : preconnected_space (has_bot (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_52688 (h0 : semiring (add_right_cancel_monoid (semiring (semiring num)))) : is_noetherian_ring (add_right_cancel_monoid (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_52689 (h1 : ring environment.implicit_infer_kind) : strong_rank_condition environment.implicit_infer_kind := sorry --non-trivial
lemma new_lemma_52690 (h0 : complete_lattice (has_nndist (option empty))) : is_compactly_generated (has_nndist (option empty)) := sorry --non-trivial
lemma new_lemma_52691 (h0 : functor.add_const (group (finset environment.implicit_infer_kind)) Type) : @group.fg.{0} (finset.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (group.{0} (finset.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_52692 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} empty (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 empty)  := sorry --non-trivial
lemma new_lemma_52693 (h1 : topological_space (normed_group (has_ssubset fun_info))) : t0_space (normed_group (has_ssubset fun_info)) := sorry --non-trivial
lemma new_lemma_52694 (h0 : list (boolean_algebra.core (comm_group name))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_52695 (h0 : group (metric_space (metric_space (metric_space to_additive.value_type)))) : is_cyclic (metric_space (metric_space (metric_space to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_52696 (h0 : not (topological_space (add_monoid linarith.ineq) -> false)) : @path_connected_space.{0} (add_monoid.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (add_monoid.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_52697 (h0 : fin has_zero.zero) : matrix.vec_empty (id (id (id (id (id (id (id (id h0)))))))) := sorry --non-trivial
lemma new_lemma_52698 (h0 : not (group (denumerable (comm_ring (topological_space (has_nnnorm linarith.comp_source)))) -> false)) : @is_cyclic.{0} (denumerable.{0} (comm_ring.{0} (topological_space.{0} (has_nnnorm.{0} linarith.comp_source)))) (@classical.by_contradiction'.{1} (group.{0} (denumerable.{0} (comm_ring.{0} (topological_space.{0} (has_nnnorm.{0} linarith.comp_source))))) h0)  := sorry --non-trivial
lemma new_lemma_52699 (h0 : semiring (metric_space (semiring (semiring (semiring num))))) : is_noetherian_ring (metric_space (semiring (semiring (semiring num)))) := sorry --non-trivial
lemma new_lemma_52700 (h0 : functor.add_const (topological_space (semigroup linarith.comp)) pos) : @totally_separated_space.{0} (semigroup.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_52701 (h0 : group (dlist (linear_ordered_add_comm_group linarith.ineq))) : is_cyclic (dlist (linear_ordered_add_comm_group linarith.ineq)) := sorry --non-trivial
lemma new_lemma_52702 (h0 : topological_space (linear_ordered_field (option ennreal))) : locally_compact_space (linear_ordered_field (option ennreal)) := sorry --non-trivial
lemma new_lemma_52703 (h0 : functor.comp topological_space comm_group unsigned) : @normal_space.{0} (comm_group.{0} unsigned) (@functor.comp.run.{0 0 0} topological_space.{0} comm_group.{0} unsigned h0)  := sorry --non-trivial
lemma new_lemma_52704 (h0 : ring znum) : strong_rank_condition znum := sorry --non-trivial
lemma new_lemma_52705 (h0 : topological_space (has_pos_part (has_add pos))) : loc_path_connected_space (has_pos_part (has_add pos)) := sorry --non-trivial
lemma new_lemma_52706 (h0 : functor.add_const (function.extfun Type uniform_space) unsigned) : @complete_space.{0} (finset.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) unsigned h0) (finset.{0} empty))  := sorry --non-trivial
lemma new_lemma_52707 (h0 : functor.add_const (list (has_add environment.implicit_infer_kind)) linarith.comp) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52708 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (option.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (option.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52709 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (simple_graph.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (simple_graph.{0} empty))  := sorry --non-trivial
lemma new_lemma_52710 (h0 : topological_space (div_inv_monoid (has_ssubset (random_gen string_imp)))) : t0_space (div_inv_monoid (has_ssubset (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_52711 (h0 : functor.add_const (ring (semigroup unsigned)) linarith.comp) : @is_domain.{0} (semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (semigroup.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_52712 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @complete_space.{0} (complete_distrib_lattice.{0} linarith.comp) (@matrix.vec_empty.{0} (uniform_space.{0} (complete_distrib_lattice.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_52713 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (ordered_comm_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_52714 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (has_add.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_add.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52715 (h0 : topological_space (id empty)) : path_connected_space (id empty) := sorry --non-trivial
lemma new_lemma_52716 (h0 : functor.add_const (topological_space (complete_distrib_lattice linarith.comp)) name) : @preconnected_space.{0} (complete_distrib_lattice.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_52717 (h0 : not (function.extfun Type ring -> false)) : @strong_rank_condition.{0} (linear_ordered_semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (linear_ordered_semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52718 (h0 : not (topological_space (random_gen linarith.comp_source) -> false)) : @irreducible_space.{0} (random_gen.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_52719 (h0 : topological_space (simple_graph (has_Inf Type))) : loc_path_connected_space (simple_graph (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_52720 (h0 : functor.add_const (group (preorder congr_arg_kind)) unsigned) : @group.fg.{0} (preorder.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (group.{0} (preorder.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_52721 (h0 : cancel_comm_monoid_with_zero (boolean_algebra.core (has_to_string (has_neg_part name)))) : unique_factorization_monoid (boolean_algebra.core (has_to_string (has_neg_part name))) := sorry --non-trivial
lemma new_lemma_52722 (h0 : ring (add_right_cancel_monoid (semiring unsigned))) : is_domain (add_right_cancel_monoid (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_52723 (h0 : filter (has_one (semiring num))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_52724 (h0 : functor.add_const (ring (has_zero unsigned)) linarith.comp) : @rank_condition.{0} (has_zero.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (has_zero.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_52725 (h0 : topological_space (has_union congr_arg_kind)) : preirreducible_space (has_union congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52726 (h0 : topological_space (has_emptyc (has_top (has_top linarith.comp_source)))) : t0_space (has_emptyc (has_top (has_top linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_52727 (h0 : functor.add_const (topological_space (has_nndist name)) unsigned) : @totally_separated_space.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_52728 (h1 : topological_space (with_zero linarith.comp_source)) : path_connected_space (with_zero linarith.comp_source) := sorry --non-trivial
lemma new_lemma_52729 (h0 : functor.add_const (complete_lattice (has_neg_part pos)) environment.implicit_infer_kind) : @is_atomistic.{0} (has_neg_part.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_neg_part.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_52730 (h0 : ring (add_comm_monoid (option pos))) : is_domain (add_comm_monoid (option pos)) := sorry --non-trivial
lemma new_lemma_52731 (h0 : add_monoid (add_cancel_monoid (ring (semigroup Type)))) : add_monoid.fg (add_cancel_monoid (ring (semigroup Type))) := sorry --non-trivial
lemma new_lemma_52732 (h0 : normed_linear_ordered_group (has_bot empty) -> nat) (h1 : nat) (h2 : add_monoid (derive_fintype.finset_above (normed_linear_ordered_group (has_bot empty)) h0 h1)) : add_monoid.fg (derive_fintype.finset_above (normed_linear_ordered_group (has_bot empty)) h0 h1) := sorry --non-trivial
lemma new_lemma_52733 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @t0_space.{1} (canonically_ordered_comm_semiring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (canonically_ordered_comm_semiring.{1} Type))  := sorry --non-trivial
lemma new_lemma_52734 (h0 : topological_space (normed_group (has_inv linarith.ineq))) : totally_disconnected_space (normed_group (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_52735 (h0 : functor.add_const Prop (has_add ennreal)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_52736 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (has_inv.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_inv.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_52737 (h1 : has_mem.mem (has_norm num) has_emptyc.emptyc) : @separated_space.{0} (has_norm.{0} num) (@finset.pi.empty.{1 0} Type uniform_space.{0} (has_norm.{0} num) h1)  := sorry --non-trivial
lemma new_lemma_52738 (h0 : topological_space (with_bot (semiring unsigned))) : topological_space.separable_space (with_bot (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_52739 (h3 : prod char char) : set.diagonal char h3 := sorry --non-trivial
lemma new_lemma_52740 (h0 : not (ring (measurable_space.dynkin_system num) -> false)) : @rank_condition.{0} (measurable_space.dynkin_system.{0} num) (@classical.by_contradiction'.{1} (ring.{0} (measurable_space.dynkin_system.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_52741 (h0 : ring (mul_zero_class empty)) : strong_rank_condition (mul_zero_class empty) := sorry --non-trivial
lemma new_lemma_52742 (h0 : topological_space (dlist (has_inv linarith.ineq))) : t0_space (dlist (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_52743 (h0 : function.extfun Type (functor.add_const (list pos))) : palindrome (functor.add_const.run (function.extfun_app h0 pos)) := sorry --non-trivial
lemma new_lemma_52744 (h0 : complete_lattice (has_div (has_nnnorm (has_nnnorm reducibility_hints)))) : complete_lattice.is_Sup_finite_compact (has_div (has_nnnorm (has_nnnorm reducibility_hints))) := sorry --non-trivial
lemma new_lemma_52745 (h0 : function.extfun nat fin) : @discrete_topology.{0} (simple_graph.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (simple_graph.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_52746 (h0 : functor.add_const (monoid (has_nndist name)) name) : @monoid.fg.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 0} (monoid.{0} (has_nndist.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_52747 (h0 : group (normed_group (random_gen (has_norm (has_inv fun_info))))) : is_cyclic (normed_group (random_gen (has_norm (has_inv fun_info)))) := sorry --non-trivial
lemma new_lemma_52748 (h0 : functor.add_const (topological_space (semiring num)) num) : @path_connected_space.{0} (semiring.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (semiring.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_52749 (h1 : not (complete_lattice (semi_normed_ring reducibility_hints) -> false)) : @is_compactly_generated.{0} (semi_normed_ring.{0} reducibility_hints) (@classical.by_contradiction'.{1} (complete_lattice.{0} (semi_normed_ring.{0} reducibility_hints)) h1)  := sorry --non-trivial
lemma new_lemma_52750 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (random_gen.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (random_gen.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_52751 (h0 : semiring (has_norm unsigned) -> semiring (has_norm unsigned) -> Prop) : is_trans (semiring (has_norm unsigned)) h0 := sorry --non-trivial
lemma new_lemma_52752 (h0 : functor.add_const (monoid (has_neg name)) name) : @monoid.fg.{0} (has_neg.{0} name) (@functor.add_const.run.{0 0} (monoid.{0} (has_neg.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_52753 (h0 : functor.add_const (function.extfun Type list) (has_pos_part linarith.comp)) : list.nodup (function.extfun_app (functor.add_const.run h0) (semigroup linarith.comp)) := sorry --non-trivial
lemma new_lemma_52754 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52755 (h0 : function.extfun Type measurable_space) (h1 : has_sup fun_info) : @has_measurable_sup.{0} fun_info (@function.extfun_app.{2 1} Type measurable_space.{0} h0 fun_info) h1  := sorry --non-trivial
lemma new_lemma_52756 (h0 h1 : multiset (has_le (mul_one_class enat))) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_52757 (h0 : topological_space (filter empty)) : totally_separated_space (filter empty) := sorry --non-trivial
lemma new_lemma_52758 (h0 : topological_space (has_neg (option ennreal))) : t0_space (has_neg (option ennreal)) := sorry --non-trivial
lemma new_lemma_52759 (h0 : cancel_comm_monoid_with_zero (preorder (semiring (semiring num)))) : unique_factorization_monoid (preorder (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_52760 (h0 : complete_lattice (has_union (metric_space (linear_ordered_semiring unsigned)))) : is_atomistic (has_union (metric_space (linear_ordered_semiring unsigned))) := sorry --non-trivial
lemma new_lemma_52761 (h0 : uniform_space (finset (comm_group name))) : complete_space (finset (comm_group name)) := sorry --non-trivial
lemma new_lemma_52762 (h0 : complete_lattice (comm_ring to_additive.value_type)) : complete_lattice.is_Sup_finite_compact (comm_ring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_52763 (h0 : add_monoid (complete_distrib_lattice (boolean_algebra environment.implicit_infer_kind))) : add_monoid.fg (complete_distrib_lattice (boolean_algebra environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_52764 (h0 : multiset (linear_ordered_semiring num)) : multiset.nodup h0 := sorry --non-trivial
lemma new_lemma_52765 (h0 : functor.add_const (list (ring environment.implicit_infer_kind)) (has_pos_part pos)) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52766 (h0 : monoid (semiring (random_gen fun_info))) : monoid.fg (semiring (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_52767 (h0 : functor.add_const (finset (complete_distrib_lattice unsigned)) unsigned) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52768 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t1_space.{0} (normed_lattice_add_comm_group.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_lattice_add_comm_group.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52769 (h0 : monoid (boolean_algebra.core (has_neg_part linarith.comp))) : monoid.fg (boolean_algebra.core (has_neg_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_52770 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @normal_space.{0} (linear_ordered_semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} unsigned))))) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (linear_ordered_semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} unsigned))))))  := sorry --non-trivial
lemma new_lemma_52771 (h0 : uniform_space (add_cancel_monoid environment.implicit_infer_kind)) : separated_space (add_cancel_monoid environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_52772 (h0 : not (uniform_space (has_top num) -> false)) : @separated_space.{0} (has_top.{0} num) (@classical.by_contradiction'.{1} (uniform_space.{0} (has_top.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_52773 (h0 : cancel_comm_monoid_with_zero (measurable_space.dynkin_system (has_top empty))) : unique_factorization_monoid (measurable_space.dynkin_system (has_top empty)) := sorry --non-trivial
lemma new_lemma_52774 (h0 : functor.comp group option (option pos)) : @is_simple_group.{0} (option.{0} (option.{0} pos)) (@functor.comp.run.{0 0 0} group.{0} option.{0} (option.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_52775 (h0 : ring (semiring (metric_space (has_one num)))) : strong_rank_condition (semiring (metric_space (has_one num))) := sorry --non-trivial
lemma new_lemma_52776 (h0 : ring (has_nnnorm (linear_ordered_comm_group_with_zero ereal))) : is_domain (has_nnnorm (linear_ordered_comm_group_with_zero ereal)) := sorry --non-trivial
lemma new_lemma_52777 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (has_Sup.{0} (option.{0} unsigned)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_Sup.{0} (option.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_52778 (h0 : group (has_norm (generalized_boolean_algebra congr_arg_kind))) : normalizer_condition (has_norm (generalized_boolean_algebra congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_52779 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (with_one.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (with_one.{0} num))  := sorry --non-trivial
lemma new_lemma_52780 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (canonically_linear_ordered_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_linear_ordered_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52781 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (normed_group.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52782 (h0 : not (topological_space (simple_graph to_additive.value_type) -> false)) : @t0_space.{0} (simple_graph.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (simple_graph.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_52783 (h0 : topological_space (measurable_space (has_norm (has_top (has_top to_additive.value_type))))) : discrete_topology (measurable_space (has_norm (has_top (has_top to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_52784 (h0 : topological_space (ring (has_add (ring Type)))) : path_connected_space (ring (has_add (ring Type))) := sorry --non-trivial
lemma new_lemma_52785 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (distrib_lattice.{0} fun_info) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (distrib_lattice.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_52786 (h0 : functor.add_const (topological_space (ordered_comm_ring Type)) pos) : @discrete_topology.{1} (ordered_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (ordered_comm_ring.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_52787 (h0 : list (id char)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_52788 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (comm_ring.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (comm_ring.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_52789 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_52790 (h0 : topological_space (mul_zero_class (finset unsigned))) : t1_space (mul_zero_class (finset unsigned)) := sorry --non-trivial
lemma new_lemma_52791 (h1 : not (topological_space (measurable_space fun_info) -> false)) : @totally_disconnected_space.{0} (measurable_space.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (measurable_space.{0} fun_info)) h1)  := sorry --non-trivial
lemma new_lemma_52792 (h0 : filter (normed_group (has_ssubset to_additive.value_type))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_52793 (h0 : topological_space (generalized_boolean_algebra (has_add (has_add (finset name))))) : preirreducible_space (generalized_boolean_algebra (has_add (has_add (finset name)))) := sorry --non-trivial
lemma new_lemma_52794 (h0 : functor.add_const (add_group (boolean_algebra.core unsigned)) Type) : @is_add_cyclic.{0} (boolean_algebra.core.{0} unsigned) (@functor.add_const.run.{0 1} (add_group.{0} (boolean_algebra.core.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_52795 (h0 : fun_info -> fun_info -> Prop) : is_strict_order fun_info h0 := sorry --non-trivial
lemma new_lemma_52796 (h0 : not (function.extfun Type complete_lattice -> false)) : @is_compactly_generated.{0} (has_one.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (has_one.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52797 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (comm_group.{0} name) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (comm_group.{0} name))  := sorry --non-trivial
lemma new_lemma_52798 (h0 : functor.add_const (list (has_to_string Type)) Type) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52799 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (option.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (option.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52800 (h0 : group (has_add (has_add pos))) : is_simple_group (has_add (has_add pos)) := sorry --non-trivial
lemma new_lemma_52801 (h0 : uniform_space (add_comm_semigroup (add_comm_semigroup linarith.ineq))) : complete_space (add_comm_semigroup (add_comm_semigroup linarith.ineq)) := sorry --non-trivial
lemma new_lemma_52802 (h0 : group (normed_comm_ring (has_add (has_add (has_add (has_add name)))))) : normalizer_condition (normed_comm_ring (has_add (has_add (has_add (has_add name))))) := sorry --non-trivial
lemma new_lemma_52803 (h0 : functor.add_const (topological_space nnreal) empty) : discrete_topology nnreal := sorry --non-trivial
lemma new_lemma_52804 (h0 : not (monoid (option empty) -> false)) : @monoid.fg.{0} (option.{0} empty) (@classical.by_contradiction'.{1} (monoid.{0} (option.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_52805 (h0 : complete_lattice (normed_group linarith.ineq)) : is_compactly_generated (normed_group linarith.ineq) := sorry --non-trivial
lemma new_lemma_52806 (h0 : ring (comm_ring (random_gen (random_gen fun_info)))) : is_domain (comm_ring (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_52807 (h0 : complete_lattice (left_cancel_monoid (option unsigned))) : is_compactly_generated (left_cancel_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_52808 (h0 : complete_lattice (has_ssubset reducibility_hints)) : complete_lattice.is_Sup_finite_compact (has_ssubset reducibility_hints) := sorry --non-trivial
lemma new_lemma_52809 (h0 : functor.add_const (semiring (has_add pos)) environment.implicit_infer_kind) : @is_noetherian_ring.{0} (has_add.{0} pos) (@functor.add_const.run.{0 0} (semiring.{0} (has_add.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_52810 (h3 : group (id num)) : normalizer_condition (id num) := sorry --non-trivial
lemma new_lemma_52811 (h0 : function.extfun Type (functor.add_const (topological_space (has_neg linarith.comp)))) : @locally_compact_space.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} linarith.comp)) linarith.comp (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (has_neg.{0} linarith.comp))) h0 linarith.comp))  := sorry --non-trivial
lemma new_lemma_52812 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (with_bot.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} num)))))) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (with_bot.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} num)))))))  := sorry --non-trivial
lemma new_lemma_52813 (h0 : uniform_space (simple_graph linarith.comp)) : complete_space (simple_graph linarith.comp) := sorry --non-trivial
lemma new_lemma_52814 (h0 : function.extfun Type topological_space) : @regular_space.{0} (option.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (option.{0} pos))  := sorry --non-trivial
lemma new_lemma_52815 (h0 : topological_space (canonically_ordered_monoid (has_add (has_add (has_add Type))))) : preconnected_space (canonically_ordered_monoid (has_add (has_add (has_add Type)))) := sorry --non-trivial
lemma new_lemma_52816 (h0 : function.extfun nat fin) : @loc_path_connected_space.{0} (sub_neg_monoid.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (sub_neg_monoid.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_52817 (h0 : functor.add_const (function.extfun Type ring) (finset Type)) : @is_principal_ideal_ring.{0} (has_nndist.{0} linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type ring.{0}) (finset.{1} Type) h0) (has_nndist.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52818 (h0 : uniform_space (has_dist (option empty))) : separated_space (has_dist (option empty)) := sorry --non-trivial
lemma new_lemma_52819 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (pseudo_metric_space.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (pseudo_metric_space.{0} pos))  := sorry --non-trivial
lemma new_lemma_52820 (h2 : uniform_space (non_unital_non_assoc_semiring linarith.comp_source)) : complete_space (non_unital_non_assoc_semiring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_52821 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (pseudo_metric_space.{0} (option.{0} unsigned)) (@function.extfun_app.{2 1} Type add_group.{0} h0 (pseudo_metric_space.{0} (option.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_52822 (h0 : topological_space (bin_tree congr_arg_kind)) : t1_space (bin_tree congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52823 (h0 : ring (add_monoid to_additive.value_type)) : strong_rank_condition (add_monoid to_additive.value_type) := sorry --non-trivial
lemma new_lemma_52824 (h0 : functor.add_const (topological_space (cancel_monoid ennreal)) pos) : @t0_space.{0} (cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} ennreal)) pos h0)  := sorry --non-trivial
lemma new_lemma_52825 (h0 : fin has_zero.zero) : @is_atomistic.{0} (comm_semigroup.{0} real) (@matrix.vec_empty.{0} (complete_lattice.{0} (comm_semigroup.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_52826 (h0 : monoid_with_zero (add_comm_monoid (option pos)) -> monoid_with_zero (add_comm_monoid (option pos)) -> Prop) : is_symm (monoid_with_zero (add_comm_monoid (option pos))) h0 := sorry --non-trivial
lemma new_lemma_52827 (h0 : function.extfun Type ring) : @rank_condition.{0} (add_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (add_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52828 (h0 : ring (has_top (has_norm empty))) : is_domain (has_top (has_norm empty)) := sorry --non-trivial
lemma new_lemma_52829 (h0 : topological_space (ring (finset environment.implicit_infer_kind))) : normal_space (ring (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_52830 (h0 : filter (sub_neg_monoid real)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_52831 (h0 : functor.add_const (ring (left_cancel_monoid empty)) (semiring empty)) : @is_principal_ideal_ring.{0} (left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (left_cancel_monoid.{0} empty)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_52832 (h0 : ring (has_ssubset (has_nnnorm (random_gen char)))) : rank_condition (has_ssubset (has_nnnorm (random_gen char))) := sorry --non-trivial
lemma new_lemma_52833 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (linear_ordered_semiring.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_semiring.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_52834 (h0 : topological_space (has_add (finset (finset Type)))) : t0_space (has_add (finset (finset Type))) := sorry --non-trivial
lemma new_lemma_52835 (h0 : add_monoid (mul_zero_class (semiring (semiring (semiring num))))) : add_monoid.fg (mul_zero_class (semiring (semiring (semiring num)))) := sorry --non-trivial
lemma new_lemma_52836 (h0 : set (id to_additive.value_type)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_52837 (h0 : functor.add_const (list Prop) pos) : list.tfae (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52838 (h0 : topological_space (add_cancel_monoid (has_neg Type))) : irreducible_space (add_cancel_monoid (has_neg Type)) := sorry --non-trivial
lemma new_lemma_52839 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (complete_distrib_lattice.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (complete_distrib_lattice.{0} empty))  := sorry --non-trivial
lemma new_lemma_52840 (h0 : function.extfun Type (functor.add_const (add_monoid (mul_zero_class ennreal)))) : @add_monoid.fg.{0} (mul_zero_class.{0} ennreal) (@functor.add_const.run.{0 0} (add_monoid.{0} (mul_zero_class.{0} ennreal)) unsigned (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (add_monoid.{0} (mul_zero_class.{0} ennreal))) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_52841 (h0 : topological_space (preorder empty)) : locally_compact_space (preorder empty) := sorry --non-trivial
lemma new_lemma_52842 (h0 : topological_space (with_one (measurable_space unsigned))) : normal_space (with_one (measurable_space unsigned)) := sorry --non-trivial
lemma new_lemma_52843 (h0 : topological_space (option (option (option unsigned)))) : t1_space (option (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_52844 (h0 : topological_space (cancel_monoid (add_cancel_monoid name))) : totally_disconnected_space (cancel_monoid (add_cancel_monoid name)) := sorry --non-trivial
lemma new_lemma_52845 (h0 : topological_space (ring (has_add name))) : irreducible_space (ring (has_add name)) := sorry --non-trivial
lemma new_lemma_52846 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (option.{0} unsigned) (@function.extfun_app.{2 1} Type monoid.{0} h0 (option.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52847 (h0 : topological_space (has_neg_part unsigned)) : totally_separated_space (has_neg_part unsigned) := sorry --non-trivial
lemma new_lemma_52848 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (with_bot.{0} string_imp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_bot.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_52849 (h0 : function.extfun nat fin) : @separated_space.{1} (canonically_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (uniform_space.{1} (canonically_ordered_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_52850 (h0 : functor.add_const (ring (finset unsigned)) unsigned) : @rank_condition.{0} (finset.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (finset.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_52851 (h0 : uniform_space (add_group (semiring num))) : separated_space (add_group (semiring num)) := sorry --non-trivial
lemma new_lemma_52852 (h0 : function.extfun (finset Type) (has_mem.mem (normed_group num))) : @locally_compact_space.{0} (normed_group.{0} num) (@finset.pi.empty.{1 0} Type topological_space.{0} (normed_group.{0} num) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (normed_group.{0} num)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_52853 (h0 : topological_space (comm_semigroup (has_add (sub_neg_monoid real)))) : preirreducible_space (comm_semigroup (has_add (sub_neg_monoid real))) := sorry --non-trivial
lemma new_lemma_52854 (h0 : topological_space (add_group (semiring (semiring (semiring unsigned))))) : irreducible_space (add_group (semiring (semiring (semiring unsigned)))) := sorry --non-trivial
lemma new_lemma_52855 (h0 : functor.add_const (topological_space (add_comm_monoid ennreal)) pos) : @preirreducible_space.{0} (add_comm_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (add_comm_monoid.{0} ennreal)) pos h0)  := sorry --non-trivial
lemma new_lemma_52856 (h0 : functor.add_const (topological_space (has_pos_part Type)) Type) : @path_connected_space.{1} (has_pos_part.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (has_pos_part.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_52857 (h0 : functor.add_const (ordered_comm_monoid (semigroup name)) name) : @has_exists_mul_of_le.{0} (semigroup.{0} name) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (semigroup.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_52858 (h0 : function.extfun Type ring) : @is_domain.{0} (normed_lattice_add_comm_group.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} h0 (normed_lattice_add_comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_52859 (h0 : functor.add_const (ordered_add_comm_monoid (has_Inf pos)) (has_neg Type)) : @archimedean.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 1} (ordered_add_comm_monoid.{0} (has_Inf.{0} pos)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_52860 (h0 : functor.add_const (ring (semigroup empty)) empty) : @strong_rank_condition.{0} (semigroup.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (semigroup.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_52861 (h0 : ring (has_norm to_additive.value_type)) : is_principal_ideal_ring (has_norm to_additive.value_type) := sorry --non-trivial
lemma new_lemma_52862 (h0 : topological_space (has_norm (complete_semilattice_Sup (with_one char)))) : locally_compact_space (has_norm (complete_semilattice_Sup (with_one char))) := sorry --non-trivial
lemma new_lemma_52863 (h0 : ordered_comm_monoid (has_zero (boolean_algebra environment.implicit_infer_kind))) : has_exists_mul_of_le (has_zero (boolean_algebra environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_52864 (h0 : group (distrib_lattice linarith.comp_source)) : group.fg (distrib_lattice linarith.comp_source) := sorry --non-trivial
lemma new_lemma_52865 (h0 : topological_space (canonically_ordered_monoid pos)) : discrete_topology (canonically_ordered_monoid pos) := sorry --non-trivial
lemma new_lemma_52866 (h0 : complete_lattice (distrib_lattice (has_inv linarith.ineq))) : complete_lattice.is_Sup_finite_compact (distrib_lattice (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_52867 (h0 : function.extfun Type topological_space) : @normal_space.{0} (canonically_ordered_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_52868 (h0 : topological_space (has_bot (option (option (option (option (option (option unsigned)))))))) : irreducible_space (has_bot (option (option (option (option (option (option unsigned))))))) := sorry --non-trivial
lemma new_lemma_52869 (h0 : list (has_to_string (option ennreal))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_52870 (h1 : topological_space (non_unital_non_assoc_semiring linarith.ineq)) (h2 : add_group (non_unital_non_assoc_semiring linarith.ineq)) : topological_add_group (non_unital_non_assoc_semiring linarith.ineq) := sorry --non-trivial
lemma new_lemma_52871 (h0 : ring (random_gen (mul_one_class linarith.comp_source))) : is_domain (random_gen (mul_one_class linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_52872 (h0 : topological_space (has_sub (has_top empty))) : path_connected_space (has_sub (has_top empty)) := sorry --non-trivial
lemma new_lemma_52873 (h0 : set (has_compl (mul_one_class (has_lt (has_lt (has_lt (mul_one_class string_imp))))))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_52874 (h0 : functor.add_const (add_group (complete_distrib_lattice pos)) (has_add pos)) : @is_add_cyclic.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (add_group.{0} (complete_distrib_lattice.{0} pos)) (has_add.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_52875 (h0 : group (generalized_boolean_algebra (has_pos_part linarith.comp))) : is_simple_group (generalized_boolean_algebra (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_52876 (h1 : function.extfun Type topological_space) : @locally_compact_space.{0} (with_one.{0} string_imp) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (with_one.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_52877 (h0 : function.extfun Type (functor.add_const (complete_lattice znum))) : @complete_lattice.is_Sup_finite_compact.{0} znum (@functor.add_const.run.{0 0} (complete_lattice.{0} znum) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (complete_lattice.{0} znum)) h0 empty))  := sorry --non-trivial
lemma new_lemma_52878 (h0 : ring (semiring (random_gen (random_gen fun_info)))) : strong_rank_condition (semiring (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_52879 (h0 : functor.comp ring canonically_ordered_comm_semiring ennreal) : @is_principal_ideal_ring.{0} (canonically_ordered_comm_semiring.{0} ennreal) (@functor.comp.run.{0 0 0} ring.{0} canonically_ordered_comm_semiring.{0} ennreal h0)  := sorry --non-trivial
lemma new_lemma_52880 (h0 : functor.add_const (function.extfun Type list) (has_neg linarith.comp)) : list.nodup (function.extfun_app (functor.add_const.run h0) (has_to_string linarith.comp)) := sorry --non-trivial
lemma new_lemma_52881 (h0 : ring (complete_semilattice_Sup (has_nnnorm fun_info))) : is_domain (complete_semilattice_Sup (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_52882 (h1 : add_group Type) : is_add_cyclic Type := sorry --non-trivial
lemma new_lemma_52883 (h0 : functor.add_const (group (has_zero Type)) (has_neg Type)) : @is_simple_group.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 1} (group.{1} (has_zero.{1} Type)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_52884 (h0 : has_emptyc congr_arg_kind -> has_emptyc congr_arg_kind -> Prop) : is_antisymm (has_emptyc congr_arg_kind) h0 := sorry --non-trivial
lemma new_lemma_52885 (h0 : cancel_comm_monoid_with_zero (add_semigroup unsigned)) : unique_factorization_monoid (add_semigroup unsigned) := sorry --non-trivial
lemma new_lemma_52886 (h0 : functor.add_const (group (bin_tree empty)) congr_arg_kind) : @normalizer_condition.{0} (bin_tree.{0} empty) (@functor.add_const.run.{0 0} (group.{0} (bin_tree.{0} empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_52887 (h0 : list (has_edist (option unsigned))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_52888 (h0 : ordered_add_comm_monoid (has_to_string (finset (has_add linarith.comp)))) : archimedean (has_to_string (finset (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_52889 (h0 : functor.add_const (add_monoid (bin_tree unsigned)) unsigned) : @add_monoid.fg.{0} (bin_tree.{0} unsigned) (@functor.add_const.run.{0 0} (add_monoid.{0} (bin_tree.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_52890 (h0 : topological_space (has_pos_part (has_Inf (has_Inf (has_Inf Type))))) : discrete_topology (has_pos_part (has_Inf (has_Inf (has_Inf Type)))) := sorry --non-trivial
lemma new_lemma_52891 (h0 : topological_space (ordered_ring congr_arg_kind)) : totally_separated_space (ordered_ring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52892 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (add_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (add_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52893 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (mul_zero_class.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (mul_zero_class.{0} empty))  := sorry --non-trivial
lemma new_lemma_52894 (h0 : topological_space (comm_semigroup Type)) : t1_space (comm_semigroup Type) := sorry --non-trivial
lemma new_lemma_52895 (h0 : ring (boolean_algebra (has_add (has_add (has_to_string (has_to_string name)))))) : is_principal_ideal_ring (boolean_algebra (has_add (has_add (has_to_string (has_to_string name))))) := sorry --non-trivial
lemma new_lemma_52896 (h0 : monoid (has_emptyc (has_inv (has_inv (has_inv (has_inv to_additive.value_type)))))) : monoid.fg (has_emptyc (has_inv (has_inv (has_inv (has_inv to_additive.value_type))))) := sorry --non-trivial
lemma new_lemma_52897 (h0 : topological_space (has_add (has_bot (has_Inf real)))) : preirreducible_space (has_add (has_bot (has_Inf real))) := sorry --non-trivial
lemma new_lemma_52898 (h0 : function.extfun Type group) : @normalizer_condition.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type group.{0} h0 (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_52899 (h0 : complete_lattice (has_top (mul_one_class string_imp))) : complete_lattice.is_Sup_finite_compact (has_top (mul_one_class string_imp)) := sorry --non-trivial
lemma new_lemma_52900 (h2 : preorder (add_comm_semigroup (mul_one_class char))) (h3 : set (add_comm_semigroup (mul_one_class char))) : set.is_pwo h3 := sorry --non-trivial
lemma new_lemma_52901 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (denumerable.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (denumerable.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_52902 (h0 : not (ring (mul_zero_class num) -> false)) : @is_domain.{0} (mul_zero_class.{0} num) (@classical.by_contradiction'.{1} (ring.{0} (mul_zero_class.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_52903 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (normed_group.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} h0 (normed_group.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_52904 (h0 : functor.add_const (functor.add_const (topological_space (comm_group environment.implicit_infer_kind)) name) Type) : @t1_space.{0} (comm_group.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} environment.implicit_infer_kind)) name (@functor.add_const.run.{0 1} (functor.add_const.{0 0} (topological_space.{0} (comm_group.{0} environment.implicit_infer_kind)) name) Type h0))  := sorry --non-trivial
lemma new_lemma_52905 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (has_inter.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_inter.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_52906 (h0 : topological_space (canonically_ordered_monoid name)) : preconnected_space (canonically_ordered_monoid name) := sorry --non-trivial
lemma new_lemma_52907 (h0 : topological_space (ordered_comm_monoid (ordered_comm_monoid Type))) : regular_space (ordered_comm_monoid (ordered_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_52908 (h0 : uniform_space (denumerable (has_nnnorm string.iterator_imp))) : complete_space (denumerable (has_nnnorm string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_52909 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (bin_tree.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (bin_tree.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52910 (h0 : ring (topological_space (has_ssubset (measure_theory.measure_space char)))) : strong_rank_condition (topological_space (has_ssubset (measure_theory.measure_space char))) := sorry --non-trivial
lemma new_lemma_52911 (h0 : topological_space (complete_distrib_lattice real)) : totally_separated_space (complete_distrib_lattice real) := sorry --non-trivial
lemma new_lemma_52912 (h0 : uniform_space (comm_semigroup (sub_neg_monoid linarith.comp))) : complete_space (comm_semigroup (sub_neg_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_52913 (h0 : functor.add_const (filter (ring linarith.comp)) (has_pos_part pos)) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52914 (h0 : ring (simple_graph (mul_one_class fun_info))) : rank_condition (simple_graph (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_52915 (h0 : topological_space (finset (has_add linarith.comp))) : preirreducible_space (finset (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_52916 (h0 : complete_lattice (has_norm (semiring congr_arg_kind))) : is_atomistic (has_norm (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_52917 (h0 : function.extfun (Type 1) finset) : finset.nonempty (function.extfun_app h0 (ordered_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_52918 (h0 : functor.add_const (finset (comm_group Type)) (ring environment.implicit_infer_kind)) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52919 (h0 : add_group (has_pos_part (has_neg (has_Inf real)))) : is_add_cyclic (has_pos_part (has_neg (has_Inf real))) := sorry --non-trivial
lemma new_lemma_52920 (h0 : functor.add_const (uniform_space name) empty) : @separated_space.{0} name (@functor.add_const.run.{0 0} (uniform_space.{0} name) empty h0)  := sorry --non-trivial
lemma new_lemma_52921 (h0 : group (add_comm_monoid (option (option unsigned)))) : is_cyclic (add_comm_monoid (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_52922 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (simple_graph.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (simple_graph.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52923 (h0 : empty) : @rank_condition.{0} (has_le.{0} string.iterator_imp) (@empty.elim.{1} (ring.{0} (has_le.{0} string.iterator_imp)) h0)  := sorry --non-trivial
lemma new_lemma_52924 (h0 : preorder std_gen) (h1 : pred_order std_gen) : is_pred_archimedean std_gen := sorry --non-trivial
lemma new_lemma_52925 (h0 : function.extfun (finset Type) (has_mem.mem (semiring (has_norm linarith.comp_source)))) : @complete_lattice.is_Sup_finite_compact.{0} (semiring.{0} (has_norm.{0} linarith.comp_source)) (@finset.pi.empty.{1 0} Type complete_lattice.{0} (semiring.{0} (has_norm.{0} linarith.comp_source)) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (semiring.{0} (has_norm.{0} linarith.comp_source))) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_52926 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem complete_lattice)) : is_atomistic (measurable_space linarith.ineq) := sorry --non-trivial
lemma new_lemma_52927 (h0 : add_monoid (add_cancel_monoid (add_cancel_monoid name))) : add_monoid.fg (add_cancel_monoid (add_cancel_monoid name)) := sorry --non-trivial
lemma new_lemma_52928 (h0 : function.extfun Type (functor.add_const (complete_lattice (add_right_cancel_monoid unsigned)))) : @is_compactly_generated.{0} (add_right_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (add_right_cancel_monoid.{0} unsigned)) congr_arg_kind (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (complete_lattice.{0} (add_right_cancel_monoid.{0} unsigned))) h0 congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52929 (h0 : semiring (ordered_comm_ring (has_neg Type))) : is_noetherian_ring (ordered_comm_ring (has_neg Type)) := sorry --non-trivial
lemma new_lemma_52930 (h0 : functor.add_const (ordered_add_comm_monoid (has_neg_part ennreal)) pos) : @archimedean.{0} (has_neg_part.{0} ennreal) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (has_neg_part.{0} ennreal)) pos h0)  := sorry --non-trivial
lemma new_lemma_52931 (h0 : functor.add_const (function.extfun Type monoid) (has_add Type)) : @monoid.fg.{0} environment.implicit_infer_kind (@function.extfun_app.{2 1} Type monoid.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type monoid.{0}) (has_add.{1} Type) h0) environment.implicit_infer_kind)  := sorry --non-trivial
lemma new_lemma_52932 (h0 : topological_space (normed_field linarith.comp_source)) (h1 : add_group (normed_field linarith.comp_source)) : topological_add_group (normed_field linarith.comp_source) := sorry --non-trivial
lemma new_lemma_52933 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (linear_ordered_field.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_ordered_field.{0} pos))  := sorry --non-trivial
lemma new_lemma_52934 (h0 : topological_space (normed_lattice_add_comm_group (has_add linarith.comp))) : normal_space (normed_lattice_add_comm_group (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_52935 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (canonically_ordered_comm_semiring.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (canonically_ordered_comm_semiring.{0} pos))  := sorry --non-trivial
lemma new_lemma_52936 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (has_inter.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_inter.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52937 (h0 : topological_space (linear_ordered_field (has_add name))) : sequential_space (linear_ordered_field (has_add name)) := sorry --non-trivial
lemma new_lemma_52938 (h1 : topological_space (has_lt enat)) : t0_space (has_lt enat) := sorry --non-trivial
lemma new_lemma_52939 (h1 : filter (semi_normed_comm_ring (has_nnnorm char))) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_52940 (h0 : function.extfun Type group) : @normalizer_condition.{0} (complete_linear_order.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (complete_linear_order.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_52941 (h0 : functor.add_const (function.extfun (Type 1) finset) name) : finset.nonempty (function.extfun_app (functor.add_const.run h0) (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_52942 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (semigroup pos)) := sorry --non-trivial
lemma new_lemma_52943 (h0 : topological_space (add_cancel_comm_monoid (mul_one_class (add_left_cancel_monoid to_additive.value_type)))) : t0_space (add_cancel_comm_monoid (mul_one_class (add_left_cancel_monoid to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_52944 (h0 : semiring (normed_comm_ring (ring linarith.comp))) : is_noetherian_ring (normed_comm_ring (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_52945 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (has_zero.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_zero.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_52946 (h0 : function.extfun Type (prod (non_assoc_semiring congr_arg_kind))) : id_rel (function.extfun_app h0 (non_assoc_semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_52947 (h0 : ring (semi_normed_ring std_gen)) : rank_condition (semi_normed_ring std_gen) := sorry --non-trivial
lemma new_lemma_52948 (h0 : functor.add_const (add_group (generalized_boolean_algebra pos)) (has_Inf pos)) : @is_add_cyclic.{0} (generalized_boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (add_group.{0} (generalized_boolean_algebra.{0} pos)) (has_Inf.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_52949 (h0 : group (generalized_boolean_algebra pos)) : is_simple_group (generalized_boolean_algebra pos) := sorry --non-trivial
lemma new_lemma_52950 (h0 : topological_space (linear_ordered_add_comm_group (has_nnnorm char))) : path_connected_space (linear_ordered_add_comm_group (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_52951 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (normed_linear_ordered_group empty)) := sorry --non-trivial
lemma new_lemma_52952 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (has_one.{0} num) (@function.extfun_app.{2 1} Type add_group.{0} h0 (has_one.{0} num))  := sorry --non-trivial
lemma new_lemma_52953 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (has_sub.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_sub.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52954 (h0 : topological_space (boolean_algebra.core (option ennreal))) : t0_space (boolean_algebra.core (option ennreal)) := sorry --non-trivial
lemma new_lemma_52955 (h1 : multiset (has_emptyc linarith.ineq)) : multiset.nodup h1 := sorry --non-trivial
lemma new_lemma_52956 (h0 : topological_space (has_emptyc linarith.comp)) : irreducible_space (has_emptyc linarith.comp) := sorry --non-trivial
lemma new_lemma_52957 (h0 : functor.add_const (topological_space (normed_comm_ring environment.implicit_infer_kind)) (comm_group pos)) : @preconnected_space.{0} (normed_comm_ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} environment.implicit_infer_kind)) (comm_group.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_52958 (h0 : functor.add_const (topological_space (generalized_boolean_algebra Type)) (ring (ring (ring Type)))) : @path_connected_space.{1} (generalized_boolean_algebra.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (generalized_boolean_algebra.{1} Type)) (ring.{1} (ring.{1} (ring.{1} Type))) h0)  := sorry --non-trivial
lemma new_lemma_52959 (h0 : group (has_top (random_gen linarith.comp_source))) : normalizer_condition (has_top (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_52960 (h0 : functor.add_const (uniform_space (has_zero linarith.comp)) pos) : @separated_space.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_zero.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_52961 (h0 : functor.add_const (group (ring linarith.comp)) (finset (finset Type))) : @group.fg.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 1} (group.{0} (ring.{0} linarith.comp)) (finset.{1} (finset.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_52962 (h0 : list (linear_ordered_comm_group (comm_monoid unsigned))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_52963 (h0 : functor.add_const (topological_space (add_cancel_comm_monoid empty)) unsigned) : @irreducible_space.{0} (add_cancel_comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_comm_monoid.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_52964 (h0 : topological_space (semigroup (ring pos))) : preirreducible_space (semigroup (ring pos)) := sorry --non-trivial
lemma new_lemma_52965 (h0 : functor.add_const (topological_space (ring linarith.comp)) linarith.comp) : @normal_space.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_52966 (h0 : topological_space (has_union (semiring (has_norm (has_norm (has_norm unsigned)))))) : irreducible_space (has_union (semiring (has_norm (has_norm (has_norm unsigned))))) := sorry --non-trivial
lemma new_lemma_52967 (h0 : functor.add_const (cancel_comm_monoid_with_zero (ring Type)) (has_add pos)) : @unique_factorization_monoid.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (cancel_comm_monoid_with_zero.{1} (ring.{1} Type)) (has_add.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_52968 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_simple_group.{0} (complete_distrib_lattice.{0} name) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (complete_distrib_lattice.{0} name))  := sorry --non-trivial
lemma new_lemma_52969 (h1 : not (topological_space (comm_ring linarith.ineq) -> false)) : @path_connected_space.{0} (comm_ring.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (comm_ring.{0} linarith.ineq)) h1)  := sorry --non-trivial
lemma new_lemma_52970 (h0 : uniform_space (has_Sup (has_bot congr_arg_kind))) : separated_space (has_Sup (has_bot congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_52971 (h0 : group (has_norm (random_gen (has_norm linarith.comp)))) : normalizer_condition (has_norm (random_gen (has_norm linarith.comp))) := sorry --non-trivial
lemma new_lemma_52972 (h0 : list (has_add (option unsigned))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_52973 (h0 : add_monoid (linear_ordered_field (finset name))) : add_monoid.fg (linear_ordered_field (finset name)) := sorry --non-trivial
lemma new_lemma_52974 (h2 : topological_space (has_top char)) : t0_space (has_top char) := sorry --non-trivial
lemma new_lemma_52975 (h0 : topological_space (semigroup (has_to_string Type))) : totally_separated_space (semigroup (has_to_string Type)) := sorry --non-trivial
lemma new_lemma_52976 (h0 : functor.add_const (function.extfun Type topological_space) name) : @discrete_topology.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) name h0) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_52977 (h0 : functor.comp topological_space ring name) : @sequential_space.{0} (ring.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} ring.{0} name h0)  := sorry --non-trivial
lemma new_lemma_52978 (h0 : ordered_comm_monoid (canonically_ordered_comm_semiring (option (option unsigned)))) : has_exists_mul_of_le (canonically_ordered_comm_semiring (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_52979 (h1 : topological_space (with_bot linarith.ineq)) : irreducible_space (with_bot linarith.ineq) := sorry --non-trivial
lemma new_lemma_52980 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (linear_ordered_comm_monoid_with_zero.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (linear_ordered_comm_monoid_with_zero.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_52981 (h1 : ring (semi_normed_comm_ring std_gen)) : rank_condition (semi_normed_comm_ring std_gen) := sorry --non-trivial
lemma new_lemma_52982 (h0 : function.extfun Type ordered_comm_monoid) : @has_exists_mul_of_le.{0} (normed_comm_ring.{0} (option.{0} unsigned)) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} h0 (normed_comm_ring.{0} (option.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_52983 (h0 : functor.add_const (complete_lattice (has_neg linarith.comp)) (has_add pos)) : @complete_lattice.is_Sup_finite_compact.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_neg.{0} linarith.comp)) (has_add.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_52984 (h0 : ring (has_neg_part (has_add Type))) : strong_rank_condition (has_neg_part (has_add Type)) := sorry --non-trivial
lemma new_lemma_52985 (h0 : topological_space (complete_distrib_lattice real)) : preconnected_space (complete_distrib_lattice real) := sorry --non-trivial
lemma new_lemma_52986 (h0 : functor.add_const (group (ordered_comm_monoid linarith.comp)) name) : @normalizer_condition.{0} (ordered_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (ordered_comm_monoid.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_52987 (h0 : functor.add_const (filter (has_pos_part linarith.comp)) Type) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_52988 (h0 : functor.add_const (topological_space (has_nndist pos)) name) : @irreducible_space.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_52989 (h0 : ring (dlist (comm_ring (has_inv linarith.ineq)))) : rank_condition (dlist (comm_ring (has_inv linarith.ineq))) := sorry --non-trivial
lemma new_lemma_52990 (h0 : ring (with_one (has_norm (has_norm congr_arg_kind)))) : strong_rank_condition (with_one (has_norm (has_norm congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_52991 (h0 : topological_space (metric_space congr_arg_kind)) : t0_space (metric_space congr_arg_kind) := sorry --non-trivial
lemma new_lemma_52992 (h0 : add_group (random_gen (has_top (random_gen (random_gen linarith.ineq))))) : is_add_cyclic (random_gen (has_top (random_gen (random_gen linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_52993 (h0 : function.extfun Type (functor.comp ring cancel_monoid)) : @is_principal_ideal_ring.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} ring.{0} cancel_monoid.{0} environment.implicit_infer_kind (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} ring.{0} cancel_monoid.{0}) h0 environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_52994 (h0 : topological_space (add_comm_monoid name)) : preirreducible_space (add_comm_monoid name) := sorry --non-trivial
lemma new_lemma_52995 (h0 : ring (finset (ring (has_neg linarith.comp)))) : is_domain (finset (ring (has_neg linarith.comp))) := sorry --non-trivial
lemma new_lemma_52996 (h0 : topological_space (with_one (random_gen (comm_ring subsingleton_info)))) : locally_compact_space (with_one (random_gen (comm_ring subsingleton_info))) := sorry --non-trivial
lemma new_lemma_52997 (h0 : finset (has_neg name)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_52998 (h0 : complete_lattice (has_neg Type)) : is_atomistic (has_neg Type) := sorry --non-trivial
lemma new_lemma_52999 (h0 : monoid (id (random_gen (has_inv (comm_ring to_additive.value_type))))) : monoid.fg (id (random_gen (has_inv (comm_ring to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_53000 (h0 : topological_space (boolean_algebra (has_pos_part (has_Inf pos)))) : totally_disconnected_space (boolean_algebra (has_pos_part (has_Inf pos))) := sorry --non-trivial
lemma new_lemma_53001 (h0 : ring (distrib (has_nnnorm (has_lt (has_lt string.iterator_imp))))) : is_domain (distrib (has_nnnorm (has_lt (has_lt string.iterator_imp)))) := sorry --non-trivial
lemma new_lemma_53002 (h1 : add_group (linear_ordered_add_comm_group char)) : is_add_cyclic (linear_ordered_add_comm_group char) := sorry --non-trivial
lemma new_lemma_53003 (h0 : functor.add_const (topological_space (add_comm_monoid Type)) name) : @regular_space.{1} (add_comm_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (add_comm_monoid.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_53004 (h0 : functor.add_const (topological_space (add_cancel_monoid name)) pos) : @locally_compact_space.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_53005 (h0 : group (add_cancel_monoid unsigned)) : is_simple_group (add_cancel_monoid unsigned) := sorry --non-trivial
lemma new_lemma_53006 (h0 : functor.add_const (topological_space (mul_zero_class Type)) linarith.comp) : @discrete_topology.{1} (mul_zero_class.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (mul_zero_class.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53007 (h0 : semiring (boolean_algebra (sub_neg_monoid Type))) : is_noetherian_ring (boolean_algebra (sub_neg_monoid Type)) := sorry --non-trivial
lemma new_lemma_53008 (h0 : ring (with_one (has_norm to_additive.value_type))) : is_domain (with_one (has_norm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_53009 (h0 : semiring (simple_graph (option unsigned))) : is_noetherian_ring (simple_graph (option unsigned)) := sorry --non-trivial
lemma new_lemma_53010 (h0 : group (measurable_space to_additive.value_type)) : normalizer_condition (measurable_space to_additive.value_type) := sorry --non-trivial
lemma new_lemma_53011 (h0 : topological_space (boolean_algebra (has_add (has_add (has_add (add_comm_monoid Type)))))) : path_connected_space (boolean_algebra (has_add (has_add (has_add (add_comm_monoid Type))))) := sorry --non-trivial
lemma new_lemma_53012 (h0 : topological_space (has_to_string (has_to_string environment.implicit_infer_kind))) : topological_space.separable_space (has_to_string (has_to_string environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_53013 (h0 : ring (semigroup pos)) : strong_rank_condition (semigroup pos) := sorry --non-trivial
lemma new_lemma_53014 (h0 : list (has_neg (finset pos))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_53015 (h0 : topological_space (distrib (mul_one_class fun_info))) (h1 : preorder (distrib (mul_one_class fun_info))) : order_topology (distrib (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_53016 (h0 : cancel_comm_monoid_with_zero (has_add (option pos))) : unique_factorization_monoid (has_add (option pos)) := sorry --non-trivial
lemma new_lemma_53017 (h0 : multiset (simple_graph reducibility_hints)) (h1 : not (multiset (simple_graph reducibility_hints) -> false)) : multiset.disjoint h0 (classical.by_contradiction' h1) := sorry --non-trivial
lemma new_lemma_53018 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (has_neg.{0} pos) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (has_neg.{0} pos))  := sorry --non-trivial
lemma new_lemma_53019 (h0 : semiring (add_group (has_union (has_union (has_union linarith.comp))))) : is_noetherian_ring (add_group (has_union (has_union (has_union linarith.comp)))) := sorry --non-trivial
lemma new_lemma_53020 (h0 : functor.add_const (ring (has_nndist Type)) (ring environment.implicit_infer_kind)) : @rank_condition.{1} (has_nndist.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_nndist.{1} Type)) (ring.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_53021 (h0 : topological_space (comm_semigroup (has_add (ordered_comm_monoid Type)))) : path_connected_space (comm_semigroup (has_add (ordered_comm_monoid Type))) := sorry --non-trivial
lemma new_lemma_53022 (h0 : ring (pseudo_metric_space (option pos))) : is_domain (pseudo_metric_space (option pos)) := sorry --non-trivial
lemma new_lemma_53023 (h0 : cancel_comm_monoid_with_zero (add_comm_monoid congr_arg_kind)) : unique_factorization_monoid (add_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53024 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (ordered_comm_ring.{0} name) (@function.extfun_app.{2 1} Type semiring.{0} h0 (ordered_comm_ring.{0} name))  := sorry --non-trivial
lemma new_lemma_53025 (h0 : topological_space (as_linear_order num)) : preirreducible_space (as_linear_order num) := sorry --non-trivial
lemma new_lemma_53026 (h0 : functor.add_const (filter (complete_distrib_lattice empty)) (option (option (option (option empty))))) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53027 (h0 : functor.add_const (group (add_comm_monoid environment.implicit_infer_kind)) unsigned) : @normalizer_condition.{0} (add_comm_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (add_comm_monoid.{0} environment.implicit_infer_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_53028 (h3 : ring (has_inv to_additive.value_type)) : is_domain (has_inv to_additive.value_type) := sorry --non-trivial
lemma new_lemma_53029 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (distrib_lattice.{0} fun_info) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (distrib_lattice.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_53030 (h0 : has_mem.mem (random_gen empty) has_emptyc.emptyc) : @is_compactly_generated.{0} (random_gen.{0} empty) (@finset.pi.empty.{1 0} Type complete_lattice.{0} (random_gen.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_53031 (h0 : function.extfun Type topological_space) : @t1_space.{0} (simple_graph.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (simple_graph.{0} empty))  := sorry --non-trivial
lemma new_lemma_53032 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (canonically_ordered_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (canonically_ordered_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_53033 (h0 : not (Prop -> false) -> Prop) (h1 : nonempty Prop) : classical.choice_of_by_contradiction' h0 h1 := sorry --non-trivial
lemma new_lemma_53034 (h0 : functor.add_const (complete_lattice (has_add name)) Type) : @complete_lattice.is_Sup_finite_compact.{0} (has_add.{0} name) (@functor.add_const.run.{0 1} (complete_lattice.{0} (has_add.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_53035 (h0 : functor.add_const (function.extfun (Type 1) complete_lattice) Type) : @is_compactly_generated.{1} (semigroup.{1} Type) (@function.extfun_app.{3 2} (Type 1) complete_lattice.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) complete_lattice.{1}) Type h0) (semigroup.{1} Type))  := sorry --non-trivial
lemma new_lemma_53036 (h0 : functor.add_const Prop (comm_semigroup pos)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_53037 (h0 : functor.add_const (group (linear_ordered_comm_monoid_with_zero congr_arg_kind)) empty) : @is_cyclic.{0} (linear_ordered_comm_monoid_with_zero.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (group.{0} (linear_ordered_comm_monoid_with_zero.{0} congr_arg_kind)) empty h0)  := sorry --non-trivial
lemma new_lemma_53038 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (has_edist.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_edist.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53039 (h0 : functor.add_const (add_group (comm_group name)) name) : @is_add_cyclic.{0} (comm_group.{0} name) (@functor.add_const.run.{0 0} (add_group.{0} (comm_group.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_53040 (h0 : topological_space (finset (has_add (has_to_string (has_to_string pos))))) : sequential_space (finset (has_add (has_to_string (has_to_string pos)))) := sorry --non-trivial
lemma new_lemma_53041 (h0 : group (comm_group Type)) : is_cyclic (comm_group Type) := sorry --non-trivial
lemma new_lemma_53042 (h0 : complete_lattice (has_zero congr_arg_kind)) : is_atomistic (has_zero congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53043 (h0 : filter (complete_semilattice_Sup (has_nnnorm (random_gen char)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_53044 (h0 : topological_space (with_bot (random_gen (random_gen (random_gen linarith.ineq))))) : locally_compact_space (with_bot (random_gen (random_gen (random_gen linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_53045 (h0 : not (function.extfun Type topological_space -> false)) : @discrete_topology.{0} (normed_group.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (normed_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_53046 (h0 : topological_space (linear_ordered_semiring empty)) : topological_space.separable_space (linear_ordered_semiring empty) := sorry --non-trivial
lemma new_lemma_53047 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (has_ssubset.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_ssubset.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_53048 (h0 : filter (has_add (has_add linarith.comp))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_53049 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (ordered_cancel_add_comm_monoid.{0} (option.{0} ennreal)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_cancel_add_comm_monoid.{0} (option.{0} ennreal)))  := sorry --non-trivial
lemma new_lemma_53050 (h0 : list (with_one to_additive.value_type)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_53051 (h0 : topological_space (sub_neg_monoid (has_neg (has_neg pos)))) : totally_separated_space (sub_neg_monoid (has_neg (has_neg pos))) := sorry --non-trivial
lemma new_lemma_53052 (h0 : topological_space (comm_group (has_add linarith.comp))) : t0_space (comm_group (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_53053 (h0 : monoid (linear_ordered_comm_monoid_with_zero (option unsigned))) : monoid.fg (linear_ordered_comm_monoid_with_zero (option unsigned)) := sorry --non-trivial
lemma new_lemma_53054 (h0 : group (canonically_linear_ordered_monoid unsigned)) : is_cyclic (canonically_linear_ordered_monoid unsigned) := sorry --non-trivial
lemma new_lemma_53055 (h0 : functor.add_const (topological_space (ordered_comm_monoid pos)) Type) : @sequential_space.{0} (ordered_comm_monoid.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (ordered_comm_monoid.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_53056 (h0 : functor.add_const (finset (ordered_comm_monoid pos)) pos) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53057 (h0 : set (semi_normed_comm_ring char)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_53058 (h0 : add_group (semi_normed_comm_ring (has_nnnorm fun_info))) : is_add_cyclic (semi_normed_comm_ring (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_53059 (h0 : functor.add_const (filter (finset name)) linarith.comp) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53060 (h0 : functor.add_const (complete_lattice (add_cancel_monoid ennreal)) Type) : @is_compactly_generated.{0} (add_cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 1} (complete_lattice.{0} (add_cancel_monoid.{0} ennreal)) Type h0)  := sorry --non-trivial
lemma new_lemma_53061 (h0 : functor.add_const (topological_space (complete_distrib_lattice name)) Type) : @preconnected_space.{0} (complete_distrib_lattice.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (complete_distrib_lattice.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_53062 (h0 : add_zero_class (semi_normed_comm_ring to_additive.value_type)) (h1 : add_group (add_monoid.End (semi_normed_comm_ring to_additive.value_type))) : is_add_cyclic (add_monoid.End (semi_normed_comm_ring to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_53063 : subsingleton empty := sorry --non-trivial
lemma new_lemma_53064 (h0 : topological_space (semiring (semiring (semiring num)))) : t0_space (semiring (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_53065 (h1 : ring (has_nnnorm fun_info)) : rank_condition (has_nnnorm fun_info) := sorry --non-trivial
lemma new_lemma_53066 (h0 : complete_lattice (complete_linear_order (semiring empty))) : is_compactly_generated (complete_linear_order (semiring empty)) := sorry --non-trivial
lemma new_lemma_53067 (h0 : not (has_mem.mem (with_one linarith.ineq) has_emptyc.emptyc -> false)) : @is_add_cyclic.{0} (with_one.{0} linarith.ineq) (@finset.pi.empty.{1 0} Type add_group.{0} (with_one.{0} linarith.ineq) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_one.{0} linarith.ineq) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_53068 (h0 : topological_space (has_neg (boolean_algebra (boolean_algebra name)))) : locally_compact_space (has_neg (boolean_algebra (boolean_algebra name))) := sorry --non-trivial
lemma new_lemma_53069 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring Type)) name) : @irreducible_space.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (canonically_ordered_comm_semiring.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_53070 (h0 : topological_space (semigroup (boolean_algebra.core Type))) : t1_space (semigroup (boolean_algebra.core Type)) := sorry --non-trivial
lemma new_lemma_53071 (h0 : function.extfun (multiset Type) (has_mem.mem (canonically_ordered_comm_semiring pos))) : @normalizer_condition.{0} (canonically_ordered_comm_semiring.{0} pos) (@multiset.pi.empty.{1 0} Type group.{0} (canonically_ordered_comm_semiring.{0} pos) (@function.extfun_app.{2 0} (multiset.{1} Type) (@has_mem.mem.{1 1} Type (multiset.{1} Type) (@multiset.has_mem.{1} Type) (canonically_ordered_comm_semiring.{0} pos)) h0 (@has_zero.zero.{1} (multiset.{1} Type) (@multiset.has_zero.{1} Type))))  := sorry --non-trivial
lemma new_lemma_53072 (h0 : group (linear_ordered_add_comm_group (with_bot (random_gen to_additive.value_type)))) : normalizer_condition (linear_ordered_add_comm_group (with_bot (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_53073 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (boolean_algebra.core.{0} pos) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (boolean_algebra.core.{0} pos))  := sorry --non-trivial
lemma new_lemma_53074 (h0 : not (function.extfun Type topological_space -> false)) : @normal_space.{0} (has_union.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_union.{0} empty))  := sorry --non-trivial
lemma new_lemma_53075 (h0 : has_lt (simple_graph (normed_field (mul_one_class ereal)))) : no_max_order (simple_graph (normed_field (mul_one_class ereal))) := sorry --non-trivial
lemma new_lemma_53076 (h0 : function.extfun (finset Type) (has_mem.mem (has_top num))) : @totally_separated_space.{0} (has_top.{0} num) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_top.{0} num) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_top.{0} num)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_53077 (h0 : group (ring (has_neg name))) : is_cyclic (ring (has_neg name)) := sorry --non-trivial
lemma new_lemma_53078 (h0 : finset (add_group (semiring (semiring num)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_53079 (h0 : add_monoid (add_comm_monoid (option pos))) : add_monoid.fg (add_comm_monoid (option pos)) := sorry --non-trivial
lemma new_lemma_53080 (h1 : topological_space (has_top (has_top (has_top congr_arg_kind)))) : totally_disconnected_space (has_top (has_top (has_top congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_53081 (h2 : complete_lattice (mul_one_class enat)) : complete_lattice.is_Sup_finite_compact (mul_one_class enat) := sorry --non-trivial
lemma new_lemma_53082 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @is_atomistic.{0} (has_emptyc.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) complete_lattice.{0}) (has_emptyc.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_53083 (h0 : Prop) (h1 : ulower punit) : category_theory.hom_of_element h0 (ulower.up h1) := sorry --non-trivial
lemma new_lemma_53084 (h0 : add_monoid (has_neg (has_neg_part (has_to_string (has_to_string Type))))) : add_monoid.fg (has_neg (has_neg_part (has_to_string (has_to_string Type)))) := sorry --non-trivial
lemma new_lemma_53085 (h1 : has_lt (has_le (mul_one_class string.iterator_imp))) : no_max_order (has_le (mul_one_class string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_53086 (h0 : group (comm_ring (has_nnnorm (has_nnnorm fun_info)))) : is_cyclic (comm_ring (has_nnnorm (has_nnnorm fun_info))) := sorry --non-trivial
lemma new_lemma_53087 (h0 : not (complete_lattice (non_unital_non_assoc_semiring linarith.comp_source) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (non_unital_non_assoc_semiring.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (complete_lattice.{0} (non_unital_non_assoc_semiring.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_53088 (h0 : functor.add_const (topological_space (finset name)) pos) : @preirreducible_space.{0} (finset.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_53089 (h0 : topological_space (boolean_algebra (has_add real))) : preconnected_space (boolean_algebra (has_add real)) := sorry --non-trivial
lemma new_lemma_53090 (h0 : functor.add_const (topological_space (comm_group Type)) linarith.comp) : @discrete_topology.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (comm_group.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53091 (h0 : ring (ordered_comm_monoid (simple_graph (has_add Type)))) : rank_condition (ordered_comm_monoid (simple_graph (has_add Type))) := sorry --non-trivial
lemma new_lemma_53092 (h0 : ring (plift (option (option (option unsigned))))) : is_domain (plift (option (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_53093 (h0 : ring (has_neg_part pos)) : is_domain (has_neg_part pos) := sorry --non-trivial
lemma new_lemma_53094 (h0 : complete_lattice (boolean_algebra.core empty)) : complete_lattice.is_Sup_finite_compact (boolean_algebra.core empty) := sorry --non-trivial
lemma new_lemma_53095 (h0 : monoid (as_linear_order num)) : monoid.fg (as_linear_order num) := sorry --non-trivial
lemma new_lemma_53096 (h0 : ring (has_nnnorm (has_inv fun_info))) : is_domain (has_nnnorm (has_inv fun_info)) := sorry --non-trivial
lemma new_lemma_53097 (h0 : topological_space (linear_ordered_semiring (semiring congr_arg_kind))) : normal_space (linear_ordered_semiring (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_53098 (h0 : complete_lattice (has_nndist (ring linarith.comp))) : complete_lattice.is_Sup_finite_compact (has_nndist (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_53099 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (linear_ordered_semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (linear_ordered_semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53100 (h0 : not (ring (has_star empty) -> false)) : @rank_condition.{0} (has_star.{0} empty) (@classical.by_contradiction'.{1} (ring.{0} (has_star.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_53101 (h0 : cancel_comm_monoid_with_zero (comm_group (finset ennreal))) : unique_factorization_monoid (comm_group (finset ennreal)) := sorry --non-trivial
lemma new_lemma_53102 (h1 : function.extfun Type group) : @is_cyclic.{0} (has_emptyc.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} h1 (has_emptyc.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_53103 (h0 : filter (normed_group fun_info)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_53104 (h0 : topological_space (has_union (has_norm linarith.comp))) : t0_space (has_union (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_53105 (h1 : group (topological_space (mul_one_class reducibility_hints))) : is_cyclic (topological_space (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_53106 (h0 : functor.add_const Prop (canonically_ordered_comm_semiring (option (option unsigned)))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_53107 (h0 : has_lt (normed_field linarith.ineq)) : no_max_order (normed_field linarith.ineq) := sorry --non-trivial
lemma new_lemma_53108 (h0 : ordered_add_comm_monoid (finset (ring Type))) : archimedean (finset (ring Type)) := sorry --non-trivial
lemma new_lemma_53109 (h0 : topological_space (normed_lattice_add_comm_group (sub_neg_monoid (sub_neg_monoid pos)))) : totally_separated_space (normed_lattice_add_comm_group (sub_neg_monoid (sub_neg_monoid pos))) := sorry --non-trivial
lemma new_lemma_53110 (h1 : ring (complete_distrib_lattice string_imp)) : strong_rank_condition (complete_distrib_lattice string_imp) := sorry --non-trivial
lemma new_lemma_53111 (h0 : group (with_bot linarith.ineq)) : normalizer_condition (with_bot linarith.ineq) := sorry --non-trivial
lemma new_lemma_53112 (h0 : topological_space (comm_ring (has_nnnorm (has_nnnorm (denumerable linarith.ineq))))) : path_connected_space (comm_ring (has_nnnorm (has_nnnorm (denumerable linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_53113 (h0 : complete_lattice (ring (comm_group pos))) : is_compactly_generated (ring (comm_group pos)) := sorry --non-trivial
lemma new_lemma_53114 (h0 : not (monoid (semiring fun_info) -> false)) : @monoid.fg.{0} (semiring.{0} fun_info) (@classical.by_contradiction'.{1} (monoid.{0} (semiring.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_53115 (h0 : fin has_zero.zero) : @regular_space.{1} (ordered_comm_ring.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (ordered_comm_ring.{1} Type)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)))  := sorry --non-trivial
lemma new_lemma_53116 (h0 : not (ring (set fun_info) -> false)) : @rank_condition.{0} (set.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (set.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_53117 (h0 : functor.add_const (ordered_add_comm_monoid (comm_group pos)) Type) : @archimedean.{0} (comm_group.{0} pos) (@functor.add_const.run.{0 1} (ordered_add_comm_monoid.{0} (comm_group.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_53118 (h6 : not (complete_lattice (add_monoid fun_info) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (add_monoid.{0} fun_info) (@classical.by_contradiction'.{1} (complete_lattice.{0} (add_monoid.{0} fun_info)) h6)  := sorry --non-trivial
lemma new_lemma_53119 (h0 : add_monoid (has_union (with_bot fun_info))) : add_monoid.fg (has_union (with_bot fun_info)) := sorry --non-trivial
lemma new_lemma_53120 (h0 : functor.add_const (topological_space (complete_distrib_lattice name)) name) : @loc_path_connected_space.{0} (complete_distrib_lattice.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_53121 (h0 : add_group (generalized_boolean_algebra Type)) : is_add_cyclic (generalized_boolean_algebra Type) := sorry --non-trivial
lemma new_lemma_53122 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (left_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (left_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_53123 (h0 : function.extfun Type topological_space) : @normal_space.{0} (normed_lattice_add_comm_group.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_lattice_add_comm_group.{0} name))  := sorry --non-trivial
lemma new_lemma_53124 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (partial_order.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (partial_order.{0} empty))  := sorry --non-trivial
lemma new_lemma_53125 (h0 : topological_space (has_add (finset (has_add (has_add Type))))) : preirreducible_space (has_add (finset (has_add (has_add Type)))) := sorry --non-trivial
lemma new_lemma_53126 (h0 : functor.add_const (topological_space (group_with_zero ennreal)) num) : @preirreducible_space.{0} (group_with_zero.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (group_with_zero.{0} ennreal)) num h0)  := sorry --non-trivial
lemma new_lemma_53127 (h0 : complete_lattice (topological_space (random_gen reducibility_hints))) : is_compactly_generated (topological_space (random_gen reducibility_hints)) := sorry --non-trivial
lemma new_lemma_53128 (h0 : function.extfun nat fin) : @irreducible_space.{1} (complete_distrib_lattice.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (complete_distrib_lattice.{1} Type)) (@function.extfun_app.{1 1} nat fin (@matrix.vec_empty.{0} (function.extfun.{1 1} nat fin) (@function.extfun_app.{1 1} nat fin (@matrix.vec_empty.{0} (function.extfun.{1 1} nat fin) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero))) (@has_zero.zero.{0} nat nat.has_zero))) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_53129 (h0 : topological_space (non_unital_non_assoc_semiring to_additive.value_type)) (h1 : not (preorder (non_unital_non_assoc_semiring to_additive.value_type) -> false)) : @order_topology.{0} (non_unital_non_assoc_semiring.{0} to_additive.value_type) h0 (@classical.by_contradiction'.{1} (preorder.{0} (non_unital_non_assoc_semiring.{0} to_additive.value_type)) h1)  := sorry --non-trivial
lemma new_lemma_53130 (h0 : function.extfun (finset Type) (has_mem.mem (has_emptyc fun_info))) : @rank_condition.{0} (has_emptyc.{0} fun_info) (@finset.pi.empty.{1 0} Type ring.{0} (has_emptyc.{0} fun_info) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_emptyc.{0} fun_info)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_53131 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53132 (h0 : functor.add_const (filter (finset Type)) (comm_group (has_add name))) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53133 (h0 : functor.add_const (topological_space (normed_comm_ring linarith.comp)) (has_pos_part linarith.comp)) : @preirreducible_space.{0} (normed_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} linarith.comp)) (has_pos_part.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_53134 (h0 : functor.add_const (fin has_zero.zero) real) : @complete_space.{1} (sub_neg_monoid.{1} Type) (@matrix.vec_empty.{1} (uniform_space.{1} (sub_neg_monoid.{1} Type)) (@functor.add_const.run.{0 0} (fin (@has_zero.zero.{0} nat nat.has_zero)) real h0))  := sorry --non-trivial
lemma new_lemma_53135 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (has_pos_part.{0} real) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_pos_part.{0} real))  := sorry --non-trivial
lemma new_lemma_53136 (h0 : topological_space (mul_zero_class unsigned)) : discrete_topology (mul_zero_class unsigned) := sorry --non-trivial
lemma new_lemma_53137 (h0 : functor.add_const (complete_lattice (boolean_algebra.core unsigned)) linarith.comp) : @complete_lattice.is_Sup_finite_compact.{0} (boolean_algebra.core.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (boolean_algebra.core.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53138 (h0 : complete_lattice (has_ssubset (random_gen (random_gen linarith.ineq)))) : is_compactly_generated (has_ssubset (random_gen (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_53139 (h0 : functor.add_const (list (normed_comm_ring Type)) pos) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53140 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_dist.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_dist.{0} num))  := sorry --non-trivial
lemma new_lemma_53141 (h0 : uniform_space (semigroup (option ennreal))) : separated_space (semigroup (option ennreal)) := sorry --non-trivial
lemma new_lemma_53142 (h0 : monoid (has_norm (random_gen (random_gen to_additive.value_type)))) : monoid.fg (has_norm (random_gen (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_53143 (h0 : ring (has_norm linarith.comp_source)) : is_domain (has_norm linarith.comp_source) := sorry --non-trivial
lemma new_lemma_53144 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (complete_linear_order.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (complete_linear_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53145 (h0 : functor.add_const (monoid (mul_zero_class Type)) Type) : @monoid.fg.{1} (mul_zero_class.{1} Type) (@functor.add_const.run.{1 1} (monoid.{1} (mul_zero_class.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_53146 (h0 : topological_space (comm_semigroup (ordered_comm_monoid linarith.comp))) : sequential_space (comm_semigroup (ordered_comm_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_53147 (h0 : functor.add_const (function.extfun (Type 1) ordered_comm_monoid) name) : @has_exists_mul_of_le.{1} (add_cancel_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) ordered_comm_monoid.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) ordered_comm_monoid.{1}) name h0) (add_cancel_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_53148 (h0 : add_group (add_comm_monoid (finset (ring linarith.comp)))) : is_add_cyclic (add_comm_monoid (finset (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_53149 (h1 : topological_space (with_bot linarith.ineq)) : totally_disconnected_space (with_bot linarith.ineq) := sorry --non-trivial
lemma new_lemma_53150 (h2 : complete_lattice (topological_space to_additive.value_type)) : complete_lattice.is_Sup_finite_compact (topological_space to_additive.value_type) := sorry --non-trivial
lemma new_lemma_53151 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @discrete_topology.{1} (has_Inf.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (has_Inf.{1} Type))  := sorry --non-trivial
lemma new_lemma_53152 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (complete_distrib_lattice.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_distrib_lattice.{0} num))  := sorry --non-trivial
lemma new_lemma_53153 (h2 : has_neg enat) (h3 : measurable_space enat) : has_measurable_neg enat := sorry --non-trivial
lemma new_lemma_53154 (h0 : topological_space (random_gen (semiring fun_info))) : discrete_topology (random_gen (semiring fun_info)) := sorry --non-trivial
lemma new_lemma_53155 (h0 : filter (semigroup unsigned)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_53156 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (has_nndist.{0} ennreal) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (has_nndist.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_53157 (h0 : topological_space (boolean_algebra.core (has_neg_part (has_neg_part pos)))) : irreducible_space (boolean_algebra.core (has_neg_part (has_neg_part pos))) := sorry --non-trivial
lemma new_lemma_53158 (h0 : ring (has_norm (random_gen (has_top char)))) : is_domain (has_norm (random_gen (has_top char))) := sorry --non-trivial
lemma new_lemma_53159 (h0 : function.extfun Type group) : @is_cyclic.{0} (has_compl.{0} char) (@function.extfun_app.{2 1} Type group.{0} h0 (has_compl.{0} char))  := sorry --non-trivial
lemma new_lemma_53160 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (non_unital_non_assoc_semiring.{0} linarith.ineq) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (non_unital_non_assoc_semiring.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_53161 (h0 : function.extfun Type (functor.comp uniform_space has_nndist)) : @separated_space.{0} (has_nndist.{0} ennreal) (@functor.comp.run.{0 0 0} uniform_space.{0} has_nndist.{0} ennreal (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} uniform_space.{0} has_nndist.{0}) h0 ennreal))  := sorry --non-trivial
lemma new_lemma_53162 (h1 : uniform_space (has_nnnorm ereal)) : complete_space (has_nnnorm ereal) := sorry --non-trivial
lemma new_lemma_53163 (h0 : measurable_space linarith.ineq) (h1 : has_inf linarith.ineq) : has_measurable_inf linarith.ineq := sorry --non-trivial
lemma new_lemma_53164 (h0 : topological_space (ring (option (option (option pos))))) : t1_space (ring (option (option (option pos)))) := sorry --non-trivial
lemma new_lemma_53165 (h0 : topological_space (add_right_cancel_monoid (option (option empty)))) : locally_compact_space (add_right_cancel_monoid (option (option empty))) := sorry --non-trivial
lemma new_lemma_53166 (h0 : group (add_cancel_monoid (ring linarith.comp))) : group.fg (add_cancel_monoid (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_53167 (h0 : functor.add_const (group (finset linarith.comp)) (has_neg Type)) : @group.fg.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 1} (group.{0} (finset.{0} linarith.comp)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_53168 (h0 : monoid (canonically_ordered_comm_semiring (has_add (has_add (has_add (has_add name)))))) : monoid.fg (canonically_ordered_comm_semiring (has_add (has_add (has_add (has_add name))))) := sorry --non-trivial
lemma new_lemma_53169 (h1 : topological_space (with_one (random_gen (random_gen string_imp)))) : totally_separated_space (with_one (random_gen (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_53170 (h0 : functor.add_const (list (preorder empty)) congr_arg_kind) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53171 (h0 : group (linear_ordered_add_comm_group (random_gen (random_gen linarith.comp_source)))) : is_cyclic (linear_ordered_add_comm_group (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_53172 (h0 : functor.add_const (function.extfun (Type 1) add_monoid) pos) : @add_monoid.fg.{1} (simple_graph.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_monoid.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) add_monoid.{1}) pos h0) (simple_graph.{1} Type))  := sorry --non-trivial
lemma new_lemma_53173 (h0 : ring (has_emptyc (has_top (measurable_space congr_arg_kind)))) : is_domain (has_emptyc (has_top (measurable_space congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_53174 (h0 : not (function.extfun Type add_monoid -> false)) : @add_monoid.fg.{0} (has_top.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_monoid.{0}) h0) (has_top.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53175 (h0 : add_group (left_cancel_monoid (semiring unsigned))) : is_add_cyclic (left_cancel_monoid (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_53176 (h0 : topological_space (add_left_cancel_semigroup (option (option (option unsigned))))) : t0_space (add_left_cancel_semigroup (option (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_53177 (h0 : not (uniform_space (non_unital_non_assoc_semiring to_additive.value_type) -> false)) : @complete_space.{0} (non_unital_non_assoc_semiring.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (uniform_space.{0} (non_unital_non_assoc_semiring.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_53178 (h0 : group (has_norm linarith.ineq)) : is_cyclic (has_norm linarith.ineq) := sorry --non-trivial
lemma new_lemma_53179 (h0 : ulower Prop) (h1 : list (ulower Prop)) : @id.{1} Prop (@ulower.up.{0} Prop encodable.Prop (@list.ilast'.{0} (@ulower.{0} Prop encodable.Prop) h0 h1))  := sorry --non-trivial
lemma new_lemma_53180 (h0 : topological_space (canonically_ordered_monoid (has_neg (has_neg (has_neg name))))) : preconnected_space (canonically_ordered_monoid (has_neg (has_neg (has_neg name)))) := sorry --non-trivial
lemma new_lemma_53181 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (semigroup.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_53182 (h1 : not (topological_space (random_gen congr_arg_kind) -> false)) : @discrete_topology.{0} (random_gen.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} congr_arg_kind)) h1)  := sorry --non-trivial
lemma new_lemma_53183 (h0 : function.extfun (finset Type) (has_mem.mem (id empty))) : @locally_compact_space.{0} (@id.{2} Type empty) (@finset.pi.empty.{1 0} Type topological_space.{0} (@id.{2} Type empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (@id.{2} Type empty)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_53184 (h0 : topological_space (has_nndist (has_add ennreal))) : normal_space (has_nndist (has_add ennreal)) := sorry --non-trivial
lemma new_lemma_53185 (h0 : topological_space (topological_space (random_gen (random_gen fun_info)))) : locally_compact_space (topological_space (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_53186 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} environment.implicit_infer_kind (@function.extfun_app.{2 1} Type add_monoid.{0} h0 environment.implicit_infer_kind)  := sorry --non-trivial
lemma new_lemma_53187 (h0 : topological_space (add_comm_monoid (comm_group (comm_group Type)))) : regular_space (add_comm_monoid (comm_group (comm_group Type))) := sorry --non-trivial
lemma new_lemma_53188 (h0 : group (has_emptyc (has_norm congr_arg_kind))) : group.fg (has_emptyc (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_53189 (h1 : topological_space (linear_ordered_add_comm_group (comm_ring fun_info))) : totally_disconnected_space (linear_ordered_add_comm_group (comm_ring fun_info)) := sorry --non-trivial
lemma new_lemma_53190 (h0 : not (add_group (dlist fun_info) -> false)) : @is_add_cyclic.{0} (dlist.{0} fun_info) (@classical.by_contradiction'.{1} (add_group.{0} (dlist.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_53191 (h0 : functor.add_const (ordered_add_comm_monoid (has_nndist unsigned)) pos) : @archimedean.{0} (has_nndist.{0} unsigned) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (has_nndist.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_53192 (h0 : finset (ring pos)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_53193 (h0 : ordered_comm_monoid (ring pos)) : has_exists_mul_of_le (ring pos) := sorry --non-trivial
lemma new_lemma_53194 (h0 : topological_space (add_comm_monoid (monoid_with_zero pos))) : totally_disconnected_space (add_comm_monoid (monoid_with_zero pos)) := sorry --non-trivial
lemma new_lemma_53195 (h0 : ring (has_neg num)) : is_principal_ideal_ring (has_neg num) := sorry --non-trivial
lemma new_lemma_53196 (h0 : group (ordered_comm_group congr_arg_kind)) : group.fg (ordered_comm_group congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53197 (h0 : monoid (has_norm to_additive.value_type)) : monoid.fg (has_norm to_additive.value_type) := sorry --non-trivial
lemma new_lemma_53198 (h0 : functor.add_const (topological_space (boolean_algebra.core pos)) (has_add Type)) : @locally_compact_space.{0} (boolean_algebra.core.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.core.{0} pos)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_53199 (h0 : random_gen fun_info -> Prop) : Exists h0 := sorry --non-trivial
lemma new_lemma_53200 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (has_neg_part.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_neg_part.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_53201 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (measurable_space.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measurable_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_53202 (h0 : functor.add_const (group (add_comm_monoid environment.implicit_infer_kind)) Type) : @group.fg.{0} (add_comm_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (group.{0} (add_comm_monoid.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_53203 (h0 : topological_space (has_to_string (boolean_algebra.core (finset pos)))) : irreducible_space (has_to_string (boolean_algebra.core (finset pos))) := sorry --non-trivial
lemma new_lemma_53204 (h0 : topological_space (complete_linear_order unsigned)) : topological_space.separable_space (complete_linear_order unsigned) := sorry --non-trivial
lemma new_lemma_53205 (h0 : functor.add_const (topological_space (comm_semigroup pos)) Type) : @totally_separated_space.{0} (comm_semigroup.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (comm_semigroup.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_53206 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (has_zero.{0} name) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_zero.{0} name))  := sorry --non-trivial
lemma new_lemma_53207 (h0 : topological_space linarith.ineq) : locally_compact_space linarith.ineq := sorry --non-trivial
lemma new_lemma_53208 (h0 : topological_space (normed_group (has_norm linarith.comp_source))) : discrete_topology (normed_group (has_norm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_53209 (h0 : functor.add_const (group (has_neg pos)) Type) : @is_cyclic.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 1} (group.{0} (has_neg.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_53210 (h0 : ring (mul_one_class (mul_one_class (mul_one_class fun_info)))) : strong_rank_condition (mul_one_class (mul_one_class (mul_one_class fun_info))) := sorry --non-trivial
lemma new_lemma_53211 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t1_space.{0} (monoid.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_53212 (h0 : function.extfun (Type 1) topological_space) : @locally_compact_space.{1} (canonically_ordered_comm_semiring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (canonically_ordered_comm_semiring.{1} Type))  := sorry --non-trivial
lemma new_lemma_53213 (h0 : functor.add_const (function.extfun Type topological_space) Type) : @totally_disconnected_space.{0} (has_pos_part.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) Type h0) (has_pos_part.{0} pos))  := sorry --non-trivial
lemma new_lemma_53214 (h2 : has_mem.mem (linear_ordered_semiring congr_arg_kind) has_emptyc.emptyc) : @rank_condition.{0} (linear_ordered_semiring.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type ring.{0} (linear_ordered_semiring.{0} congr_arg_kind) h2)  := sorry --non-trivial
lemma new_lemma_53215 (h0 : functor.add_const (cancel_comm_monoid_with_zero (left_cancel_monoid unsigned)) num) : @unique_factorization_monoid.{0} (left_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (left_cancel_monoid.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_53216 (h0 : topological_space (boolean_algebra (finset (has_neg environment.implicit_infer_kind)))) : discrete_topology (boolean_algebra (finset (has_neg environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_53217 (h0 : functor.add_const (topological_space (add_comm_monoid linarith.comp)) linarith.comp) : @preconnected_space.{0} (add_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (add_comm_monoid.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53218 (h0 : function.extfun nat fin) : @preirreducible_space.{0} (generalized_boolean_algebra.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (generalized_boolean_algebra.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_53219 (h0 : filter (add_comm_monoid (finset pos))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_53220 (h0 : function.extfun Type topological_space) : @normal_space.{0} (generalized_boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (generalized_boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_53221 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (cancel_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_53222 (h0 : functor.add_const (topological_space (normed_comm_ring name)) unsigned) : @regular_space.{0} (normed_comm_ring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_53223 (h0 : functor.add_const (topological_space (has_neg linarith.comp)) pos) : @t0_space.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_53224 (h1 : ring (has_norm string_imp)) : is_domain (has_norm string_imp) := sorry --non-trivial
lemma new_lemma_53225 (h0 : semiring (has_add (add_cancel_monoid (has_neg name)))) : is_noetherian_ring (has_add (add_cancel_monoid (has_neg name))) := sorry --non-trivial
lemma new_lemma_53226 (h1 : add_group (has_le reducibility_hints)) : is_add_cyclic (has_le reducibility_hints) := sorry --non-trivial
lemma new_lemma_53227 (h0 : function.extfun Type topological_space) : @regular_space.{0} (pseudo_metric_space.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (pseudo_metric_space.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53228 (h2 : ring (has_append (has_nnnorm char))) : rank_condition (has_append (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_53229 (h0 : ring (add_comm_semigroup (mul_one_class string.iterator_imp))) : is_domain (add_comm_semigroup (mul_one_class string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_53230 (h0 : group (encodable (comm_ring string_imp))) : group.fg (encodable (comm_ring string_imp)) := sorry --non-trivial
lemma new_lemma_53231 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (has_to_string.{0} num) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (has_to_string.{0} num))  := sorry --non-trivial
lemma new_lemma_53232 (h0 : ring (normed_group (has_norm fun_info))) : strong_rank_condition (normed_group (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_53233 (h0 : function.extfun nat fin) : @unique_factorization_monoid.{1} (has_Inf.{1} Type) (@matrix.vec_empty.{1} (cancel_comm_monoid_with_zero.{1} (has_Inf.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_53234 (h0 : ring (add_comm_monoid (semigroup (finset environment.implicit_infer_kind)))) : is_principal_ideal_ring (add_comm_monoid (semigroup (finset environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_53235 (h0 : topological_space (has_Inf pos)) : t1_space (has_Inf pos) := sorry --non-trivial
lemma new_lemma_53236 (h0 : group (has_bot congr_arg_kind)) : is_cyclic (has_bot congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53237 (h0 : complete_lattice (has_norm string_imp)) : complete_lattice.is_Sup_finite_compact (has_norm string_imp) := sorry --non-trivial
lemma new_lemma_53238 (h0 : group (pseudo_metric_space (option pos))) : group.fg (pseudo_metric_space (option pos)) := sorry --non-trivial
lemma new_lemma_53239 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (has_nndist.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_nndist.{0} pos))  := sorry --non-trivial
lemma new_lemma_53240 (h0 : topological_space (normed_field string.iterator_imp)) : totally_disconnected_space (normed_field string.iterator_imp) := sorry --non-trivial
lemma new_lemma_53241 (h0 : topological_space (comm_semigroup (comm_semigroup pos))) : sequential_space (comm_semigroup (comm_semigroup pos)) := sorry --non-trivial
lemma new_lemma_53242 (h0 : complete_lattice (with_bot to_additive.value_type)) : complete_lattice.is_Sup_finite_compact (with_bot to_additive.value_type) := sorry --non-trivial
lemma new_lemma_53243 (h0 : not (ring (has_top linarith.comp_source) -> false)) : @strong_rank_condition.{0} (has_top.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (ring.{0} (has_top.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_53244 (h0 : add_group (finset congr_arg_kind)) : is_add_cyclic (finset congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53245 (h0 : topological_space (semiring to_additive.value_type)) : irreducible_space (semiring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_53246 (h0 : group (semiring (complete_semilattice_Sup empty))) : group.fg (semiring (complete_semilattice_Sup empty)) := sorry --non-trivial
lemma new_lemma_53247 (h0 : functor.add_const (uniform_space (semigroup Type)) Type) : @complete_space.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 1} (uniform_space.{1} (semigroup.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_53248 (h0 : functor.add_const (group (linear_ordered_comm_monoid_with_zero congr_arg_kind)) (option (option (option empty)))) : @normalizer_condition.{0} (linear_ordered_comm_monoid_with_zero.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (group.{0} (linear_ordered_comm_monoid_with_zero.{0} congr_arg_kind)) (option.{0} (option.{0} (option.{0} empty))) h0)  := sorry --non-trivial
lemma new_lemma_53249 (h0 : not (ring (add_cancel_comm_monoid string.iterator_imp) -> false)) : @is_domain.{0} (add_cancel_comm_monoid.{0} string.iterator_imp) (@classical.by_contradiction'.{1} (ring.{0} (add_cancel_comm_monoid.{0} string.iterator_imp)) h0)  := sorry --non-trivial
lemma new_lemma_53250 (h0 : add_monoid (linear_ordered_semiring (has_top (has_top congr_arg_kind)))) : add_monoid.fg (linear_ordered_semiring (has_top (has_top congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_53251 (h0 : ring (has_div reducibility_hints)) : is_domain (has_div reducibility_hints) := sorry --non-trivial
lemma new_lemma_53252 (h0 : functor.add_const (topological_space (mul_zero_class ennreal)) unsigned) : @discrete_topology.{0} (mul_zero_class.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (mul_zero_class.{0} ennreal)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_53253 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (sub_neg_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (sub_neg_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53254 (h0 : functor.add_const (function.extfun Type ordered_comm_monoid) name) : @has_exists_mul_of_le.{0} (normed_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) name h0) (normed_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53255 (h0 : functor.add_const Prop (option (option (option (option (option (option ennreal))))))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_53256 (h0 : topological_space (ordered_comm_ring name)) : locally_compact_space (ordered_comm_ring name) := sorry --non-trivial
lemma new_lemma_53257 (h0 : topological_space (has_Inf (boolean_algebra.core Type))) : totally_disconnected_space (has_Inf (boolean_algebra.core Type)) := sorry --non-trivial
lemma new_lemma_53258 (h0 : topological_space (has_le reducibility_hints)) : path_connected_space (has_le reducibility_hints) := sorry --non-trivial
lemma new_lemma_53259 (h0 : functor.add_const (topological_space (has_Sup congr_arg_kind)) num) : @totally_separated_space.{0} (has_Sup.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Sup.{0} congr_arg_kind)) num h0)  := sorry --non-trivial
lemma new_lemma_53260 (h1 : not (complete_lattice (semiring linarith.ineq) -> false)) : @is_atomistic.{0} (semiring.{0} linarith.ineq) (@classical.by_contradiction'.{1} (complete_lattice.{0} (semiring.{0} linarith.ineq)) h1)  := sorry --non-trivial
lemma new_lemma_53261 (h0 : has_mem.mem (has_norm congr_arg_kind) has_emptyc.emptyc) : @path_connected_space.{0} (has_norm.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_norm.{0} congr_arg_kind) h0)  := sorry --non-trivial
lemma new_lemma_53262 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (has_neg.{0} ennreal) (@function.extfun_app.{2 1} Type monoid.{0} h0 (has_neg.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_53263 (h0 : topological_space (generalized_boolean_algebra (has_add name))) : path_connected_space (generalized_boolean_algebra (has_add name)) := sorry --non-trivial
lemma new_lemma_53264 (h0 : group (has_add linarith.comp_source)) : is_cyclic (has_add linarith.comp_source) := sorry --non-trivial
lemma new_lemma_53265 (h0 : topological_space (linear_ordered_field pos)) : path_connected_space (linear_ordered_field pos) := sorry --non-trivial
lemma new_lemma_53266 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem semiring)) : @is_noetherian_ring.{0} (measurable_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type semiring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) semiring.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) semiring.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (measurable_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53267 (h0 : topological_space (sub_neg_monoid (has_add (has_add pos)))) : totally_separated_space (sub_neg_monoid (has_add (has_add pos))) := sorry --non-trivial
lemma new_lemma_53268 (h0 : topological_space (measurable_space.dynkin_system (linear_ordered_semiring empty))) : discrete_topology (measurable_space.dynkin_system (linear_ordered_semiring empty)) := sorry --non-trivial
lemma new_lemma_53269 (h0 : uniform_space (simple_graph (finset linarith.comp))) : separated_space (simple_graph (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_53270 (h0 : not (function.extfun (finset Type) (has_mem.mem (has_one empty)) -> false)) : @complete_space.{0} (has_one.{0} empty) (@finset.pi.empty.{1 0} Type uniform_space.{0} (has_one.{0} empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_one.{0} empty)) (@classical.by_contradiction'.{0} (function.extfun.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_one.{0} empty))) h0) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_53271 (h0 : add_monoid (measurable_space (semiring linarith.comp))) : add_monoid.fg (measurable_space (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_53272 (h0 : function.extfun Type group) : @is_cyclic.{0} (mul_zero_class.{0} num) (@function.extfun_app.{2 1} Type group.{0} h0 (mul_zero_class.{0} num))  := sorry --non-trivial
lemma new_lemma_53273 (h0 : topological_space (ordered_comm_monoid pos)) : t0_space (ordered_comm_monoid pos) := sorry --non-trivial
lemma new_lemma_53274 (h0 : not (uniform_space (semi_normed_comm_ring char) -> false)) : @complete_space.{0} (semi_normed_comm_ring.{0} char) (@classical.by_contradiction'.{1} (uniform_space.{0} (semi_normed_comm_ring.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_53275 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_noetherian_ring.{0} (has_neg_part.{0} unsigned) (@function.extfun_app.{2 1} Type semiring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 semiring.{0}) (has_neg_part.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53276 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (canonically_ordered_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (canonically_ordered_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53277 (h0 : functor.add_const (topological_space (normed_comm_ring environment.implicit_infer_kind)) name) : @sequential_space.{0} (normed_comm_ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_53278 (h0 : ring (has_ssubset (random_gen (random_gen linarith.comp_source)))) : is_domain (has_ssubset (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_53279 (h0 : add_group (has_zero linarith.comp)) : is_add_cyclic (has_zero linarith.comp) := sorry --non-trivial
lemma new_lemma_53280 (h0 : functor.add_const (add_monoid (ring environment.implicit_infer_kind)) name) : @add_monoid.fg.{0} (ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (add_monoid.{0} (ring.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_53281 (h0 : group (boolean_algebra linarith.comp)) : is_cyclic (boolean_algebra linarith.comp) := sorry --non-trivial
lemma new_lemma_53282 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (add_left_cancel_semigroup.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_left_cancel_semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_53283 (h0 : add_group (cancel_monoid pos)) : is_add_cyclic (cancel_monoid pos) := sorry --non-trivial
lemma new_lemma_53284 (h0 : complete_lattice (boolean_algebra (comm_group Type))) : is_atomistic (boolean_algebra (comm_group Type)) := sorry --non-trivial
lemma new_lemma_53285 (h0 : cancel_comm_monoid_with_zero (plift (semiring empty))) : unique_factorization_monoid (plift (semiring empty)) := sorry --non-trivial
lemma new_lemma_53286 (h0 : not (topological_space (with_bot num) -> false)) : @discrete_topology.{0} (with_bot.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (with_bot.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_53287 (h0 : ring (linear_ordered_add_comm_group (random_gen (random_gen linarith.comp_source)))) : is_domain (linear_ordered_add_comm_group (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_53288 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (has_one.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (has_one.{0} empty))  := sorry --non-trivial
lemma new_lemma_53289 (h0 : group (monoid_with_zero pos)) : group.fg (monoid_with_zero pos) := sorry --non-trivial
lemma new_lemma_53290 (h0 : functor.add_const (topological_space (has_nndist pos)) name) : @preirreducible_space.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_53291 (h0 : complete_lattice (dlist (has_inv fun_info))) : is_compactly_generated (dlist (has_inv fun_info)) := sorry --non-trivial
lemma new_lemma_53292 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (has_nndist.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_nndist.{0} name))  := sorry --non-trivial
lemma new_lemma_53293 (h0 : add_group (non_unital_non_assoc_semiring (mul_one_class (has_lt string_imp)))) : is_add_cyclic (non_unital_non_assoc_semiring (mul_one_class (has_lt string_imp))) := sorry --non-trivial
lemma new_lemma_53294 (h0 : ring (random_gen (has_emptyc (has_norm (has_norm congr_arg_kind))))) : is_domain (random_gen (has_emptyc (has_norm (has_norm congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_53295 (h0 : ring (add_cancel_monoid (has_Inf (has_add pos)))) : is_principal_ideal_ring (add_cancel_monoid (has_Inf (has_add pos))) := sorry --non-trivial
lemma new_lemma_53296 (h0 : add_group (linear_ordered_add_comm_group char)) (h1 : not (punit -> false)) : is_add_cyclic (linear_ordered_add_comm_group char) := sorry --non-trivial
lemma new_lemma_53297 (h0 : functor.add_const (topological_space (preorder unsigned)) (option empty)) : @preirreducible_space.{0} (preorder.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} unsigned)) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_53298 (h0 : functor.add_const (ordered_comm_monoid (has_Inf linarith.comp)) (has_pos_part (has_Inf linarith.comp))) : @has_exists_mul_of_le.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (has_Inf.{0} linarith.comp)) (has_pos_part.{0} (has_Inf.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_53299 (h0 : group (canonically_linear_ordered_monoid (has_Inf real))) : group.fg (canonically_linear_ordered_monoid (has_Inf real)) := sorry --non-trivial
lemma new_lemma_53300 (h0 : functor.add_const (topological_space (cancel_monoid unsigned)) pos) : @t1_space.{0} (cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_53301 (h0 : filter (add_cancel_monoid num)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_53302 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (has_emptyc.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_emptyc.{0} num))  := sorry --non-trivial
lemma new_lemma_53303 (h0 : fin has_zero.zero) : @is_simple_group.{0} real (@matrix.vec_empty.{0} (group.{0} real) h0)  := sorry --non-trivial
lemma new_lemma_53304 (h0 : filter (random_gen congr_arg_kind)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_53305 (h0 : function.extfun Type group) : @group.fg.{0} (complete_semilattice_Sup.{0} fun_info) (@function.extfun_app.{2 1} Type group.{0} h0 (complete_semilattice_Sup.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_53306 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (preorder.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (preorder.{0} empty))  := sorry --non-trivial
lemma new_lemma_53307 (h0 : group (semi_normed_comm_ring (mul_one_class (has_compl fun_info)))) : is_cyclic (semi_normed_comm_ring (mul_one_class (has_compl fun_info))) := sorry --non-trivial
lemma new_lemma_53308 (h0 : functor.add_const (cancel_comm_monoid_with_zero (add_cancel_monoid unsigned)) linarith.comp) : @unique_factorization_monoid.{0} (add_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (add_cancel_monoid.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53309 (h0 : fin has_zero.zero) : matrix.vec_empty (id (matrix.vec_empty (matrix.vec_empty h0))) := sorry --non-trivial
lemma new_lemma_53310 (h0 : topological_space (linear_ordered_comm_group_with_zero to_additive.value_type)) (h1 : preorder (linear_ordered_comm_group_with_zero to_additive.value_type)) : order_topology (linear_ordered_comm_group_with_zero to_additive.value_type) := sorry --non-trivial
lemma new_lemma_53311 (h0 : finset (has_Inf (has_Inf (has_Inf (has_add pos))))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_53312 (h1 : not (ring (non_unital_non_assoc_semiring string_imp) -> false)) : @is_domain.{0} (non_unital_non_assoc_semiring.{0} string_imp) (@classical.by_contradiction'.{1} (ring.{0} (non_unital_non_assoc_semiring.{0} string_imp)) h1)  := sorry --non-trivial
lemma new_lemma_53313 (h1 : has_mem.mem (measurable_space fun_info) has_emptyc.emptyc) : @complete_space.{0} (measurable_space.{0} fun_info) (@finset.pi.empty.{1 0} Type uniform_space.{0} (measurable_space.{0} fun_info) h1)  := sorry --non-trivial
lemma new_lemma_53314 (h1 : topological_space linarith.comp_source) : totally_disconnected_space linarith.comp_source := sorry --non-trivial
lemma new_lemma_53315 (h0 : topological_space (has_Inf (has_Inf (has_add (has_Inf (has_Inf pos)))))) : t1_space (has_Inf (has_Inf (has_add (has_Inf (has_Inf pos))))) := sorry --non-trivial
lemma new_lemma_53316 (h0 : functor.add_const (function.extfun Type topological_space) name) : @discrete_topology.{0} (add_cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) name h0) (add_cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_53317 (h0 : not (group (has_one linarith.ineq) -> false)) : @is_cyclic.{0} (has_one.{0} linarith.ineq) (@classical.by_contradiction'.{1} (group.{0} (has_one.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_53318 (h0 : ring (add_cancel_monoid (option (option (option ennreal))))) : is_domain (add_cancel_monoid (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_53319 (h0 : topological_space (group_with_zero (option (option ennreal)))) : preconnected_space (group_with_zero (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_53320 (h0 : not (topological_space (complete_linear_order empty) -> false)) : @path_connected_space.{0} (complete_linear_order.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (complete_linear_order.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_53321 (h0 : topological_space (has_pos_part (ring (has_to_string Type)))) : loc_path_connected_space (has_pos_part (ring (has_to_string Type))) := sorry --non-trivial
lemma new_lemma_53322 (h0 : cancel_comm_monoid_with_zero (option (semiring (semiring (semiring (semiring empty)))))) : unique_factorization_monoid (option (semiring (semiring (semiring (semiring empty))))) := sorry --non-trivial
lemma new_lemma_53323 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (has_zero.{0} name) (@function.extfun_app.{2 1} Type monoid.{0} h0 (has_zero.{0} name))  := sorry --non-trivial
lemma new_lemma_53324 (h0 : functor.add_const (functor.add_const Prop environment.implicit_infer_kind) environment.implicit_infer_kind) : functor.add_const.run (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53325 (h0 : fin has_zero.zero) : @t0_space.{0} (normed_lattice_add_comm_group.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)) (normed_lattice_add_comm_group.{0} real))  := sorry --non-trivial
lemma new_lemma_53326 (h0 : semiring (has_add (mul_one_class environment.implicit_infer_kind))) : is_noetherian_ring (has_add (mul_one_class environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_53327 (h0 : topological_space (finset (has_Inf (has_Inf (boolean_algebra Type))))) : preirreducible_space (finset (has_Inf (has_Inf (boolean_algebra Type)))) := sorry --non-trivial
lemma new_lemma_53328 (h0 : cancel_comm_monoid_with_zero (finset environment.implicit_infer_kind)) : unique_factorization_monoid (finset environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_53329 (h0 : list (filter Prop)) : @Lim.{0} Prop sierpinski_space (@nonempty_of_inhabited.{1} Prop sort.inhabited.{0}) (@list.head.{0} (filter.{0} Prop) (@filter.inhabited.{0} Prop) h0)  := sorry --non-trivial
lemma new_lemma_53330 (h0 : function.extfun Type group) : @is_cyclic.{0} (with_bot.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (with_bot.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53331 (h0 : topological_space (generalized_boolean_algebra (has_add pos))) : t0_space (generalized_boolean_algebra (has_add pos)) := sorry --non-trivial
lemma new_lemma_53332 (h0 : functor.add_const (complete_lattice (has_Inf real)) pos) : @is_compactly_generated.{0} (has_Inf.{0} real) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_Inf.{0} real)) pos h0)  := sorry --non-trivial
lemma new_lemma_53333 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (add_cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (add_cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53334 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @discrete_topology.{1} (canonically_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (canonically_ordered_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_53335 (h0 : topological_space (has_nndist (add_cancel_monoid (has_nndist Type)))) : totally_separated_space (has_nndist (add_cancel_monoid (has_nndist Type))) := sorry --non-trivial
lemma new_lemma_53336 (h0 : functor.add_const (topological_space (bin_tree congr_arg_kind)) empty) : @t1_space.{0} (bin_tree.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (bin_tree.{0} congr_arg_kind)) empty h0)  := sorry --non-trivial
lemma new_lemma_53337 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring Type)) linarith.comp) : @locally_compact_space.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (canonically_ordered_comm_semiring.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53338 (h0 : ring (semiring (has_top to_additive.value_type))) : strong_rank_condition (semiring (has_top to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_53339 (h0 : uniform_space (with_bot fun_info)) : complete_space (with_bot fun_info) := sorry --non-trivial
lemma new_lemma_53340 (h0 : function.extfun Type (functor.comp topological_space finset)) : @preconnected_space.{0} (finset.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} finset.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} finset.{0}) h0 name))  := sorry --non-trivial
lemma new_lemma_53341 (h0 : topological_space (fintype linarith.ineq)) : totally_disconnected_space (fintype linarith.ineq) := sorry --non-trivial
lemma new_lemma_53342 (h0 : function.extfun Type ring) : @rank_condition.{0} (has_Inf.{0} linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_Inf.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53343 (h0 : ring (add_group (semiring (semiring (semiring empty))))) : is_domain (add_group (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_53344 (h0 : functor.add_const (monoid (has_zero name)) (has_add unsigned)) : @monoid.fg.{0} (has_zero.{0} name) (@functor.add_const.run.{0 0} (monoid.{0} (has_zero.{0} name)) (has_add.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_53345 (h0 : functor.add_const (uniform_space (boolean_algebra pos)) real) : @separated_space.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (uniform_space.{0} (boolean_algebra.{0} pos)) real h0)  := sorry --non-trivial
lemma new_lemma_53346 (h0 : add_monoid real.angle) : add_monoid.fg real.angle := sorry --non-trivial
lemma new_lemma_53347 (h0 : function.extfun (Type 1) complete_lattice) : @complete_lattice.is_Sup_finite_compact.{1} (normed_lattice_add_comm_group.{1} Type) (@function.extfun_app.{3 2} (Type 1) complete_lattice.{1} h0 (normed_lattice_add_comm_group.{1} Type))  := sorry --non-trivial
lemma new_lemma_53348 (h0 : not (complete_lattice (semi_normed_comm_ring (mul_one_class char)) -> false)) : @is_compactly_generated.{0} (semi_normed_comm_ring.{0} (mul_one_class.{0} char)) (@classical.by_contradiction'.{1} (complete_lattice.{0} (semi_normed_comm_ring.{0} (mul_one_class.{0} char))) h0)  := sorry --non-trivial
lemma new_lemma_53349 (h0 : group (add_cancel_monoid (finset (finset (finset linarith.comp))))) : is_cyclic (add_cancel_monoid (finset (finset (finset linarith.comp)))) := sorry --non-trivial
lemma new_lemma_53350 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (has_Inf.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_Inf.{0} real))  := sorry --non-trivial
lemma new_lemma_53351 (h0 : complete_lattice (linear_ordered_semiring (has_norm linarith.comp))) : is_compactly_generated (linear_ordered_semiring (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_53352 (h0 : not (semiring (option congr_arg_kind) -> false)) : @is_noetherian_ring.{0} (option.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (semiring.{0} (option.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_53353 (h0 : topological_space (finset (boolean_algebra.core Type))) : discrete_topology (finset (boolean_algebra.core Type)) := sorry --non-trivial
lemma new_lemma_53354 (h0 : topological_space (semiring (semiring congr_arg_kind))) : preconnected_space (semiring (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_53355 (h0 : not (topological_space (order_dual to_additive.value_type) -> false)) : @locally_compact_space.{0} (order_dual.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (order_dual.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_53356 (h0 : functor.add_const (group (finset Type)) (ring Type)) : @is_simple_group.{1} (finset.{1} Type) (@functor.add_const.run.{1 1} (group.{1} (finset.{1} Type)) (ring.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_53357 (h0 : list (group (has_inv linarith.ineq))) (h1 : nat) (h2 : has_lt.lt h1 (list.length h0)) : @is_cyclic.{0} (has_inv.{0} linarith.ineq) (@list.nth_le.{0} (group.{0} (has_inv.{0} linarith.ineq)) h0 h1 h2)  := sorry --non-trivial
lemma new_lemma_53358 (h0 : functor.add_const (filter (has_nndist pos)) pos) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53359 (h0 : list (with_one (has_inv (random_gen linarith.ineq)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_53360 (h0 : topological_space (monoid_with_zero (option ennreal))) : locally_compact_space (monoid_with_zero (option ennreal)) := sorry --non-trivial
lemma new_lemma_53361 (h0 : functor.add_const (topological_space (has_Inf Type)) linarith.comp) : @regular_space.{1} (has_Inf.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_Inf.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53362 (h0 : complete_lattice (comm_ring (has_nnnorm (has_nnnorm (has_nnnorm fun_info))))) : complete_lattice.is_Sup_finite_compact (comm_ring (has_nnnorm (has_nnnorm (has_nnnorm fun_info)))) := sorry --non-trivial
lemma new_lemma_53363 (h0 : function.extfun nat fin) : @preconnected_space.{0} (ordered_comm_ring.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (ordered_comm_ring.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_53364 (h0 : function.extfun Type (functor.add_const (complete_lattice (linear_ordered_cancel_comm_monoid unsigned)))) : @is_atomistic.{0} (linear_ordered_cancel_comm_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (linear_ordered_cancel_comm_monoid.{0} unsigned)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (complete_lattice.{0} (linear_ordered_cancel_comm_monoid.{0} unsigned))) h0 empty))  := sorry --non-trivial
lemma new_lemma_53365 (h0 : ring (add_left_cancel_monoid (has_nnnorm linarith.comp_source))) : strong_rank_condition (add_left_cancel_monoid (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_53366 (h0 : has_le (has_nnnorm to_additive.value_type)) (h1 : uniform_space (order_top (has_nnnorm to_additive.value_type))) : complete_space (order_top (has_nnnorm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_53367 (h0 : functor.add_const (list (finset Type)) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53368 (h0 : uniform_space (semiring (linear_ordered_semiring linarith.comp))) : complete_space (semiring (linear_ordered_semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_53369 (h0 : ring (dlist (dlist (comm_ring (has_top to_additive.value_type))))) : rank_condition (dlist (dlist (comm_ring (has_top to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_53370 (h0 : add_group (has_union unsigned)) : is_add_cyclic (has_union unsigned) := sorry --non-trivial
lemma new_lemma_53371 (h0 : functor.add_const (topological_space (bin_tree num)) (semiring (semiring (semiring (semiring (semiring num)))))) : @loc_path_connected_space.{0} (bin_tree.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (bin_tree.{0} num)) (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} num))))) h0)  := sorry --non-trivial
lemma new_lemma_53372 (h0 : topological_space (has_nndist (ring num))) : totally_disconnected_space (has_nndist (ring num)) := sorry --non-trivial
lemma new_lemma_53373 (h0 : functor.add_const (topological_space (semiring unsigned)) unsigned) : @irreducible_space.{0} (semiring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (semiring.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_53374 (h0 : topological_space (has_bot (has_bot real))) : t0_space (has_bot (has_bot real)) := sorry --non-trivial
lemma new_lemma_53375 (h0 : function.extfun Type topological_space) : @t1_space.{0} (has_bot.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_bot.{0} real))  := sorry --non-trivial
lemma new_lemma_53376 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (canonically_ordered_add_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_add_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53377 (h0 : add_group (simple_graph enat)) : is_add_cyclic (simple_graph enat) := sorry --non-trivial
lemma new_lemma_53378 (h0 : char -> char -> Prop) : is_asymm char h0 := sorry --non-trivial
lemma new_lemma_53379 (h0 : complete_lattice (has_zero pos)) : complete_lattice.is_Sup_finite_compact (has_zero pos) := sorry --non-trivial
lemma new_lemma_53380 (h0 : ordered_add_comm_monoid (comm_group (comm_group Type))) : archimedean (comm_group (comm_group Type)) := sorry --non-trivial
lemma new_lemma_53381 (h0 : monoid (semiring linarith.ineq)) : monoid.fg (semiring linarith.ineq) := sorry --non-trivial
lemma new_lemma_53382 (h0 : functor.add_const (function.extfun (Type 1) add_group) pos) : @is_add_cyclic.{1} (complete_distrib_lattice.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) add_group.{1}) pos h0) (complete_distrib_lattice.{1} Type))  := sorry --non-trivial
lemma new_lemma_53383 (h3 : complete_lattice (distrib fun_info)) : is_compactly_generated (distrib fun_info) := sorry --non-trivial
lemma new_lemma_53384 (h0 : topological_space (semigroup (has_add environment.implicit_infer_kind))) : t1_space (semigroup (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_53385 (h0 : topological_space (add_cancel_monoid (has_neg (has_neg (has_neg pos))))) : regular_space (add_cancel_monoid (has_neg (has_neg (has_neg pos)))) := sorry --non-trivial
lemma new_lemma_53386 (h0 : function.extfun nat fin) : @regular_space.{1} (ordered_comm_ring.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (ordered_comm_ring.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_53387 (h0 : topological_space (with_one linarith.comp)) : preirreducible_space (with_one linarith.comp) := sorry --non-trivial
lemma new_lemma_53388 (h0 : function.extfun Type group) : @is_cyclic.{0} (has_union.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (has_union.{0} empty))  := sorry --non-trivial
lemma new_lemma_53389 (h0 : semiring (ordered_comm_monoid (option empty))) : is_noetherian_ring (ordered_comm_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_53390 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (canonically_ordered_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_53391 (h1 : monoid (measurable_space (has_norm unsigned))) : monoid.fg (measurable_space (has_norm unsigned)) := sorry --non-trivial
lemma new_lemma_53392 (h0 : topological_space (has_pos_part (boolean_algebra.core (has_add linarith.comp)))) : sequential_space (has_pos_part (boolean_algebra.core (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_53393 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (has_to_string.{0} ennreal) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_to_string.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_53394 (h0 : filter (dlist (has_nnnorm (has_nnnorm (has_nnnorm fun_info))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_53395 (h0 : list (canonically_ordered_comm_semiring (ring (has_neg (finset Type))))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_53396 (h0 : functor.add_const (topological_space (free_add_monoid num)) (semiring unsigned)) : @path_connected_space.{0} (free_add_monoid.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (free_add_monoid.{0} num)) (semiring.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_53397 (h0 : topological_space (ring (has_neg (has_neg name)))) : t1_space (ring (has_neg (has_neg name))) := sorry --non-trivial
lemma new_lemma_53398 (h0 : functor.add_const (function.extfun (Type 1) list) (ring (has_pos_part linarith.comp))) : palindrome (function.extfun_app (functor.add_const.run h0) (ring Type)) := sorry --non-trivial
lemma new_lemma_53399 (h0 : monoid (monoid (option unsigned))) : monoid.fg (monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_53400 (h0 : function.extfun Type (functor.add_const (topological_space (has_bot empty)))) : @totally_disconnected_space.{0} (has_bot.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_bot.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (has_bot.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_53401 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (option.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (option.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53402 (h0 : ring (has_add (has_inv linarith.comp_source))) : is_domain (has_add (has_inv linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_53403 (h0 : topological_space (distrib (mul_one_class string.iterator_imp))) : t0_space (distrib (mul_one_class string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_53404 (h0 : group (has_nndist (finset (has_add (normed_comm_ring linarith.comp))))) : is_cyclic (has_nndist (finset (has_add (normed_comm_ring linarith.comp)))) := sorry --non-trivial
lemma new_lemma_53405 (h0 : add_monoid (finset (has_Inf Type))) : add_monoid.fg (finset (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_53406 (h0 : ring (has_to_string (ring (boolean_algebra (has_add linarith.comp))))) : is_principal_ideal_ring (has_to_string (ring (boolean_algebra (has_add linarith.comp)))) := sorry --non-trivial
lemma new_lemma_53407 (h0 : group (canonically_ordered_comm_semiring (option (option unsigned)))) : is_cyclic (canonically_ordered_comm_semiring (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_53408 (h1 : option (topological_space char)) (h2 : coe_sort (option.is_some h1)) (h3 : set (set char)) : @topological_space.is_topological_basis.{0} char (@option.get.{0} (topological_space.{0} char) h1 h2) h3  := sorry --non-trivial
lemma new_lemma_53409 (h0 : functor.add_const (function.extfun Type list) linarith.comp) : list.nodup (function.extfun_app (functor.add_const.run h0) pos) := sorry --non-trivial
lemma new_lemma_53410 (h1 : topological_space (normed_field to_additive.value_type)) (h2 : preorder (normed_field to_additive.value_type)) : order_topology (normed_field to_additive.value_type) := sorry --non-trivial
lemma new_lemma_53411 (h0 : cancel_comm_monoid_with_zero (cancel_monoid (ring (cancel_monoid unsigned)))) : unique_factorization_monoid (cancel_monoid (ring (cancel_monoid unsigned))) := sorry --non-trivial
lemma new_lemma_53412 (h0 : topological_space (normed_comm_ring (has_add (has_add pos)))) : regular_space (normed_comm_ring (has_add (has_add pos))) := sorry --non-trivial
lemma new_lemma_53413 (h0 : ring (distrib_lattice (ordered_semiring (denumerable linarith.comp_source)))) : rank_condition (distrib_lattice (ordered_semiring (denumerable linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_53414 (h0 : function.extfun Type (functor.add_const (topological_space (ordered_cancel_add_comm_monoid empty)))) : @t0_space.{0} (ordered_cancel_add_comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_cancel_add_comm_monoid.{0} empty)) unsigned (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (ordered_cancel_add_comm_monoid.{0} empty))) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_53415 (h1 : function.extfun Type topological_space) : @t0_space.{0} (random_gen.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (random_gen.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_53416 (h0 : ordered_comm_monoid (boolean_algebra name)) : has_exists_mul_of_le (boolean_algebra name) := sorry --non-trivial
lemma new_lemma_53417 (h0 : not (ring (random_gen string_imp) -> false)) : @is_domain.{0} (random_gen.{0} string_imp) (@classical.by_contradiction'.{1} (ring.{0} (random_gen.{0} string_imp)) h0)  := sorry --non-trivial
lemma new_lemma_53418 (h1 : complete_lattice (normed_field linarith.ineq)) : complete_lattice.is_Sup_finite_compact (normed_field linarith.ineq) := sorry --non-trivial
lemma new_lemma_53419 (h0 : add_group (add_left_cancel_monoid (linear_ordered_comm_ring linarith.ineq))) : is_add_cyclic (add_left_cancel_monoid (linear_ordered_comm_ring linarith.ineq)) := sorry --non-trivial
lemma new_lemma_53420 (h0 : topological_space (canonically_ordered_comm_semiring (has_add pos))) : t1_space (canonically_ordered_comm_semiring (has_add pos)) := sorry --non-trivial
lemma new_lemma_53421 (h0 : list (has_add (option pos))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_53422 (h0 : functor.add_const (group (linear_order unsigned)) empty) : @is_cyclic.{0} (linear_order.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (linear_order.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_53423 (h0 : functor.add_const (ring (add_cancel_monoid unsigned)) unsigned) : @strong_rank_condition.{0} (add_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (add_cancel_monoid.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_53424 (h0 : functor.add_const (topological_space (canonically_ordered_monoid real)) linarith.comp) : @loc_path_connected_space.{0} (canonically_ordered_monoid.{0} real) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_monoid.{0} real)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53425 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (add_cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (add_cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_53426 (h0 : topological_space (has_one (linear_ordered_semiring (semiring congr_arg_kind)))) : preirreducible_space (has_one (linear_ordered_semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_53427 (h0 : functor.add_const (complete_lattice (linear_ordered_comm_group ennreal)) ennreal) : @is_compactly_generated.{0} (linear_ordered_comm_group.{0} ennreal) (@functor.add_const.run.{0 0} (complete_lattice.{0} (linear_ordered_comm_group.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_53428 (h0 : add_monoid (has_norm (has_norm empty))) : add_monoid.fg (has_norm (has_norm empty)) := sorry --non-trivial
lemma new_lemma_53429 (h0 : group (add_cancel_monoid (ring (has_neg (has_neg Type))))) : normalizer_condition (add_cancel_monoid (ring (has_neg (has_neg Type)))) := sorry --non-trivial
lemma new_lemma_53430 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (has_union.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_union.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53431 (h1 h2 : multiset enat) : multiset.le h1 h2 := sorry --non-trivial
lemma new_lemma_53432 (h0 : functor.add_const (ring (cancel_monoid name)) name) : @is_principal_ideal_ring.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (cancel_monoid.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_53433 (h0 : fin has_zero.zero) : @preconnected_space.{0} (add_comm_monoid.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (add_comm_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_53434 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @t0_space.{0} (has_pos_part.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (has_pos_part.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53435 (h0 : add_group (bin_tree char)) : is_add_cyclic (bin_tree char) := sorry --non-trivial
lemma new_lemma_53436 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : finset.nonempty (function.extfun_app (function.extfun_app h0 finset) (has_zero pos)) := sorry --non-trivial
lemma new_lemma_53437 (h0 : functor.add_const (add_group (has_nndist pos)) (has_add Type)) : @is_add_cyclic.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 1} (add_group.{0} (has_nndist.{0} pos)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_53438 (h0 : topological_space (ordered_comm_ring (sub_neg_monoid (sub_neg_monoid real)))) : preconnected_space (ordered_comm_ring (sub_neg_monoid (sub_neg_monoid real))) := sorry --non-trivial
lemma new_lemma_53439 (h0 : topological_space (linear_ordered_semiring fun_info)) : path_connected_space (linear_ordered_semiring fun_info) := sorry --non-trivial
lemma new_lemma_53440 (h0 : not (function.extfun Type uniform_space -> false)) : @separated_space.{0} (has_union.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (has_union.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53441 (h0 : complete_lattice (topological_space (add_left_cancel_monoid fun_info))) : is_compactly_generated (topological_space (add_left_cancel_monoid fun_info)) := sorry --non-trivial
lemma new_lemma_53442 (h0 : ring (comm_group (boolean_algebra pos))) : strong_rank_condition (comm_group (boolean_algebra pos)) := sorry --non-trivial
lemma new_lemma_53443 (h0 : complete_lattice (has_ssubset (non_unital_non_assoc_semiring string_imp))) : complete_lattice.is_Sup_finite_compact (has_ssubset (non_unital_non_assoc_semiring string_imp)) := sorry --non-trivial
lemma new_lemma_53444 (h0 : ordered_comm_monoid (has_scalar environment.implicit_infer_kind name)) : has_exists_mul_of_le (has_scalar environment.implicit_infer_kind name) := sorry --non-trivial
lemma new_lemma_53445 (h0 : not (topological_space (add_right_cancel_monoid empty) -> false)) : @topological_space.separable_space.{0} (add_right_cancel_monoid.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (add_right_cancel_monoid.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_53446 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (has_ssubset.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_ssubset.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_53447 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (option.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (option.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53448 (h0 : fin has_zero.zero) : @monoid.fg.{0} (has_Inf.{0} real) (@matrix.vec_empty.{0} (monoid.{0} (has_Inf.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_53449 (h0 : topological_space (boolean_algebra (has_Inf (has_pos_part linarith.comp)))) : totally_disconnected_space (boolean_algebra (has_Inf (has_pos_part linarith.comp))) := sorry --non-trivial
lemma new_lemma_53450 (h0 : set (add_comm_semigroup linarith.ineq -> enat)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_53451 (h0 : not (topological_space (bin_tree unsigned) -> false)) : @totally_separated_space.{0} (bin_tree.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (bin_tree.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_53452 (h0 : function.extfun Type topological_space) : @t1_space.{0} (measure_theory.measure_space.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measure_theory.measure_space.{0} num))  := sorry --non-trivial
lemma new_lemma_53453 (h0 : functor.add_const (topological_space (add_group num)) empty) : @preirreducible_space.{0} (add_group.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (add_group.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_53454 (h1 h2 : multiset (simple_graph linarith.ineq)) : multiset.disjoint h1 h2 := sorry --non-trivial
lemma new_lemma_53455 (h0 : uniform_space (linear_ordered_comm_ring (semiring (semiring empty)))) : separated_space (linear_ordered_comm_ring (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_53456 (h1 : ring (semi_normed_comm_ring to_additive.value_type)) : rank_condition (semi_normed_comm_ring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_53457 (h0 : group (linear_ordered_comm_group (option (option (option (option ennreal)))))) : is_cyclic (linear_ordered_comm_group (option (option (option (option ennreal))))) := sorry --non-trivial
lemma new_lemma_53458 (h0 : add_group (finset (has_add pos))) : is_add_cyclic (finset (has_add pos)) := sorry --non-trivial
lemma new_lemma_53459 (h0 : ring (mul_zero_class (has_add pos))) : strong_rank_condition (mul_zero_class (has_add pos)) := sorry --non-trivial
lemma new_lemma_53460 (h0 : ring (ordered_comm_monoid (has_Inf pos))) : rank_condition (ordered_comm_monoid (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_53461 (h0 : functor.add_const (ordered_add_comm_monoid (has_add name)) environment.implicit_infer_kind) : @archimedean.{0} (has_add.{0} name) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (has_add.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_53462 (h0 : function.extfun nat fin) : @sequential_space.{1} (has_bot.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (has_bot.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_53463 (h0 : ordered_comm_monoid (has_nndist (semigroup Type))) : has_exists_mul_of_le (has_nndist (semigroup Type)) := sorry --non-trivial
lemma new_lemma_53464 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_noetherian_ring.{0} (with_bot.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type semiring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 semiring.{0}) (with_bot.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53465 (h0 : topological_space (has_nnnorm enat)) : t0_space (has_nnnorm enat) := sorry --non-trivial
lemma new_lemma_53466 (h0 : add_group (add_group (semiring (has_norm num)))) : is_add_cyclic (add_group (semiring (has_norm num))) := sorry --non-trivial
lemma new_lemma_53467 (h0 : ring (uniform_space (simple_graph linarith.comp_source))) : rank_condition (uniform_space (simple_graph linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_53468 (h0 : cancel_comm_monoid_with_zero (boolean_algebra.core ennreal)) : unique_factorization_monoid (boolean_algebra.core ennreal) := sorry --non-trivial
lemma new_lemma_53469 (h0 : not (ring (random_gen (random_gen fun_info)) -> false)) : @rank_condition.{0} (random_gen.{0} (random_gen.{0} fun_info)) (@classical.by_contradiction'.{1} (ring.{0} (random_gen.{0} (random_gen.{0} fun_info))) h0)  := sorry --non-trivial
lemma new_lemma_53470 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (linear_ordered_add_comm_group.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (linear_ordered_add_comm_group.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_53471 (h0 : topological_space (normed_comm_ring (option ennreal))) : preconnected_space (normed_comm_ring (option ennreal)) := sorry --non-trivial
lemma new_lemma_53472 (h0 : ring (boolean_algebra unsigned)) : is_principal_ideal_ring (boolean_algebra unsigned) := sorry --non-trivial
lemma new_lemma_53473 (h0 : not (topological_space (div_inv_monoid linarith.ineq) -> false)) : @path_connected_space.{0} (div_inv_monoid.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (div_inv_monoid.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_53474 (h0 : not (function.extfun Type uniform_space -> false)) : @separated_space.{0} (mul_zero_class.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (mul_zero_class.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53475 (h0 : topological_space (semigroup (finset (has_nndist linarith.comp)))) : discrete_topology (semigroup (finset (has_nndist linarith.comp))) := sorry --non-trivial
lemma new_lemma_53476 (h1 : not (filter (has_append char) -> false)) : filter.ne_bot (classical.by_contradiction' h1) := sorry --non-trivial
lemma new_lemma_53477 (h0 : not (uniform_space (with_one (has_nnnorm linarith.ineq)) -> false)) : @complete_space.{0} (with_one.{0} (has_nnnorm.{0} linarith.ineq)) (@classical.by_contradiction'.{1} (uniform_space.{0} (with_one.{0} (has_nnnorm.{0} linarith.ineq))) h0)  := sorry --non-trivial
lemma new_lemma_53478 (h0 : complete_lattice (has_ssubset reducibility_hints)) : is_compactly_generated (has_ssubset reducibility_hints) := sorry --non-trivial
lemma new_lemma_53479 (h0 : reducibility_hints -> reducibility_hints -> reducibility_hints) : is_right_cancel reducibility_hints h0 := sorry --non-trivial
lemma new_lemma_53480 (h0 : topological_space (mul_zero_class (normed_comm_ring Type))) : regular_space (mul_zero_class (normed_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_53481 (h0 : functor.add_const (topological_space (pseudo_metric_space name)) name) : @sequential_space.{0} (pseudo_metric_space.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (pseudo_metric_space.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_53482 (h0 : topological_space (nondiscrete_normed_field fun_info)) : t0_space (nondiscrete_normed_field fun_info) := sorry --non-trivial
lemma new_lemma_53483 (h0 : ring (add_cancel_monoid (has_nndist linarith.comp))) : is_principal_ideal_ring (add_cancel_monoid (has_nndist linarith.comp)) := sorry --non-trivial
lemma new_lemma_53484 (h0 : functor.add_const (topological_space (complete_distrib_lattice congr_arg_kind)) congr_arg_kind) : @t1_space.{0} (complete_distrib_lattice.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_53485 (h0 : topological_space (add_comm_monoid (option (option (option ennreal))))) : preirreducible_space (add_comm_monoid (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_53486 (h0 : topological_space (linear_ordered_comm_group_with_zero (mul_one_class reducibility_hints))) : totally_disconnected_space (linear_ordered_comm_group_with_zero (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_53487 (h0 : functor.add_const (add_group (normed_comm_ring unsigned)) name) : @is_add_cyclic.{0} (normed_comm_ring.{0} unsigned) (@functor.add_const.run.{0 0} (add_group.{0} (normed_comm_ring.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_53488 (h0 : functor.comp topological_space has_nndist name) : @preirreducible_space.{0} (has_nndist.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_nndist.{0} name h0)  := sorry --non-trivial
lemma new_lemma_53489 (h0 : not (function.extfun Type group -> false)) : @is_cyclic.{0} (mul_zero_class.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (mul_zero_class.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53490 (h0 : ring (has_pos_part (has_Inf (sub_neg_monoid (has_Inf Type))))) : rank_condition (has_pos_part (has_Inf (sub_neg_monoid (has_Inf Type)))) := sorry --non-trivial
lemma new_lemma_53491 (h0 : topological_space (has_neg ennreal)) : topological_space.separable_space (has_neg ennreal) := sorry --non-trivial
lemma new_lemma_53492 (h0 : finset (mul_zero_class (semiring num))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_53493 (h0 : finset (left_cancel_monoid unsigned)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_53494 (h0 h1 : multiset (mul_one_class (mul_one_class char))) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_53495 (h0 : complete_lattice (add_right_cancel_monoid (has_top (has_norm empty)))) : is_compactly_generated (add_right_cancel_monoid (has_top (has_norm empty))) := sorry --non-trivial
lemma new_lemma_53496 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @unique_factorization_monoid.{0} (preorder.{0} empty) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) cancel_comm_monoid_with_zero.{0}) (preorder.{0} empty))  := sorry --non-trivial
lemma new_lemma_53497 (h0 : group (comm_ring (has_nnnorm (has_nnnorm (random_gen fun_info))))) : is_cyclic (comm_ring (has_nnnorm (has_nnnorm (random_gen fun_info)))) := sorry --non-trivial
lemma new_lemma_53498 (h0 : functor.add_const (ring (ring linarith.comp)) (finset environment.implicit_infer_kind)) : @is_principal_ideal_ring.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (ring.{0} linarith.comp)) (finset.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_53499 (h0 : ring (normed_group congr_arg_kind)) : is_principal_ideal_ring (normed_group congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53500 (h0 : topological_space (has_add (has_add Type))) : preirreducible_space (has_add (has_add Type)) := sorry --non-trivial
lemma new_lemma_53501 (h0 : add_monoid (has_dist (option unsigned))) : add_monoid.fg (has_dist (option unsigned)) := sorry --non-trivial
lemma new_lemma_53502 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (bin_tree.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (bin_tree.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53503 (h0 : add_group (semigroup (has_Inf pos))) : is_add_cyclic (semigroup (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_53504 (h0 : ordered_add_comm_monoid (linear_ordered_field (option congr_arg_kind))) : archimedean (linear_ordered_field (option congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_53505 (h0 : complete_lattice (comm_monoid empty)) : complete_lattice.is_Sup_finite_compact (comm_monoid empty) := sorry --non-trivial
lemma new_lemma_53506 (h0 : has_mem.mem (ordered_comm_group to_additive.value_type) has_emptyc.emptyc) : @irreducible_space.{0} (ordered_comm_group.{0} to_additive.value_type) (@finset.pi.empty.{1 0} Type topological_space.{0} (ordered_comm_group.{0} to_additive.value_type) h0)  := sorry --non-trivial
lemma new_lemma_53507 (h0 : not (ring (has_one num) -> false)) : @strong_rank_condition.{0} (has_one.{0} num) (@classical.by_contradiction'.{1} (ring.{0} (has_one.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_53508 (h4 : add_group (add_cancel_comm_monoid char)) : is_add_cyclic (add_cancel_comm_monoid char) := sorry --non-trivial
lemma new_lemma_53509 (h0 : filter (ordered_comm_group (option (option (option (option (option (option (option (option empty)))))))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_53510 (h0 : semiring (add_left_cancel_semigroup (semiring (semiring unsigned)))) : is_noetherian_ring (add_left_cancel_semigroup (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_53511 (h0 : functor.add_const (ordered_comm_monoid (cancel_monoid unsigned)) unsigned) : @has_exists_mul_of_le.{0} (cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (cancel_monoid.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_53512 (h0 : function.extfun Type group) : @is_cyclic.{0} (has_norm.{0} string_imp) (@function.extfun_app.{2 1} Type group.{0} h0 (has_norm.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_53513 (h0 : list (has_zero (has_pos_part (has_Inf (has_Inf (has_Inf pos)))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_53514 (h0 : topological_space (ordered_comm_ring (has_neg (has_neg pos)))) : loc_path_connected_space (ordered_comm_ring (has_neg (has_neg pos))) := sorry --non-trivial
lemma new_lemma_53515 (h0 : functor.add_const (uniform_space (semiring congr_arg_kind)) (semiring empty)) : @complete_space.{0} (semiring.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (uniform_space.{0} (semiring.{0} congr_arg_kind)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_53516 (h0 : function.extfun Type filter) (h1 : num -> Prop) : @filter.limsup.{0 0} Prop num (@complete_lattice.to_conditionally_complete_lattice.{0} Prop Prop.complete_lattice) (@function.extfun_app.{2 1} Type filter.{0} h0 num) h1  := sorry --non-trivial
lemma new_lemma_53517 (h0 : has_mem.mem (function.extfun Type) has_emptyc.emptyc) : @complete_space.{0} (semiring.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@finset.pi.empty.{2 1} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) (function.extfun.{2 1} Type) h0) uniform_space.{0}) (semiring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53518 (h0 : set (has_lt (has_lt (mul_one_class to_additive.value_type)))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_53519 (h0 : add_monoid (add_group (linear_ordered_semiring (linear_ordered_semiring unsigned)))) : add_monoid.fg (add_group (linear_ordered_semiring (linear_ordered_semiring unsigned))) := sorry --non-trivial
lemma new_lemma_53520 (h0 : fin has_zero.zero) : @topological_space.separable_space.{1} (comm_semigroup.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (comm_semigroup.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_53521 (h0 : group (has_nndist (has_neg (has_add (ring (has_neg pos)))))) : normalizer_condition (has_nndist (has_neg (has_add (ring (has_neg pos))))) := sorry --non-trivial
lemma new_lemma_53522 (h0 : functor.add_const (uniform_space (finset Type)) pos) : @separated_space.{1} (finset.{1} Type) (@functor.add_const.run.{1 0} (uniform_space.{1} (finset.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_53523 (h0 : not (uniform_space (normed_group empty) -> false)) : @separated_space.{0} (normed_group.{0} empty) (@classical.by_contradiction'.{1} (uniform_space.{0} (normed_group.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_53524 (h0 : has_mem.mem string_imp has_emptyc.emptyc) : @complete_space.{0} string_imp (@finset.pi.empty.{1 0} Type uniform_space.{0} string_imp h0)  := sorry --non-trivial
lemma new_lemma_53525 (h0 : ring (complete_distrib_lattice (has_pos_part linarith.comp))) : is_principal_ideal_ring (complete_distrib_lattice (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_53526 (h0 : topological_space (group_with_zero (option ennreal))) : t0_space (group_with_zero (option ennreal)) := sorry --non-trivial
lemma new_lemma_53527 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (monoid.{0} ennreal) (@function.extfun_app.{2 1} Type semiring.{0} h0 (monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_53528 (h0 : ring (finset (finset name))) : rank_condition (finset (finset name)) := sorry --non-trivial
lemma new_lemma_53529 (h0 : topological_space (mul_one_class linarith.ineq)) (h1 : set (mul_one_class linarith.ineq)) : is_path_connected h1 := sorry --non-trivial
lemma new_lemma_53530 (h0 : topological_space (measurable_space.dynkin_system (option empty))) : totally_disconnected_space (measurable_space.dynkin_system (option empty)) := sorry --non-trivial
lemma new_lemma_53531 (h0 : ring (has_top char)) : strong_rank_condition (has_top char) := sorry --non-trivial
lemma new_lemma_53532 (h0 : functor.add_const (topological_space (has_neg pos)) linarith.comp) : @preirreducible_space.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53533 (h0 : functor.add_const (topological_space (partial_order num)) unsigned) : @discrete_topology.{0} (partial_order.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (partial_order.{0} num)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_53534 (h1 : has_mem.mem (with_one to_additive.value_type) has_emptyc.emptyc) : @totally_disconnected_space.{0} (with_one.{0} to_additive.value_type) (@finset.pi.empty.{1 0} Type topological_space.{0} (with_one.{0} to_additive.value_type) h1)  := sorry --non-trivial
lemma new_lemma_53535 (h0 : preorder (mul_one_class (add_comm_semigroup enat))) (h1 : set (mul_one_class (add_comm_semigroup enat))) : set.is_pwo h1 := sorry --non-trivial
lemma new_lemma_53536 (h0 : uniform_space (comm_group (boolean_algebra Type))) : separated_space (comm_group (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_53537 (h0 : function.extfun (finset Type) (has_mem.mem (with_one empty))) : @add_monoid.fg.{0} (with_one.{0} empty) (@finset.pi.empty.{1 0} Type add_monoid.{0} (with_one.{0} empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_one.{0} empty)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_53538 (h0 : functor.add_const (topological_space (has_neg environment.implicit_infer_kind)) name) : @discrete_topology.{0} (has_neg.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_53539 (h0 : complete_lattice (has_inv (random_gen linarith.ineq))) : is_atomistic (has_inv (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_53540 (h0 : monoid (has_emptyc (has_top (has_inv fun_info)))) : monoid.fg (has_emptyc (has_top (has_inv fun_info))) := sorry --non-trivial
lemma new_lemma_53541 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (add_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} h0 (add_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_53542 (h0 : group (ordered_comm_ring (has_add Type))) : group.fg (ordered_comm_ring (has_add Type)) := sorry --non-trivial
lemma new_lemma_53543 (h0 : functor.comp add_monoid ring Type) : @add_monoid.fg.{1} (ring.{1} Type) (@functor.comp.run.{1 1 1} add_monoid.{1} ring.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_53544 (h0 : functor.add_const (ring (has_neg_part Type)) (comm_group (comm_group name))) : @is_principal_ideal_ring.{1} (has_neg_part.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_neg_part.{1} Type)) (comm_group.{0} (comm_group.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_53545 (h0 : list (boolean_algebra real)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_53546 (h0 : functor.add_const (topological_space (left_cancel_semigroup empty)) (ordered_ring empty)) : @t1_space.{0} (left_cancel_semigroup.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_semigroup.{0} empty)) (ordered_ring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_53547 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (simple_graph.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (simple_graph.{0} pos))  := sorry --non-trivial
lemma new_lemma_53548 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_neg_part unsigned)) name) : @unique_factorization_monoid.{0} (has_neg_part.{0} unsigned) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (has_neg_part.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_53549 (h0 : functor.add_const (ring (complete_distrib_lattice name)) ennreal) : @rank_condition.{0} (complete_distrib_lattice.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (complete_distrib_lattice.{0} name)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_53550 (h0 : functor.add_const (complete_lattice (normed_comm_ring linarith.comp)) pos) : @is_compactly_generated.{0} (normed_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (complete_lattice.{0} (normed_comm_ring.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_53551 (h0 : functor.add_const (ring (normed_comm_ring Type)) linarith.comp) : @is_principal_ideal_ring.{1} (normed_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (normed_comm_ring.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53552 (h0 : topological_space (has_union (semiring unsigned))) : locally_compact_space (has_union (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_53553 (h0 : group (semiring (has_top fun_info))) : is_cyclic (semiring (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_53554 (h0 : topological_space (boolean_algebra (has_add (has_add environment.implicit_infer_kind)))) : normal_space (boolean_algebra (has_add (has_add environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_53555 (h0 : topological_space (has_star (semiring empty))) : locally_compact_space (has_star (semiring empty)) := sorry --non-trivial
lemma new_lemma_53556 (h0 : filter (has_add (option name))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_53557 (h0 : functor.add_const (function.extfun (Type 1) topological_space) (has_to_string linarith.comp)) : @t0_space.{1} (has_nndist.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) (has_to_string.{0} linarith.comp) h0) (has_nndist.{1} Type))  := sorry --non-trivial
lemma new_lemma_53558 (h0 : functor.add_const (group (has_neg Type)) environment.implicit_infer_kind) : @is_simple_group.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (has_neg.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_53559 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (has_top.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_top.{0} empty))  := sorry --non-trivial
lemma new_lemma_53560 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (denumerable string_imp)) := sorry --non-trivial
lemma new_lemma_53561 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (add_comm_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_group.{0} h0 (add_comm_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53562 (h0 : fin has_zero.zero) : @is_cyclic.{0} (has_Inf.{0} linarith.comp) (@matrix.vec_empty.{0} (group.{0} (has_Inf.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_53563 (h0 : monoid (cancel_monoid congr_arg_kind)) : monoid.fg (cancel_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53564 (h0 : functor.add_const (topological_space (add_group congr_arg_kind)) num) : @t1_space.{0} (add_group.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (add_group.{0} congr_arg_kind)) num h0)  := sorry --non-trivial
lemma new_lemma_53565 (h1 : function.extfun Type topological_space) : @path_connected_space.{0} (complete_semilattice_Sup.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (complete_semilattice_Sup.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_53566 (h0 : add_group (non_unital_non_assoc_semiring to_additive.value_type)) : is_add_cyclic (non_unital_non_assoc_semiring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_53567 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : countable_Inter_filter (function.extfun_app (function.extfun_app h0 filter) (has_bot pos)) := sorry --non-trivial
lemma new_lemma_53568 (h0 : functor.add_const (add_group (has_neg Type)) pos) : @is_add_cyclic.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (add_group.{1} (has_neg.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_53569 (h0 : has_mem.mem (complete_semilattice_Sup (has_norm linarith.ineq)) has_emptyc.emptyc) : @totally_separated_space.{0} (complete_semilattice_Sup.{0} (has_norm.{0} linarith.ineq)) (@finset.pi.empty.{1 0} Type topological_space.{0} (complete_semilattice_Sup.{0} (has_norm.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_53570 (h0 : functor.add_const (topological_space (ring environment.implicit_infer_kind)) (has_neg pos)) : @totally_separated_space.{0} (ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} environment.implicit_infer_kind)) (has_neg.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_53571 (h0 : add_monoid (has_star (semiring (semiring (semiring num))))) : add_monoid.fg (has_star (semiring (semiring (semiring num)))) := sorry --non-trivial
lemma new_lemma_53572 (h0 : has_mem.mem (normed_group fun_info) has_emptyc.emptyc) : @is_add_cyclic.{0} (normed_group.{0} fun_info) (@finset.pi.empty.{1 0} Type add_group.{0} (normed_group.{0} fun_info) h0)  := sorry --non-trivial
lemma new_lemma_53573 (h0 : not (has_coe (linear_ordered_comm_group_with_zero reducibility_hints) Prop -> false)) (h1 : linear_ordered_comm_group_with_zero reducibility_hints) : @coe_b.{1 1} (linear_ordered_comm_group_with_zero.{0} reducibility_hints) Prop (@classical.by_contradiction'.{1} (has_coe.{1 1} (linear_ordered_comm_group_with_zero.{0} reducibility_hints) Prop) h0) h1  := sorry --non-trivial
lemma new_lemma_53574 (h0 : functor.add_const (list (has_Inf Type)) pos) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53575 (h0 : sub_neg_monoid real -> sub_neg_monoid real -> Prop) : is_antisymm (sub_neg_monoid real) h0 := sorry --non-trivial
lemma new_lemma_53576 (h0 : functor.add_const (group (finset pos)) pos) : @is_cyclic.{0} (finset.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (finset.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_53577 (h0 : uniform_space (finset (finset linarith.comp))) : complete_space (finset (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_53578 (h0 : topological_space (comm_ring (comm_ring (random_gen fun_info)))) : irreducible_space (comm_ring (comm_ring (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_53579 (h0 : semiring (boolean_algebra (has_to_string linarith.comp))) : is_noetherian_ring (boolean_algebra (has_to_string linarith.comp)) := sorry --non-trivial
lemma new_lemma_53580 (h0 : topological_space (comm_group (comm_group (cancel_monoid pos)))) : totally_separated_space (comm_group (comm_group (cancel_monoid pos))) := sorry --non-trivial
lemma new_lemma_53581 (h0 : fin has_zero.zero) : @is_compactly_generated.{1} (canonically_ordered_comm_semiring.{1} Type) (@matrix.vec_empty.{1} (complete_lattice.{1} (canonically_ordered_comm_semiring.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_53582 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (linear_ordered_comm_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (linear_ordered_comm_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53583 (h1 : ring (non_unital_non_assoc_semiring std_gen)) : strong_rank_condition (non_unital_non_assoc_semiring std_gen) := sorry --non-trivial
lemma new_lemma_53584 (h0 : semiring (ordered_comm_ring (has_add pos))) : is_noetherian_ring (ordered_comm_ring (has_add pos)) := sorry --non-trivial
lemma new_lemma_53585 (h0 : topological_space (has_edist (option (option (option (option unsigned)))))) : path_connected_space (has_edist (option (option (option (option unsigned))))) := sorry --non-trivial
lemma new_lemma_53586 (h0 : ring (mul_one_class std_gen)) : rank_condition (mul_one_class std_gen) := sorry --non-trivial
lemma new_lemma_53587 (h1 : complete_lattice (linear_ordered_add_comm_group string_imp)) : is_compactly_generated (linear_ordered_add_comm_group string_imp) := sorry --non-trivial
lemma new_lemma_53588 (h0 : topological_space (has_add ennreal)) : topological_space.separable_space (has_add ennreal) := sorry --non-trivial
lemma new_lemma_53589 (h0 : group (complete_semilattice_Sup (has_top unsigned))) : is_cyclic (complete_semilattice_Sup (has_top unsigned)) := sorry --non-trivial
lemma new_lemma_53590 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (has_emptyc.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_emptyc.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53591 (h0 : functor.add_const (complete_lattice (normed_comm_ring Type)) linarith.comp) : @complete_lattice.is_Sup_finite_compact.{1} (normed_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (complete_lattice.{1} (normed_comm_ring.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53592 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (bin_tree.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (bin_tree.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53593 (h0 : function.extfun nat fin) : @is_cyclic.{0} (canonically_ordered_monoid.{0} pos) (@matrix.vec_empty.{0} (group.{0} (canonically_ordered_monoid.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_53594 (h0 : not (list (has_norm linarith.comp_source) -> false)) : list.nodup (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_53595 (h0 : functor.add_const (topological_space (has_nndist linarith.comp)) Type) : @t1_space.{0} (has_nndist.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (has_nndist.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_53596 (h0 : functor.add_const (ordered_add_comm_monoid (has_neg Type)) (comm_group linarith.comp)) : @archimedean.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (ordered_add_comm_monoid.{1} (has_neg.{1} Type)) (comm_group.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_53597 (h0 : topological_space (has_union unsigned)) : irreducible_space (has_union unsigned) := sorry --non-trivial
lemma new_lemma_53598 (h0 : functor.add_const (topological_space (normed_comm_ring pos)) linarith.comp) : @irreducible_space.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53599 (h0 : topological_space (measurable_space.dynkin_system (has_top unsigned))) : normal_space (measurable_space.dynkin_system (has_top unsigned)) := sorry --non-trivial
lemma new_lemma_53600 (h0 : group (pseudo_metric_space (canonically_linear_ordered_monoid ennreal))) : is_simple_group (pseudo_metric_space (canonically_linear_ordered_monoid ennreal)) := sorry --non-trivial
lemma new_lemma_53601 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @is_cyclic.{0} (complete_semilattice_Sup.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) group.{0}) (complete_semilattice_Sup.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_53602 (h0 : functor.add_const (uniform_space (has_zero linarith.comp)) linarith.comp) : @complete_space.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_zero.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53603 (h0 : functor.add_const (filter Type) (finset (has_Inf Type))) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53604 (h1 : list (normed_group char)) : list.nodup h1 := sorry --non-trivial
lemma new_lemma_53605 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (left_cancel_semigroup.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (left_cancel_semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_53606 (h0 : function.extfun nat fin) : @discrete_topology.{0} (ordered_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero))) (ordered_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53607 (h0 : function.extfun (Type 1) list) : palindrome (function.extfun_app h0 (finset Type)) := sorry --non-trivial
lemma new_lemma_53608 (h0 : monoid (boolean_algebra (ring (finset environment.implicit_infer_kind)))) : monoid.fg (boolean_algebra (ring (finset environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_53609 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (has_top.{0} linarith.ineq) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) complete_lattice.{0}) (has_top.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_53610 (h0 : topological_space (comm_group (has_add (has_add Type)))) : regular_space (comm_group (has_add (has_add Type))) := sorry --non-trivial
lemma new_lemma_53611 (h0 : topological_space (has_one (semiring unsigned))) : discrete_topology (has_one (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_53612 (h0 : prod (semigroup Type) (semigroup Type)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_53613 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (complete_distrib_lattice.{0} empty) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (complete_distrib_lattice.{0} empty))  := sorry --non-trivial
lemma new_lemma_53614 (h0 : add_group (has_add (has_bot (has_add Type)))) : is_add_cyclic (has_add (has_bot (has_add Type))) := sorry --non-trivial
lemma new_lemma_53615 (h0 : filter (has_one (has_top (semiring num)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_53616 (h0 : functor.add_const (list (has_nndist linarith.comp)) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53617 (h0 : group (add_cancel_monoid (has_add (has_Inf (has_add (ring (semigroup Type))))))) : is_cyclic (add_cancel_monoid (has_add (has_Inf (has_add (ring (semigroup Type)))))) := sorry --non-trivial
lemma new_lemma_53618 (h0 : group (has_norm string_imp)) : is_cyclic (has_norm string_imp) := sorry --non-trivial
lemma new_lemma_53619 (h0 : ordered_add_comm_monoid (normed_comm_ring (ring Type))) : archimedean (normed_comm_ring (ring Type)) := sorry --non-trivial
lemma new_lemma_53620 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (denumerable.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (denumerable.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_53621 (h0 : topological_space (complete_distrib_lattice (option (option (option (option unsigned)))))) : t1_space (complete_distrib_lattice (option (option (option (option unsigned))))) := sorry --non-trivial
lemma new_lemma_53622 (h0 : function.extfun nat fin) : @add_monoid.fg.{0} (ring.{0} pos) (@matrix.vec_empty.{0} (add_monoid.{0} (ring.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_53623 (h0 : functor.add_const (cancel_comm_monoid_with_zero (cancel_monoid pos)) pos) : @unique_factorization_monoid.{0} (cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (cancel_monoid.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_53624 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (with_one.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (with_one.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53625 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (normed_comm_ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_comm_ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53626 (h0 : not (ring (non_assoc_semiring (semiring (semiring (semiring (semiring (semiring congr_arg_kind)))))) -> false)) : @is_domain.{0} (non_assoc_semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} congr_arg_kind)))))) (@classical.by_contradiction'.{1} (ring.{0} (non_assoc_semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} congr_arg_kind))))))) h0)  := sorry --non-trivial
lemma new_lemma_53627 (h0 : set (simple_graph (simple_graph (has_div (semi_normed_ring reducibility_hints))) -> char)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_53628 (h0 : not (uniform_space (semiring empty) -> false)) : @separated_space.{0} (semiring.{0} empty) (@classical.by_contradiction'.{1} (uniform_space.{0} (semiring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_53629 (h0 : not (group (topological_space linarith.comp_source) -> false)) : @is_cyclic.{0} (topological_space.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (group.{0} (topological_space.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_53630 (h0 : monoid (add_semigroup (option (option unsigned)))) : monoid.fg (add_semigroup (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_53631 (h0 : function.extfun Type group) : @is_cyclic.{0} (has_top.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (has_top.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53632 (h0 : topological_space (preorder (semiring unsigned))) : totally_disconnected_space (preorder (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_53633 (h0 : filter (normed_comm_ring (semigroup (semigroup name)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_53634 (h0 : finset (add_cancel_monoid linarith.comp)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_53635 (h0 : monoid (has_neg_part (has_add Type))) : monoid.fg (has_neg_part (has_add Type)) := sorry --non-trivial
lemma new_lemma_53636 (h0 : group (add_cancel_monoid (finset (has_neg pos)))) : group.fg (add_cancel_monoid (finset (has_neg pos))) := sorry --non-trivial
lemma new_lemma_53637 (h0 : topological_space (denumerable (has_nnnorm string.iterator_imp))) : path_connected_space (denumerable (has_nnnorm string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_53638 (h0 : uniform_space (linear_ordered_cancel_comm_monoid (semiring empty))) : complete_space (linear_ordered_cancel_comm_monoid (semiring empty)) := sorry --non-trivial
lemma new_lemma_53639 (h0 : topological_space (has_bot linarith.comp)) : preirreducible_space (has_bot linarith.comp) := sorry --non-trivial
lemma new_lemma_53640 (h0 : function.extfun Type ring) : @is_domain.{0} (option.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (option.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53641 (h0 : functor.add_const Prop (canonically_ordered_comm_semiring Type)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_53642 (h0 : filter (encodable (has_nnnorm (has_nnnorm (has_nnnorm linarith.ineq))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_53643 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (pseudo_metric_space.{0} ennreal) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (pseudo_metric_space.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_53644 (h2 : topological_space (non_unital_non_assoc_semiring string_imp)) : totally_disconnected_space (non_unital_non_assoc_semiring string_imp) := sorry --non-trivial
lemma new_lemma_53645 (h0 : has_mem.mem ring has_emptyc.emptyc) : @strong_rank_condition.{0} empty (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} h0) empty)  := sorry --non-trivial
lemma new_lemma_53646 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (has_bot.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_bot.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53647 (h0 : group (pseudo_metric_space (option (option (option (option pos)))))) : normalizer_condition (pseudo_metric_space (option (option (option (option pos))))) := sorry --non-trivial
lemma new_lemma_53648 (h0 : complete_lattice (partial_order char) -> char) (h1 : coe_sort (set.range h0)) : @complete_lattice.is_Sup_finite_compact.{0} (partial_order.{0} char) (@set.range_splitting.{0 0} (complete_lattice.{0} (partial_order.{0} char)) char h0 h1)  := sorry --non-trivial
lemma new_lemma_53649 (h0 : functor.add_const (ordered_add_comm_monoid (has_zero name)) linarith.comp) : @archimedean.{0} (has_zero.{0} name) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (has_zero.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53650 (h0 : not (function.extfun Type topological_space -> false)) : @t0_space.{0} (@id.{2} Type unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (@id.{2} Type unsigned))  := sorry --non-trivial
lemma new_lemma_53651 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (has_pos_part.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (has_pos_part.{0} pos))  := sorry --non-trivial
lemma new_lemma_53652 (h0 : topological_space (has_zero name)) : irreducible_space (has_zero name) := sorry --non-trivial
lemma new_lemma_53653 (h0 : function.extfun Type (functor.comp topological_space add_cancel_monoid)) : @totally_disconnected_space.{0} (add_cancel_monoid.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} add_cancel_monoid.{0} pos (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} add_cancel_monoid.{0}) h0 pos))  := sorry --non-trivial
lemma new_lemma_53654 (h0 : functor.add_const (add_monoid (preorder empty)) (semiring empty)) : @add_monoid.fg.{0} (preorder.{0} empty) (@functor.add_const.run.{0 0} (add_monoid.{0} (preorder.{0} empty)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_53655 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (semigroup.{0} name) (@function.extfun_app.{2 1} Type add_group.{0} h0 (semigroup.{0} name))  := sorry --non-trivial
lemma new_lemma_53656 (h0 : topological_space (linear_ordered_comm_ring congr_arg_kind)) : topological_space.separable_space (linear_ordered_comm_ring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53657 (h0 : ring (add_right_cancel_monoid linarith.ineq)) : strong_rank_condition (add_right_cancel_monoid linarith.ineq) := sorry --non-trivial
lemma new_lemma_53658 (h0 : uniform_space (with_one (semiring (semiring congr_arg_kind)))) : separated_space (with_one (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_53659 (h0 : topological_space (complete_distrib_lattice (option ennreal))) : t0_space (complete_distrib_lattice (option ennreal)) := sorry --non-trivial
lemma new_lemma_53660 (h0 : topological_space (has_pos_part (has_add (has_add (ring (has_add linarith.comp)))))) : preirreducible_space (has_pos_part (has_add (has_add (ring (has_add linarith.comp))))) := sorry --non-trivial
lemma new_lemma_53661 (h0 : functor.comp semiring has_neg_part pos) : @is_noetherian_ring.{0} (has_neg_part.{0} pos) (@functor.comp.run.{0 0 0} semiring.{0} has_neg_part.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_53662 (h0 : complete_lattice (has_add (has_add (mul_one_class (has_add pos))))) : complete_lattice.is_Sup_finite_compact (has_add (has_add (mul_one_class (has_add pos)))) := sorry --non-trivial
lemma new_lemma_53663 (h0 : ring (has_append (has_ssubset to_additive.value_type))) : rank_condition (has_append (has_ssubset to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_53664 (h0 : topological_space (comm_group (pseudo_metric_space (option unsigned)))) : preirreducible_space (comm_group (pseudo_metric_space (option unsigned))) := sorry --non-trivial
lemma new_lemma_53665 (h0 : function.extfun Type group) : @group.fg.{0} (random_gen.{0} num) (@function.extfun_app.{2 1} Type group.{0} h0 (random_gen.{0} num))  := sorry --non-trivial
lemma new_lemma_53666 (h0 : measurable_space (linear_ordered_comm_group_with_zero linarith.comp_source)) (h1 : filter (linear_ordered_comm_group_with_zero linarith.comp_source)) : filter.is_measurably_generated h1 := sorry --non-trivial
lemma new_lemma_53667 (h0 : monoid linarith.comp) : monoid.exponent_exists linarith.comp := sorry --non-trivial
lemma new_lemma_53668 (h0 : function.extfun Type topological_space) : @normal_space.{0} (random_gen.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (random_gen.{0} empty))  := sorry --non-trivial
lemma new_lemma_53669 (h0 : function.extfun Type group) : @normalizer_condition.{0} (canonically_ordered_add_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (canonically_ordered_add_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53670 (h2 : function.extfun Type ring) : @rank_condition.{0} (has_add.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} h2 (has_add.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_53671 (h0 : cancel_comm_monoid_with_zero (mul_zero_class (add_comm_monoid Type))) : unique_factorization_monoid (mul_zero_class (add_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_53672 (h0 : functor.add_const (complete_lattice (option empty)) num) : @is_atomistic.{0} (option.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (option.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_53673 (h0 : ring (simple_graph reducibility_hints)) : is_domain (simple_graph reducibility_hints) := sorry --non-trivial
lemma new_lemma_53674 (h0 : functor.add_const (complete_lattice (has_neg linarith.comp)) (has_neg Type)) : @complete_lattice.is_Sup_finite_compact.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 1} (complete_lattice.{0} (has_neg.{0} linarith.comp)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_53675 (h0 : not (has_mem.mem (has_emptyc fun_info) has_emptyc.emptyc -> false)) : @is_cyclic.{0} (has_emptyc.{0} fun_info) (@finset.pi.empty.{1 0} Type group.{0} (has_emptyc.{0} fun_info) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_emptyc.{0} fun_info) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_53676 (h0 : functor.add_const (topological_space (normed_comm_ring Type)) environment.implicit_infer_kind) : @sequential_space.{1} (normed_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (normed_comm_ring.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_53677 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (random_gen.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (random_gen.{0} empty))  := sorry --non-trivial
lemma new_lemma_53678 (h0 : functor.add_const (topological_space (complete_distrib_lattice unsigned)) pos) : @normal_space.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_53679 (h0 : cancel_comm_monoid_with_zero (left_cancel_semigroup congr_arg_kind)) : unique_factorization_monoid (left_cancel_semigroup congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53680 (h0 : not (complete_lattice (has_top fun_info) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (has_top.{0} fun_info) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_top.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_53681 (h0 : has_neg_part (finset ennreal) -> Prop) : zzz_forall h0 := sorry --non-trivial
lemma new_lemma_53682 (h0 : functor.add_const (complete_lattice (canonically_ordered_comm_semiring linarith.comp)) linarith.comp) : @is_compactly_generated.{0} (canonically_ordered_comm_semiring.{0} linarith.comp) (@functor.add_const.run.{0 0} (complete_lattice.{0} (canonically_ordered_comm_semiring.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53683 (h0 : filter (ring name)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_53684 (h0 : topological_space (ordered_comm_monoid Type)) : locally_compact_space (ordered_comm_monoid Type) := sorry --non-trivial
lemma new_lemma_53685 (h0 : topological_space (semigroup (semiring (semiring (semiring unsigned))))) : totally_disconnected_space (semigroup (semiring (semiring (semiring unsigned)))) := sorry --non-trivial
lemma new_lemma_53686 (h0 : uniform_space (complete_distrib_lattice environment.implicit_infer_kind)) : separated_space (complete_distrib_lattice environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_53687 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (boolean_algebra pos)) := sorry --non-trivial
lemma new_lemma_53688 (h0 : not (function.extfun Type group -> false)) : @is_cyclic.{0} string_imp (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) string_imp)  := sorry --non-trivial
lemma new_lemma_53689 (h0 : list (has_inv (has_ssubset (has_ssubset (has_top (comm_ring to_additive.value_type)))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_53690 (h0 : topological_space (ordered_comm_monoid (has_Inf (sub_neg_monoid real)))) : locally_compact_space (ordered_comm_monoid (has_Inf (sub_neg_monoid real))) := sorry --non-trivial
lemma new_lemma_53691 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : countable_Inter_filter (function.extfun_app (function.extfun_app h0 filter) (has_nndist name)) := sorry --non-trivial
lemma new_lemma_53692 (h0 : uniform_space (div_inv_monoid linarith.ineq)) : complete_space (div_inv_monoid linarith.ineq) := sorry --non-trivial
lemma new_lemma_53693 (h0 : functor.add_const (function.extfun Type semiring) (ring name)) : @is_noetherian_ring.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type semiring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type semiring.{0}) (ring.{0} name) h0) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53694 (h0 : topological_space (has_nndist (has_add pos))) : normal_space (has_nndist (has_add pos)) := sorry --non-trivial
lemma new_lemma_53695 (h0 : filter (has_Inf (has_to_string (has_add pos)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_53696 (h0 : functor.add_const (topological_space (has_neg pos)) name) : @topological_space.separable_space.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_53697 (h0 : group (ordered_comm_monoid (has_to_string pos))) : group.fg (ordered_comm_monoid (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_53698 (h0 : functor.add_const (group (cancel_monoid Type)) linarith.comp) : @is_simple_group.{1} (cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (cancel_monoid.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53699 (h0 : group (complete_semilattice_Sup num)) : is_simple_group (complete_semilattice_Sup num) := sorry --non-trivial
lemma new_lemma_53700 (h0 : topological_space (comm_group (has_to_string (has_add (comm_group pos))))) : topological_space.separable_space (comm_group (has_to_string (has_add (comm_group pos)))) := sorry --non-trivial
lemma new_lemma_53701 (h0 : topological_space (add_cancel_monoid (boolean_algebra.core (group_with_zero Type)))) : preirreducible_space (add_cancel_monoid (boolean_algebra.core (group_with_zero Type))) := sorry --non-trivial
lemma new_lemma_53702 (h0 : topological_space (with_one empty)) : topological_space.separable_space (with_one empty) := sorry --non-trivial
lemma new_lemma_53703 (h0 : function.extfun (prod linarith.comp linarith.comp) (fun (x : prod linarith.comp linarith.comp), Prop)) (h1 : functor.add_const (prod linarith.comp linarith.comp) Type) : symmetrize_rel (function.extfun_app h0) (functor.add_const.run h1) := sorry --non-trivial
lemma new_lemma_53704 (h0 : add_group (has_bot (finset (has_Inf (has_Inf pos))))) : is_add_cyclic (has_bot (finset (has_Inf (has_Inf pos)))) := sorry --non-trivial
lemma new_lemma_53705 (h0 : topological_space (rel num num)) : loc_path_connected_space (rel num num) := sorry --non-trivial
lemma new_lemma_53706 (h0 : list (has_pos_part (finset Type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_53707 (h0 : uniform_space (topological_space to_additive.value_type)) : complete_space (topological_space to_additive.value_type) := sorry --non-trivial
lemma new_lemma_53708 (h0 : ring (has_to_string (has_add name))) : rank_condition (has_to_string (has_add name)) := sorry --non-trivial
lemma new_lemma_53709 (h0 : functor.add_const (filter (option num)) congr_arg_kind) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53710 (h0 : functor.add_const (topological_space (add_cancel_monoid linarith.comp)) (ordered_ring name)) : @t0_space.{0} (add_cancel_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} linarith.comp)) (ordered_ring.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_53711 (h0 : function.extfun (Type 1) (functor.comp topological_space finset)) : @sequential_space.{1} (finset.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} finset.{1} Type (@function.extfun_app.{3 2} (Type 1) (functor.comp.{1 1 1} topological_space.{1} finset.{1}) h0 Type))  := sorry --non-trivial
lemma new_lemma_53712 (h0 : uniform_space (random_gen (metric_space (metric_space to_additive.value_type)))) : complete_space (random_gen (metric_space (metric_space to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_53713 (h0 : functor.add_const (group (ordered_ring empty)) (semiring empty)) : @is_cyclic.{0} (ordered_ring.{0} empty) (@functor.add_const.run.{0 0} (group.{0} (ordered_ring.{0} empty)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_53714 (h0 : topological_space (comm_monoid congr_arg_kind)) : preirreducible_space (comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53715 (h0 : ordered_add_comm_monoid linarith.comp) : archimedean linarith.comp := sorry --non-trivial
lemma new_lemma_53716 (h0 : not (ring (distrib (has_compl (has_zero (metric_space reducibility_hints)))) -> false)) : @strong_rank_condition.{0} (distrib.{0} (has_compl.{0} (has_zero.{0} (metric_space.{0} reducibility_hints)))) (@classical.by_contradiction'.{1} (ring.{0} (distrib.{0} (has_compl.{0} (has_zero.{0} (metric_space.{0} reducibility_hints))))) h0)  := sorry --non-trivial
lemma new_lemma_53717 (h0 : not (function.extfun Type topological_space -> false)) : @normal_space.{0} (normed_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (normed_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53718 (h0 : topological_space (finset (ring (has_add environment.implicit_infer_kind)))) : t1_space (finset (ring (has_add environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_53719 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (canonically_linear_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (canonically_linear_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_53720 (h0 : filter (option (semiring unsigned))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_53721 (h0 : boolean_algebra (has_bot pos) -> boolean_algebra (has_bot pos) -> Prop) : is_antisymm (boolean_algebra (has_bot pos)) h0 := sorry --non-trivial
lemma new_lemma_53722 (h0 : cancel_comm_monoid_with_zero (mul_zero_class pos)) : unique_factorization_monoid (mul_zero_class pos) := sorry --non-trivial
lemma new_lemma_53723 (h0 : ring (has_append (random_gen (has_nnnorm (has_nnnorm (random_gen linarith.ineq)))))) : rank_condition (has_append (random_gen (has_nnnorm (has_nnnorm (random_gen linarith.ineq))))) := sorry --non-trivial
lemma new_lemma_53724 (h0 : ring (nondiscrete_normed_field (normed_field std_gen))) : strong_rank_condition (nondiscrete_normed_field (normed_field std_gen)) := sorry --non-trivial
lemma new_lemma_53725 (h0 : topological_space (measurable_space (semiring (semiring empty)))) : totally_disconnected_space (measurable_space (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_53726 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (comm_group ennreal)) := sorry --non-trivial
lemma new_lemma_53727 (h3 : set (enat -> enat)) : set.separates_points h3 := sorry --non-trivial
lemma new_lemma_53728 (h0 : not (topological_space (non_assoc_semiring empty) -> false)) : @normal_space.{0} (non_assoc_semiring.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (non_assoc_semiring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_53729 (h0 : functor.add_const (semiring (boolean_algebra pos)) (comm_group (has_add unsigned))) : @is_noetherian_ring.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (semiring.{0} (boolean_algebra.{0} pos)) (comm_group.{0} (has_add.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_53730 (h0 : functor.add_const (complete_lattice (finset unsigned)) (finset Type)) : @is_atomistic.{0} (finset.{0} unsigned) (@functor.add_const.run.{0 1} (complete_lattice.{0} (finset.{0} unsigned)) (finset.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_53731 (h0 : uniform_space (id congr_arg_kind)) : complete_space (id congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53732 (h0 : functor.add_const (function.extfun (Type 1) list) (has_to_string (has_to_string pos))) : list.nodup (function.extfun_app (functor.add_const.run h0) (add_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_53733 (h0 : group (linear_ordered_field pos)) : is_cyclic (linear_ordered_field pos) := sorry --non-trivial
lemma new_lemma_53734 (h0 : group (has_union (semiring num))) : normalizer_condition (has_union (semiring num)) := sorry --non-trivial
lemma new_lemma_53735 (h0 : not (complete_lattice (free_add_monoid num) -> false)) : @is_atomistic.{0} (free_add_monoid.{0} num) (@classical.by_contradiction'.{1} (complete_lattice.{0} (free_add_monoid.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_53736 (h0 : group (ring real)) : is_cyclic (ring real) := sorry --non-trivial
lemma new_lemma_53737 (h0 : topological_space (has_compl linarith.ineq)) : locally_compact_space (has_compl linarith.ineq) := sorry --non-trivial
lemma new_lemma_53738 (h0 : function.extfun Type topological_space) : @t0_space.{0} (ordered_comm_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_53739 (h0 : not (topological_space (simple_graph enat) -> false)) : @path_connected_space.{0} (simple_graph.{0} enat) (@classical.by_contradiction'.{1} (topological_space.{0} (simple_graph.{0} enat)) h0)  := sorry --non-trivial
lemma new_lemma_53740 (h0 : topological_space (has_inner (option empty) num)) : t1_space (has_inner (option empty) num) := sorry --non-trivial
lemma new_lemma_53741 (h0 : functor.comp ring cancel_monoid name) : @is_principal_ideal_ring.{0} (cancel_monoid.{0} name) (@functor.comp.run.{0 0 0} ring.{0} cancel_monoid.{0} name h0)  := sorry --non-trivial
lemma new_lemma_53742 (h0 : topological_space (distrib_lattice (has_nnnorm linarith.ineq))) : path_connected_space (distrib_lattice (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_53743 (h1 : ring (dlist (has_nnnorm (has_nnnorm fun_info)))) : is_domain (dlist (has_nnnorm (has_nnnorm fun_info))) := sorry --non-trivial
lemma new_lemma_53744 (h0 : function.extfun Type topological_space) : @t1_space.{0} (ring.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53745 (h0 : topological_space (left_cancel_monoid congr_arg_kind)) : discrete_topology (left_cancel_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53746 (h0 : function.extfun Type topological_space) : @t0_space.{0} (denumerable.{0} (has_top.{0} (has_norm.{0} (has_top.{0} (has_inv.{0} (has_inv.{0} fun_info)))))) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (denumerable.{0} (has_top.{0} (has_norm.{0} (has_top.{0} (has_inv.{0} (has_inv.{0} fun_info)))))))  := sorry --non-trivial
lemma new_lemma_53747 (h0 : functor.add_const (uniform_space (has_neg linarith.comp)) Type) : @complete_space.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 1} (uniform_space.{0} (has_neg.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_53748 (h0 : functor.add_const (semiring (canonically_ordered_monoid name)) Type) : @is_noetherian_ring.{0} (canonically_ordered_monoid.{0} name) (@functor.add_const.run.{0 1} (semiring.{0} (canonically_ordered_monoid.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_53749 (h0 : functor.add_const (ring (linear_order num)) congr_arg_kind) : @is_domain.{0} (linear_order.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (linear_order.{0} num)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_53750 (h0 : add_comm_semigroup (add_comm_semigroup char) -> fun_info) : function.bijective h0 := sorry --non-trivial
lemma new_lemma_53751 (h0 : topological_space (boolean_algebra (mul_one_class pos))) : preirreducible_space (boolean_algebra (mul_one_class pos)) := sorry --non-trivial
lemma new_lemma_53752 (h0 : functor.add_const (topological_space (has_nndist environment.implicit_infer_kind)) (has_add pos)) : @normal_space.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} environment.implicit_infer_kind)) (has_add.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_53753 (h0 : functor.add_const (functor.add_const (group linarith.comp) linarith.comp) pos) : @group.fg.{0} linarith.comp (@functor.add_const.run.{0 0} (group.{0} linarith.comp) linarith.comp (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (group.{0} linarith.comp) linarith.comp) pos h0))  := sorry --non-trivial
lemma new_lemma_53754 (h0 : topological_space (mul_zero_class (has_nndist ennreal))) : topological_space.separable_space (mul_zero_class (has_nndist ennreal)) := sorry --non-trivial
lemma new_lemma_53755 (h1 : function.extfun Type ring) : @is_domain.{0} (normed_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h1 (normed_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53756 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (pseudo_metric_space.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (pseudo_metric_space.{0} num))  := sorry --non-trivial
lemma new_lemma_53757 (h0 : complete_lattice (canonically_ordered_monoid pos)) : is_compactly_generated (canonically_ordered_monoid pos) := sorry --non-trivial
lemma new_lemma_53758 (h0 : not (complete_lattice (semi_normed_comm_ring fun_info) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (semi_normed_comm_ring.{0} fun_info) (@classical.by_contradiction'.{1} (complete_lattice.{0} (semi_normed_comm_ring.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_53759 (h0 : topological_space (canonically_linear_ordered_monoid (has_Inf Type))) : totally_separated_space (canonically_linear_ordered_monoid (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_53760 (h0 : not (ring (random_gen (random_gen linarith.comp_source)) -> false)) : @strong_rank_condition.{0} (random_gen.{0} (random_gen.{0} linarith.comp_source)) (@classical.by_contradiction'.{1} (ring.{0} (random_gen.{0} (random_gen.{0} linarith.comp_source))) h0)  := sorry --non-trivial
lemma new_lemma_53761 (h0 : ring (has_neg (option empty))) : strong_rank_condition (has_neg (option empty)) := sorry --non-trivial
lemma new_lemma_53762 (h0 : topological_space ennreal) : sequential_space ennreal := sorry --non-trivial
lemma new_lemma_53763 (h0 : function.extfun (Type 1) (functor.comp ring add_comm_monoid)) : @strong_rank_condition.{1} (add_comm_monoid.{1} Type) (@functor.comp.run.{1 1 1} ring.{1} add_comm_monoid.{1} Type (@function.extfun_app.{3 2} (Type 1) (functor.comp.{1 1 1} ring.{1} add_comm_monoid.{1}) h0 Type))  := sorry --non-trivial
lemma new_lemma_53764 (h0 : group (boolean_algebra (has_neg pos))) : is_cyclic (boolean_algebra (has_neg pos)) := sorry --non-trivial
lemma new_lemma_53765 (h0 : ring (denumerable (has_nnnorm (has_nnnorm (has_nnnorm linarith.comp_source))))) : rank_condition (denumerable (has_nnnorm (has_nnnorm (has_nnnorm linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_53766 (h0 : fin has_zero.zero) : @is_compactly_generated.{0} (normed_lattice_add_comm_group.{0} real) (@matrix.vec_empty.{0} (complete_lattice.{0} (normed_lattice_add_comm_group.{0} real)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)))  := sorry --non-trivial
lemma new_lemma_53767 (h0 : topological_space (complete_distrib_lattice (has_neg_part linarith.comp))) : t1_space (complete_distrib_lattice (has_neg_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_53768 (h0 : add_monoid (normed_comm_ring (finset (finset environment.implicit_infer_kind)))) : add_monoid.fg (normed_comm_ring (finset (finset environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_53769 (h0 : group (normed_group (random_gen (random_gen fun_info)))) : normalizer_condition (normed_group (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_53770 (h0 : function.extfun Type ring) : @rank_condition.{0} (@id.{2} Type num) (@function.extfun_app.{2 1} Type ring.{0} h0 (@id.{2} Type num))  := sorry --non-trivial
lemma new_lemma_53771 (h0 : functor.add_const (function.extfun Type semiring) (ring pos)) : @is_noetherian_ring.{0} pos (@function.extfun_app.{2 1} Type semiring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type semiring.{0}) (ring.{0} pos) h0) pos)  := sorry --non-trivial
lemma new_lemma_53772 (h0 : cancel_comm_monoid_with_zero (ordered_comm_monoid (has_neg (has_neg Type)))) : unique_factorization_monoid (ordered_comm_monoid (has_neg (has_neg Type))) := sorry --non-trivial
lemma new_lemma_53773 (h1 : Prop) (h3 : list Prop) : list.ilast' h1 h3 := sorry --non-trivial
lemma new_lemma_53774 (h0 : functor.add_const (ordered_add_comm_monoid (canonically_ordered_comm_semiring pos)) linarith.comp) : @archimedean.{0} (canonically_ordered_comm_semiring.{0} pos) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (canonically_ordered_comm_semiring.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53775 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (normed_linear_ordered_group.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (normed_linear_ordered_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53776 (h0 : ring (option (semiring (semiring (semiring congr_arg_kind))))) : is_principal_ideal_ring (option (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_53777 (h0 : function.extfun (Type 1) (functor.comp ring has_add)) : @is_domain.{1} (has_add.{1} Type) (@functor.comp.run.{1 1 1} ring.{1} has_add.{1} Type (@function.extfun_app.{3 2} (Type 1) (functor.comp.{1 1 1} ring.{1} has_add.{1}) h0 Type))  := sorry --non-trivial
lemma new_lemma_53778 (h0 : function.extfun Type topological_space) : path_connected_space nnreal := sorry --non-trivial
lemma new_lemma_53779 (h0 : ring (boolean_algebra.core (add_comm_monoid (comm_group unsigned)))) : is_domain (boolean_algebra.core (add_comm_monoid (comm_group unsigned))) := sorry --non-trivial
lemma new_lemma_53780 (h0 : topological_space (ordered_comm_ring (sub_neg_monoid (has_bot Type)))) : preirreducible_space (ordered_comm_ring (sub_neg_monoid (has_bot Type))) := sorry --non-trivial
lemma new_lemma_53781 (h0 : add_group (canonically_linear_ordered_monoid congr_arg_kind)) : is_add_cyclic (canonically_linear_ordered_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53782 (h0 : topological_space (add_left_cancel_semigroup congr_arg_kind)) : path_connected_space (add_left_cancel_semigroup congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53783 (h0 : functor.add_const (topological_space (mul_zero_class congr_arg_kind)) (semiring empty)) : @locally_compact_space.{0} (mul_zero_class.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (mul_zero_class.{0} congr_arg_kind)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_53784 (h0 : functor.add_const (topological_space (semigroup name)) name) : @path_connected_space.{0} (semigroup.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_53785 (h0 : add_monoid (simple_graph linarith.comp)) : add_monoid.fg (simple_graph linarith.comp) := sorry --non-trivial
lemma new_lemma_53786 (h0 : ring (partial_order (semiring (semiring unsigned)))) : rank_condition (partial_order (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_53787 (h0 : add_group (has_ssubset (has_ssubset linarith.ineq))) : is_add_cyclic (has_ssubset (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_53788 (h0 : topological_space (option (option name))) : totally_disconnected_space (option (option name)) := sorry --non-trivial
lemma new_lemma_53789 (h1 : add_group (div_inv_monoid (has_nnnorm char))) : is_add_cyclic (div_inv_monoid (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_53790 (h0 : complete_lattice (dlist (has_nnnorm (has_add linarith.ineq)))) : complete_lattice.is_Sup_finite_compact (dlist (has_nnnorm (has_add linarith.ineq))) := sorry --non-trivial
lemma new_lemma_53791 (h0 : functor.add_const (uniform_space (has_to_string name)) pos) : @complete_space.{0} (has_to_string.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_to_string.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_53792 (h0 : functor.add_const (topological_space (add_group congr_arg_kind)) num) : @t0_space.{0} (add_group.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (add_group.{0} congr_arg_kind)) num h0)  := sorry --non-trivial
lemma new_lemma_53793 (h0 : functor.add_const (semiring (has_nndist environment.implicit_infer_kind)) Type) : @is_noetherian_ring.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (semiring.{0} (has_nndist.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_53794 (h0 : ring (has_pos_part (ordered_comm_monoid Type))) : is_principal_ideal_ring (has_pos_part (ordered_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_53795 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (add_group.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (add_group.{0} num))  := sorry --non-trivial
lemma new_lemma_53796 (h0 : topological_space (boolean_algebra.core (normed_comm_ring unsigned))) : path_connected_space (boolean_algebra.core (normed_comm_ring unsigned)) := sorry --non-trivial
lemma new_lemma_53797 (h0 : topological_space (linear_ordered_comm_group ennreal)) : preirreducible_space (linear_ordered_comm_group ennreal) := sorry --non-trivial
lemma new_lemma_53798 (h0 : function.extfun (Type 1) topological_space) : @discrete_topology.{1} (plift.{1} congr_arg_kind) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (plift.{1} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53799 (h0 : function.extfun Type ring) : @is_domain.{0} (with_one.{0} linarith.ineq) (@function.extfun_app.{2 1} Type ring.{0} h0 (with_one.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_53800 (h0 : topological_space (topological_space (denumerable linarith.ineq))) : t0_space (topological_space (denumerable linarith.ineq)) := sorry --non-trivial
lemma new_lemma_53801 (h0 : list (ordered_comm_group unsigned)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_53802 (h0 : topological_space (has_lt (mul_one_class enat))) : totally_disconnected_space (has_lt (mul_one_class enat)) := sorry --non-trivial
lemma new_lemma_53803 (h0 : has_mem.mem complete_lattice has_emptyc.emptyc) : @complete_lattice.is_Sup_finite_compact.{0} (has_top.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) complete_lattice.{0} h0) (has_top.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_53804 (h0 : topological_space (cancel_monoid (option ennreal))) : locally_compact_space (cancel_monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_53805 (h0 : cancel_comm_monoid_with_zero (has_bot Type)) : unique_factorization_monoid (has_bot Type) := sorry --non-trivial
lemma new_lemma_53806 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (complete_semilattice_Sup.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (complete_semilattice_Sup.{0} empty))  := sorry --non-trivial
lemma new_lemma_53807 (h0 : ring (normed_lattice_add_comm_group (has_neg (has_Inf name)))) : strong_rank_condition (normed_lattice_add_comm_group (has_neg (has_Inf name))) := sorry --non-trivial
lemma new_lemma_53808 (h0 : ring (has_add (has_add (has_add (has_add pos))))) : rank_condition (has_add (has_add (has_add (has_add pos)))) := sorry --non-trivial
lemma new_lemma_53809 (h0 : complete_lattice (simple_graph (semiring (semiring unsigned)))) : is_compactly_generated (simple_graph (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_53810 (h0 : functor.add_const (topological_space (finset name)) environment.implicit_infer_kind) : @preconnected_space.{0} (finset.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_53811 (h0 : topological_space (has_compl std_gen)) : totally_disconnected_space (has_compl std_gen) := sorry --non-trivial
lemma new_lemma_53812 (h0 : functor.add_const (topological_space (boolean_algebra name)) pos) : @regular_space.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_53813 (h0 : ring (has_to_string (add_cancel_monoid linarith.comp))) : strong_rank_condition (has_to_string (add_cancel_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_53814 (h0 : topological_space (add_cancel_monoid (has_add pos))) : totally_separated_space (add_cancel_monoid (has_add pos)) := sorry --non-trivial
lemma new_lemma_53815 (h0 : functor.add_const (functor.add_const (topological_space linarith.comp) linarith.comp) linarith.comp) : @preconnected_space.{0} linarith.comp (@functor.add_const.run.{0 0} (topological_space.{0} linarith.comp) linarith.comp (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (topological_space.{0} linarith.comp) linarith.comp) linarith.comp h0))  := sorry --non-trivial
lemma new_lemma_53816 (h0 : topological_space (bin_tree congr_arg_kind)) : locally_compact_space (bin_tree congr_arg_kind) := sorry --non-trivial
lemma new_lemma_53817 (h0 : complete_lattice (ordered_comm_ring (sub_neg_monoid (has_pos_part real)))) : is_compactly_generated (ordered_comm_ring (sub_neg_monoid (has_pos_part real))) := sorry --non-trivial
lemma new_lemma_53818 (h0 : topological_space (measurable_space.dynkin_system (semiring num))) : t1_space (measurable_space.dynkin_system (semiring num)) := sorry --non-trivial
lemma new_lemma_53819 (h0 : group (has_inner unsigned (sub_neg_monoid congr_arg_kind))) : normalizer_condition (has_inner unsigned (sub_neg_monoid congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_53820 (h0 : not (topological_space (add_left_cancel_monoid linarith.ineq) -> false)) : @path_connected_space.{0} (add_left_cancel_monoid.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (add_left_cancel_monoid.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_53821 (h0 : functor.add_const (functor.comp topological_space boolean_algebra.core name) Type) : @topological_space.separable_space.{0} (boolean_algebra.core.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} boolean_algebra.core.{0} name (@functor.add_const.run.{0 1} (functor.comp.{0 0 0} topological_space.{0} boolean_algebra.core.{0} name) Type h0))  := sorry --non-trivial
lemma new_lemma_53822 (h0 : functor.add_const (function.extfun Type ordered_comm_monoid) pos) : @has_exists_mul_of_le.{0} (has_to_string.{0} unsigned) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) pos h0) (has_to_string.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53823 (h0 : functor.add_const (ring (has_to_string environment.implicit_infer_kind)) pos) : @is_domain.{0} (has_to_string.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (has_to_string.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_53824 (h0 : ring (measurable_space (has_norm empty))) : is_domain (measurable_space (has_norm empty)) := sorry --non-trivial
lemma new_lemma_53825 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (monoid.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_53826 (h0 : ordered_comm_monoid (comm_group (option unsigned))) : has_exists_mul_of_le (comm_group (option unsigned)) := sorry --non-trivial
lemma new_lemma_53827 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (with_bot.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (with_bot.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53828 (h0 : monoid (has_bot (sub_neg_monoid (has_add Type)))) : monoid.fg (has_bot (sub_neg_monoid (has_add Type))) := sorry --non-trivial
lemma new_lemma_53829 (h0 : functor.add_const (group (comm_group Type)) environment.implicit_infer_kind) : @group.fg.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (comm_group.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_53830 (h0 : complete_lattice (has_pos_part (has_Inf Type))) : is_compactly_generated (has_pos_part (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_53831 (h0 : ring (comm_semigroup (sub_neg_monoid linarith.comp))) : strong_rank_condition (comm_semigroup (sub_neg_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_53832 (h0 : ring (with_bot (has_norm (has_norm linarith.comp_source)))) : is_domain (with_bot (has_norm (has_norm linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_53833 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (with_one.{0} linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} h0 (with_one.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53834 (h0 : complete_lattice (add_cancel_monoid (ring linarith.comp))) : complete_lattice.is_Sup_finite_compact (add_cancel_monoid (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_53835 (h0 : topological_space (has_union (linear_ordered_semiring (semiring empty)))) : path_connected_space (has_union (linear_ordered_semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_53836 (h0 : complete_lattice (has_add (option (option unsigned)))) : is_compactly_generated (has_add (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_53837 (h0 : ring (add_cancel_comm_monoid string.iterator_imp)) : is_domain (add_cancel_comm_monoid string.iterator_imp) := sorry --non-trivial
lemma new_lemma_53838 (h0 : list (list Prop)) : list.head (id (id (list.head h0))) := sorry --non-trivial
lemma new_lemma_53839 (h0 : uniform_space (with_one (random_gen num))) : separated_space (with_one (random_gen num)) := sorry --non-trivial
lemma new_lemma_53840 (h0 : ordered_comm_monoid (has_nndist (finset (finset environment.implicit_infer_kind)))) : has_exists_mul_of_le (has_nndist (finset (finset environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_53841 (h0 : topological_space (normed_lattice_add_comm_group Type)) : irreducible_space (normed_lattice_add_comm_group Type) := sorry --non-trivial
lemma new_lemma_53842 (h0 : functor.add_const (complete_lattice (has_Inf pos)) pos) : @is_compactly_generated.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_Inf.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_53843 (h0 : functor.add_const (topological_space (free_add_monoid unsigned)) unsigned) : @topological_space.separable_space.{0} (free_add_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (free_add_monoid.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_53844 (h0 : finset (has_to_string (has_add (has_add pos)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_53845 (h0 : topological_space (non_assoc_semiring (semiring (semiring congr_arg_kind)))) : topological_space.separable_space (non_assoc_semiring (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_53846 (h3 : topological_space linarith.comp_source) : t0_space linarith.comp_source := sorry --non-trivial
lemma new_lemma_53847 (h0 : list (has_ssubset (has_ssubset (has_ssubset fun_info)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_53848 (h0 : finset (has_norm to_additive.value_type)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_53849 (h0 : complete_lattice (linear_ordered_semiring (random_gen (random_gen fun_info)))) : is_compactly_generated (linear_ordered_semiring (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_53850 (h0 : topological_space linarith.ineq) : preconnected_space linarith.ineq := sorry --non-trivial
lemma new_lemma_53851 (h1 : list (with_bot linarith.comp_source)) : list.nodup h1 := sorry --non-trivial
lemma new_lemma_53852 (h0 : topological_space (has_bot (has_Inf (ordered_comm_monoid pos)))) : loc_path_connected_space (has_bot (has_Inf (ordered_comm_monoid pos))) := sorry --non-trivial
lemma new_lemma_53853 (h0 : list (finset pos)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_53854 (h0 : fin has_zero.zero) : @normal_space.{1} (add_comm_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (add_comm_monoid.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_53855 (h0 : add_monoid (comm_semigroup (has_bot (has_Inf pos)))) : add_monoid.fg (comm_semigroup (has_bot (has_Inf pos))) := sorry --non-trivial
lemma new_lemma_53856 (h0 : complete_lattice (has_compl (has_inv linarith.ineq))) : complete_lattice.is_Sup_finite_compact (has_compl (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_53857 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (has_bot.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_bot.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53858 (h0 : ring (measurable_space.dynkin_system linarith.comp)) : rank_condition (measurable_space.dynkin_system linarith.comp) := sorry --non-trivial
lemma new_lemma_53859 (h0 : monoid (canonically_ordered_comm_semiring (has_add pos))) : monoid.fg (canonically_ordered_comm_semiring (has_add pos)) := sorry --non-trivial
lemma new_lemma_53860 (h0 : functor.add_const (function.extfun Type ring) Type) : @is_principal_ideal_ring.{0} (has_to_string.{0} name) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type ring.{0}) Type h0) (has_to_string.{0} name))  := sorry --non-trivial
lemma new_lemma_53861 (h0 : function.extfun Type ring) : @is_domain.{0} (ordered_cancel_add_comm_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (ordered_cancel_add_comm_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53862 (h0 : group (has_add (has_pos_part linarith.comp))) : group.fg (has_add (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_53863 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (pseudo_metric_space.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (pseudo_metric_space.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_53864 (h0 : functor.add_const (topological_space (boolean_algebra linarith.comp)) pos) : @topological_space.separable_space.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_53865 (h0 : ring (add_comm_monoid (has_nndist (has_nndist (finset ennreal))))) : strong_rank_condition (add_comm_monoid (has_nndist (has_nndist (finset ennreal)))) := sorry --non-trivial
lemma new_lemma_53866 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (linear_ordered_semiring.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_53867 (h0 : topological_space (with_bot (has_inv (has_inv (has_inv (has_inv fun_info)))))) : totally_separated_space (with_bot (has_inv (has_inv (has_inv (has_inv fun_info))))) := sorry --non-trivial
lemma new_lemma_53868 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @unique_factorization_monoid.{0} (comm_semigroup.{0} real) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type cancel_comm_monoid_with_zero.{0}) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero))) (comm_semigroup.{0} real))  := sorry --non-trivial
lemma new_lemma_53869 (h0 : functor.add_const (uniform_space (has_add linarith.comp)) name) : @complete_space.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_add.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_53870 (h0 : functor.comp topological_space add_comm_monoid environment.implicit_infer_kind) : @discrete_topology.{0} (add_comm_monoid.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} topological_space.{0} add_comm_monoid.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_53871 (h0 : group (ordered_comm_ring (has_nndist (ring (has_add linarith.comp))))) : is_cyclic (ordered_comm_ring (has_nndist (ring (has_add linarith.comp)))) := sorry --non-trivial
lemma new_lemma_53872 (h0 : not (function.extfun Type topological_space -> false)) : @discrete_topology.{0} (measurable_space.dynkin_system.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (measurable_space.dynkin_system.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53873 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (non_assoc_semiring.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (non_assoc_semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_53874 (h0 : function.extfun (finset Type) (has_mem.mem (semiring linarith.comp))) : @path_connected_space.{0} (semiring.{0} linarith.comp) (@finset.pi.empty.{1 0} Type topological_space.{0} (semiring.{0} linarith.comp) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (semiring.{0} linarith.comp)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_53875 (h1 : ring (has_ssubset linarith.ineq)) : strong_rank_condition (has_ssubset linarith.ineq) := sorry --non-trivial
lemma new_lemma_53876 (h0 : not (ring (fintype linarith.ineq) -> false)) : @rank_condition.{0} (fintype.{0} linarith.ineq) (@classical.by_contradiction'.{1} (ring.{0} (fintype.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_53877 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : finset.nonempty (function.extfun_app (function.extfun_app h0 finset) (linear_ordered_comm_ring num)) := sorry --non-trivial
lemma new_lemma_53878 (h0 : topological_space (add_group environment.implicit_infer_kind)) : preconnected_space (add_group environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_53879 (h0 : ring (has_nndist ennreal)) : is_domain (has_nndist ennreal) := sorry --non-trivial
lemma new_lemma_53880 (h0 : add_group (plift (partial_order num))) : is_add_cyclic (plift (partial_order num)) := sorry --non-trivial
lemma new_lemma_53881 (h0 : functor.add_const (function.extfun Type cancel_comm_monoid_with_zero) pos) : @unique_factorization_monoid.{0} (has_Inf.{0} pos) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type cancel_comm_monoid_with_zero.{0}) pos h0) (has_Inf.{0} pos))  := sorry --non-trivial
lemma new_lemma_53882 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (add_right_cancel_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_right_cancel_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53883 (h0 : functor.add_const (group (add_cancel_monoid Type)) linarith.comp) : @is_simple_group.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (add_cancel_monoid.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53884 (h0 : uniform_space (has_bot (has_neg (has_neg pos)))) : separated_space (has_bot (has_neg (has_neg pos))) := sorry --non-trivial
lemma new_lemma_53885 (h1 : ring (distrib (topological_space (topological_space char)))) : is_domain (distrib (topological_space (topological_space char))) := sorry --non-trivial
lemma new_lemma_53886 (h0 : topological_space (has_ssubset (random_gen (has_nnnorm fun_info)))) : totally_disconnected_space (has_ssubset (random_gen (has_nnnorm fun_info))) := sorry --non-trivial
lemma new_lemma_53887 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (linear_ordered_semiring.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_ordered_semiring.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_53888 (h0 : topological_space (add_cancel_monoid (has_neg (finset pos)))) : topological_space.separable_space (add_cancel_monoid (has_neg (finset pos))) := sorry --non-trivial
lemma new_lemma_53889 (h0 : functor.comp topological_space comm_group name) : @regular_space.{0} (comm_group.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} comm_group.{0} name h0)  := sorry --non-trivial
lemma new_lemma_53890 (h0 : complete_lattice (linear_ordered_add_comm_group (random_gen fun_info))) : is_compactly_generated (linear_ordered_add_comm_group (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_53891 (h0 : topological_space (has_pos_part (has_add real))) : preirreducible_space (has_pos_part (has_add real)) := sorry --non-trivial
lemma new_lemma_53892 (h3 : topological_space (id linarith.ineq)) : totally_disconnected_space (id linarith.ineq) := sorry --non-trivial
lemma new_lemma_53893 (h0 : not (function.extfun Type topological_space -> false)) : @totally_separated_space.{0} (has_one.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_one.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53894 (h0 : ordered_comm_monoid (finset (has_to_string (has_neg_part unsigned)))) : has_exists_mul_of_le (finset (has_to_string (has_neg_part unsigned))) := sorry --non-trivial
lemma new_lemma_53895 (h0 : function.extfun nat fin) : @add_monoid.fg.{0} (generalized_boolean_algebra.{0} linarith.comp) (@matrix.vec_empty.{0} (add_monoid.{0} (generalized_boolean_algebra.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_53896 (h0 : monoid (has_to_string (has_neg environment.implicit_infer_kind))) : monoid.fg (has_to_string (has_neg environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_53897 (h0 : topological_space (has_inv (has_norm fun_info))) : t0_space (has_inv (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_53898 (h0 : not (uniform_space (option unsigned) -> false)) : @complete_space.{0} (option.{0} unsigned) (@classical.by_contradiction'.{1} (uniform_space.{0} (option.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_53899 (h0 : function.extfun Type ring) : @is_domain.{0} (linear_ordered_add_comm_group.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_ordered_add_comm_group.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_53900 (h0 : topological_space (boolean_algebra (add_cancel_monoid name))) : regular_space (boolean_algebra (add_cancel_monoid name)) := sorry --non-trivial
lemma new_lemma_53901 (h0 : set (fun_info -> ereal)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_53902 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (linear_ordered_comm_group.{0} ennreal) (@function.extfun_app.{2 1} Type add_group.{0} h0 (linear_ordered_comm_group.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_53903 (h0 : topological_space (cancel_monoid (option (option (option (option (option congr_arg_kind))))))) : locally_compact_space (cancel_monoid (option (option (option (option (option congr_arg_kind)))))) := sorry --non-trivial
lemma new_lemma_53904 (h1 : add_group (with_one linarith.comp)) : is_add_cyclic (with_one linarith.comp) := sorry --non-trivial
lemma new_lemma_53905 (h1 : topological_space (with_one num)) : locally_compact_space (with_one num) := sorry --non-trivial
lemma new_lemma_53906 (h2 : fin has_zero.zero) : matrix.vec_empty h2 := sorry --non-trivial
lemma new_lemma_53907 (h0 : semiring (id (semiring congr_arg_kind))) : is_noetherian_ring (id (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_53908 (h0 : ring (random_gen (has_norm linarith.comp))) : strong_rank_condition (random_gen (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_53909 (h0 : uniform_space (has_zero (semigroup Type))) : complete_space (has_zero (semigroup Type)) := sorry --non-trivial
lemma new_lemma_53910 (h0 : topological_space (random_gen (has_nnnorm linarith.comp_source))) : locally_compact_space (random_gen (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_53911 (h0 : has_mem.mem (random_gen fun_info) has_zero.zero) : @t0_space.{0} (random_gen.{0} fun_info) (@multiset.pi.empty.{1 0} Type topological_space.{0} (random_gen.{0} fun_info) h0)  := sorry --non-trivial
lemma new_lemma_53912 (h0 : ring (add_comm_semigroup std_gen)) : rank_condition (add_comm_semigroup std_gen) := sorry --non-trivial
lemma new_lemma_53913 (h0 : group (random_gen (denumerable (has_inv linarith.ineq)))) : is_cyclic (random_gen (denumerable (has_inv linarith.ineq))) := sorry --non-trivial
lemma new_lemma_53914 (h4 : uniform_space (semi_normed_comm_ring linarith.comp_source)) : complete_space (semi_normed_comm_ring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_53915 (h0 : group (has_lt (random_gen char))) : is_cyclic (has_lt (random_gen char)) := sorry --non-trivial
lemma new_lemma_53916 (h0 : function.extfun string_imp (fun (x : string_imp), Prop)) : @infi.{0 1} Prop (@conditionally_complete_lattice.to_has_Inf.{0} Prop (@complete_lattice.to_conditionally_complete_lattice.{0} Prop Prop.complete_lattice)) string_imp (@function.extfun_app.{1 1} string_imp (λ (x : string_imp), Prop) h0)  := sorry --non-trivial
lemma new_lemma_53917 (h0 : ring (normed_comm_ring (has_add (semigroup unsigned)))) : is_principal_ideal_ring (normed_comm_ring (has_add (semigroup unsigned))) := sorry --non-trivial
lemma new_lemma_53918 (h0 : list (has_zero (finset Type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_53919 (h0 : function.extfun Type topological_space) : @normal_space.{0} (has_to_string.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_to_string.{0} pos))  := sorry --non-trivial
lemma new_lemma_53920 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (pseudo_metric_space.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (pseudo_metric_space.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53921 (h0 : group (simple_graph Type)) : normalizer_condition (simple_graph Type) := sorry --non-trivial
lemma new_lemma_53922 (h0 : fin has_zero.zero) : @group.fg.{0} (ordered_comm_monoid.{0} name) (@function.extfun_app.{2 1} Type group.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type group.{0}) h0) (ordered_comm_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_53923 (h0 : set (prod name name)) : symmetric_rel h0 := sorry --non-trivial
lemma new_lemma_53924 (h0 : topological_space (linear_ordered_add_comm_group (has_norm linarith.comp_source))) : locally_compact_space (linear_ordered_add_comm_group (has_norm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_53925 (h0 : group (has_top (random_gen (random_gen fun_info)))) : normalizer_condition (has_top (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_53926 (h0 : complete_lattice (option (option ennreal))) : complete_lattice.is_Sup_finite_compact (option (option ennreal)) := sorry --non-trivial
lemma new_lemma_53927 (h0 : topological_space (complete_linear_order num)) : irreducible_space (complete_linear_order num) := sorry --non-trivial
lemma new_lemma_53928 (h0 : complete_lattice (add_left_cancel_monoid linarith.comp_source)) : is_compactly_generated (add_left_cancel_monoid linarith.comp_source) := sorry --non-trivial
lemma new_lemma_53929 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (linear_ordered_add_comm_monoid_with_top.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (linear_ordered_add_comm_monoid_with_top.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_53930 (h0 : topological_space (semi_normed_comm_ring (complete_semilattice_Sup (dlist (encodable (has_top string_imp)))))) : t0_space (semi_normed_comm_ring (complete_semilattice_Sup (dlist (encodable (has_top string_imp))))) := sorry --non-trivial
lemma new_lemma_53931 (h0 : ring (random_gen linarith.ineq)) : rank_condition (random_gen linarith.ineq) := sorry --non-trivial
lemma new_lemma_53932 (h0 : monoid (has_nnnorm fun_info)) (h1 : monoid (has_nnnorm fun_info) -> id Prop) : id_bind h0 h1 := sorry --non-trivial
lemma new_lemma_53933 (h0 : not (function.extfun Type topological_space -> false)) : @locally_compact_space.{0} (@id.{2} Type congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (@id.{2} Type congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_53934 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (comm_group.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_53935 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (sub_neg_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (sub_neg_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53936 (h0 : list (id empty)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_53937 (h0 : functor.add_const (ring (ring unsigned)) name) : @rank_condition.{0} (ring.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (ring.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_53938 (h0 : filter (has_ssubset (has_inv to_additive.value_type))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_53939 (h0 : ring (canonically_ordered_comm_semiring unsigned)) : is_principal_ideal_ring (canonically_ordered_comm_semiring unsigned) := sorry --non-trivial
lemma new_lemma_53940 (h0 h1 : ereal -> ereal -> ereal) : right_distributive h0 h1 := sorry --non-trivial
lemma new_lemma_53941 (h0 : complete_lattice (cancel_monoid num)) : is_atomistic (cancel_monoid num) := sorry --non-trivial
lemma new_lemma_53942 (h0 : not (ring (non_unital_non_assoc_semiring to_additive.value_type) -> false)) : @is_domain.{0} (non_unital_non_assoc_semiring.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (non_unital_non_assoc_semiring.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_53943 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_nndist.{0} (option.{0} unsigned)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_nndist.{0} (option.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_53944 (h0 : functor.add_const (add_monoid (add_cancel_monoid Type)) linarith.comp) : @add_monoid.fg.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (add_monoid.{1} (add_cancel_monoid.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53945 (h0 : complete_lattice (metric_space (semiring unsigned))) : complete_lattice.is_Sup_finite_compact (metric_space (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_53946 (h1 : set (nondiscrete_normed_field linarith.comp_source)) : set.subsingleton h1 := sorry --non-trivial
lemma new_lemma_53947 (h0 : functor.add_const (topological_space (option unsigned)) congr_arg_kind) : @t0_space.{0} (option.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (option.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_53948 (h0 : filter (boolean_algebra.core unsigned)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_53949 (h0 : nat) (h1 : add_group (has_nnnorm (ordered_cancel_comm_monoid (zmod h0)))) : is_add_cyclic (has_nnnorm (ordered_cancel_comm_monoid (zmod h0))) := sorry --non-trivial
lemma new_lemma_53950 (h0 : functor.add_const (ring (preorder congr_arg_kind)) congr_arg_kind) : @rank_condition.{0} (preorder.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (ring.{0} (preorder.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_53951 (h0 : not (function.extfun Type topological_space -> false)) : @path_connected_space.{0} (random_gen.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (random_gen.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53952 (h0 : topological_space (has_norm (has_norm to_additive.value_type))) : irreducible_space (has_norm (has_norm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_53953 (h0 : functor.add_const (ring (ring unsigned)) Type) : @rank_condition.{0} (ring.{0} unsigned) (@functor.add_const.run.{0 1} (ring.{0} (ring.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_53954 (h0 : ring (distrib_lattice (has_norm to_additive.value_type))) : rank_condition (distrib_lattice (has_norm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_53955 (h0 : topological_space (has_pos_part (finset (finset linarith.comp)))) : t0_space (has_pos_part (finset (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_53956 (h0 : topological_space (has_add (has_add real))) : preirreducible_space (has_add (has_add real)) := sorry --non-trivial
lemma new_lemma_53957 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (generalized_boolean_algebra.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (generalized_boolean_algebra.{0} real))  := sorry --non-trivial
lemma new_lemma_53958 (h0 : ring (add_cancel_comm_monoid (random_gen (random_gen (mul_one_class linarith.ineq))))) : rank_condition (add_cancel_comm_monoid (random_gen (random_gen (mul_one_class linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_53959 (h0 : filter (has_neg_part (add_comm_monoid (add_comm_monoid (add_comm_monoid Type))))) (h1 : has_neg_part (add_comm_monoid (add_comm_monoid (add_comm_monoid Type))) -> filter environment.implicit_infer_kind) : filter.ne_bot (filter.limsup h0 h1) := sorry --non-trivial
lemma new_lemma_53960 (h0 : ordered_add_comm_monoid (ring (has_add (finset Type)))) : archimedean (ring (has_add (finset Type))) := sorry --non-trivial
lemma new_lemma_53961 (h0 : list (simple_graph (ring linarith.comp))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_53962 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_to_string linarith.comp)) pos) : @unique_factorization_monoid.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (has_to_string.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_53963 (h0 : function.extfun Type group) : @is_cyclic.{0} (preorder.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (preorder.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53964 (h0 : uniform_space (denumerable (random_gen to_additive.value_type))) : complete_space (denumerable (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_53965 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (mul_zero_class.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (mul_zero_class.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_53966 (h0 : has_neg (nondiscrete_normed_field (simple_graph (add_comm_semigroup linarith.ineq)))) (h1 : measurable_space (nondiscrete_normed_field (simple_graph (add_comm_semigroup linarith.ineq)))) : has_measurable_neg (nondiscrete_normed_field (simple_graph (add_comm_semigroup linarith.ineq))) := sorry --non-trivial
lemma new_lemma_53967 (h0 : topological_space (has_bot name)) : totally_separated_space (has_bot name) := sorry --non-trivial
lemma new_lemma_53968 (h1 : add_group (random_gen (random_gen string_imp))) : is_add_cyclic (random_gen (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_53969 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (ordered_comm_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_comm_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53970 (h0 : not (topological_space (normed_field reducibility_hints) -> false)) (h1 : not (preorder (normed_field reducibility_hints) -> false)) : @order_topology.{0} (normed_field.{0} reducibility_hints) (@classical.by_contradiction'.{1} (topological_space.{0} (normed_field.{0} reducibility_hints)) h0) (@classical.by_contradiction'.{1} (preorder.{0} (normed_field.{0} reducibility_hints)) h1)  := sorry --non-trivial
lemma new_lemma_53971 (h0 : monoid (with_one (has_inv (has_inv (has_inv fun_info))))) : monoid.fg (with_one (has_inv (has_inv (has_inv fun_info)))) := sorry --non-trivial
lemma new_lemma_53972 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (add_left_cancel_semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_left_cancel_semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53973 (h0 : not (group (normed_group empty) -> false)) : @group.fg.{0} (normed_group.{0} empty) (@classical.by_contradiction'.{1} (group.{0} (normed_group.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_53974 (h0 : functor.add_const (group (has_add environment.implicit_infer_kind)) unsigned) : @is_cyclic.{0} (has_add.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (has_add.{0} environment.implicit_infer_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_53975 (h1 : topological_space (add_cancel_comm_monoid (comm_ring to_additive.value_type))) : path_connected_space (add_cancel_comm_monoid (comm_ring to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_53976 (h0 : functor.add_const (monoid (add_comm_monoid linarith.comp)) Type) : @monoid.fg.{0} (add_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 1} (monoid.{0} (add_comm_monoid.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_53977 (h0 : functor.add_const (finset (finset unsigned)) (has_neg_part pos)) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_53978 (h0 : topological_space (has_emptyc (random_gen (random_gen (random_gen fun_info))))) : t0_space (has_emptyc (random_gen (random_gen (random_gen fun_info)))) := sorry --non-trivial
lemma new_lemma_53979 (h0 : ring (has_append (metric_space char))) : strong_rank_condition (has_append (metric_space char)) := sorry --non-trivial
lemma new_lemma_53980 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @is_compactly_generated.{1} (ordered_comm_ring.{1} Type) (@matrix.vec_empty.{1} (complete_lattice.{1} (ordered_comm_ring.{1} Type)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_53981 (h0 : functor.add_const (topological_space (has_nndist Type)) Type) : @preconnected_space.{1} (has_nndist.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (has_nndist.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_53982 (h0 : topological_space (add_group (semiring (semiring (semiring empty))))) : normal_space (add_group (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_53983 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (ring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_53984 (h0 : list (comm_group (ring pos))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_53985 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @group.fg.{1} (finset.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 group.{1}) (finset.{1} Type))  := sorry --non-trivial
lemma new_lemma_53986 (h2 : linarith.ineq -> linarith.ineq -> Prop) : is_trans linarith.ineq h2 := sorry --non-trivial
lemma new_lemma_53987 (h0 : random_gen fun_info -> random_gen fun_info -> Prop) : is_per (random_gen fun_info) h0 := sorry --non-trivial
lemma new_lemma_53988 (h0 : functor.add_const (function.extfun Type ordered_comm_monoid) pos) : @has_exists_mul_of_le.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) pos h0) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_53989 (h0 : uniform_space (linear_ordered_semiring unsigned)) : separated_space (linear_ordered_semiring unsigned) := sorry --non-trivial
lemma new_lemma_53990 (h0 : topological_space (semigroup (option name))) : discrete_topology (semigroup (option name)) := sorry --non-trivial
lemma new_lemma_53991 (h1 : filter Prop) : @filter.Limsup.{0} Prop (@complete_lattice.to_conditionally_complete_lattice.{0} Prop Prop.complete_lattice) h1  := sorry --non-trivial
lemma new_lemma_53992 (h0 : functor.add_const (topological_space (bin_tree congr_arg_kind)) unsigned) : @totally_separated_space.{0} (bin_tree.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (bin_tree.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_53993 (h0 : group (denumerable (random_gen (random_gen char)))) : group.fg (denumerable (random_gen (random_gen char))) := sorry --non-trivial
lemma new_lemma_53994 (h0 : functor.add_const (group (comm_group Type)) linarith.comp) : @normalizer_condition.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (comm_group.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_53995 (h0 : topological_space (boolean_algebra (comm_semigroup (has_add pos)))) : t1_space (boolean_algebra (comm_semigroup (has_add pos))) := sorry --non-trivial
lemma new_lemma_53996 (h0 : not (function.extfun Type topological_space -> false)) : @preirreducible_space.{0} (add_group.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (add_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_53997 (h0 : group (mul_zero_class ennreal)) : is_simple_group (mul_zero_class ennreal) := sorry --non-trivial
lemma new_lemma_53998 (h0 : topological_space (linear_ordered_field (option unsigned))) : normal_space (linear_ordered_field (option unsigned)) := sorry --non-trivial
lemma new_lemma_53999 (h0 : filter (normed_comm_ring (option ennreal))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_54000 (h0 : topological_space (add_cancel_monoid (has_pos_part pos))) : locally_compact_space (add_cancel_monoid (has_pos_part pos)) := sorry --non-trivial
lemma new_lemma_54001 (h0 : topological_space (with_one (semiring num))) : normal_space (with_one (semiring num)) := sorry --non-trivial
lemma new_lemma_54002 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (has_nnnorm.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_nnnorm.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_54003 (h0 : ring (generalized_boolean_algebra (ring linarith.comp))) : rank_condition (generalized_boolean_algebra (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_54004 (h0 : group (cancel_monoid (has_to_string environment.implicit_infer_kind))) : group.fg (cancel_monoid (has_to_string environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_54005 (h0 : complete_lattice (distrib char)) : complete_lattice.is_Sup_finite_compact (distrib char) := sorry --non-trivial
lemma new_lemma_54006 (h0 : group (has_to_string (ring linarith.comp))) : normalizer_condition (has_to_string (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_54007 (h0 h1 : multiset (nondiscrete_normed_field (add_comm_semigroup char))) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_54008 (h0 : functor.add_const (topological_space (complete_distrib_lattice pos)) pos) : @preirreducible_space.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_54009 (h0 : functor.add_const (topological_space (has_add linarith.comp)) name) : @normal_space.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_54010 (h0 : not (add_monoid (mul_zero_class num) -> false)) : @add_monoid.fg.{0} (mul_zero_class.{0} num) (@classical.by_contradiction'.{1} (add_monoid.{0} (mul_zero_class.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_54011 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @sequential_space.{0} (mul_zero_class.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (mul_zero_class.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_54012 (h0 : add_monoid (has_bot (has_add linarith.comp))) : add_monoid.fg (has_bot (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_54013 (h2 : ring (topological_space (has_ssubset linarith.ineq))) : strong_rank_condition (topological_space (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_54014 (h0 : finset (as_linear_order (option (option unsigned)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_54015 (h0 : topological_space (semi_normed_comm_ring (mul_one_class linarith.ineq))) : t0_space (semi_normed_comm_ring (mul_one_class linarith.ineq)) := sorry --non-trivial
lemma new_lemma_54016 (h0 : functor.add_const (ordered_add_comm_monoid (linear_ordered_comm_monoid_with_zero empty)) unsigned) : @archimedean.{0} (linear_ordered_comm_monoid_with_zero.{0} empty) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (linear_ordered_comm_monoid_with_zero.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_54017 (h0 : complete_lattice (measurable_space (has_top (random_gen num)))) : complete_lattice.is_Sup_finite_compact (measurable_space (has_top (random_gen num))) := sorry --non-trivial
lemma new_lemma_54018 (h0 : uniform_space (ordered_comm_ring (ring (ring (has_add name))))) : separated_space (ordered_comm_ring (ring (ring (has_add name)))) := sorry --non-trivial
lemma new_lemma_54019 (h0 : functor.add_const (topological_space (has_add linarith.comp)) (comm_group Type)) : @sequential_space.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (has_add.{0} linarith.comp)) (comm_group.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_54020 (h0 : group (add_right_cancel_monoid congr_arg_kind)) : group.fg (add_right_cancel_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_54021 (h0 : functor.add_const (list (add_cancel_monoid unsigned)) unsigned) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54022 (h0 : ring (denumerable (random_gen linarith.comp_source))) : is_domain (denumerable (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_54023 (h0 : functor.add_const (cancel_comm_monoid_with_zero (complete_distrib_lattice name)) (has_neg Type)) : @unique_factorization_monoid.{0} (complete_distrib_lattice.{0} name) (@functor.add_const.run.{0 1} (cancel_comm_monoid_with_zero.{0} (complete_distrib_lattice.{0} name)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_54024 (h0 : topological_space (has_to_string (option ennreal))) : locally_compact_space (has_to_string (option ennreal)) := sorry --non-trivial
lemma new_lemma_54025 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @loc_path_connected_space.{0} (add_cancel_monoid.{0} (has_add.{0} pos)) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (add_cancel_monoid.{0} (has_add.{0} pos)))  := sorry --non-trivial
lemma new_lemma_54026 (h0 : topological_space (boolean_algebra.core (has_add name))) : path_connected_space (boolean_algebra.core (has_add name)) := sorry --non-trivial
lemma new_lemma_54027 (h0 : filter (canonically_ordered_comm_semiring linarith.comp)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_54028 (h0 : group (comm_ring (has_nnnorm (has_ssubset (has_nnnorm (random_gen char)))))) : is_cyclic (comm_ring (has_nnnorm (has_ssubset (has_nnnorm (random_gen char))))) := sorry --non-trivial
lemma new_lemma_54029 (h0 : topological_space (has_star num)) : normal_space (has_star num) := sorry --non-trivial
lemma new_lemma_54030 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (ring.{0} name) (@function.extfun_app.{2 1} Type semiring.{0} h0 (ring.{0} name))  := sorry --non-trivial
lemma new_lemma_54031 (h0 : ring (fintype (random_gen char))) : is_domain (fintype (random_gen char)) := sorry --non-trivial
lemma new_lemma_54032 (h0 : group (has_one (linear_ordered_semiring unsigned))) : is_cyclic (has_one (linear_ordered_semiring unsigned)) := sorry --non-trivial
lemma new_lemma_54033 (h0 : cancel_comm_monoid_with_zero (has_zero (comm_group name))) : unique_factorization_monoid (has_zero (comm_group name)) := sorry --non-trivial
lemma new_lemma_54034 (h0 : list (add_cancel_monoid (finset (finset pos)))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_54035 (h0 : not (add_group (linear_ordered_add_comm_group fun_info) -> false)) : @is_add_cyclic.{0} (linear_ordered_add_comm_group.{0} fun_info) (@classical.by_contradiction'.{1} (add_group.{0} (linear_ordered_add_comm_group.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_54036 (h0 : function.extfun Type (functor.comp topological_space has_to_string)) : @irreducible_space.{0} (has_to_string.{0} unsigned) (@functor.comp.run.{0 0 0} topological_space.{0} has_to_string.{0} unsigned (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} has_to_string.{0}) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_54037 (h0 : not (group (add_monoid fun_info) -> false)) : @is_cyclic.{0} (add_monoid.{0} fun_info) (@classical.by_contradiction'.{1} (group.{0} (add_monoid.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_54038 (h0 : topological_space (complete_distrib_lattice (has_add (ordered_comm_monoid real)))) : t1_space (complete_distrib_lattice (has_add (ordered_comm_monoid real))) := sorry --non-trivial
lemma new_lemma_54039 (h0 : finset (linear_order (semiring (semiring (semiring empty))))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_54040 (h1 : topological_space (fintype char)) : totally_disconnected_space (fintype char) := sorry --non-trivial
lemma new_lemma_54041 (h0 : not (function.extfun Type group -> false)) : @normalizer_condition.{0} (has_top.{0} fun_info) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (has_top.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_54042 (h2 : complete_lattice (has_norm (has_top fun_info))) : complete_lattice.is_Sup_finite_compact (has_norm (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_54043 (h0 : fin has_zero.zero) : @t0_space.{1} (has_to_string.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (has_to_string.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_54044 (h1 : add_group (random_gen (random_gen char))) : is_add_cyclic (random_gen (random_gen char)) := sorry --non-trivial
lemma new_lemma_54045 (h0 : not (function.extfun Type topological_space -> false)) : @path_connected_space.{0} linarith.comp (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) linarith.comp)  := sorry --non-trivial
lemma new_lemma_54046 (h0 : not (topological_space (ordered_comm_semiring congr_arg_kind) -> false)) : @normal_space.{0} (ordered_comm_semiring.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (ordered_comm_semiring.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_54047 (h0 : functor.add_const (function.extfun (Type 1) group) linarith.comp) : @group.fg.{1} (semigroup.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) linarith.comp h0) (semigroup.{1} Type))  := sorry --non-trivial
lemma new_lemma_54048 (h0 : topological_space (linear_ordered_semiring (semiring (with_bot unsigned)))) : preirreducible_space (linear_ordered_semiring (semiring (with_bot unsigned))) := sorry --non-trivial
lemma new_lemma_54049 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @locally_compact_space.{0} (semigroup.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (semigroup.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54050 (h0 : topological_space (complete_distrib_lattice (has_add pos))) : loc_path_connected_space (complete_distrib_lattice (has_add pos)) := sorry --non-trivial
lemma new_lemma_54051 (h2 : list (distrib_lattice fun_info)) : list.nodup h2 := sorry --non-trivial
lemma new_lemma_54052 (h0 : topological_space (has_zero (cancel_monoid (has_add unsigned)))) : normal_space (has_zero (cancel_monoid (has_add unsigned))) := sorry --non-trivial
lemma new_lemma_54053 (h0 : topological_space (has_to_string (boolean_algebra Type))) : totally_disconnected_space (has_to_string (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_54054 (h0 : not (ring (linear_ordered_semiring num) -> false)) : @is_domain.{0} (linear_ordered_semiring.{0} num) (@classical.by_contradiction'.{1} (ring.{0} (linear_ordered_semiring.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_54055 (h0 : list (cancel_monoid (semigroup Type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54056 (h0 : fin has_zero.zero) : @strong_rank_condition.{1} (boolean_algebra.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (boolean_algebra.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_54057 (h0 : functor.add_const Prop (ordered_comm_monoid name)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_54058 (h0 : filter (random_gen (has_inv fun_info))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_54059 (h0 : group linarith.comp_source) : is_cyclic linarith.comp_source := sorry --non-trivial
lemma new_lemma_54060 (h0 : functor.add_const (ordered_add_comm_monoid (semiring congr_arg_kind)) (semiring empty)) : @archimedean.{0} (semiring.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (semiring.{0} congr_arg_kind)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_54061 (h0 : ring (boolean_algebra (canonically_ordered_monoid real))) : is_domain (boolean_algebra (canonically_ordered_monoid real)) := sorry --non-trivial
lemma new_lemma_54062 (h1 : has_mem.mem (has_norm num) has_emptyc.emptyc) : @t0_space.{0} (has_norm.{0} num) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_norm.{0} num) h1)  := sorry --non-trivial
lemma new_lemma_54063 (h0 : function.extfun Type topological_space) : @t1_space.{0} (comm_group.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (comm_group.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_54064 (h0 : functor.add_const (uniform_space (has_to_string name)) (finset Type)) : @separated_space.{0} (has_to_string.{0} name) (@functor.add_const.run.{0 1} (uniform_space.{0} (has_to_string.{0} name)) (finset.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_54065 (h0 : topological_space (add_cancel_monoid (option (option name)))) : regular_space (add_cancel_monoid (option (option name))) := sorry --non-trivial
lemma new_lemma_54066 (h0 : fin has_zero.zero) : @separated_space.{0} (generalized_boolean_algebra.{0} pos) (@matrix.vec_empty.{0} (uniform_space.{0} (generalized_boolean_algebra.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_54067 (h0 : filter (dlist (random_gen (has_ssubset linarith.ineq)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_54068 (h0 : functor.comp topological_space normed_comm_ring name) : @preirreducible_space.{0} (normed_comm_ring.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} normed_comm_ring.{0} name h0)  := sorry --non-trivial
lemma new_lemma_54069 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (ordered_comm_ring real)) := sorry --non-trivial
lemma new_lemma_54070 (h0 : functor.add_const (function.extfun Type finset) pos) : finset.nonempty (function.extfun_app (functor.add_const.run h0) (boolean_algebra.core pos)) := sorry --non-trivial
lemma new_lemma_54071 (h0 : topological_space (semigroup (option name))) : loc_path_connected_space (semigroup (option name)) := sorry --non-trivial
lemma new_lemma_54072 (h0 : topological_space (simple_graph congr_arg_kind)) : topological_space.separable_space (simple_graph congr_arg_kind) := sorry --non-trivial
lemma new_lemma_54073 (h0 : function.extfun Type (prod (has_neg_part unsigned))) : id_rel (function.extfun_app h0 (has_neg_part unsigned)) := sorry --non-trivial
lemma new_lemma_54074 (h0 : ring (has_bot (has_Inf (has_Inf real)))) : rank_condition (has_bot (has_Inf (has_Inf real))) := sorry --non-trivial
lemma new_lemma_54075 (h0 : topological_space (mul_zero_class Type)) : totally_disconnected_space (mul_zero_class Type) := sorry --non-trivial
lemma new_lemma_54076 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (complete_semilattice_Sup.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_group.{0} h0 (complete_semilattice_Sup.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54077 (h0 : ring (has_to_string (finset Type))) : strong_rank_condition (has_to_string (finset Type)) := sorry --non-trivial
lemma new_lemma_54078 (h0 : functor.add_const (function.extfun Type group) (has_Inf linarith.comp)) : @is_cyclic.{0} (boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) (has_Inf.{0} linarith.comp) h0) (boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54079 (h0 : not (function.extfun Type topological_space -> false)) : @locally_compact_space.{0} (complete_semilattice_Sup.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (complete_semilattice_Sup.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_54080 (h0 : topological_space (id num)) : discrete_topology (id num) := sorry --non-trivial
lemma new_lemma_54081 (h0 : functor.add_const (topological_space (preorder num)) unsigned) : @totally_separated_space.{0} (preorder.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} num)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_54082 (h0 : not (topological_space (metric_space congr_arg_kind) -> false)) : @path_connected_space.{0} (metric_space.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (metric_space.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_54083 (h0 : has_top (comm_monoid num) -> has_top (comm_monoid num) -> Prop) : is_strict_order (has_top (comm_monoid num)) h0 := sorry --non-trivial
lemma new_lemma_54084 (h0 : topological_space (add_comm_monoid (has_add (has_neg (has_neg (has_neg linarith.comp)))))) : regular_space (add_comm_monoid (has_add (has_neg (has_neg (has_neg linarith.comp))))) := sorry --non-trivial
lemma new_lemma_54085 (h0 : topological_space (add_right_cancel_monoid (semiring (semiring (semiring empty))))) : path_connected_space (add_right_cancel_monoid (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_54086 (h0 : cancel_comm_monoid_with_zero (boolean_algebra.core pos)) : unique_factorization_monoid (boolean_algebra.core pos) := sorry --non-trivial
lemma new_lemma_54087 (h0 : group (plift (semiring num))) : group.fg (plift (semiring num)) := sorry --non-trivial
lemma new_lemma_54088 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (generalized_boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (generalized_boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54089 (h0 : topological_space (has_Sup unsigned)) : t0_space (has_Sup unsigned) := sorry --non-trivial
lemma new_lemma_54090 (h0 : function.extfun Type ring) : @invariant_basis_number.{0} (non_assoc_semiring.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (non_assoc_semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_54091 (h0 : not (filter (random_gen (has_nnnorm fun_info)) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_54092 (h0 : functor.add_const (topological_space (finset Type)) environment.implicit_infer_kind) : @t0_space.{1} (finset.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (finset.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54093 (h2 : topological_space (has_compl char)) : t0_space (has_compl char) := sorry --non-trivial
lemma new_lemma_54094 (h0 : topological_space (has_zero (finset (has_add (has_add (finset (option name))))))) : t0_space (has_zero (finset (has_add (has_add (finset (option name)))))) := sorry --non-trivial
lemma new_lemma_54095 (h0 : functor.add_const (finset (normed_comm_ring linarith.comp)) (linear_ordered_semiring linarith.comp)) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54096 (h0 : not (topological_space (linear_ordered_comm_ring empty) -> false)) : @discrete_topology.{0} (linear_ordered_comm_ring.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (linear_ordered_comm_ring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_54097 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (ordered_cancel_add_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (ordered_cancel_add_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_54098 (h0 : set Prop) : @Lim.{0} Prop sierpinski_space (@nonempty_of_inhabited.{1} Prop sort.inhabited.{0}) (@nhds_set.{0} Prop sierpinski_space h0)  := sorry --non-trivial
lemma new_lemma_54099 (h1 : add_group (has_add fun_info)) : is_add_cyclic (has_add fun_info) := sorry --non-trivial
lemma new_lemma_54100 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (complete_semilattice_Sup.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type add_group.{0} h0 (complete_semilattice_Sup.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_54101 (h0 : topological_space (has_add name)) : sequential_space (has_add name) := sorry --non-trivial
lemma new_lemma_54102 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (has_neg_part.{0} name) (@function.extfun_app.{2 1} Type add_group.{0} h0 (has_neg_part.{0} name))  := sorry --non-trivial
lemma new_lemma_54103 (h0 : ring (semigroup (ring (ring (finset (has_neg (ring Type))))))) : strong_rank_condition (semigroup (ring (ring (finset (has_neg (ring Type)))))) := sorry --non-trivial
lemma new_lemma_54104 (h0 : cancel_comm_monoid_with_zero (has_pos_part Type)) : unique_factorization_monoid (has_pos_part Type) := sorry --non-trivial
lemma new_lemma_54105 (h4 : Prop) : set.finite (id (fun (h0 : mul_one_class ereal), h4)) := sorry --non-trivial
lemma new_lemma_54106 (h0 : functor.add_const (monoid (ordered_comm_group empty)) congr_arg_kind) : @monoid.fg.{0} (ordered_comm_group.{0} empty) (@functor.add_const.run.{0 0} (monoid.{0} (ordered_comm_group.{0} empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_54107 (h0 : function.extfun Type (functor.add_const (add_group (left_cancel_monoid empty)))) : @is_add_cyclic.{0} (left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (add_group.{0} (left_cancel_monoid.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (add_group.{0} (left_cancel_monoid.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_54108 (h0 : topological_space (has_top (random_gen (comm_ring (random_gen to_additive.value_type))))) : t0_space (has_top (random_gen (comm_ring (random_gen to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_54109 (h0 : topological_space (has_to_string pos)) : path_connected_space (has_to_string pos) := sorry --non-trivial
lemma new_lemma_54110 (h0 : functor.add_const (topological_space (mul_zero_class environment.implicit_infer_kind)) name) : @topological_space.separable_space.{0} (mul_zero_class.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (mul_zero_class.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_54111 (h0 : topological_space (canonically_ordered_comm_semiring (monoid_with_zero (option unsigned)))) : totally_separated_space (canonically_ordered_comm_semiring (monoid_with_zero (option unsigned))) := sorry --non-trivial
lemma new_lemma_54112 (h0 : fin has_zero.zero) : @unique_factorization_monoid.{0} (has_pos_part.{0} name) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type cancel_comm_monoid_with_zero.{0}) h0) (has_pos_part.{0} name))  := sorry --non-trivial
lemma new_lemma_54113 (h0 : add_monoid (linear_ordered_comm_ring (semiring (has_norm (has_norm (has_top empty)))))) : add_monoid.fg (linear_ordered_comm_ring (semiring (has_norm (has_norm (has_top empty))))) := sorry --non-trivial
lemma new_lemma_54114 (h2 : has_mem.mem (linear_ordered_add_comm_group fun_info) has_emptyc.emptyc) : @strong_rank_condition.{0} (linear_ordered_add_comm_group.{0} fun_info) (@finset.pi.empty.{1 0} Type ring.{0} (linear_ordered_add_comm_group.{0} fun_info) h2)  := sorry --non-trivial
lemma new_lemma_54115 (h0 : function.extfun (has_top fun_info) (fun (x : has_top fun_info), Prop)) : Exists (function.extfun_app h0) := sorry --non-trivial
lemma new_lemma_54116 (h0 : list (has_nndist (add_comm_monoid (has_neg (has_neg (add_comm_monoid name)))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54117 (h0 : set (string.iterator_imp -> mul_one_class (mul_one_class enat))) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_54118 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (has_pos_part.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_pos_part.{0} real))  := sorry --non-trivial
lemma new_lemma_54119 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_noetherian_ring.{0} (has_sub.{0} unsigned) (@function.extfun_app.{2 1} Type semiring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 semiring.{0}) (has_sub.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54120 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (pseudo_metric_space.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (pseudo_metric_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_54121 (h0 : filter (has_nndist unsigned)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_54122 (h0 : group (canonically_ordered_comm_semiring (option unsigned))) : normalizer_condition (canonically_ordered_comm_semiring (option unsigned)) := sorry --non-trivial
lemma new_lemma_54123 (h0 : functor.add_const (topological_space (generalized_boolean_algebra Type)) pos) : @path_connected_space.{1} (generalized_boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (generalized_boolean_algebra.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_54124 (h0 : functor.add_const (function.extfun Type list) num) : palindrome (function.extfun_app (functor.add_const.run h0) (linear_ordered_field unsigned)) := sorry --non-trivial
lemma new_lemma_54125 (h0 : uniform_space (has_to_string (has_add (boolean_algebra name)))) : complete_space (has_to_string (has_add (boolean_algebra name))) := sorry --non-trivial
lemma new_lemma_54126 (h0 : topological_space (has_Inf (has_neg name))) : totally_separated_space (has_Inf (has_neg name)) := sorry --non-trivial
lemma new_lemma_54127 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (has_inter.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (has_inter.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54128 (h2 : topological_space (nondiscrete_normed_field (add_comm_semigroup fun_info))) : t0_space (nondiscrete_normed_field (add_comm_semigroup fun_info)) := sorry --non-trivial
lemma new_lemma_54129 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (finset.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (finset.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_54130 (h0 : ring znum) : is_principal_ideal_ring znum := sorry --non-trivial
lemma new_lemma_54131 (h0 : ring (has_ssubset ennreal)) : strong_rank_condition (has_ssubset ennreal) := sorry --non-trivial
lemma new_lemma_54132 (h0 : topological_space (simple_graph (mul_one_class (mul_one_class fun_info)))) : t0_space (simple_graph (mul_one_class (mul_one_class fun_info))) := sorry --non-trivial
lemma new_lemma_54133 (h0 : topological_space (generalized_boolean_algebra (has_add linarith.comp))) : t0_space (generalized_boolean_algebra (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_54134 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54135 (h0 : topological_space (id (has_norm num))) : totally_disconnected_space (id (has_norm num)) := sorry --non-trivial
lemma new_lemma_54136 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_noetherian_ring.{0} (ordered_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type semiring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 semiring.{0}) (ordered_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_54137 (h0 : topological_space (ring (finset (has_to_string pos)))) : locally_compact_space (ring (finset (has_to_string pos))) := sorry --non-trivial
lemma new_lemma_54138 (h0 : ring (mul_zero_class (option unsigned))) : strong_rank_condition (mul_zero_class (option unsigned)) := sorry --non-trivial
lemma new_lemma_54139 (h0 : functor.add_const (cancel_comm_monoid_with_zero (add_semigroup unsigned)) (option empty)) : @unique_factorization_monoid.{0} (add_semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (add_semigroup.{0} unsigned)) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_54140 (h0 : not (function.extfun Type ring -> false)) : @strong_rank_condition.{0} (measurable_space.dynkin_system.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (measurable_space.dynkin_system.{0} num))  := sorry --non-trivial
lemma new_lemma_54141 (h0 : monoid (with_bot (random_gen to_additive.value_type))) : monoid.fg (with_bot (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_54142 (h0 : topological_space (linear_ordered_comm_group num)) : t0_space (linear_ordered_comm_group num) := sorry --non-trivial
lemma new_lemma_54143 (h0 : functor.add_const (function.extfun Type topological_space) (finset name)) : @totally_separated_space.{0} (comm_group.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) (finset.{0} name) h0) (comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_54144 (h0 : topological_space (canonically_ordered_monoid (has_neg (has_neg (has_neg (has_Inf pos)))))) : t0_space (canonically_ordered_monoid (has_neg (has_neg (has_neg (has_Inf pos))))) := sorry --non-trivial
lemma new_lemma_54145 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (linear_ordered_semiring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_semiring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_54146 (h0 : topological_space (has_zero (ring environment.implicit_infer_kind))) : t1_space (has_zero (ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_54147 (h0 : topological_space (has_to_string (comm_group (comm_group Type)))) : locally_compact_space (has_to_string (comm_group (comm_group Type))) := sorry --non-trivial
lemma new_lemma_54148 (h0 : ring (has_compl (mul_one_class (mul_one_class char)))) : strong_rank_condition (has_compl (mul_one_class (mul_one_class char))) := sorry --non-trivial
lemma new_lemma_54149 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (has_nndist.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_nndist.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54150 (h0 : functor.add_const (add_monoid (boolean_algebra.core Type)) pos) : @add_monoid.fg.{1} (boolean_algebra.core.{1} Type) (@functor.add_const.run.{1 0} (add_monoid.{1} (boolean_algebra.core.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_54151 (h0 : function.extfun Type topological_space) : @t0_space.{0} (canonically_ordered_comm_semiring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_comm_semiring.{0} pos))  := sorry --non-trivial
lemma new_lemma_54152 (h0 : functor.add_const (add_group (has_nndist environment.implicit_infer_kind)) environment.implicit_infer_kind) : @is_add_cyclic.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (add_group.{0} (has_nndist.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54153 (h0 : functor.add_const (topological_space (ordered_comm_ring linarith.comp)) (finset pos)) : @irreducible_space.{0} (ordered_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_ring.{0} linarith.comp)) (finset.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_54154 (h0 : functor.add_const (topological_space (complete_distrib_lattice Type)) pos) : @preirreducible_space.{1} (complete_distrib_lattice.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (complete_distrib_lattice.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_54155 (h0 : functor.add_const (complete_lattice (has_zero name)) pos) : @is_atomistic.{0} (has_zero.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_zero.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_54156 (h0 : functor.add_const (filter (has_neg pos)) name) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54157 (h0 : ring (denumerable reducibility_hints)) : strong_rank_condition (denumerable reducibility_hints) := sorry --non-trivial
lemma new_lemma_54158 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (has_zero.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_54159 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @complete_lattice.is_Sup_finite_compact.{1} (complete_distrib_lattice.{1} Type) (@function.extfun_app.{3 2} (Type 1) complete_lattice.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 complete_lattice.{1}) (complete_distrib_lattice.{1} Type))  := sorry --non-trivial
lemma new_lemma_54160 (h0 : complete_lattice enat) : is_atomistic enat := sorry --non-trivial
lemma new_lemma_54161 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (complete_linear_order.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (complete_linear_order.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54162 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (has_bot.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type monoid.{0} h0 (has_bot.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_54163 (h0 : topological_space (measurable_space (semiring (semiring (semiring empty))))) : totally_separated_space (measurable_space (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_54164 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (canonically_ordered_comm_semiring.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_comm_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_54165 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (has_emptyc num)) := sorry --non-trivial
lemma new_lemma_54166 (h0 : complete_lattice (add_right_cancel_monoid (semiring empty))) : is_atomistic (add_right_cancel_monoid (semiring empty)) := sorry --non-trivial
lemma new_lemma_54167 (h4 : add_group (mul_one_class (mul_one_class reducibility_hints))) : is_add_cyclic (mul_one_class (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_54168 (h0 : complete_lattice (with_bot unsigned)) : is_atomistic (with_bot unsigned) := sorry --non-trivial
lemma new_lemma_54169 (h0 : functor.add_const (uniform_space (boolean_algebra.core linarith.comp)) name) : @complete_space.{0} (boolean_algebra.core.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (boolean_algebra.core.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_54170 (h0 : set (mul_one_class to_additive.value_type)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_54171 (h0 : complete_lattice (normed_comm_ring (finset environment.implicit_infer_kind))) : is_atomistic (normed_comm_ring (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_54172 (h0 : ordered_comm_monoid (comm_semigroup (has_bot (sub_neg_monoid real)))) : has_exists_mul_of_le (comm_semigroup (has_bot (sub_neg_monoid real))) := sorry --non-trivial
lemma new_lemma_54173 (h0 : functor.add_const (topological_space (has_nndist linarith.comp)) (has_to_string (has_to_string pos))) : @irreducible_space.{0} (has_nndist.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} linarith.comp)) (has_to_string.{0} (has_to_string.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_54174 (h0 : topological_space (distrib_lattice (random_gen (random_gen (random_gen char))))) : totally_disconnected_space (distrib_lattice (random_gen (random_gen (random_gen char)))) := sorry --non-trivial
lemma new_lemma_54175 (h0 : topological_space (with_one congr_arg_kind)) : normal_space (with_one congr_arg_kind) := sorry --non-trivial
lemma new_lemma_54176 (h0 : group (sub_neg_monoid (has_add Type))) : is_simple_group (sub_neg_monoid (has_add Type)) := sorry --non-trivial
lemma new_lemma_54177 (h0 : uniform_space (left_cancel_semigroup (semiring (semiring congr_arg_kind)))) : complete_space (left_cancel_semigroup (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_54178 (h0 : group (comm_semigroup (has_pos_part (has_bot Type)))) : is_cyclic (comm_semigroup (has_pos_part (has_bot Type))) := sorry --non-trivial
lemma new_lemma_54179 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (pseudo_metric_space.{0} pos) (@function.extfun_app.{2 1} Type add_group.{0} h0 (pseudo_metric_space.{0} pos))  := sorry --non-trivial
lemma new_lemma_54180 (h0 : topological_space (boolean_algebra.core (has_to_string ennreal))) : loc_path_connected_space (boolean_algebra.core (has_to_string ennreal)) := sorry --non-trivial
lemma new_lemma_54181 (h0 : group (add_comm_monoid (finset (finset linarith.comp)))) : is_simple_group (add_comm_monoid (finset (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_54182 (h0 : ring (has_norm (random_gen (random_gen to_additive.value_type)))) : rank_condition (has_norm (random_gen (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_54183 (h0 : functor.add_const (function.extfun (Type 1) ordered_add_comm_monoid) pos) : @archimedean.{1} (complete_distrib_lattice.{1} Type) (@function.extfun_app.{3 2} (Type 1) ordered_add_comm_monoid.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) ordered_add_comm_monoid.{1}) pos h0) (complete_distrib_lattice.{1} Type))  := sorry --non-trivial
lemma new_lemma_54184 (h0 : cancel_comm_monoid_with_zero (mul_zero_class (has_add pos))) : unique_factorization_monoid (mul_zero_class (has_add pos)) := sorry --non-trivial
lemma new_lemma_54185 (h0 : has_lt (has_nnnorm enat)) : no_max_order (has_nnnorm enat) := sorry --non-trivial
lemma new_lemma_54186 (h0 : uniform_space (has_pos_part Type)) : separated_space (has_pos_part Type) := sorry --non-trivial
lemma new_lemma_54187 (h0 : topological_space (has_star empty)) : preirreducible_space (has_star empty) := sorry --non-trivial
lemma new_lemma_54188 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (has_add fun_info)) := sorry --non-trivial
lemma new_lemma_54189 (h0 : has_mem.mem linarith.comp_source has_emptyc.emptyc) : @totally_separated_space.{0} linarith.comp_source (@finset.pi.empty.{1 0} Type topological_space.{0} linarith.comp_source h0)  := sorry --non-trivial
lemma new_lemma_54190 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (ordered_comm_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (ordered_comm_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54191 (h0 : ring (semi_normed_comm_ring (random_gen (has_norm fun_info)))) : rank_condition (semi_normed_comm_ring (random_gen (has_norm fun_info))) := sorry --non-trivial
lemma new_lemma_54192 (h0 : monoid (has_top (semiring unsigned))) : monoid.fg (has_top (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_54193 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (add_comm_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_54194 (h0 : group (has_to_string (finset name))) : is_cyclic (has_to_string (finset name)) := sorry --non-trivial
lemma new_lemma_54195 (h2 : filter Prop) : @filter.Liminf.{0} Prop (@complete_lattice.to_conditionally_complete_lattice.{0} Prop Prop.complete_lattice) h2  := sorry --non-trivial
lemma new_lemma_54196 (h0 : topological_space (with_one linarith.comp)) : normal_space (with_one linarith.comp) := sorry --non-trivial
lemma new_lemma_54197 (h0 : has_le (add_comm_semigroup (add_comm_semigroup char))) (h1 : add_comm_semigroup (add_comm_semigroup char)) : is_bot h1 := sorry --non-trivial
lemma new_lemma_54198 (h0 : group (partial_order (semiring (semiring empty)))) : normalizer_condition (partial_order (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_54199 (h0 : topological_space (semi_normed_comm_ring (has_ssubset (random_gen linarith.comp_source)))) : path_connected_space (semi_normed_comm_ring (has_ssubset (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_54200 (h0 : functor.add_const (topological_space (add_cancel_monoid pos)) (has_Inf pos)) : @path_connected_space.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} pos)) (has_Inf.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_54201 (h0 : has_mem.mem complete_lattice has_emptyc.emptyc) : @complete_lattice.is_Sup_finite_compact.{0} (with_one.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) complete_lattice.{0} h0) (with_one.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_54202 (h0 : topological_space (has_sub num)) : topological_space.separable_space (has_sub num) := sorry --non-trivial
lemma new_lemma_54203 (h0 : topological_space (left_cancel_semigroup empty)) : topological_space.separable_space (left_cancel_semigroup empty) := sorry --non-trivial
lemma new_lemma_54204 (h1 : topological_space (normed_group to_additive.value_type)) : t0_space (normed_group to_additive.value_type) := sorry --non-trivial
lemma new_lemma_54205 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (cancel_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (cancel_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54206 (h0 : set (has_compl (mul_one_class (simple_graph enat)))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_54207 (h0 : functor.add_const (group (ordered_comm_monoid linarith.comp)) linarith.comp) : @is_simple_group.{0} (ordered_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (ordered_comm_monoid.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_54208 (h0 : topological_space (has_nnnorm (random_gen to_additive.value_type))) : t0_space (has_nnnorm (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_54209 (h0 : ring (ordered_comm_group empty)) : rank_condition (ordered_comm_group empty) := sorry --non-trivial
lemma new_lemma_54210 (h0 : functor.add_const (function.extfun Type group) Type) : @is_cyclic.{0} (has_pos_part.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type group.{0}) Type h0) (has_pos_part.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54211 (h0 : uniform_space (ordered_comm_monoid pos)) : complete_space (ordered_comm_monoid pos) := sorry --non-trivial
lemma new_lemma_54212 (h0 : functor.add_const (topological_space (has_edist empty)) empty) : @irreducible_space.{0} (has_edist.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_edist.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_54213 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (ordered_comm_ring.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (ordered_comm_ring.{0} name))  := sorry --non-trivial
lemma new_lemma_54214 (h0 : add_monoid (has_add (sub_neg_monoid Type))) : add_monoid.fg (has_add (sub_neg_monoid Type)) := sorry --non-trivial
lemma new_lemma_54215 (h0 : not (topological_space (linear_ordered_semiring fun_info) -> false)) : @discrete_topology.{0} (linear_ordered_semiring.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (linear_ordered_semiring.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_54216 (h0 : functor.add_const (add_monoid (generalized_boolean_algebra linarith.comp)) name) : @add_monoid.fg.{0} (generalized_boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_monoid.{0} (generalized_boolean_algebra.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_54217 (h0 : fin has_zero.zero) : @has_exists_mul_of_le.{0} (comm_semigroup.{0} pos) (@matrix.vec_empty.{0} (ordered_comm_monoid.{0} (comm_semigroup.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_54218 (h0 : functor.add_const (filter Type) (ring pos)) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54219 (h0 : functor.add_const (ring (ring Type)) Type) : @rank_condition.{1} (ring.{1} Type) (@functor.add_const.run.{1 1} (ring.{1} (ring.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_54220 (h0 : ring (mul_one_class string_imp)) : is_domain (mul_one_class string_imp) := sorry --non-trivial
lemma new_lemma_54221 (h0 : topological_space (has_to_string (add_cancel_monoid Type))) : totally_disconnected_space (has_to_string (add_cancel_monoid Type)) := sorry --non-trivial
lemma new_lemma_54222 (h1 : not (ring (complete_semilattice_Sup linarith.comp_source) -> false)) : @strong_rank_condition.{0} (complete_semilattice_Sup.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (ring.{0} (complete_semilattice_Sup.{0} linarith.comp_source)) h1)  := sorry --non-trivial
lemma new_lemma_54223 (h0 : functor.add_const (topological_space (has_neg Type)) (has_Inf pos)) : @topological_space.separable_space.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_neg.{1} Type)) (has_Inf.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_54224 (h0 : filter (metric_space unsigned)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_54225 (h0 : ring (normed_group (div_inv_monoid (has_ssubset string_imp)))) : strong_rank_condition (normed_group (div_inv_monoid (has_ssubset string_imp))) := sorry --non-trivial
lemma new_lemma_54226 (h0 : functor.comp finset complete_distrib_lattice environment.implicit_infer_kind) : finset.nonempty (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_54227 (h0 : topological_space (add_cancel_monoid (ring linarith.comp))) : sequential_space (add_cancel_monoid (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_54228 (h0 : functor.add_const (topological_space (normed_comm_ring name)) pos) : @t1_space.{0} (normed_comm_ring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_54229 (h0 : group (has_pos_part linarith.comp)) : is_cyclic (has_pos_part linarith.comp) := sorry --non-trivial
lemma new_lemma_54230 (h0 : function.extfun Type (prod (add_group empty))) : id_rel (function.extfun_app h0 (add_group empty)) := sorry --non-trivial
lemma new_lemma_54231 (h0 : functor.add_const (topological_space (add_comm_monoid Type)) environment.implicit_infer_kind) : @t0_space.{1} (add_comm_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (add_comm_monoid.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54232 (h0 : has_mem.mem (random_gen congr_arg_kind) has_emptyc.emptyc) : @complete_space.{0} (random_gen.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type uniform_space.{0} (random_gen.{0} congr_arg_kind) h0)  := sorry --non-trivial
lemma new_lemma_54233 (h0 : function.extfun Type (functor.comp topological_space semigroup)) : @regular_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} topological_space.{0} semigroup.{0} environment.implicit_infer_kind (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} semigroup.{0}) h0 environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_54234 (h0 : ring (has_neg (has_to_string (has_to_string congr_arg_kind)))) : is_principal_ideal_ring (has_neg (has_to_string (has_to_string congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_54235 (h1 h2 : int) : int.lt h1 h2 := sorry --non-trivial
lemma new_lemma_54236 (h0 : uniform_space (add_cancel_monoid (has_add pos))) : separated_space (add_cancel_monoid (has_add pos)) := sorry --non-trivial
lemma new_lemma_54237 (h0 : topological_space (normed_group string_imp)) (h1 : set (normed_group string_imp)) : is_open h1 := sorry --non-trivial
lemma new_lemma_54238 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (linear_ordered_comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (linear_ordered_comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54239 (h0 : topological_space (finset (comm_monoid congr_arg_kind))) : discrete_topology (finset (comm_monoid congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_54240 (h0 : topological_space (boolean_algebra.core name)) : totally_separated_space (boolean_algebra.core name) := sorry --non-trivial
lemma new_lemma_54241 (h0 : complete_lattice (measurable_space.dynkin_system (semiring congr_arg_kind))) : complete_lattice.is_Sup_finite_compact (measurable_space.dynkin_system (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_54242 (h0 : fin has_zero.zero) : @normal_space.{1} (simple_graph.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (simple_graph.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_54243 (h2 : set (ereal -> ereal)) : set.separates_points h2 := sorry --non-trivial
lemma new_lemma_54244 (h0 : topological_space (boolean_algebra (boolean_algebra (boolean_algebra (boolean_algebra name))))) : sequential_space (boolean_algebra (boolean_algebra (boolean_algebra (boolean_algebra name)))) := sorry --non-trivial
lemma new_lemma_54245 (h0 : functor.comp topological_space has_neg name) : @t1_space.{0} (has_neg.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_neg.{0} name h0)  := sorry --non-trivial
lemma new_lemma_54246 (h0 : not (ring (has_inv char) -> false)) : @rank_condition.{0} (has_inv.{0} char) (@classical.by_contradiction'.{1} (ring.{0} (has_inv.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_54247 (h0 : functor.add_const (function.extfun Type ring) Type) : @is_domain.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type ring.{0}) Type h0) (boolean_algebra.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_54248 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (preorder.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (preorder.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54249 (h0 : functor.comp topological_space mul_zero_class Type) : @discrete_topology.{1} (mul_zero_class.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} mul_zero_class.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_54250 (h0 : functor.add_const (ring (has_neg name)) name) : @rank_condition.{0} (has_neg.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (has_neg.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_54251 (h0 : add_monoid (has_top (with_bot empty))) : add_monoid.fg (has_top (with_bot empty)) := sorry --non-trivial
lemma new_lemma_54252 (h0 : functor.add_const (topological_space (normed_comm_ring linarith.comp)) pos) : @preconnected_space.{0} (normed_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_54253 (h0 : complete_lattice (has_neg num)) : is_atomistic (has_neg num) := sorry --non-trivial
lemma new_lemma_54254 (h0 : functor.add_const (functor.add_const (function.extfun Type group) name) name) : @normalizer_condition.{0} (has_add.{0} (has_neg.{0} name)) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) name (@functor.add_const.run.{1 0} (functor.add_const.{1 0} (function.extfun.{2 1} Type group.{0}) name) name h0)) (has_add.{0} (has_neg.{0} name)))  := sorry --non-trivial
lemma new_lemma_54255 (h0 : not (topological_space (has_emptyc congr_arg_kind) -> false)) : @t0_space.{0} (has_emptyc.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (has_emptyc.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_54256 (h0 : complete_lattice (has_div reducibility_hints)) : is_compactly_generated (has_div reducibility_hints) := sorry --non-trivial
lemma new_lemma_54257 (h0 : fin has_zero.zero) : @is_add_cyclic.{1} (simple_graph.{1} Type) (@matrix.vec_empty.{1} (add_group.{1} (simple_graph.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_54258 (h0 : list (has_pos_part (ring linarith.comp))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54259 (h0 : group (add_comm_monoid congr_arg_kind)) : is_cyclic (add_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_54260 (h0 : not (ring (complete_semilattice_Sup linarith.comp_source) -> false)) : @strong_rank_condition.{0} (complete_semilattice_Sup.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (ring.{0} (complete_semilattice_Sup.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_54261 (h0 : add_monoid (semigroup (option empty))) : add_monoid.fg (semigroup (option empty)) := sorry --non-trivial
lemma new_lemma_54262 (h0 : topological_space (add_left_cancel_monoid string_imp)) : totally_disconnected_space (add_left_cancel_monoid string_imp) := sorry --non-trivial
lemma new_lemma_54263 (h0 : topological_space (with_one (has_one (has_one linarith.comp)))) : totally_separated_space (with_one (has_one (has_one linarith.comp))) := sorry --non-trivial
lemma new_lemma_54264 (h0 : topological_space (ring (has_zero Type))) : preirreducible_space (ring (has_zero Type)) := sorry --non-trivial
lemma new_lemma_54265 (h0 : ring (with_bot (random_gen (has_inv (random_gen (has_inv (has_inv to_additive.value_type))))))) : is_domain (with_bot (random_gen (has_inv (random_gen (has_inv (has_inv to_additive.value_type)))))) := sorry --non-trivial
lemma new_lemma_54266 (h0 : functor.add_const (list (ordered_ring empty)) empty) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54267 (h0 : topological_space (dlist (distrib_lattice string_imp))) : t0_space (dlist (distrib_lattice string_imp)) := sorry --non-trivial
lemma new_lemma_54268 (h0 : functor.add_const (ordered_add_comm_monoid (comm_group Type)) name) : @archimedean.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 0} (ordered_add_comm_monoid.{1} (comm_group.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_54269 (h0 : functor.add_const (monoid (boolean_algebra environment.implicit_infer_kind)) name) : @monoid.fg.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (monoid.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_54270 (h0 : pnat) (h1 : list pnat) (h2 : fin has_zero.zero) : pnat.coprime (list.ilast' h0 h1) (matrix.vec_empty h2) := sorry --non-trivial
lemma new_lemma_54271 (h0 : ring (has_Inf (has_pos_part pos))) : rank_condition (has_Inf (has_pos_part pos)) := sorry --non-trivial
lemma new_lemma_54272 (h0 : functor.add_const (semiring (has_neg linarith.comp)) name) : @is_noetherian_ring.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 0} (semiring.{0} (has_neg.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_54273 (h0 : functor.add_const (topological_space auto.case_option) num) : @totally_disconnected_space.{0} auto.case_option (@functor.add_const.run.{0 0} (topological_space.{0} auto.case_option) num h0)  := sorry --non-trivial
lemma new_lemma_54274 (h0 : functor.add_const (ring (has_Inf pos)) (has_neg pos)) : @strong_rank_condition.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (has_Inf.{0} pos)) (has_neg.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_54275 (h3 : add_group linarith.comp_source) : is_add_cyclic linarith.comp_source := sorry --non-trivial
lemma new_lemma_54276 (h0 : uniform_space (has_inv (has_nnnorm (random_gen (has_nnnorm to_additive.value_type))))) : complete_space (has_inv (has_nnnorm (random_gen (has_nnnorm to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_54277 (h0 : topological_space (boolean_algebra.core (has_neg_part (comm_group name)))) : preconnected_space (boolean_algebra.core (has_neg_part (comm_group name))) := sorry --non-trivial
lemma new_lemma_54278 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (ordered_comm_group.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_54279 (h0 : topological_space (boolean_algebra (has_add linarith.comp))) : locally_compact_space (boolean_algebra (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_54280 (h0 : not (complete_lattice (complete_semilattice_Sup num) -> false)) : @is_atomistic.{0} (complete_semilattice_Sup.{0} num) (@classical.by_contradiction'.{1} (complete_lattice.{0} (complete_semilattice_Sup.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_54281 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (canonically_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (canonically_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_54282 (h0 : topological_space (ring (has_pos_part (has_Inf pos)))) : irreducible_space (ring (has_pos_part (has_Inf pos))) := sorry --non-trivial
lemma new_lemma_54283 (h0 : functor.comp ordered_comm_monoid finset name) : @has_exists_mul_of_le.{0} (finset.{0} name) (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} finset.{0} name h0)  := sorry --non-trivial
lemma new_lemma_54284 (h0 : group (canonically_ordered_monoid (sub_neg_monoid pos))) : is_simple_group (canonically_ordered_monoid (sub_neg_monoid pos)) := sorry --non-trivial
lemma new_lemma_54285 (h0 : complete_lattice (linear_ordered_semiring (has_norm linarith.comp))) : is_atomistic (linear_ordered_semiring (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_54286 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (semigroup name)) := sorry --non-trivial
lemma new_lemma_54287 (h0 : functor.add_const (function.extfun (Type 1) topological_space) pos) : @topological_space.separable_space.{1} (ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) pos h0) (ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_54288 (h0 : topological_space (boolean_algebra.core (cancel_monoid ennreal))) : preconnected_space (boolean_algebra.core (cancel_monoid ennreal)) := sorry --non-trivial
lemma new_lemma_54289 (h0 : filter (comm_group (option (cancel_monoid name)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_54290 (h0 : topological_space (normed_comm_ring (option (option ennreal)))) : totally_disconnected_space (normed_comm_ring (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_54291 (h0 : topological_space (has_to_string (boolean_algebra environment.implicit_infer_kind))) : totally_separated_space (has_to_string (boolean_algebra environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_54292 (h0 : complete_lattice (complete_linear_order to_additive.value_type)) : complete_lattice.is_Sup_finite_compact (complete_linear_order to_additive.value_type) := sorry --non-trivial
lemma new_lemma_54293 (h0 : fin has_zero.zero) : @is_principal_ideal_ring.{1} (complete_distrib_lattice.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (complete_distrib_lattice.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_54294 (h0 : group (has_star empty)) : group.fg (has_star empty) := sorry --non-trivial
lemma new_lemma_54295 (h0 : topological_space (boolean_algebra.core (comm_group unsigned))) : topological_space.separable_space (boolean_algebra.core (comm_group unsigned)) := sorry --non-trivial
lemma new_lemma_54296 (h0 : function.extfun Type (functor.add_const (ring (normed_linear_ordered_group empty)))) : @strong_rank_condition.{0} (normed_linear_ordered_group.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (normed_linear_ordered_group.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ring.{0} (normed_linear_ordered_group.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_54297 (h0 : ring (random_gen (has_emptyc num))) : rank_condition (random_gen (has_emptyc num)) := sorry --non-trivial
lemma new_lemma_54298 (h0 : complete_lattice (simple_graph (mul_one_class string.iterator_imp))) : is_compactly_generated (simple_graph (mul_one_class string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_54299 (h0 : ring (complete_distrib_lattice name)) : is_domain (complete_distrib_lattice name) := sorry --non-trivial
lemma new_lemma_54300 (h0 : function.extfun (Type 1) topological_space) : @irreducible_space.{1} (has_nndist.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (has_nndist.{1} Type))  := sorry --non-trivial
lemma new_lemma_54301 (h0 : uniform_space (has_nndist (normed_comm_ring environment.implicit_infer_kind))) : complete_space (has_nndist (normed_comm_ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_54302 (h0 : functor.add_const Prop (semigroup (has_neg pos))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_54303 (h0 : group (linear_ordered_comm_ring empty)) : group.fg (linear_ordered_comm_ring empty) := sorry --non-trivial
lemma new_lemma_54304 (h0 : Prop -> option Prop) (h1 : fin has_zero.zero) : list.head (list.lookmap h0 (matrix.vec_empty h1)) := sorry --non-trivial
lemma new_lemma_54305 (h0 : group (has_top (semiring (semiring unsigned)))) : group.fg (has_top (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_54306 (h0 : group (add_cancel_comm_monoid (has_nnnorm linarith.comp_source))) : is_cyclic (add_cancel_comm_monoid (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_54307 (h1 : uniform_space (normed_field (metric_space linarith.comp_source))) : complete_space (normed_field (metric_space linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_54308 (h1 : ring (fintype char)) : is_domain (fintype char) := sorry --non-trivial
lemma new_lemma_54309 (h0 : functor.add_const (uniform_space (as_linear_order empty)) empty) : @complete_space.{0} (as_linear_order.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (as_linear_order.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_54310 (h0 : functor.add_const (topological_space (has_to_string Type)) environment.implicit_infer_kind) : @preirreducible_space.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_to_string.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54311 (h0 : topological_space (mul_zero_class empty)) : path_connected_space (mul_zero_class empty) := sorry --non-trivial
lemma new_lemma_54312 (h0 : add_group (cancel_monoid (comm_group ennreal))) : is_add_cyclic (cancel_monoid (comm_group ennreal)) := sorry --non-trivial
lemma new_lemma_54313 (h0 : functor.add_const (list (semigroup empty)) empty) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54314 (h0 : ring (with_bot (semiring (semiring empty)))) : is_domain (with_bot (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_54315 (h0 : topological_space (add_cancel_monoid (has_neg_part environment.implicit_infer_kind))) : irreducible_space (add_cancel_monoid (has_neg_part environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_54316 (h0 : monoid (ring (has_add (has_nndist Type)))) : monoid.fg (ring (has_add (has_nndist Type))) := sorry --non-trivial
lemma new_lemma_54317 (h0 : add_group (measurable_space (has_top fun_info))) : is_add_cyclic (measurable_space (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_54318 (h0 : topological_space (ordered_comm_monoid name)) : totally_disconnected_space (ordered_comm_monoid name) := sorry --non-trivial
lemma new_lemma_54319 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54320 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (monoid empty)) := sorry --non-trivial
lemma new_lemma_54321 (h0 : topological_space (has_append (has_nnnorm char))) : path_connected_space (has_append (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_54322 (h0 : topological_space (semigroup (has_add environment.implicit_infer_kind))) : normal_space (semigroup (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_54323 (h0 : set (has_compl (mul_one_class (mul_one_class to_additive.value_type)))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_54324 (h0 : topological_space (random_gen linarith.ineq)) : t0_space (random_gen linarith.ineq) := sorry --non-trivial
lemma new_lemma_54325 (h0 : functor.add_const (ring (semigroup name)) (add_cancel_monoid environment.implicit_infer_kind)) : @rank_condition.{0} (semigroup.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (semigroup.{0} name)) (add_cancel_monoid.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_54326 (h0 : not (ring (linear_ordered_comm_ring empty) -> false)) : @rank_condition.{0} (linear_ordered_comm_ring.{0} empty) (@classical.by_contradiction'.{1} (ring.{0} (linear_ordered_comm_ring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_54327 (h0 : functor.add_const (ring (has_add linarith.comp)) pos) : @rank_condition.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (has_add.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_54328 (h0 : complete_lattice (complete_semilattice_Sup congr_arg_kind)) : complete_lattice.is_Sup_finite_compact (complete_semilattice_Sup congr_arg_kind) := sorry --non-trivial
lemma new_lemma_54329 (h0 : add_right_cancel_monoid empty -> add_right_cancel_monoid empty -> Prop) : is_equiv (add_right_cancel_monoid empty) h0 := sorry --non-trivial
lemma new_lemma_54330 (h0 : topological_space (add_comm_semigroup (mul_one_class ereal))) (h1 : set (add_comm_semigroup (mul_one_class ereal))) : is_path_connected h1 := sorry --non-trivial
lemma new_lemma_54331 (h0 : fin has_zero.zero) (h1 : pnat) : pnat.coprime (matrix.vec_empty h0) h1 := sorry --non-trivial
lemma new_lemma_54332 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : palindrome (function.extfun_app (function.extfun_app h0 list) (normed_comm_ring empty)) := sorry --non-trivial
lemma new_lemma_54333 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (ordered_comm_ring.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_comm_ring.{0} real))  := sorry --non-trivial
lemma new_lemma_54334 (h0 : ring (finset (has_neg linarith.comp))) : is_domain (finset (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_54335 (h0 : functor.add_const (ordered_add_comm_monoid (ring linarith.comp)) Type) : @archimedean.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 1} (ordered_add_comm_monoid.{0} (ring.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_54336 (h0 : ring (add_left_cancel_semigroup (list (mul_one_class reducibility_hints)))) : strong_rank_condition (add_left_cancel_semigroup (list (mul_one_class reducibility_hints))) := sorry --non-trivial
lemma new_lemma_54337 (h0 : functor.add_const (topological_space (has_Inf linarith.comp)) pos) : @preconnected_space.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_54338 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @group.fg.{0} (has_norm.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) group.{0}) (has_norm.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_54339 (h0 : topological_space (measurable_space (has_norm fun_info))) : t0_space (measurable_space (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_54340 (h0 : set (with_bot string_imp)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_54341 (h0 : finset (comm_group (has_bot Type))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_54342 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (preorder unsigned)) := sorry --non-trivial
lemma new_lemma_54343 (h0 : topological_space (ordered_cancel_add_comm_monoid empty)) : loc_path_connected_space (ordered_cancel_add_comm_monoid empty) := sorry --non-trivial
lemma new_lemma_54344 (h0 : group (has_top (random_gen (random_gen (random_gen (random_gen fun_info)))))) : group.fg (has_top (random_gen (random_gen (random_gen (random_gen fun_info))))) := sorry --non-trivial
lemma new_lemma_54345 (h0 : complete_lattice (linear_ordered_cancel_add_comm_monoid to_additive.value_type)) : is_compactly_generated (linear_ordered_cancel_add_comm_monoid to_additive.value_type) := sorry --non-trivial
lemma new_lemma_54346 (h0 : function.extfun Type topological_space) : @t1_space.{0} (add_right_cancel_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_right_cancel_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54347 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (boolean_algebra.core.{0} (has_add.{0} name)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.core.{0} (has_add.{0} name)))  := sorry --non-trivial
lemma new_lemma_54348 (h0 : topological_space (canonically_ordered_comm_semiring (has_Inf linarith.comp))) : discrete_topology (canonically_ordered_comm_semiring (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_54349 (h0 : ordered_add_comm_monoid (generalized_boolean_algebra (generalized_boolean_algebra (ring Type)))) : archimedean (generalized_boolean_algebra (generalized_boolean_algebra (ring Type))) := sorry --non-trivial
lemma new_lemma_54350 (h0 : function.extfun Type topological_space) : @t1_space.{0} (normed_lattice_add_comm_group.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_lattice_add_comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_54351 (h0 : topological_space (random_gen (has_nnnorm (has_nnnorm (has_nnnorm (has_nnnorm fun_info)))))) : totally_disconnected_space (random_gen (has_nnnorm (has_nnnorm (has_nnnorm (has_nnnorm fun_info))))) := sorry --non-trivial
lemma new_lemma_54352 (h0 : topological_space (has_zero (option name))) : preirreducible_space (has_zero (option name)) := sorry --non-trivial
lemma new_lemma_54353 (h0 : list (semi_normed_comm_ring (denumerable string_imp))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54354 (h0 : functor.add_const (ring (normed_comm_ring pos)) (has_nndist linarith.comp)) : @is_domain.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (normed_comm_ring.{0} pos)) (has_nndist.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_54355 (h0 : topological_space (group_with_zero (option (option (option ennreal))))) : discrete_topology (group_with_zero (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_54356 (h0 : group (normed_group (has_nnnorm (random_gen (has_nnnorm (random_gen to_additive.value_type)))))) : is_cyclic (normed_group (has_nnnorm (random_gen (has_nnnorm (random_gen to_additive.value_type))))) := sorry --non-trivial
lemma new_lemma_54357 (h0 : functor.add_const (topological_space (has_nndist environment.implicit_infer_kind)) pos) : @path_connected_space.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_54358 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (add_right_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_right_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_54359 (h0 : not (complete_lattice (has_compl string.iterator_imp) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (has_compl.{0} string.iterator_imp) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_compl.{0} string.iterator_imp)) h0)  := sorry --non-trivial
lemma new_lemma_54360 (h0 : topological_space (comm_ring (has_ssubset linarith.comp_source))) : locally_compact_space (comm_ring (has_ssubset linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_54361 (h0 : not (topological_space (measurable_space.dynkin_system unsigned) -> false)) : @totally_separated_space.{0} (measurable_space.dynkin_system.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (measurable_space.dynkin_system.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_54362 (h0 : functor.add_const (list (boolean_algebra.core name)) linarith.comp) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54363 (h0 : topological_space (denumerable (has_nnnorm (has_nnnorm (has_nnnorm linarith.ineq))))) : t0_space (denumerable (has_nnnorm (has_nnnorm (has_nnnorm linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_54364 (h1 : semiring enat) (h2 : ideal enat) : ideal.is_prime h2 := sorry --non-trivial
lemma new_lemma_54365 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (semigroup.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (semigroup.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_54366 (h0 : has_mem.mem (complete_semilattice_Sup linarith.comp) has_emptyc.emptyc) : @is_cyclic.{0} (complete_semilattice_Sup.{0} linarith.comp) (@finset.pi.empty.{1 0} Type group.{0} (complete_semilattice_Sup.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_54367 (h0 : topological_space (ring (has_add (has_neg Type)))) : locally_compact_space (ring (has_add (has_neg Type))) := sorry --non-trivial
lemma new_lemma_54368 (h0 : topological_space (has_top (has_norm empty))) : discrete_topology (has_top (has_norm empty)) := sorry --non-trivial
lemma new_lemma_54369 (h0 : set (has_compl string_imp)) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_54370 (h0 : prod (has_nndist (option (option (option empty)))) (has_nndist (option (option (option empty))))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_54371 (h0 : normed_lattice_add_comm_group real -> normed_lattice_add_comm_group real -> Prop) : is_refl (normed_lattice_add_comm_group real) h0 := sorry --non-trivial
lemma new_lemma_54372 (h0 : ring (non_assoc_semiring (semiring (semiring unsigned)))) : is_domain (non_assoc_semiring (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_54373 (h0 : functor.add_const (ring (has_nndist environment.implicit_infer_kind)) name) : @strong_rank_condition.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (has_nndist.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_54374 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_simple_group.{0} (add_cancel_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (add_cancel_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54375 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (linear_ordered_comm_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_comm_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54376 (h0 : add_group (sub_neg_monoid name)) : is_add_cyclic (sub_neg_monoid name) := sorry --non-trivial
lemma new_lemma_54377 (h0 : uniform_space (add_comm_semigroup (bin_tree (add_comm_semigroup linarith.ineq)))) : complete_space (add_comm_semigroup (bin_tree (add_comm_semigroup linarith.ineq))) := sorry --non-trivial
lemma new_lemma_54378 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (normed_comm_ring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_54379 (h0 : add_group (has_add (has_neg (has_Inf Type)))) : is_add_cyclic (has_add (has_neg (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_54380 (h0 : add_monoid (boolean_algebra (comm_group (has_add environment.implicit_infer_kind)))) : add_monoid.fg (boolean_algebra (comm_group (has_add environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_54381 (h0 : set (has_nnnorm char)) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_54382 (h0 : complete_lattice (finset (has_pos_part real))) : is_compactly_generated (finset (has_pos_part real)) := sorry --non-trivial
lemma new_lemma_54383 (h1 : ring (encodable (has_nnnorm char))) : is_domain (encodable (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_54384 (h0 : has_lt (has_nnnorm (mul_one_class (has_le string.iterator_imp)))) : no_max_order (has_nnnorm (mul_one_class (has_le string.iterator_imp))) := sorry --non-trivial
lemma new_lemma_54385 (h0 : add_group (measurable_space (random_gen (random_gen fun_info)))) : is_add_cyclic (measurable_space (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_54386 (h0 : not (function.extfun Type topological_space -> false)) : @irreducible_space.{0} (@id.{2} Type congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (@id.{2} Type congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54387 (h0 : topological_space (has_nndist (option empty))) : loc_path_connected_space (has_nndist (option empty)) := sorry --non-trivial
lemma new_lemma_54388 (h5 : add_group (uniform_space linarith.comp_source)) : is_add_cyclic (uniform_space linarith.comp_source) := sorry --non-trivial
lemma new_lemma_54389 (h0 : not (function.extfun Type has_le -> false)) : @no_bot_order.{0} (complete_semilattice_Sup.{0} linarith.ineq) (@function.extfun_app.{2 1} Type has_le.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type has_le.{0}) h0) (complete_semilattice_Sup.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_54390 (h0 : group (linear_ordered_semiring (has_top congr_arg_kind))) : is_cyclic (linear_ordered_semiring (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_54391 (h2 : topological_space (has_compl (has_ssubset (has_ssubset char)))) : t0_space (has_compl (has_ssubset (has_ssubset char))) := sorry --non-trivial
lemma new_lemma_54392 (h0 : functor.add_const (topological_space (add_cancel_monoid linarith.comp)) environment.implicit_infer_kind) : @irreducible_space.{0} (add_cancel_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} linarith.comp)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54393 (h1 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (with_bot.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type complete_lattice.{0} h1 (with_bot.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_54394 (h0 : topological_space (option (random_gen (random_gen (random_gen string_imp))))) : path_connected_space (option (random_gen (random_gen (random_gen string_imp)))) := sorry --non-trivial
lemma new_lemma_54395 (h0 : functor.add_const (topological_space (semigroup Type)) environment.implicit_infer_kind) : @normal_space.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (semigroup.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54396 (h0 : topological_space (has_zero (finset linarith.comp))) : preconnected_space (has_zero (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_54397 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @archimedean.{0} (ordered_ring.{0} empty) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) ordered_add_comm_monoid.{0}) (ordered_ring.{0} empty))  := sorry --non-trivial
lemma new_lemma_54398 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54399 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (linear_order.{0} (option.{0} ennreal)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_order.{0} (option.{0} ennreal)))  := sorry --non-trivial
lemma new_lemma_54400 (h0 : complete_lattice (has_neg (finset (has_add pos)))) : complete_lattice.is_Sup_finite_compact (has_neg (finset (has_add pos))) := sorry --non-trivial
lemma new_lemma_54401 (h0 : topological_space (pseudo_metric_space congr_arg_kind)) : path_connected_space (pseudo_metric_space congr_arg_kind) := sorry --non-trivial
lemma new_lemma_54402 (h0 : functor.add_const (topological_space (cancel_monoid environment.implicit_infer_kind)) (normed_comm_ring pos)) : @loc_path_connected_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind)) (normed_comm_ring.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_54403 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (has_bot.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_bot.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54404 (h0 : has_mem.mem (random_gen empty) has_emptyc.emptyc) : @normalizer_condition.{0} (random_gen.{0} empty) (@finset.pi.empty.{1 0} Type group.{0} (random_gen.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_54405 (h0 : functor.add_const (complete_lattice (normed_comm_ring unsigned)) unsigned) : @is_atomistic.{0} (normed_comm_ring.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (normed_comm_ring.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_54406 (h0 : topological_space (div_inv_monoid string_imp)) : locally_compact_space (div_inv_monoid string_imp) := sorry --non-trivial
lemma new_lemma_54407 (h0 : list (mul_zero_class empty)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54408 (h0 : add_group (complete_semilattice_Sup (has_ssubset linarith.ineq))) : is_add_cyclic (complete_semilattice_Sup (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_54409 (h0 : list (has_to_string (lex pos))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54410 (h0 : group (add_cancel_comm_monoid (mul_one_class reducibility_hints))) : is_cyclic (add_cancel_comm_monoid (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_54411 (h1 : ring (has_add linarith.comp_source)) : rank_condition (has_add linarith.comp_source) := sorry --non-trivial
lemma new_lemma_54412 (h0 : function.extfun Type group) : @is_simple_group.{0} (linear_ordered_field.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (linear_ordered_field.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54413 (h0 : topological_space (has_neg (normed_comm_ring (normed_comm_ring Type)))) : t0_space (has_neg (normed_comm_ring (normed_comm_ring Type))) := sorry --non-trivial
lemma new_lemma_54414 (h0 : functor.add_const (topological_space (has_add environment.implicit_infer_kind)) environment.implicit_infer_kind) : @path_connected_space.{0} (has_add.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54415 (h0 : complete_lattice (has_neg (has_neg Type))) : complete_lattice.is_Sup_finite_compact (has_neg (has_neg Type)) := sorry --non-trivial
lemma new_lemma_54416 (h0 : ring (add_semigroup empty)) : is_domain (add_semigroup empty) := sorry --non-trivial
lemma new_lemma_54417 (h0 : list (has_Inf (has_pos_part (finset (finset linarith.comp))))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_54418 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (sub_neg_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (sub_neg_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54419 (h0 : ordered_add_comm_monoid (boolean_algebra.core environment.implicit_infer_kind)) : archimedean (boolean_algebra.core environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_54420 (h0 : topological_space (has_edist (option (option empty)))) : locally_compact_space (has_edist (option (option empty))) := sorry --non-trivial
lemma new_lemma_54421 (h0 : monoid (normed_comm_ring (has_add linarith.comp))) : monoid.fg (normed_comm_ring (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_54422 (h1 : topological_space (has_inv string_imp)) : irreducible_space (has_inv string_imp) := sorry --non-trivial
lemma new_lemma_54423 (h0 : functor.add_const (topological_space (left_cancel_monoid unsigned)) num) : @locally_compact_space.{0} (left_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_monoid.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_54424 (h0 : functor.add_const (topological_space (has_neg linarith.comp)) (has_neg (has_neg (finset Type)))) : @t0_space.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (has_neg.{0} linarith.comp)) (has_neg.{1} (has_neg.{1} (finset.{1} Type))) h0)  := sorry --non-trivial
lemma new_lemma_54425 (h1 : has_lt (normed_field (has_subset (normed_field (normed_field char))))) : no_max_order (normed_field (has_subset (normed_field (normed_field char)))) := sorry --non-trivial
lemma new_lemma_54426 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (bin_tree.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (bin_tree.{0} empty))  := sorry --non-trivial
lemma new_lemma_54427 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (with_one.{0} string_imp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 topological_space.{0}) (with_one.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_54428 (h0 : functor.add_const (group (has_neg_part Type)) unsigned) : @group.fg.{1} (has_neg_part.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (has_neg_part.{1} Type)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_54429 (h0 : complete_lattice (has_pos_part (has_pos_part (has_Inf (has_add real))))) : is_atomistic (has_pos_part (has_pos_part (has_Inf (has_add real)))) := sorry --non-trivial
lemma new_lemma_54430 (h0 : group (ordered_comm_group (option empty))) : is_cyclic (ordered_comm_group (option empty)) := sorry --non-trivial
lemma new_lemma_54431 (h0 : function.extfun Type ring) : @is_domain.{0} (distrib_lattice.{0} int) (@function.extfun_app.{2 1} Type ring.{0} h0 (distrib_lattice.{0} int))  := sorry --non-trivial
lemma new_lemma_54432 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} unsigned (@function.extfun_app.{2 1} Type add_group.{0} h0 unsigned)  := sorry --non-trivial
lemma new_lemma_54433 (h0 : functor.add_const (ordered_comm_monoid (add_comm_monoid linarith.comp)) name) : @has_exists_mul_of_le.{0} (add_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (add_comm_monoid.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_54434 (h0 : complete_lattice (comm_ring char)) : complete_lattice.is_Sup_finite_compact (comm_ring char) := sorry --non-trivial
lemma new_lemma_54435 (h0 : not (uniform_space (has_nnnorm linarith.comp_source) -> false)) : @complete_space.{0} (has_nnnorm.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (uniform_space.{0} (has_nnnorm.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_54436 (h0 : measurable_space (has_ssubset linarith.comp_source)) (h1 : filter (has_ssubset linarith.comp_source)) : filter.is_measurably_generated h1 := sorry --non-trivial
lemma new_lemma_54437 (h0 : topological_space (has_one (semiring linarith.comp))) : totally_disconnected_space (has_one (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_54438 (h0 : function.extfun Type (functor.add_const (complete_lattice (add_right_cancel_monoid unsigned)))) : @is_atomistic.{0} (add_right_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (add_right_cancel_monoid.{0} unsigned)) num (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (complete_lattice.{0} (add_right_cancel_monoid.{0} unsigned))) h0 num))  := sorry --non-trivial
lemma new_lemma_54439 (h0 : topological_space (canonically_ordered_comm_semiring (option empty))) : locally_compact_space (canonically_ordered_comm_semiring (option empty)) := sorry --non-trivial
lemma new_lemma_54440 (h0 : functor.add_const (filter (has_dist empty)) num) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54441 (h0 : functor.add_const (topological_space empty) congr_arg_kind) : t1_space empty := sorry --non-trivial
lemma new_lemma_54442 (h0 : semiring (has_nndist (has_neg (has_pos_part (ring linarith.comp))))) : is_noetherian_ring (has_nndist (has_neg (has_pos_part (ring linarith.comp)))) := sorry --non-trivial
lemma new_lemma_54443 (h0 : ring (has_norm (semiring congr_arg_kind))) : strong_rank_condition (has_norm (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_54444 (h0 : group (has_Inf (has_add Type))) : group.fg (has_Inf (has_add Type)) := sorry --non-trivial
lemma new_lemma_54445 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (has_zero.{0} ennreal) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_54446 (h0 : functor.add_const (topological_space (has_neg_part unsigned)) unsigned) : @t1_space.{0} (has_neg_part.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_54447 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_54448 (h0 : topological_space (mul_one_class string.iterator_imp)) (h1 : add_group (mul_one_class string.iterator_imp)) : topological_add_group (mul_one_class string.iterator_imp) := sorry --non-trivial
lemma new_lemma_54449 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (generalized_boolean_algebra.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (generalized_boolean_algebra.{0} real))  := sorry --non-trivial
lemma new_lemma_54450 (h0 : functor.add_const (complete_lattice ennreal) (option ennreal)) : is_atomistic ennreal := sorry --non-trivial
lemma new_lemma_54451 (h0 : function.extfun nat fin) : @locally_compact_space.{0} (has_bot.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero))) (has_bot.{0} real))  := sorry --non-trivial
lemma new_lemma_54452 (h0 : not (topological_space (denumerable fun_info) -> false)) : @totally_disconnected_space.{0} (denumerable.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (denumerable.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_54453 (h1 : filter linarith.comp) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_54454 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (has_emptyc.{0} fun_info) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 monoid.{0}) (has_emptyc.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_54455 (h0 : topological_space (add_cancel_monoid (finset unsigned))) : sequential_space (add_cancel_monoid (finset unsigned)) := sorry --non-trivial
lemma new_lemma_54456 (h1 : topological_space empty) : t0_space empty := sorry --non-trivial
lemma new_lemma_54457 (h0 : functor.add_const (topological_space (normed_comm_ring Type)) environment.implicit_infer_kind) : @preirreducible_space.{1} (normed_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (normed_comm_ring.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54458 (h0 : monoid (complete_linear_order (semiring (semiring unsigned)))) : monoid.fg (complete_linear_order (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_54459 (h0 : topological_space (add_comm_monoid real)) : preirreducible_space (add_comm_monoid real) := sorry --non-trivial
lemma new_lemma_54460 (h0 : topological_space (metric_space congr_arg_kind)) : loc_path_connected_space (metric_space congr_arg_kind) := sorry --non-trivial
lemma new_lemma_54461 (h0 : functor.add_const (function.extfun Type group) Type) : @group.fg.{0} (comm_group.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type group.{0}) Type h0) (comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_54462 (h0 : uniform_space (semigroup linarith.comp)) : complete_space (semigroup linarith.comp) := sorry --non-trivial
lemma new_lemma_54463 (h0 : topological_space (with_one (random_gen linarith.ineq))) : locally_compact_space (with_one (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_54464 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_nndist name)) ennreal) : @unique_factorization_monoid.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (has_nndist.{0} name)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_54465 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (linear_ordered_add_comm_group.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_add_comm_group.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_54466 (h0 : functor.add_const (topological_space (has_nndist pos)) name) : @normal_space.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_54467 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (has_top.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_top.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54468 (h0 : topological_space (has_one linarith.comp)) : totally_disconnected_space (has_one linarith.comp) := sorry --non-trivial
lemma new_lemma_54469 (h0 : add_group (random_gen string_imp)) : is_add_cyclic (random_gen string_imp) := sorry --non-trivial
lemma new_lemma_54470 (h0 : topological_space (generalized_boolean_algebra real)) : loc_path_connected_space (generalized_boolean_algebra real) := sorry --non-trivial
lemma new_lemma_54471 (h0 : uniform_space (has_emptyc congr_arg_kind)) : complete_space (has_emptyc congr_arg_kind) := sorry --non-trivial
lemma new_lemma_54472 (h0 : with_bot (ring (has_append linarith.ineq))) (h1 : ne h0 has_bot.bot) : @rank_condition.{0} (has_append.{0} linarith.ineq) (@with_bot.unbot.{0} (ring.{0} (has_append.{0} linarith.ineq)) h0 h1)  := sorry --non-trivial
lemma new_lemma_54473 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (free_add_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (free_add_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54474 (h0 : topological_space (comm_semigroup (has_pos_part linarith.comp))) : normal_space (comm_semigroup (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_54475 (h0 : list (option ennreal)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54476 (h0 : topological_space (boolean_algebra.core (has_to_string unsigned))) : t0_space (boolean_algebra.core (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_54477 (h0 : set (has_compl (has_lt string_imp))) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_54478 (h0 : not (function.extfun Type topological_space -> false)) : @discrete_topology.{0} (has_sub.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_sub.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54479 (h0 : add_group (has_neg (option (option (option ennreal))))) : is_add_cyclic (has_neg (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_54480 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @monoid.fg.{0} (denumerable.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) monoid.{0}) (denumerable.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_54481 (h0 : complete_lattice (has_inv fun_info)) : complete_lattice.is_Sup_finite_compact (has_inv fun_info) := sorry --non-trivial
lemma new_lemma_54482 (h0 : topological_space (measurable_space (has_inv to_additive.value_type))) : path_connected_space (measurable_space (has_inv to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_54483 (h0 : topological_space (normed_lattice_add_comm_group (has_bot real))) : totally_separated_space (normed_lattice_add_comm_group (has_bot real)) := sorry --non-trivial
lemma new_lemma_54484 (h0 : topological_space (has_nnnorm (has_nnnorm (has_nnnorm (random_gen char))))) : locally_compact_space (has_nnnorm (has_nnnorm (has_nnnorm (random_gen char)))) := sorry --non-trivial
lemma new_lemma_54485 (h0 : has_mem.mem (has_top congr_arg_kind) has_emptyc.emptyc) : @strong_rank_condition.{0} (has_top.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type ring.{0} (has_top.{0} congr_arg_kind) h0)  := sorry --non-trivial
lemma new_lemma_54486 (h0 : topological_space environment.implicit_infer_kind) : sequential_space environment.implicit_infer_kind := sorry --non-trivial
lemma new_lemma_54487 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (random_gen linarith.comp)) := sorry --non-trivial
lemma new_lemma_54488 (h0 : topological_space (add_comm_semigroup char)) (h1 : set (add_comm_semigroup char)) : is_path_connected h1 := sorry --non-trivial
lemma new_lemma_54489 (h0 : functor.add_const (topological_space (ring Type)) Type) : @totally_separated_space.{1} (ring.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (ring.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_54490 (h0 : add_group (normed_linear_ordered_group (option (option (option (option (option empty))))))) : is_add_cyclic (normed_linear_ordered_group (option (option (option (option (option empty)))))) := sorry --non-trivial
lemma new_lemma_54491 (h0 : filter (dlist (has_nnnorm (has_nnnorm linarith.ineq)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_54492 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (ordered_ring.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_ring.{0} num))  := sorry --non-trivial
lemma new_lemma_54493 (h0 : topological_space (ordered_ring unsigned)) : irreducible_space (ordered_ring unsigned) := sorry --non-trivial
lemma new_lemma_54494 (h1 : set (set linarith.ineq)) : is_countably_spanning h1 := sorry --non-trivial
lemma new_lemma_54495 (h0 : topological_space (linear_ordered_semiring (has_top (with_bot empty)))) : irreducible_space (linear_ordered_semiring (has_top (with_bot empty))) := sorry --non-trivial
lemma new_lemma_54496 (h0 : topological_space (add_comm_monoid (normed_comm_ring pos))) : sequential_space (add_comm_monoid (normed_comm_ring pos)) := sorry --non-trivial
lemma new_lemma_54497 (h0 : topological_space (canonically_ordered_monoid pos)) : topological_space.separable_space (canonically_ordered_monoid pos) := sorry --non-trivial
lemma new_lemma_54498 (h0 : filter (simple_graph to_additive.value_type)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_54499 (h0 : topological_space (complete_linear_order (semiring (semiring unsigned)))) : irreducible_space (complete_linear_order (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_54500 (h0 : not (topological_space (measure_theory.measure_space empty) -> false)) : @discrete_topology.{0} (measure_theory.measure_space.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (measure_theory.measure_space.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_54501 (h0 : not (function.extfun Type group -> false)) : @is_cyclic.{0} (has_star.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (has_star.{0} empty))  := sorry --non-trivial
lemma new_lemma_54502 (h0 : list (ordered_comm_group empty)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54503 (h0 : fin has_zero.zero) : @preconnected_space.{0} (sub_neg_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (sub_neg_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_54504 (h1 : not (group (topological_space linarith.comp_source) -> false)) : @is_cyclic.{0} (topological_space.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (group.{0} (topological_space.{0} linarith.comp_source)) h1)  := sorry --non-trivial
lemma new_lemma_54505 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (add_group num)) := sorry --non-trivial
lemma new_lemma_54506 (h1 : complete_lattice (fintype fun_info)) : is_compactly_generated (fintype fun_info) := sorry --non-trivial
lemma new_lemma_54507 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (dlist.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (dlist.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_54508 (h1 : has_lt (simple_graph reducibility_hints)) : no_max_order (simple_graph reducibility_hints) := sorry --non-trivial
lemma new_lemma_54509 (h0 : ring (has_zero (option ennreal))) : strong_rank_condition (has_zero (option ennreal)) := sorry --non-trivial
lemma new_lemma_54510 (h0 : ring (dlist (has_nnnorm fun_info))) : rank_condition (dlist (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_54511 (h0 : topological_space (has_zero (ring environment.implicit_infer_kind))) : sequential_space (has_zero (ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_54512 (h0 : list (cancel_monoid (has_add (has_add (has_add Type))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54513 (h0 : complete_lattice (complete_semilattice_Sup (random_gen string_imp))) : is_compactly_generated (complete_semilattice_Sup (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_54514 (h0 : topological_space (linear_ordered_comm_group congr_arg_kind)) : totally_disconnected_space (linear_ordered_comm_group congr_arg_kind) := sorry --non-trivial
lemma new_lemma_54515 (h0 : complete_lattice (mul_zero_class (semiring congr_arg_kind))) : complete_lattice.is_Sup_finite_compact (mul_zero_class (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_54516 (h2 : uniform_space (nondiscrete_normed_field (mul_one_class environment.projection_info))) : complete_space (nondiscrete_normed_field (mul_one_class environment.projection_info)) := sorry --non-trivial
lemma new_lemma_54517 (h0 : topological_space (has_union (semiring congr_arg_kind))) : path_connected_space (has_union (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_54518 (h1 : ring (with_bot reducibility_hints)) : rank_condition (with_bot reducibility_hints) := sorry --non-trivial
lemma new_lemma_54519 (h0 : complete_lattice (right_cancel_semigroup enat)) : complete_lattice.is_Sup_finite_compact (right_cancel_semigroup enat) := sorry --non-trivial
lemma new_lemma_54520 (h2 : not (has_mem.mem (with_one num) has_emptyc.emptyc -> false)) : @normalizer_condition.{0} (with_one.{0} num) (@finset.pi.empty.{1 0} Type group.{0} (with_one.{0} num) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_one.{0} num) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h2))  := sorry --non-trivial
lemma new_lemma_54521 (h1 : topological_space (random_gen (comm_ring (comm_ring (comm_ring (comm_ring reducibility_hints)))))) : path_connected_space (random_gen (comm_ring (comm_ring (comm_ring (comm_ring reducibility_hints))))) := sorry --non-trivial
lemma new_lemma_54522 (h0 : functor.comp topological_space has_neg_part name) : @regular_space.{0} (has_neg_part.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_neg_part.{0} name h0)  := sorry --non-trivial
lemma new_lemma_54523 (h0 : complete_lattice string) : is_coatomistic string := sorry --non-trivial
lemma new_lemma_54524 (h0 : monoid (has_to_string (has_to_string (comm_group (comm_group (has_to_string (has_add Type))))))) : monoid.fg (has_to_string (has_to_string (comm_group (comm_group (has_to_string (has_add Type)))))) := sorry --non-trivial
lemma new_lemma_54525 (h0 : functor.add_const (add_monoid (has_nndist unsigned)) linarith.comp) : @add_monoid.fg.{0} (has_nndist.{0} unsigned) (@functor.add_const.run.{0 0} (add_monoid.{0} (has_nndist.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_54526 (h0 : uniform_space (semi_normed_ring (mul_one_class (mul_one_class char)))) : complete_space (semi_normed_ring (mul_one_class (mul_one_class char))) := sorry --non-trivial
lemma new_lemma_54527 (h0 : topological_space (finset (finset (has_neg environment.implicit_infer_kind)))) : normal_space (finset (finset (has_neg environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_54528 (h0 : topological_space (complete_distrib_lattice string_imp)) : t0_space (complete_distrib_lattice string_imp) := sorry --non-trivial
lemma new_lemma_54529 (h0 : ring (has_top (random_gen (has_inv (random_gen linarith.ineq))))) : is_domain (has_top (random_gen (has_inv (random_gen linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_54530 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (semigroup.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (semigroup.{0} pos))  := sorry --non-trivial
lemma new_lemma_54531 (h0 : topological_space (has_top empty)) : preirreducible_space (has_top empty) := sorry --non-trivial
lemma new_lemma_54532 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (has_norm.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_norm.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54533 (h0 : topological_space (ring (option num))) : totally_disconnected_space (ring (option num)) := sorry --non-trivial
lemma new_lemma_54534 (h0 : functor.add_const (topological_space (finset environment.implicit_infer_kind)) pos) : @discrete_topology.{0} (finset.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_54535 (h0 : ordered_add_comm_monoid (canonically_linear_ordered_monoid (option (option num)))) : archimedean (canonically_linear_ordered_monoid (option (option num))) := sorry --non-trivial
lemma new_lemma_54536 (h0 : complete_lattice (with_bot (semiring (semiring linarith.comp)))) : is_atomistic (with_bot (semiring (semiring linarith.comp))) := sorry --non-trivial
lemma new_lemma_54537 (h0 : ring (add_cancel_monoid (finset environment.implicit_infer_kind))) : strong_rank_condition (add_cancel_monoid (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_54538 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @totally_separated_space.{0} (has_neg.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (has_neg.{0} pos))  := sorry --non-trivial
lemma new_lemma_54539 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (simple_graph.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (simple_graph.{0} pos))  := sorry --non-trivial
lemma new_lemma_54540 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (has_zero.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_54541 (h0 : not (function.extfun (finset Type) (has_mem.mem (random_gen unsigned)) -> false)) : @locally_compact_space.{0} (random_gen.{0} unsigned) (@finset.pi.empty.{1 0} Type topological_space.{0} (random_gen.{0} unsigned) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (random_gen.{0} unsigned)) (@classical.by_contradiction'.{0} (function.extfun.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (random_gen.{0} unsigned))) h0) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_54542 (h0 : complete_lattice (plift (semiring empty))) : is_atomistic (plift (semiring empty)) := sorry --non-trivial
lemma new_lemma_54543 (h0 : not (complete_lattice (linear_ordered_comm_group_with_zero to_additive.value_type) -> false)) : @is_compactly_generated.{0} (linear_ordered_comm_group_with_zero.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (complete_lattice.{0} (linear_ordered_comm_group_with_zero.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_54544 (h0 : topological_space (normed_lattice_add_comm_group linarith.comp)) : topological_space.separable_space (normed_lattice_add_comm_group linarith.comp) := sorry --non-trivial
lemma new_lemma_54545 (h0 : list (has_add (has_add pos))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54546 (h0 : list (has_zero (option (has_to_string ennreal)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54547 (h0 : functor.add_const Prop (generalized_boolean_algebra pos)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_54548 (h0 : topological_space (has_zero (ring (finset (finset Type))))) : locally_compact_space (has_zero (ring (finset (finset Type)))) := sorry --non-trivial
lemma new_lemma_54549 (h0 : ordered_add_comm_monoid (has_to_string (option unsigned))) : archimedean (has_to_string (option unsigned)) := sorry --non-trivial
lemma new_lemma_54550 (h0 : ring (has_bot (ordered_comm_monoid linarith.comp))) : is_domain (has_bot (ordered_comm_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_54551 (h0 : fin has_zero.zero) : @monoid.fg.{0} (has_bot.{0} pos) (@matrix.vec_empty.{0} (monoid.{0} (has_bot.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_54552 (h0 : add_group (semi_normed_ring string.iterator_imp)) : is_add_cyclic (semi_normed_ring string.iterator_imp) := sorry --non-trivial
lemma new_lemma_54553 (h0 : uniform_space (mul_one_class reducibility_hints)) : complete_space (mul_one_class reducibility_hints) := sorry --non-trivial
lemma new_lemma_54554 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @topological_space.separable_space.{0} (sub_neg_monoid.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (sub_neg_monoid.{0} pos)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_54555 (h0 : topological_space (normed_comm_ring (comm_group pos))) : t0_space (normed_comm_ring (comm_group pos)) := sorry --non-trivial
lemma new_lemma_54556 (h0 : functor.add_const (function.extfun Type group) (ring pos)) : @is_simple_group.{0} (finset.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) (ring.{0} pos) h0) (finset.{0} pos))  := sorry --non-trivial
lemma new_lemma_54557 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (has_union.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_union.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_54558 (h0 : list (linear_ordered_semiring linarith.comp)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_54559 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (add_left_cancel_semigroup.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_left_cancel_semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_54560 (h0 : functor.add_const (function.extfun Type uniform_space) Type) : @complete_space.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type uniform_space.{0}) Type h0) (boolean_algebra.core.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_54561 (h0 : functor.add_const (complete_lattice (canonically_ordered_comm_semiring ennreal)) unsigned) : @complete_lattice.is_Sup_finite_compact.{0} (canonically_ordered_comm_semiring.{0} ennreal) (@functor.add_const.run.{0 0} (complete_lattice.{0} (canonically_ordered_comm_semiring.{0} ennreal)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_54562 (h0 : topological_space (with_bot (has_norm (has_norm fun_info)))) : totally_disconnected_space (with_bot (has_norm (has_norm fun_info))) := sorry --non-trivial
lemma new_lemma_54563 (h0 : set (nondiscrete_normed_field environment.projection_info)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_54564 (h0 : function.extfun Type (functor.add_const (ring (bin_tree empty)))) : @is_principal_ideal_ring.{0} (bin_tree.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (bin_tree.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ring.{0} (bin_tree.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_54565 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @is_cyclic.{1} (ordered_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 group.{1}) (ordered_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_54566 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (has_top.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_top.{0} num))  := sorry --non-trivial
lemma new_lemma_54567 (h0 : topological_space (complete_linear_order (semiring unsigned))) : discrete_topology (complete_linear_order (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_54568 (h0 : group (has_zero (option (has_add pos)))) : group.fg (has_zero (option (has_add pos))) := sorry --non-trivial
lemma new_lemma_54569 (h0 : not (has_mem.mem group has_emptyc.emptyc -> false)) : @is_cyclic.{0} (semiring.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) group.{0} (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) group.{0} (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type)))) h0)) (semiring.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_54570 (h0 : ring (has_neg_part (has_nndist (canonically_linear_ordered_monoid ennreal)))) : is_principal_ideal_ring (has_neg_part (has_nndist (canonically_linear_ordered_monoid ennreal))) := sorry --non-trivial
lemma new_lemma_54571 (h0 : functor.add_const (group (has_to_string linarith.comp)) Type) : @normalizer_condition.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 1} (group.{0} (has_to_string.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_54572 (h0 : topological_space (metric_space (semiring (metric_space (id (has_one num)))))) : locally_compact_space (metric_space (semiring (metric_space (id (has_one num))))) := sorry --non-trivial
lemma new_lemma_54573 (h0 : topological_space (has_add (option pos))) : loc_path_connected_space (has_add (option pos)) := sorry --non-trivial
lemma new_lemma_54574 (h0 : ring (comm_group (has_add (has_add pos)))) : is_principal_ideal_ring (comm_group (has_add (has_add pos))) := sorry --non-trivial
lemma new_lemma_54575 (h1 : not (topological_space (has_nnnorm linarith.comp_source) -> false)) : @totally_disconnected_space.{0} (has_nnnorm.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (has_nnnorm.{0} linarith.comp_source)) h1)  := sorry --non-trivial
lemma new_lemma_54576 (h0 : list (has_top char)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54577 (h0 : functor.comp topological_space has_neg Type) : @totally_separated_space.{1} (has_neg.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} has_neg.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_54578 (h0 : ordered_comm_monoid (has_bot (sub_neg_monoid name))) : has_exists_mul_of_le (has_bot (sub_neg_monoid name)) := sorry --non-trivial
lemma new_lemma_54579 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (add_cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (add_cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54580 (h0 : topological_space (bin_tree (option congr_arg_kind))) : totally_separated_space (bin_tree (option congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_54581 (h0 : functor.add_const (ring (has_neg pos)) (has_neg Type)) : @strong_rank_condition.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 1} (ring.{0} (has_neg.{0} pos)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_54582 (h0 : topological_space (boolean_algebra.core (has_to_string congr_arg_kind))) : preirreducible_space (boolean_algebra.core (has_to_string congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_54583 (h0 : cancel_comm_monoid_with_zero (is_R_or_C (left_cancel_monoid (has_bot (add_cancel_monoid unsigned))))) : unique_factorization_monoid (is_R_or_C (left_cancel_monoid (has_bot (add_cancel_monoid unsigned)))) := sorry --non-trivial
lemma new_lemma_54584 (h0 : complete_lattice (has_to_string num)) : is_compactly_generated (has_to_string num) := sorry --non-trivial
lemma new_lemma_54585 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (boolean_algebra.core.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (boolean_algebra.core.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54586 (h0 : functor.add_const (function.extfun Type monoid) pos) : @monoid.fg.{0} (has_neg.{0} linarith.comp) (@function.extfun_app.{2 1} Type monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type monoid.{0}) pos h0) (has_neg.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54587 (h0 : topological_space (finset (finset Type))) : totally_separated_space (finset (finset Type)) := sorry --non-trivial
lemma new_lemma_54588 (h0 : topological_space (add_comm_semigroup (mul_one_class enat))) : t0_space (add_comm_semigroup (mul_one_class enat)) := sorry --non-trivial
lemma new_lemma_54589 (h0 : complete_lattice (canonically_linear_ordered_monoid (has_add (has_Inf real)))) : is_compactly_generated (canonically_linear_ordered_monoid (has_add (has_Inf real))) := sorry --non-trivial
lemma new_lemma_54590 (h0 : fin has_zero.zero) : @normalizer_condition.{0} (boolean_algebra.{0} pos) (@matrix.vec_empty.{0} (group.{0} (boolean_algebra.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_54591 (h0 : functor.add_const (add_monoid (mul_zero_class num)) (semiring (semiring (semiring (semiring num))))) : @add_monoid.fg.{0} (mul_zero_class.{0} num) (@functor.add_const.run.{0 0} (add_monoid.{0} (mul_zero_class.{0} num)) (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} num)))) h0)  := sorry --non-trivial
lemma new_lemma_54592 (h0 : ordered_comm_monoid (normed_comm_ring ennreal)) : has_exists_mul_of_le (normed_comm_ring ennreal) := sorry --non-trivial
lemma new_lemma_54593 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (add_left_cancel_semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (add_left_cancel_semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54594 (h0 : functor.add_const (cancel_comm_monoid_with_zero (normed_comm_ring linarith.comp)) (cancel_monoid Type)) : @unique_factorization_monoid.{0} (normed_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 1} (cancel_comm_monoid_with_zero.{0} (normed_comm_ring.{0} linarith.comp)) (cancel_monoid.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_54595 (h0 : add_group (left_cancel_semigroup unsigned)) : is_add_cyclic (left_cancel_semigroup unsigned) := sorry --non-trivial
lemma new_lemma_54596 (h0 : functor.add_const (topological_space (ordered_comm_ring name)) (finset Type)) : @t0_space.{0} (ordered_comm_ring.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (ordered_comm_ring.{0} name)) (finset.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_54597 (h0 : list (has_norm (has_ssubset (has_repr (option (random_gen string_imp)))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54598 (h0 : functor.add_const (ring (boolean_algebra Type)) (has_Inf (has_Inf Type))) : @strong_rank_condition.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 1} (ring.{1} (boolean_algebra.{1} Type)) (has_Inf.{1} (has_Inf.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_54599 (h0 : ring (boolean_algebra (has_add (has_add (has_add unsigned))))) : is_principal_ideal_ring (boolean_algebra (has_add (has_add (has_add unsigned)))) := sorry --non-trivial
lemma new_lemma_54600 (h2 : order_hom nat (topological_space (add_cancel_comm_monoid char))) : @t0_space.{0} (add_cancel_comm_monoid.{0} char) (@monotonic_sequence_limit.{0} (topological_space.{0} (add_cancel_comm_monoid.{0} char)) (@topological_space.partial_order.{0} (add_cancel_comm_monoid.{0} char)) h2)  := sorry --non-trivial
lemma new_lemma_54601 (h0 : function.extfun Type ring) : @is_domain.{0} (linear_ordered_comm_monoid_with_zero.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_ordered_comm_monoid_with_zero.{0} empty))  := sorry --non-trivial
lemma new_lemma_54602 (h0 : ring (has_norm (random_gen (has_top linarith.comp_source)))) : rank_condition (has_norm (random_gen (has_top linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_54603 (h2 : not (uniform_space (denumerable to_additive.value_type) -> false)) : @complete_space.{0} (denumerable.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (uniform_space.{0} (denumerable.{0} to_additive.value_type)) h2)  := sorry --non-trivial
lemma new_lemma_54604 (h0 : topological_space (finset (cancel_monoid unsigned))) : totally_disconnected_space (finset (cancel_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_54605 (h0 : topological_space (has_nndist (has_neg name))) : preconnected_space (has_nndist (has_neg name)) := sorry --non-trivial
lemma new_lemma_54606 (h0 : monoid (mul_zero_class (semiring (semiring (semiring num))))) : monoid.fg (mul_zero_class (semiring (semiring (semiring num)))) := sorry --non-trivial
lemma new_lemma_54607 (h0 : functor.add_const (uniform_space (mul_zero_class empty)) num) : @complete_space.{0} (mul_zero_class.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (mul_zero_class.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_54608 (h0 : fin has_zero.zero) : @t0_space.{1} (has_bot.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (has_bot.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_54609 (h0 : has_mem.mem congr_arg_kind has_emptyc.emptyc) : @complete_space.{0} congr_arg_kind (@finset.pi.empty.{1 0} Type uniform_space.{0} congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_54610 (h1 : add_group (add_comm_semigroup (add_comm_semigroup (add_comm_semigroup ereal)))) : is_add_cyclic (add_comm_semigroup (add_comm_semigroup (add_comm_semigroup ereal))) := sorry --non-trivial
lemma new_lemma_54611 (h0 : not (function.extfun Type complete_lattice -> false)) : @is_compactly_generated.{0} (random_gen.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (random_gen.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54612 (h0 : topological_space (ordered_comm_ring (finset pos))) : path_connected_space (ordered_comm_ring (finset pos)) := sorry --non-trivial
lemma new_lemma_54613 (h0 : function.extfun Type (functor.comp filter pseudo_metric_space)) : filter.ne_bot (functor.comp.run (function.extfun_app h0 ennreal)) := sorry --non-trivial
lemma new_lemma_54614 (h0 : topological_space (mul_zero_class (finset (finset (finset ennreal))))) : locally_compact_space (mul_zero_class (finset (finset (finset ennreal)))) := sorry --non-trivial
lemma new_lemma_54615 (h0 : topological_space (add_left_cancel_monoid (random_gen (mul_one_class char)))) : t0_space (add_left_cancel_monoid (random_gen (mul_one_class char))) := sorry --non-trivial
lemma new_lemma_54616 (h0 : functor.add_const (ring (has_dist empty)) empty) : @is_principal_ideal_ring.{0} (has_dist.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (has_dist.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_54617 (h0 : cancel_comm_monoid_with_zero (add_group (semiring num))) : unique_factorization_monoid (add_group (semiring num)) := sorry --non-trivial
lemma new_lemma_54618 (h0 : has_mem.mem (normed_group (semiring congr_arg_kind)) has_emptyc.emptyc) : @add_monoid.fg.{0} (normed_group.{0} (semiring.{0} congr_arg_kind)) (@finset.pi.empty.{1 0} Type add_monoid.{0} (normed_group.{0} (semiring.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_54619 (h0 : finset (linear_ordered_comm_ring (semiring congr_arg_kind))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_54620 (h1 : to_additive.value_type -> to_additive.value_type -> Prop) : is_total_preorder to_additive.value_type h1 := sorry --non-trivial
lemma new_lemma_54621 (h0 : not (topological_space (with_one congr_arg_kind) -> false)) : @discrete_topology.{0} (with_one.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (with_one.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_54622 (h0 : not (ring (has_div string.iterator_imp) -> false)) : @strong_rank_condition.{0} (has_div.{0} string.iterator_imp) (@classical.by_contradiction'.{1} (ring.{0} (has_div.{0} string.iterator_imp)) h0)  := sorry --non-trivial
lemma new_lemma_54623 (h0 : list (id (random_gen linarith.ineq))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54624 (h0 : group (normed_group (random_gen (has_inv (has_inv linarith.ineq))))) : is_cyclic (normed_group (random_gen (has_inv (has_inv linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_54625 (h0 : ring (add_semigroup empty)) : is_principal_ideal_ring (add_semigroup empty) := sorry --non-trivial
lemma new_lemma_54626 (h0 : topological_space (has_neg (option ennreal))) : loc_path_connected_space (has_neg (option ennreal)) := sorry --non-trivial
lemma new_lemma_54627 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (has_neg.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_neg.{0} pos))  := sorry --non-trivial
lemma new_lemma_54628 (h0 : functor.add_const (topological_space (comm_group ennreal)) pos) : @topological_space.separable_space.{0} (comm_group.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} ennreal)) pos h0)  := sorry --non-trivial
lemma new_lemma_54629 (h0 : fin has_zero.zero) : @totally_separated_space.{1} (boolean_algebra.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (boolean_algebra.{1} Type)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))))))))  := sorry --non-trivial
lemma new_lemma_54630 (h0 : topological_space (canonically_ordered_comm_semiring pos)) : loc_path_connected_space (canonically_ordered_comm_semiring pos) := sorry --non-trivial
lemma new_lemma_54631 (h0 : preorder (mul_one_class char)) (h1 : set (mul_one_class char)) : set.is_pwo h1 := sorry --non-trivial
lemma new_lemma_54632 (h1 : not (group (topological_space to_additive.value_type) -> false)) : @is_cyclic.{0} (topological_space.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (group.{0} (topological_space.{0} to_additive.value_type)) h1)  := sorry --non-trivial
lemma new_lemma_54633 (h0 : monoid (linear_ordered_add_comm_group (has_inv linarith.ineq))) : monoid.fg (linear_ordered_add_comm_group (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_54634 (h1 : not (ring (random_gen char) -> false)) : @rank_condition.{0} (random_gen.{0} char) (@classical.by_contradiction'.{1} (ring.{0} (random_gen.{0} char)) h1)  := sorry --non-trivial
lemma new_lemma_54635 (h0 : multiset (random_gen char)) (h1 : not (multiset (random_gen char) -> false)) : multiset.disjoint h0 (classical.by_contradiction' h1) := sorry --non-trivial
lemma new_lemma_54636 (h0 : complete_lattice (ordered_ring (option (option (option unsigned))))) : is_atomistic (ordered_ring (option (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_54637 (h0 : not (uniform_space (has_append linarith.ineq) -> false)) : @complete_space.{0} (has_append.{0} linarith.ineq) (@classical.by_contradiction'.{1} (uniform_space.{0} (has_append.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_54638 (h0 : functor.add_const (ordered_add_comm_monoid (simple_graph linarith.comp)) pos) : @archimedean.{0} (simple_graph.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (simple_graph.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_54639 (h0 : not (function.extfun Type uniform_space -> false)) : @separated_space.{0} (measurable_space.{0} num) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (measurable_space.{0} num))  := sorry --non-trivial
lemma new_lemma_54640 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (add_right_cancel_monoid.{0} (semiring.{0} congr_arg_kind)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_right_cancel_monoid.{0} (semiring.{0} congr_arg_kind)))  := sorry --non-trivial
lemma new_lemma_54641 (h0 : has_mem.mem (ordered_comm_semiring num) has_emptyc.emptyc) : @strong_rank_condition.{0} (ordered_comm_semiring.{0} num) (@finset.pi.empty.{1 0} Type ring.{0} (ordered_comm_semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_54642 (h0 : topological_space (has_neg_part (has_add unsigned))) : discrete_topology (has_neg_part (has_add unsigned)) := sorry --non-trivial
lemma new_lemma_54643 (h0 : cancel_comm_monoid_with_zero (canonically_ordered_monoid real)) : unique_factorization_monoid (canonically_ordered_monoid real) := sorry --non-trivial
lemma new_lemma_54644 (h0 : functor.add_const (topological_space (has_add ennreal)) name) : @t0_space.{0} (has_add.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} ennreal)) name h0)  := sorry --non-trivial
lemma new_lemma_54645 (h0 : has_mem.mem (measurable_space num) has_emptyc.emptyc) : @separated_space.{0} (measurable_space.{0} num) (@finset.pi.empty.{1 0} Type uniform_space.{0} (measurable_space.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_54646 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_54647 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_nndist unsigned)) pos) : @unique_factorization_monoid.{0} (has_nndist.{0} unsigned) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (has_nndist.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_54648 (h1 : topological_space (mul_one_class (mul_one_class (mul_one_class enat)))) : path_connected_space (mul_one_class (mul_one_class (mul_one_class enat))) := sorry --non-trivial
lemma new_lemma_54649 (h0 : functor.add_const (topological_space (with_zero congr_arg_kind)) congr_arg_kind) : @t0_space.{0} (with_zero.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (with_zero.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_54650 (h0 : add_group (left_cancel_semigroup (semiring (semiring (semiring (semiring (semiring empty))))))) : is_add_cyclic (left_cancel_semigroup (semiring (semiring (semiring (semiring (semiring empty)))))) := sorry --non-trivial
lemma new_lemma_54651 (h0 : list (filter Prop)) : @Lim.{0} Prop sierpinski_space (@nonempty_of_inhabited.{1} Prop sort.inhabited.{0}) (@list.head.{0} (filter.{0} Prop) (@filter.inhabited.{0} Prop) (@id.{1} (list.{0} (filter.{0} Prop)) h0))  := sorry --non-trivial
lemma new_lemma_54652 (h0 : topological_space (has_pos_part (ordered_comm_monoid (has_Inf real)))) : preirreducible_space (has_pos_part (ordered_comm_monoid (has_Inf real))) := sorry --non-trivial
lemma new_lemma_54653 (h0 : ring (has_inter (option (option num)))) : is_domain (has_inter (option (option num))) := sorry --non-trivial
lemma new_lemma_54654 (h1 : topological_space (denumerable (has_nnnorm fun_info))) : totally_disconnected_space (denumerable (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_54655 (h0 : topological_space (topological_space (has_ssubset (random_gen char)))) : t0_space (topological_space (has_ssubset (random_gen char))) := sorry --non-trivial
lemma new_lemma_54656 (h0 : group (has_Sup (semiring (semiring num)))) : is_cyclic (has_Sup (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_54657 (h0 : ring (encodable linarith.ineq)) : is_domain (encodable linarith.ineq) := sorry --non-trivial
lemma new_lemma_54658 (h0 : functor.add_const (topological_space (ordered_cancel_add_comm_monoid pos)) pos) : @t1_space.{0} (ordered_cancel_add_comm_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_cancel_add_comm_monoid.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_54659 (h0 : topological_space (ordered_comm_group unsigned)) : discrete_topology (ordered_comm_group unsigned) := sorry --non-trivial
lemma new_lemma_54660 (h0 : uniform_space (boolean_algebra (has_nndist pos))) : separated_space (boolean_algebra (has_nndist pos)) := sorry --non-trivial
lemma new_lemma_54661 (h0 : prod (has_one empty) (has_one empty)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_54662 (h0 : complete_lattice (boolean_algebra.core (finset pos))) : is_atomistic (boolean_algebra.core (finset pos)) := sorry --non-trivial
lemma new_lemma_54663 (h0 : topological_space (semigroup (has_pos_part environment.implicit_infer_kind))) : sequential_space (semigroup (has_pos_part environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_54664 (h3 : set string.iterator_imp) : set.subsingleton h3 := sorry --non-trivial
lemma new_lemma_54665 (h0 : linear_ordered_ring (semiring (random_gen (random_gen linarith.comp_source)))) (h1 : monoid (floor_ring (semiring (random_gen (random_gen linarith.comp_source))))) : monoid.fg (floor_ring (semiring (random_gen (random_gen linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_54666 (h0 : complete_lattice (measurable_space unsigned)) : is_atomistic (measurable_space unsigned) := sorry --non-trivial
lemma new_lemma_54667 (h0 : ring (has_one (semiring (semiring linarith.comp)))) : is_domain (has_one (semiring (semiring linarith.comp))) := sorry --non-trivial
lemma new_lemma_54668 (h0 : add_group (bin_tree unsigned)) : is_add_cyclic (bin_tree unsigned) := sorry --non-trivial
lemma new_lemma_54669 (h0 : functor.add_const (topological_space (ring name)) environment.implicit_infer_kind) : @normal_space.{0} (ring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54670 (h0 : functor.add_const (functor.add_const (topological_space Type) pos) linarith.comp) : @loc_path_connected_space.{1} Type (@functor.add_const.run.{1 0} (topological_space.{1} Type) pos (@functor.add_const.run.{1 0} (functor.add_const.{1 0} (topological_space.{1} Type) pos) linarith.comp h0))  := sorry --non-trivial
lemma new_lemma_54671 (h0 : fin has_zero.zero) : @sequential_space.{0} (ordered_comm_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (ordered_comm_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54672 (h0 : not (topological_space (has_div reducibility_hints) -> false)) : @totally_disconnected_space.{0} (has_div.{0} reducibility_hints) (@classical.by_contradiction'.{1} (topological_space.{0} (has_div.{0} reducibility_hints)) h0)  := sorry --non-trivial
lemma new_lemma_54673 (h0 : group (add_comm_monoid Type)) : is_simple_group (add_comm_monoid Type) := sorry --non-trivial
lemma new_lemma_54674 (h0 : topological_space (linear_ordered_semiring (semiring linarith.comp))) : totally_separated_space (linear_ordered_semiring (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_54675 (h0 : add_group (has_pos_part (ordered_ring (ring pos)))) : is_add_cyclic (has_pos_part (ordered_ring (ring pos))) := sorry --non-trivial
lemma new_lemma_54676 (h0 : functor.add_const (group (boolean_algebra.core environment.implicit_infer_kind)) name) : @group.fg.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_54677 (h0 : group (complete_semilattice_Sup (random_gen string_imp))) : group.fg (complete_semilattice_Sup (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_54678 (h1 : list (random_gen (with_bot (with_bot (with_bot to_additive.value_type))))) : list.nodup h1 := sorry --non-trivial
lemma new_lemma_54679 (h0 : topological_space (has_neg (has_add (finset Type)))) : path_connected_space (has_neg (has_add (finset Type))) := sorry --non-trivial
lemma new_lemma_54680 (h0 : topological_space (random_gen (random_gen (random_gen string_imp)))) : path_connected_space (random_gen (random_gen (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_54681 (h0 : complete_lattice (with_one (semiring empty))) : complete_lattice.is_Sup_finite_compact (with_one (semiring empty)) := sorry --non-trivial
lemma new_lemma_54682 (h0 : add_monoid (has_to_string (has_add ennreal))) : add_monoid.fg (has_to_string (has_add ennreal)) := sorry --non-trivial
lemma new_lemma_54683 (h0 : functor.add_const (uniform_space (ring Type)) linarith.comp) : @complete_space.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (uniform_space.{1} (ring.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_54684 (h0 : ring (semigroup (semiring empty))) : strong_rank_condition (semigroup (semiring empty)) := sorry --non-trivial
lemma new_lemma_54685 (h0 : not (function.extfun Type topological_space -> false)) : @discrete_topology.{0} (has_top.{0} bool) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_top.{0} bool))  := sorry --non-trivial
lemma new_lemma_54686 (h0 : functor.add_const (uniform_space (has_to_string Type)) pos) : @complete_space.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (uniform_space.{1} (has_to_string.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_54687 (h0 : functor.add_const (add_group (ring linarith.comp)) (has_neg Type)) : @is_add_cyclic.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 1} (add_group.{0} (ring.{0} linarith.comp)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_54688 (h0 : group (add_comm_monoid (ring (has_neg_part linarith.comp)))) : normalizer_condition (add_comm_monoid (ring (has_neg_part linarith.comp))) := sorry --non-trivial
lemma new_lemma_54689 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @regular_space.{0} (boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_54690 (h0 : functor.comp topological_space semigroup environment.implicit_infer_kind) : @loc_path_connected_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} topological_space.{0} semigroup.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54691 (h0 : fin has_zero.zero) : @unique_factorization_monoid.{0} (canonically_ordered_monoid.{0} real) (@matrix.vec_empty.{0} (cancel_comm_monoid_with_zero.{0} (canonically_ordered_monoid.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_54692 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (normed_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (normed_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54693 (h0 : add_monoid (has_zero (has_add (has_to_string (has_add (has_add pos)))))) : add_monoid.fg (has_zero (has_add (has_to_string (has_add (has_add pos))))) := sorry --non-trivial
lemma new_lemma_54694 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (complete_semilattice_Sup.{0} fun_info) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (complete_semilattice_Sup.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_54695 (h0 : functor.add_const (cancel_comm_monoid_with_zero (finset linarith.comp)) (finset name)) : @unique_factorization_monoid.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (finset.{0} linarith.comp)) (finset.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_54696 (h0 : list (denumerable (has_norm to_additive.value_type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54697 (h0 : functor.add_const (topological_space (add_cancel_monoid pos)) name) : @totally_disconnected_space.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_54698 (h0 : complete_lattice (semigroup (finset (finset (ring (has_neg (ring linarith.comp))))))) : is_compactly_generated (semigroup (finset (finset (ring (has_neg (ring linarith.comp)))))) := sorry --non-trivial
lemma new_lemma_54699 (h0 : add_group (has_one (semiring (has_top empty)))) : is_add_cyclic (has_one (semiring (has_top empty))) := sorry --non-trivial
lemma new_lemma_54700 (h0 : complete_lattice (ring (option empty))) : is_atomistic (ring (option empty)) := sorry --non-trivial
lemma new_lemma_54701 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (random_gen.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (random_gen.{0} empty))  := sorry --non-trivial
lemma new_lemma_54702 (h0 : function.extfun Type ring) : @is_domain.{0} (add_cancel_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} h0 (add_cancel_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_54703 (h0 : fin has_zero.zero) : @is_add_cyclic.{0} (add_comm_monoid.{0} real) (@matrix.vec_empty.{0} (add_group.{0} (add_comm_monoid.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_54704 (h0 : list (add_cancel_monoid (finset pos))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54705 (h0 : complete_lattice (div_inv_monoid (random_gen char))) : is_compactly_generated (div_inv_monoid (random_gen char)) := sorry --non-trivial
lemma new_lemma_54706 (h0 : functor.comp complete_lattice has_add name) : @is_compactly_generated.{0} (has_add.{0} name) (@functor.comp.run.{0 0 0} complete_lattice.{0} has_add.{0} name h0)  := sorry --non-trivial
lemma new_lemma_54707 (h0 : ordered_add_comm_monoid (has_pos_part (has_pos_part (ring pos)))) : archimedean (has_pos_part (has_pos_part (ring pos))) := sorry --non-trivial
lemma new_lemma_54708 (h7 : complete_lattice (comm_ring fun_info)) : is_compactly_generated (comm_ring fun_info) := sorry --non-trivial
lemma new_lemma_54709 (h0 : functor.add_const (topological_space (has_dist unsigned)) congr_arg_kind) : @totally_disconnected_space.{0} (has_dist.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_dist.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_54710 (h0 : functor.add_const (uniform_space (finset linarith.comp)) pos) : @complete_space.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (finset.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_54711 (h0 : uniform_space (boolean_algebra.core (has_pos_part Type))) : complete_space (boolean_algebra.core (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_54712 (h0 : topological_space (normed_lattice_add_comm_group (has_neg Type))) : discrete_topology (normed_lattice_add_comm_group (has_neg Type)) := sorry --non-trivial
lemma new_lemma_54713 (h1 : topological_space (uniform_space linarith.comp_source)) : t0_space (uniform_space linarith.comp_source) := sorry --non-trivial
lemma new_lemma_54714 (h0 : group (has_norm (has_nnnorm (with_zero char)))) : is_cyclic (has_norm (has_nnnorm (with_zero char))) := sorry --non-trivial
lemma new_lemma_54715 (h0 : uniform_space (ordered_comm_ring (has_neg (ordered_comm_monoid pos)))) : complete_space (ordered_comm_ring (has_neg (ordered_comm_monoid pos))) := sorry --non-trivial
lemma new_lemma_54716 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (semigroup.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (semigroup.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_54717 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring pos)) (option name)) : @discrete_topology.{0} (canonically_ordered_comm_semiring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_comm_semiring.{0} pos)) (option.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_54718 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_54719 (h0 : group (uniform_space linarith.comp_source)) : is_cyclic (uniform_space linarith.comp_source) := sorry --non-trivial
lemma new_lemma_54720 (h0 : measurable_space (has_lt char)) (h1 : filter (has_lt char)) : filter.is_measurably_generated h1 := sorry --non-trivial
lemma new_lemma_54721 (h0 : group (linear_ordered_add_comm_group (has_norm fun_info))) : group.fg (linear_ordered_add_comm_group (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_54722 (h0 : topological_space (comm_semigroup (has_neg name))) : path_connected_space (comm_semigroup (has_neg name)) := sorry --non-trivial
lemma new_lemma_54723 (h0 : topological_space (ring (option (option (option (option empty)))))) : preconnected_space (ring (option (option (option (option empty))))) := sorry --non-trivial
lemma new_lemma_54724 (h0 : group (finset (has_neg (has_add (mul_one_class (has_neg (has_add Type))))))) : group.fg (finset (has_neg (has_add (mul_one_class (has_neg (has_add Type)))))) := sorry --non-trivial
lemma new_lemma_54725 (h0 : topological_space (generalized_boolean_algebra (sub_neg_monoid pos))) : normal_space (generalized_boolean_algebra (sub_neg_monoid pos)) := sorry --non-trivial
lemma new_lemma_54726 (h0 : functor.comp topological_space canonically_ordered_comm_semiring ennreal) : @totally_separated_space.{0} (canonically_ordered_comm_semiring.{0} ennreal) (@functor.comp.run.{0 0 0} topological_space.{0} canonically_ordered_comm_semiring.{0} ennreal h0)  := sorry --non-trivial
lemma new_lemma_54727 (h0 : functor.add_const (finset (generalized_boolean_algebra pos)) Type) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54728 (h0 : functor.add_const (function.extfun Type topological_space) Type) : @discrete_topology.{0} (add_cancel_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) Type h0) (add_cancel_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54729 (h0 : filter (has_union unsigned)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_54730 (h0 : topological_space (has_neg_part ennreal)) : preirreducible_space (has_neg_part ennreal) := sorry --non-trivial
lemma new_lemma_54731 (h0 : monoid (has_union (semiring (semiring empty)))) : monoid.fg (has_union (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_54732 (h0 : functor.add_const (ordered_add_comm_monoid (boolean_algebra linarith.comp)) name) : @archimedean.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (boolean_algebra.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_54733 (h0 : group (has_nndist (has_to_string name))) : group.fg (has_nndist (has_to_string name)) := sorry --non-trivial
lemma new_lemma_54734 (h0 : not (group (with_bot num) -> false)) : @is_simple_group.{0} (with_bot.{0} num) (@classical.by_contradiction'.{1} (group.{0} (with_bot.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_54735 (h0 : uniform_space (has_Inf (has_Inf (has_Inf (has_Inf (has_Inf (has_add real))))))) : separated_space (has_Inf (has_Inf (has_Inf (has_Inf (has_Inf (has_add real)))))) := sorry --non-trivial
lemma new_lemma_54736 (h0 : complete_lattice (has_inter congr_arg_kind)) : is_compactly_generated (has_inter congr_arg_kind) := sorry --non-trivial
lemma new_lemma_54737 (h0 : functor.add_const (function.extfun Type list) pos) : palindrome (function.extfun_app (functor.add_const.run h0) (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_54738 (h0 : ring (comm_group (has_add Type))) : rank_condition (comm_group (has_add Type)) := sorry --non-trivial
lemma new_lemma_54739 (h0 : monoid (normed_group (has_inv (has_norm fun_info)))) : monoid.fg (normed_group (has_inv (has_norm fun_info))) := sorry --non-trivial
lemma new_lemma_54740 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @unique_factorization_monoid.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 cancel_comm_monoid_with_zero.{0}) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54741 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (generalized_boolean_algebra.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (generalized_boolean_algebra.{0} real))  := sorry --non-trivial
lemma new_lemma_54742 (h1 : not (add_group (normed_group string_imp) -> false)) : @is_add_cyclic.{0} (normed_group.{0} string_imp) (@classical.by_contradiction'.{1} (add_group.{0} (normed_group.{0} string_imp)) h1)  := sorry --non-trivial
lemma new_lemma_54743 (h0 : functor.add_const (topological_space (has_to_string pos)) Type) : @topological_space.separable_space.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (has_to_string.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_54744 (h1 : has_mem.mem (complete_semilattice_Sup congr_arg_kind) has_emptyc.emptyc) : @separated_space.{0} (complete_semilattice_Sup.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type uniform_space.{0} (complete_semilattice_Sup.{0} congr_arg_kind) h1)  := sorry --non-trivial
lemma new_lemma_54745 (h0 : functor.add_const (monoid (has_Inf linarith.comp)) linarith.comp) : @monoid.fg.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 0} (monoid.{0} (has_Inf.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_54746 (h0 : functor.add_const (topological_space (ring linarith.comp)) pos) : @t0_space.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_54747 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (has_dist.{0} ennreal) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_dist.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_54748 (h0 : functor.add_const (list (has_pos_part pos)) (has_neg name)) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54749 (h0 : add_group (dlist (has_nnnorm (boolean_algebra.core to_additive.value_type)))) : is_add_cyclic (dlist (has_nnnorm (boolean_algebra.core to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_54750 (h0 : group (has_neg (ring Type))) : group.fg (has_neg (ring Type)) := sorry --non-trivial
lemma new_lemma_54751 (h0 : uniform_space (with_one (semiring unsigned))) : separated_space (with_one (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_54752 (h0 : topological_space (comm_group (has_neg_part (option (option (has_to_string pos)))))) : t0_space (comm_group (has_neg_part (option (option (has_to_string pos))))) := sorry --non-trivial
lemma new_lemma_54753 (h0 : set (has_compl (mul_one_class linarith.comp_source))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_54754 (h0 : add_group (linear_ordered_comm_group_with_zero (has_nnnorm reducibility_hints))) : is_add_cyclic (linear_ordered_comm_group_with_zero (has_nnnorm reducibility_hints)) := sorry --non-trivial
lemma new_lemma_54755 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (simple_graph.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (simple_graph.{0} name))  := sorry --non-trivial
lemma new_lemma_54756 (h0 : functor.add_const (ring (finset Type)) (has_pos_part linarith.comp)) : @is_domain.{1} (finset.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (finset.{1} Type)) (has_pos_part.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_54757 (h0 : functor.add_const (topological_space (has_neg Type)) linarith.comp) : @irreducible_space.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_neg.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_54758 (h1 : add_group (mul_one_class (normed_field linarith.ineq))) : is_add_cyclic (mul_one_class (normed_field linarith.ineq)) := sorry --non-trivial
lemma new_lemma_54759 (h0 : functor.add_const (list (has_Inf linarith.comp)) (has_Inf Type)) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54760 (h2 : ring (nondiscrete_normed_field string.iterator_imp)) : strong_rank_condition (nondiscrete_normed_field string.iterator_imp) := sorry --non-trivial
lemma new_lemma_54761 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (has_bot.{0} real) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (has_bot.{0} real))  := sorry --non-trivial
lemma new_lemma_54762 (h0 : functor.add_const (add_group (add_cancel_monoid name)) (has_add name)) : @is_add_cyclic.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (add_group.{0} (add_cancel_monoid.{0} name)) (has_add.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_54763 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (semigroup.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type monoid.{0} h0 (semigroup.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_54764 (h0 : ordered_add_comm_monoid unsigned) : archimedean unsigned := sorry --non-trivial
lemma new_lemma_54765 (h0 : group (normed_lattice_add_comm_group (has_Inf linarith.comp))) : is_cyclic (normed_lattice_add_comm_group (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_54766 (h0 : functor.add_const (function.extfun Type group) Type) : @group.fg.{0} (has_Inf.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type group.{0}) Type h0) (has_Inf.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54767 (h0 : ordered_add_comm_monoid (has_pos_part (ring pos))) : archimedean (has_pos_part (ring pos)) := sorry --non-trivial
lemma new_lemma_54768 (h0 : has_add to_additive.value_type) (h1 : not (has_le to_additive.value_type -> false)) (h2 : to_additive.value_type) : @add_le_cancellable.{0} to_additive.value_type h0 (@classical.by_contradiction'.{1} (has_le.{0} to_additive.value_type) h1) h2  := sorry --non-trivial
lemma new_lemma_54769 (h0 : functor.add_const (group (has_neg ennreal)) (option ennreal)) : @is_simple_group.{0} (has_neg.{0} ennreal) (@functor.add_const.run.{0 0} (group.{0} (has_neg.{0} ennreal)) (option.{0} ennreal) h0)  := sorry --non-trivial
lemma new_lemma_54770 (h0 : topological_space (add_group (semiring (has_norm empty)))) : irreducible_space (add_group (semiring (has_norm empty))) := sorry --non-trivial
lemma new_lemma_54771 (h0 : group (has_nndist (semiring (semiring (semiring congr_arg_kind))))) : normalizer_condition (has_nndist (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_54772 (h4 : set (add_comm_semigroup std_gen -> linarith.ineq)) : set.separates_points h4 := sorry --non-trivial
lemma new_lemma_54773 (h0 : functor.add_const (topological_space pos) unsigned) : @discrete_topology.{0} pos (@functor.add_const.run.{0 0} (topological_space.{0} pos) unsigned h0)  := sorry --non-trivial
lemma new_lemma_54774 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (add_cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_54775 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @has_exists_mul_of_le.{0} (finset.{0} name) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_comm_monoid.{0}) (finset.{0} name))  := sorry --non-trivial
lemma new_lemma_54776 (h0 : add_group (has_compl (random_gen linarith.comp_source))) : is_add_cyclic (has_compl (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_54777 (h0 : group (complete_distrib_lattice (add_comm_monoid environment.implicit_infer_kind))) : is_cyclic (complete_distrib_lattice (add_comm_monoid environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_54778 (h0 : uniform_space (has_neg_part (comm_group (has_neg_part name)))) : complete_space (has_neg_part (comm_group (has_neg_part name))) := sorry --non-trivial
lemma new_lemma_54779 (h0 : group (add_cancel_comm_monoid char)) : is_cyclic (add_cancel_comm_monoid char) := sorry --non-trivial
lemma new_lemma_54780 (h0 : not (function.extfun Type cancel_comm_monoid_with_zero -> false)) : @unique_factorization_monoid.{0} (has_top.{0} num) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type cancel_comm_monoid_with_zero.{0}) h0) (has_top.{0} num))  := sorry --non-trivial
lemma new_lemma_54781 (h0 : ring (distrib_lattice (random_gen linarith.ineq))) : is_domain (distrib_lattice (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_54782 (h0 : topological_space (has_compl (mul_one_class (mul_one_class string.iterator_imp)))) : path_connected_space (has_compl (mul_one_class (mul_one_class string.iterator_imp))) := sorry --non-trivial
lemma new_lemma_54783 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (metric_space.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (metric_space.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54784 (h0 : ring (has_compl (has_nnnorm (has_nnnorm char)))) : strong_rank_condition (has_compl (has_nnnorm (has_nnnorm char))) := sorry --non-trivial
lemma new_lemma_54785 (h0 : function.extfun Type (functor.comp group add_cancel_monoid)) : @is_cyclic.{0} (add_cancel_monoid.{0} name) (@functor.comp.run.{0 0 0} group.{0} add_cancel_monoid.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} group.{0} add_cancel_monoid.{0}) h0 name))  := sorry --non-trivial
lemma new_lemma_54786 (h0 : not (uniform_space (option num) -> false)) : @complete_space.{0} (option.{0} num) (@classical.by_contradiction'.{1} (uniform_space.{0} (option.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_54787 (h0 : uniform_space (has_norm (has_top fun_info))) : complete_space (has_norm (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_54788 (h0 : not (function.extfun Type complete_lattice -> false)) : @is_compactly_generated.{0} (non_assoc_semiring.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (non_assoc_semiring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54789 (h0 : functor.add_const (topological_space (has_zero Type)) (measurable_space.dynkin_system linarith.comp)) : @path_connected_space.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_zero.{1} Type)) (measurable_space.dynkin_system.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_54790 (h0 : fin has_zero.zero) : @separated_space.{0} (complete_distrib_lattice.{0} name) (@matrix.vec_empty.{0} (uniform_space.{0} (complete_distrib_lattice.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_54791 (h0 : function.extfun Type ring) : @rank_condition.{0} (has_one.{0} num) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_one.{0} num))  := sorry --non-trivial
lemma new_lemma_54792 (h0 : semiring (semigroup (option (option (option (option (option ennreal))))))) : is_noetherian_ring (semigroup (option (option (option (option (option ennreal)))))) := sorry --non-trivial
lemma new_lemma_54793 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (power_series.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (power_series.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_54794 (h0 : functor.add_const (cancel_comm_monoid_with_zero (complete_distrib_lattice name)) name) : @unique_factorization_monoid.{0} (complete_distrib_lattice.{0} name) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (complete_distrib_lattice.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_54795 (h0 : filter (canonically_ordered_comm_semiring (boolean_algebra.core (finset pos)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_54796 (h0 : list (topological_space (has_nnnorm char))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_54797 (h0 : functor.add_const (function.extfun Type topological_space) name) : @regular_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) name h0) (boolean_algebra.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_54798 (h0 : functor.add_const (filter (semigroup name)) Type) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54799 (h0 : functor.add_const (topological_space (complete_distrib_lattice pos)) (has_neg (has_neg linarith.comp))) : @t1_space.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} pos)) (has_neg.{0} (has_neg.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_54800 (h0 : functor.add_const (group (ordered_comm_ring Type)) pos) : @is_cyclic.{1} (ordered_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (ordered_comm_ring.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_54801 (h0 : topological_space (has_nndist (ring pos))) : totally_separated_space (has_nndist (ring pos)) := sorry --non-trivial
lemma new_lemma_54802 (h0 : complete_lattice (has_neg (option (option (option empty))))) : is_compactly_generated (has_neg (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_54803 (h0 : functor.comp ring add_comm_monoid name) : @is_domain.{0} (add_comm_monoid.{0} name) (@functor.comp.run.{0 0 0} ring.{0} add_comm_monoid.{0} name h0)  := sorry --non-trivial
lemma new_lemma_54804 (h0 : monoid (has_nndist (has_add (has_add (has_add (has_add (has_add linarith.comp))))))) : monoid.fg (has_nndist (has_add (has_add (has_add (has_add (has_add linarith.comp)))))) := sorry --non-trivial
lemma new_lemma_54805 (h0 : functor.add_const (function.extfun (Type 1) add_monoid) (ring environment.implicit_infer_kind)) : @add_monoid.fg.{1} (semigroup.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_monoid.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) add_monoid.{1}) (ring.{0} environment.implicit_infer_kind) h0) (semigroup.{1} Type))  := sorry --non-trivial
lemma new_lemma_54806 (h0 : is_empty char) (h1 : char) : is_empty.elim' h0 h1 := sorry --non-trivial
lemma new_lemma_54807 (h0 : functor.add_const (finset (has_neg environment.implicit_infer_kind)) name) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54808 (h0 : functor.comp filter boolean_algebra.core name) : countable_Inter_filter (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_54809 (h0 : uniform_space (boolean_algebra (normed_linear_ordered_group (has_pos_part linarith.comp)))) : complete_space (boolean_algebra (normed_linear_ordered_group (has_pos_part linarith.comp))) := sorry --non-trivial
lemma new_lemma_54810 (h0 : not (complete_lattice (distrib (has_div (has_nnnorm (distrib enat)))) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (distrib.{0} (has_div.{0} (has_nnnorm.{0} (distrib.{0} enat)))) (@classical.by_contradiction'.{1} (complete_lattice.{0} (distrib.{0} (has_div.{0} (has_nnnorm.{0} (distrib.{0} enat))))) h0)  := sorry --non-trivial
lemma new_lemma_54811 (h0 : add_group (semi_normed_comm_ring (has_ssubset reducibility_hints))) : is_add_cyclic (semi_normed_comm_ring (has_ssubset reducibility_hints)) := sorry --non-trivial
lemma new_lemma_54812 (h0 : topological_space (semigroup (finset (boolean_algebra (has_neg Type))))) : path_connected_space (semigroup (finset (boolean_algebra (has_neg Type)))) := sorry --non-trivial
lemma new_lemma_54813 (h0 : function.extfun Type uniform_space) : @complete_space.{0} linarith.comp (@function.extfun_app.{2 1} Type uniform_space.{0} h0 linarith.comp)  := sorry --non-trivial
lemma new_lemma_54814 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (canonically_ordered_monoid.{0} pos) (@function.extfun_app.{2 1} Type add_group.{0} h0 (canonically_ordered_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_54815 (h0 : not (complete_lattice (random_gen reducibility_hints) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (random_gen.{0} reducibility_hints) (@classical.by_contradiction'.{1} (complete_lattice.{0} (random_gen.{0} reducibility_hints)) h0)  := sorry --non-trivial
lemma new_lemma_54816 (h0 : topological_space (left_cancel_semigroup (semiring (semiring empty)))) : t1_space (left_cancel_semigroup (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_54817 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (ordered_cancel_add_comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_cancel_add_comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_54818 (h0 : list (add_cancel_monoid (has_to_string linarith.comp))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_54819 (h0 : functor.add_const (topological_space (complete_distrib_lattice pos)) environment.implicit_infer_kind) : @regular_space.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54820 (h0 : ring ennreal) : is_principal_ideal_ring ennreal := sorry --non-trivial
lemma new_lemma_54821 (h0 : topological_space (complete_distrib_lattice (option (option pos)))) : regular_space (complete_distrib_lattice (option (option pos))) := sorry --non-trivial
lemma new_lemma_54822 (h0 : topological_space (generalized_boolean_algebra (sub_neg_monoid name))) : discrete_topology (generalized_boolean_algebra (sub_neg_monoid name)) := sorry --non-trivial
lemma new_lemma_54823 (h0 : group (as_linear_order (option unsigned))) : is_cyclic (as_linear_order (option unsigned)) := sorry --non-trivial
lemma new_lemma_54824 (h0 : semiring (monoid empty)) : is_noetherian_ring (monoid empty) := sorry --non-trivial
lemma new_lemma_54825 (h0 : function.extfun Type (functor.comp complete_lattice has_nndist)) : @is_atomistic.{0} (has_nndist.{0} unsigned) (@functor.comp.run.{0 0 0} complete_lattice.{0} has_nndist.{0} unsigned (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} complete_lattice.{0} has_nndist.{0}) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_54826 (h0 : functor.add_const (ordered_add_comm_monoid (has_neg Type)) unsigned) : @archimedean.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (ordered_add_comm_monoid.{1} (has_neg.{1} Type)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_54827 (h0 : complete_lattice (has_neg_part (comm_group (has_add unsigned)))) : is_atomistic (has_neg_part (comm_group (has_add unsigned))) := sorry --non-trivial
lemma new_lemma_54828 (h0 : function.extfun Type (functor.add_const (topological_space (has_star unsigned)))) : @irreducible_space.{0} (has_star.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_star.{0} unsigned)) congr_arg_kind (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (has_star.{0} unsigned))) h0 congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54829 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (metric_space.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (metric_space.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54830 (h0 : topological_space (boolean_algebra (has_Inf Type))) : totally_disconnected_space (boolean_algebra (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_54831 (h0 : topological_space (has_add linarith.comp)) : path_connected_space (has_add linarith.comp) := sorry --non-trivial
lemma new_lemma_54832 (h0 : ring (has_compl linarith.comp)) : is_domain (has_compl linarith.comp) := sorry --non-trivial
lemma new_lemma_54833 (h0 : function.extfun Type (functor.add_const Prop)) : functor.add_const.run (function.extfun_app h0 ennreal) := sorry --non-trivial
lemma new_lemma_54834 (h0 : add_group (has_nnnorm (has_nnnorm reducibility_hints))) : is_add_cyclic (has_nnnorm (has_nnnorm reducibility_hints)) := sorry --non-trivial
lemma new_lemma_54835 (h0 : ring (ring (has_neg Type))) : is_principal_ideal_ring (ring (has_neg Type)) := sorry --non-trivial
lemma new_lemma_54836 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (has_Inf.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_Inf.{0} name))  := sorry --non-trivial
lemma new_lemma_54837 (h0 : functor.add_const (topological_space (free_add_monoid empty)) unsigned) : @totally_separated_space.{0} (free_add_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (free_add_monoid.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_54838 (h0 : has_mul (mul_one_class (mul_one_class (mul_one_class (mul_one_class enat))))) (h1 : mul_one_class (mul_one_class (mul_one_class (mul_one_class enat)))) : is_right_regular h1 := sorry --non-trivial
lemma new_lemma_54839 (h0 : complete_lattice (has_top (random_gen (has_nnnorm (has_nnnorm to_additive.value_type))))) : is_compactly_generated (has_top (random_gen (has_nnnorm (has_nnnorm to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_54840 (h0 : functor.add_const (function.extfun Type topological_space) Type) : @topological_space.separable_space.{0} (comm_group.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) Type h0) (comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_54841 (h0 : complete_lattice (add_right_cancel_monoid (option empty))) : is_atomistic (add_right_cancel_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_54842 (h0 : functor.add_const (topological_space (has_nndist environment.implicit_infer_kind)) environment.implicit_infer_kind) : @locally_compact_space.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54843 (h0 : topological_space (normed_comm_ring (finset Type))) : irreducible_space (normed_comm_ring (finset Type)) := sorry --non-trivial
lemma new_lemma_54844 (h0 : uniform_space (has_to_string (finset (finset pos)))) : complete_space (has_to_string (finset (finset pos))) := sorry --non-trivial
lemma new_lemma_54845 (h0 : not (group (partial_order empty) -> false)) : @group.fg.{0} (partial_order.{0} empty) (@classical.by_contradiction'.{1} (group.{0} (partial_order.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_54846 (h0 : functor.add_const (list (pseudo_metric_space pos)) unsigned) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54847 (h0 : ring (add_comm_semigroup (mul_one_class reducibility_hints))) : strong_rank_condition (add_comm_semigroup (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_54848 (h0 : uniform_space (group_with_zero (option ennreal))) : complete_space (group_with_zero (option ennreal)) := sorry --non-trivial
lemma new_lemma_54849 (h1 : topological_space (has_top to_additive.value_type)) : totally_separated_space (has_top to_additive.value_type) := sorry --non-trivial
lemma new_lemma_54850 (h0 : uniform_space (linear_ordered_comm_ring (has_top empty))) : separated_space (linear_ordered_comm_ring (has_top empty)) := sorry --non-trivial
lemma new_lemma_54851 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @unique_factorization_monoid.{0} (has_neg.{0} pos) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 cancel_comm_monoid_with_zero.{0}) (has_neg.{0} pos))  := sorry --non-trivial
lemma new_lemma_54852 (h0 : topological_space (ring empty)) : t0_space (ring empty) := sorry --non-trivial
lemma new_lemma_54853 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_union.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_union.{0} num))  := sorry --non-trivial
lemma new_lemma_54854 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_54855 (h0 : has_mem.mem (has_norm fun_info) has_emptyc.emptyc) : @t0_space.{0} (has_norm.{0} fun_info) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_norm.{0} fun_info) h0)  := sorry --non-trivial
lemma new_lemma_54856 (h0 : functor.add_const (topological_space (add_cancel_monoid name)) (has_neg pos)) : @loc_path_connected_space.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} name)) (has_neg.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_54857 (h0 : ring (has_inv (random_gen (comm_ring (has_nnnorm to_additive.value_type))))) : rank_condition (has_inv (random_gen (comm_ring (has_nnnorm to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_54858 (h0 : group (boolean_algebra (finset Type))) : group.fg (boolean_algebra (finset Type)) := sorry --non-trivial
lemma new_lemma_54859 (h1 : uniform_space (uniform_space string_imp)) : complete_space (uniform_space string_imp) := sorry --non-trivial
lemma new_lemma_54860 (h0 : topological_space (add_comm_monoid (finset pos))) : totally_disconnected_space (add_comm_monoid (finset pos)) := sorry --non-trivial
lemma new_lemma_54861 (h0 : functor.add_const (ring (boolean_algebra pos)) Type) : @strong_rank_condition.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 1} (ring.{0} (boolean_algebra.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_54862 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @locally_compact_space.{0} (has_top.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) topological_space.{0}) (has_top.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54863 (h0 : functor.add_const (ordered_comm_monoid (canonically_ordered_monoid name)) linarith.comp) : @has_exists_mul_of_le.{0} (canonically_ordered_monoid.{0} name) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (canonically_ordered_monoid.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_54864 (h0 : ring (distrib (has_compl reducibility_hints))) : rank_condition (distrib (has_compl reducibility_hints)) := sorry --non-trivial
lemma new_lemma_54865 (h0 : functor.add_const (topological_space (ordered_comm_ring linarith.comp)) linarith.comp) : @irreducible_space.{0} (ordered_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_ring.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_54866 (h0 : functor.comp complete_lattice semigroup Type) : @is_compactly_generated.{1} (semigroup.{1} Type) (@functor.comp.run.{1 1 1} complete_lattice.{1} semigroup.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_54867 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t1_space.{0} (comm_group.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (comm_group.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_54868 (h0 : topological_space (has_add (has_Inf (has_neg (has_add name))))) : irreducible_space (has_add (has_Inf (has_neg (has_add name)))) := sorry --non-trivial
lemma new_lemma_54869 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (canonically_ordered_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_54870 (h0 : function.extfun (Type 1) ring) : @is_domain.{1} (canonically_ordered_comm_semiring.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} h0 (canonically_ordered_comm_semiring.{1} Type))  := sorry --non-trivial
lemma new_lemma_54871 (h0 : fin has_zero.zero) : @t0_space.{0} (ordered_comm_ring.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (ordered_comm_ring.{0} name))  := sorry --non-trivial
lemma new_lemma_54872 (h0 : uniform_space (has_bot (has_pos_part real))) : complete_space (has_bot (has_pos_part real)) := sorry --non-trivial
lemma new_lemma_54873 (h0 : functor.add_const Prop (ordered_comm_ring real)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_54874 (h0 : ring (semiring (random_gen (semiring num)))) : strong_rank_condition (semiring (random_gen (semiring num))) := sorry --non-trivial
lemma new_lemma_54875 (h0 : functor.add_const (add_group (add_cancel_monoid pos)) linarith.comp) : @is_add_cyclic.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (add_group.{0} (add_cancel_monoid.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_54876 (h0 : fin has_zero.zero) : @strong_rank_condition.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type ring.{0}) h0) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_54877 (h0 : topological_space (distrib ereal)) : totally_disconnected_space (distrib ereal) := sorry --non-trivial
lemma new_lemma_54878 (h0 : monoid (add_cancel_monoid (has_add unsigned))) : monoid.fg (add_cancel_monoid (has_add unsigned)) := sorry --non-trivial
lemma new_lemma_54879 (h1 : Prop -> Prop) (h2 : Exists (fun (x : Prop), h1 x)) : classical.some h2 := sorry --non-trivial
lemma new_lemma_54880 (h0 : functor.add_const (group (has_to_string pos)) name) : @normalizer_condition.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_to_string.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_54881 (h2 : ring (mul_one_class string.iterator_imp)) : is_domain (mul_one_class string.iterator_imp) := sorry --non-trivial
lemma new_lemma_54882 (h0 : uniform_space (normed_comm_ring (mul_zero_class name))) : separated_space (normed_comm_ring (mul_zero_class name)) := sorry --non-trivial
lemma new_lemma_54883 (h0 : ordered_comm_monoid (has_Inf (has_neg Type))) : has_exists_mul_of_le (has_Inf (has_neg Type)) := sorry --non-trivial
lemma new_lemma_54884 (h0 : functor.add_const (function.extfun (Type 1) group) pos) : @normalizer_condition.{1} (has_pos_part.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) pos h0) (has_pos_part.{1} Type))  := sorry --non-trivial
lemma new_lemma_54885 (h0 : uniform_space (plift (metric_space unsigned))) : separated_space (plift (metric_space unsigned)) := sorry --non-trivial
lemma new_lemma_54886 (h0 : functor.add_const (topological_space (add_left_cancel_semigroup unsigned)) empty) : @t1_space.{0} (add_left_cancel_semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (add_left_cancel_semigroup.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_54887 (h0 : filter (has_inv (random_gen (random_gen fun_info)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_54888 (h0 : topological_space (has_nnnorm char)) (h1 : add_group (has_nnnorm char)) : topological_add_group (has_nnnorm char) := sorry --non-trivial
lemma new_lemma_54889 (h0 : function.extfun (Type 1) topological_space) : @totally_disconnected_space.{1} (ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_54890 (h0 : uniform_space (has_zero Type)) : separated_space (has_zero Type) := sorry --non-trivial
lemma new_lemma_54891 (h0 : topological_space (dlist char)) : totally_disconnected_space (dlist char) := sorry --non-trivial
lemma new_lemma_54892 (h0 : functor.add_const (topological_space (normed_comm_ring unsigned)) (has_to_string Type)) : @preconnected_space.{0} (normed_comm_ring.{0} unsigned) (@functor.add_const.run.{0 1} (topological_space.{0} (normed_comm_ring.{0} unsigned)) (has_to_string.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_54893 (h0 : functor.add_const (cancel_comm_monoid_with_zero (canonically_ordered_comm_semiring Type)) linarith.comp) : @unique_factorization_monoid.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (cancel_comm_monoid_with_zero.{1} (canonically_ordered_comm_semiring.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_54894 (h0 : functor.add_const (topological_space (ring Type)) name) : @topological_space.separable_space.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (ring.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_54895 (h0 : group (bin_tree num)) : group.fg (bin_tree num) := sorry --non-trivial
lemma new_lemma_54896 (h0 : functor.add_const (finset (boolean_algebra.core linarith.comp)) pos) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54897 (h0 : topological_space (normed_comm_ring (has_add Type))) : t0_space (normed_comm_ring (has_add Type)) := sorry --non-trivial
lemma new_lemma_54898 (h2 : ring (has_div string_imp)) : is_domain (has_div string_imp) := sorry --non-trivial
lemma new_lemma_54899 (h0 : functor.add_const (add_monoid (boolean_algebra name)) linarith.comp) : @add_monoid.fg.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (add_monoid.{0} (boolean_algebra.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_54900 (h1 : has_mem.mem (has_top to_additive.value_type) has_emptyc.emptyc) : @strong_rank_condition.{0} (has_top.{0} to_additive.value_type) (@finset.pi.empty.{1 0} Type ring.{0} (has_top.{0} to_additive.value_type) h1)  := sorry --non-trivial
lemma new_lemma_54901 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_pos_part pos)) linarith.comp) : @unique_factorization_monoid.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (has_pos_part.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_54902 (h0 : complete_lattice (mul_zero_class pos)) : is_compactly_generated (mul_zero_class pos) := sorry --non-trivial
lemma new_lemma_54903 (h0 : filter (add_right_cancel_monoid num)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_54904 (h0 : topological_space (semiring (has_norm empty))) : discrete_topology (semiring (has_norm empty)) := sorry --non-trivial
lemma new_lemma_54905 (h0 : ring (has_neg (option (option pos)))) : strong_rank_condition (has_neg (option (option pos))) := sorry --non-trivial
lemma new_lemma_54906 (h0 h1 : multiset (has_lt std_gen)) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_54907 (h0 : functor.add_const (add_group (ring linarith.comp)) (has_to_string linarith.comp)) : @is_add_cyclic.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_group.{0} (ring.{0} linarith.comp)) (has_to_string.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_54908 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (add_comm_monoid num)) := sorry --non-trivial
lemma new_lemma_54909 (h0 : complete_lattice (has_compl (has_nnnorm fun_info))) : complete_lattice.is_Sup_finite_compact (has_compl (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_54910 (h0 : topological_space (ordered_comm_ring (has_neg pos))) : discrete_topology (ordered_comm_ring (has_neg pos)) := sorry --non-trivial
lemma new_lemma_54911 (h0 : monoid (monoid num)) : monoid.fg (monoid num) := sorry --non-trivial
lemma new_lemma_54912 (h0 : functor.add_const (topological_space (boolean_algebra pos)) linarith.comp) : @t1_space.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_54913 (h0 : list (has_neg (has_nndist pos))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_54914 (h0 : functor.add_const (cancel_comm_monoid_with_zero (preorder empty)) empty) : @unique_factorization_monoid.{0} (preorder.{0} empty) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (preorder.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_54915 (h0 : ordered_add_comm_monoid (canonically_ordered_comm_semiring (option (option (option empty))))) : archimedean (canonically_ordered_comm_semiring (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_54916 (h0 : uniform_space (mul_zero_class (has_neg_part Type))) : complete_space (mul_zero_class (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_54917 (h0 : topological_space (has_top (has_norm fun_info))) : locally_compact_space (has_top (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_54918 (h0 : topological_space (comm_monoid num)) : totally_disconnected_space (comm_monoid num) := sorry --non-trivial
lemma new_lemma_54919 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (with_one.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (with_one.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_54920 (h0 : functor.comp ring boolean_algebra name) : @rank_condition.{0} (boolean_algebra.{0} name) (@functor.comp.run.{0 0 0} ring.{0} boolean_algebra.{0} name h0)  := sorry --non-trivial
lemma new_lemma_54921 (h0 : decidable_eq pos) (h1 : equiv.perm pos) : equiv.perm.is_swap h1 := sorry --non-trivial
lemma new_lemma_54922 (h0 : topological_space (topological_space (has_nnnorm linarith.comp_source))) : t0_space (topological_space (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_54923 (h0 : not (group (distrib_lattice to_additive.value_type) -> false)) : @is_cyclic.{0} (distrib_lattice.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (group.{0} (distrib_lattice.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_54924 (h0 : topological_space (has_ssubset to_additive.value_type)) : t0_space (has_ssubset to_additive.value_type) := sorry --non-trivial
lemma new_lemma_54925 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (has_nndist.{0} ennreal) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (has_nndist.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_54926 (h0 : functor.add_const (complete_lattice (has_pos_part Type)) (has_neg linarith.comp)) : @complete_lattice.is_Sup_finite_compact.{1} (has_pos_part.{1} Type) (@functor.add_const.run.{1 0} (complete_lattice.{1} (has_pos_part.{1} Type)) (has_neg.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_54927 (h0 : functor.add_const (topological_space (has_zero pos)) name) : @normal_space.{0} (has_zero.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_54928 (h0 : group (canonically_linear_ordered_monoid real)) : normalizer_condition (canonically_linear_ordered_monoid real) := sorry --non-trivial
lemma new_lemma_54929 (h0 : uniform_space (simple_graph linarith.comp_source)) : complete_space (simple_graph linarith.comp_source) := sorry --non-trivial
lemma new_lemma_54930 (h1 : add_group nat) : is_add_cyclic nat := sorry --non-trivial
lemma new_lemma_54931 (h0 : functor.add_const (topological_space (option empty)) empty) : @discrete_topology.{0} (option.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (option.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_54932 (h0 : add_group (has_le fun_info)) : is_add_cyclic (has_le fun_info) := sorry --non-trivial
lemma new_lemma_54933 (h0 : group (canonically_ordered_monoid (has_Inf (sub_neg_monoid real)))) : group.fg (canonically_ordered_monoid (has_Inf (sub_neg_monoid real))) := sorry --non-trivial
lemma new_lemma_54934 (h0 : function.extfun Type group) : @group.fg.{0} (has_nndist.{0} ennreal) (@function.extfun_app.{2 1} Type group.{0} h0 (has_nndist.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_54935 (h0 : complete_lattice (ordered_comm_ring (has_neg name))) : complete_lattice.is_Sup_finite_compact (ordered_comm_ring (has_neg name)) := sorry --non-trivial
lemma new_lemma_54936 (h0 : function.extfun Type topological_space) : @t1_space.{0} (normed_comm_ring.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_comm_ring.{0} name))  := sorry --non-trivial
lemma new_lemma_54937 (h0 : list (comm_group (has_nndist name))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_54938 (h0 : functor.add_const (topological_space (partial_order unsigned)) unsigned) : @totally_disconnected_space.{0} (partial_order.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (partial_order.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_54939 (h0 : functor.add_const (complete_lattice (has_nndist Type)) environment.implicit_infer_kind) : @is_atomistic.{1} (has_nndist.{1} Type) (@functor.add_const.run.{1 0} (complete_lattice.{1} (has_nndist.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54940 (h0 : functor.add_const (ring (has_zero pos)) (ordered_ring Type)) : @is_domain.{0} (has_zero.{0} pos) (@functor.add_const.run.{0 1} (ring.{0} (has_zero.{0} pos)) (ordered_ring.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_54941 (h0 : function.extfun (finset Type) (has_mem.mem (add_group congr_arg_kind))) : @complete_space.{0} (add_group.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type uniform_space.{0} (add_group.{0} congr_arg_kind) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (add_group.{0} congr_arg_kind)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_54942 (h0 : functor.add_const (function.extfun Type uniform_space) name) : @separated_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) name h0) (semigroup.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_54943 (h0 : topological_space (has_top (semiring (has_norm empty)))) : normal_space (has_top (semiring (has_norm empty))) := sorry --non-trivial
lemma new_lemma_54944 (h0 : topological_space (has_zero (has_neg_part (has_nndist linarith.comp)))) : totally_separated_space (has_zero (has_neg_part (has_nndist linarith.comp))) := sorry --non-trivial
lemma new_lemma_54945 (h0 : add_group (left_cancel_monoid (option unsigned))) : is_add_cyclic (left_cancel_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_54946 (h0 : not (function.extfun Type topological_space -> false)) : @totally_separated_space.{0} (add_group.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (add_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54947 (h0 : ring (option (cancel_monoid (option (has_to_string name))))) : is_principal_ideal_ring (option (cancel_monoid (option (has_to_string name)))) := sorry --non-trivial
lemma new_lemma_54948 (h0 : functor.add_const (semiring (has_nndist linarith.comp)) (has_pos_part linarith.comp)) : @is_noetherian_ring.{0} (has_nndist.{0} linarith.comp) (@functor.add_const.run.{0 0} (semiring.{0} (has_nndist.{0} linarith.comp)) (has_pos_part.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_54949 (h0 : complete_lattice (boolean_algebra Type)) : is_atomistic (boolean_algebra Type) := sorry --non-trivial
lemma new_lemma_54950 (h1 : not (complete_lattice (comm_ring reducibility_hints) -> false)) : @is_compactly_generated.{0} (comm_ring.{0} reducibility_hints) (@classical.by_contradiction'.{1} (complete_lattice.{0} (comm_ring.{0} reducibility_hints)) h1)  := sorry --non-trivial
lemma new_lemma_54951 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_bot.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_bot.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54952 (h0 : cancel_comm_monoid_with_zero (metric_space (semiring empty))) : unique_factorization_monoid (metric_space (semiring empty)) := sorry --non-trivial
lemma new_lemma_54953 (h0 : function.extfun Type group) : @is_cyclic.{0} (has_to_string.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (has_to_string.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_54954 (h0 : ring (has_dist congr_arg_kind)) : is_domain (has_dist congr_arg_kind) := sorry --non-trivial
lemma new_lemma_54955 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (has_add.{0} unsigned) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (has_add.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_54956 (h0 : functor.add_const (topological_space (cancel_monoid name)) Type) : @irreducible_space.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (cancel_monoid.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_54957 (h0 : functor.add_const (ordered_comm_monoid (add_comm_monoid linarith.comp)) environment.implicit_infer_kind) : @has_exists_mul_of_le.{0} (add_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (add_comm_monoid.{0} linarith.comp)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_54958 (h0 : topological_space (finset (finset environment.implicit_infer_kind))) : topological_space.separable_space (finset (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_54959 (h0 : topological_space (partial_order empty)) : totally_separated_space (partial_order empty) := sorry --non-trivial
lemma new_lemma_54960 (h0 : has_mem.mem group has_emptyc.emptyc) : @group.fg.{0} (with_bot.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) group.{0} h0) (with_bot.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_54961 (h0 : functor.add_const (group (has_nndist Type)) Type) : @normalizer_condition.{1} (has_nndist.{1} Type) (@functor.add_const.run.{1 1} (group.{1} (has_nndist.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_54962 (h0 : complete_lattice (with_one (random_gen (has_inv linarith.comp_source)))) : is_compactly_generated (with_one (random_gen (has_inv linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_54963 (h0 : ordered_add_comm_monoid (ordered_comm_monoid (finset pos))) : archimedean (ordered_comm_monoid (finset pos)) := sorry --non-trivial
lemma new_lemma_54964 (h0 : complete_lattice (option (mul_zero_class congr_arg_kind))) : is_atomistic (option (mul_zero_class congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_54965 (h0 : ring (has_to_string (semigroup name))) : rank_condition (has_to_string (semigroup name)) := sorry --non-trivial
lemma new_lemma_54966 (h0 : function.extfun (Type 1) group) : @group.fg.{1} (finset.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} h0 (finset.{1} Type))  := sorry --non-trivial
lemma new_lemma_54967 (h0 : topological_space (has_Sup (option empty))) : irreducible_space (has_Sup (option empty)) := sorry --non-trivial
lemma new_lemma_54968 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (has_add.{0} (boolean_algebra.core.{0} linarith.comp)) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_add.{0} (boolean_algebra.core.{0} linarith.comp)))  := sorry --non-trivial
lemma new_lemma_54969 (h0 : topological_space (has_append (comm_ring reducibility_hints))) : t0_space (has_append (comm_ring reducibility_hints)) := sorry --non-trivial
lemma new_lemma_54970 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_54971 (h0 : function.extfun Type group) : @normalizer_condition.{0} (simple_graph.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (simple_graph.{0} name))  := sorry --non-trivial
lemma new_lemma_54972 (h0 : uniform_space (has_top (has_top (has_top empty)))) : separated_space (has_top (has_top (has_top empty))) := sorry --non-trivial
lemma new_lemma_54973 (h0 : group (linear_ordered_semiring (semiring (has_top unsigned)))) : group.fg (linear_ordered_semiring (semiring (has_top unsigned))) := sorry --non-trivial
lemma new_lemma_54974 (h0 : topological_space (normed_comm_ring (has_Inf (has_neg (has_add pos))))) : totally_disconnected_space (normed_comm_ring (has_Inf (has_neg (has_add pos)))) := sorry --non-trivial
lemma new_lemma_54975 (h0 : functor.add_const (function.extfun (Type 1) topological_space) linarith.comp) : @discrete_topology.{1} Type (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) linarith.comp h0) Type)  := sorry --non-trivial
lemma new_lemma_54976 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (ordered_cancel_add_comm_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (ordered_cancel_add_comm_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_54977 (h4 : ring (has_append to_additive.value_type)) : rank_condition (has_append to_additive.value_type) := sorry --non-trivial
lemma new_lemma_54978 (h0 : nat) (h1 : topological_space (array h0 (semiring unsigned))) : path_connected_space (array h0 (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_54979 (h0 : add_group (has_to_string (option (option ennreal)))) : is_add_cyclic (has_to_string (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_54980 (h0 : topological_space (add_cancel_monoid unsigned)) : regular_space (add_cancel_monoid unsigned) := sorry --non-trivial
lemma new_lemma_54981 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (canonically_ordered_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_54982 (h1 : topological_space (simple_graph ereal)) (h2 : preorder (simple_graph ereal)) : order_closed_topology (simple_graph ereal) := sorry --non-trivial
lemma new_lemma_54983 (h0 : has_mem.mem ring has_emptyc.emptyc) : @is_domain.{0} (has_emptyc.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} h0) (has_emptyc.{0} num))  := sorry --non-trivial
lemma new_lemma_54984 (h0 : semiring (pseudo_metric_space unsigned)) : is_noetherian_ring (pseudo_metric_space unsigned) := sorry --non-trivial
lemma new_lemma_54985 (h0 : functor.add_const (finset (has_neg_part environment.implicit_infer_kind)) (comm_group name)) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54986 (h0 : functor.add_const (ring (left_cancel_monoid congr_arg_kind)) unsigned) : @strong_rank_condition.{0} (left_cancel_monoid.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (ring.{0} (left_cancel_monoid.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_54987 (h0 : uniform_space (monoid_with_zero (option (option (option (option (option (option ennreal)))))))) : separated_space (monoid_with_zero (option (option (option (option (option (option ennreal))))))) := sorry --non-trivial
lemma new_lemma_54988 (h0 : not (complete_lattice (uniform_space reducibility_hints) -> false)) : is_compactly_generated (uniform_space reducibility_hints) := sorry --non-trivial
lemma new_lemma_54989 (h0 : topological_space (mul_zero_class (has_add (has_add ennreal)))) : topological_space.separable_space (mul_zero_class (has_add (has_add ennreal))) := sorry --non-trivial
lemma new_lemma_54990 (h0 : topological_space (comm_group (has_neg_part unsigned))) : locally_compact_space (comm_group (has_neg_part unsigned)) := sorry --non-trivial
lemma new_lemma_54991 (h0 : functor.add_const (list nnreal) (semiring unsigned)) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_54992 (h0 : has_mem.mem (has_norm empty) has_emptyc.emptyc) : filter.ne_bot (finset.pi.empty filter (has_norm empty) h0) := sorry --non-trivial
lemma new_lemma_54993 (h0 : not (topological_space (semi_normed_ring fun_info) -> false)) : @t0_space.{0} (semi_normed_ring.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (semi_normed_ring.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_54994 (h0 : topological_space (with_one (random_gen (has_norm congr_arg_kind)))) : totally_separated_space (with_one (random_gen (has_norm congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_54995 (h0 : monoid (has_to_string (add_comm_monoid environment.implicit_infer_kind))) : monoid.fg (has_to_string (add_comm_monoid environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_54996 (h0 : topological_space (canonically_ordered_comm_semiring (option (option unsigned)))) : preirreducible_space (canonically_ordered_comm_semiring (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_54997 (h1 : topological_space (with_bot (random_gen string_imp))) : t0_space (with_bot (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_54998 (h0 : group (has_dist num)) : group.fg (has_dist num) := sorry --non-trivial
lemma new_lemma_54999 (h0 : uniform_space (boolean_algebra (has_neg (has_zero pos)))) : complete_space (boolean_algebra (has_neg (has_zero pos))) := sorry --non-trivial
lemma new_lemma_55000 (h0 : functor.add_const (topological_space (has_Inf pos)) (ring (ring pos))) : @locally_compact_space.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} pos)) (ring.{0} (ring.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_55001 (h0 : uniform_space (linear_ordered_comm_group_with_zero (has_ssubset char))) : complete_space (linear_ordered_comm_group_with_zero (has_ssubset char)) := sorry --non-trivial
lemma new_lemma_55002 (h0 : Prop) (h1 : filter ereal) : is_pi_system (map_cluster_pt h0 h1) := sorry --non-trivial
lemma new_lemma_55003 (h0 : functor.add_const (topological_space (has_add Type)) name) : @discrete_topology.{1} (has_add.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_add.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_55004 (h0 : functor.add_const (ordered_comm_monoid (cancel_monoid name)) pos) : @has_exists_mul_of_le.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (cancel_monoid.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_55005 (h0 : functor.add_const (ordered_comm_monoid (has_to_string name)) pos) : @has_exists_mul_of_le.{0} (has_to_string.{0} name) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (has_to_string.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_55006 (h0 : functor.add_const (function.extfun Type semiring) name) : @is_noetherian_ring.{0} (has_Inf.{0} pos) (@function.extfun_app.{2 1} Type semiring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type semiring.{0}) name h0) (has_Inf.{0} pos))  := sorry --non-trivial
lemma new_lemma_55007 (h0 : topological_space (sub_neg_monoid (has_add linarith.comp))) : loc_path_connected_space (sub_neg_monoid (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_55008 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (option.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (option.{0} pos))  := sorry --non-trivial
lemma new_lemma_55009 (h0 : topological_space (topological_space (has_ssubset char))) : t0_space (topological_space (has_ssubset char)) := sorry --non-trivial
lemma new_lemma_55010 (h0 : ring (non_assoc_semiring congr_arg_kind)) : rank_condition (non_assoc_semiring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55011 (h1 : complete_lattice (has_emptyc num)) : complete_lattice.is_Sup_finite_compact (has_emptyc num) := sorry --non-trivial
lemma new_lemma_55012 (h0 : topological_space (fintype linarith.comp_source)) : path_connected_space (fintype linarith.comp_source) := sorry --non-trivial
lemma new_lemma_55013 (h0 : functor.comp filter has_neg Type) : countable_Inter_filter (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_55014 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (finset name)) := sorry --non-trivial
lemma new_lemma_55015 (h0 : uniform_space (semilattice_inf empty)) : separated_space (semilattice_inf empty) := sorry --non-trivial
lemma new_lemma_55016 (h0 : group (ring (ring (has_to_string linarith.comp)))) : is_simple_group (ring (ring (has_to_string linarith.comp))) := sorry --non-trivial
lemma new_lemma_55017 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (normed_group.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (normed_group.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_55018 (h0 : has_lt (simple_graph std_gen)) : no_max_order (simple_graph std_gen) := sorry --non-trivial
lemma new_lemma_55019 (h0 : prod (has_inter unsigned) (has_inter unsigned)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_55020 (h0 : ring (comm_group (has_add name))) : strong_rank_condition (comm_group (has_add name)) := sorry --non-trivial
lemma new_lemma_55021 (h0 : functor.add_const (topological_space (left_cancel_monoid empty)) unsigned) : @discrete_topology.{0} (left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_monoid.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_55022 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @irreducible_space.{1} (comm_group.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (comm_group.{1} Type))  := sorry --non-trivial
lemma new_lemma_55023 (h0 : ring (mul_zero_class name)) : is_domain (mul_zero_class name) := sorry --non-trivial
lemma new_lemma_55024 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (has_add.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_add.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_55025 (h0 : topological_space (cancel_monoid (has_nndist pos))) : irreducible_space (cancel_monoid (has_nndist pos)) := sorry --non-trivial
lemma new_lemma_55026 (h0 : complete_lattice (has_add unsigned)) : is_compactly_generated (has_add unsigned) := sorry --non-trivial
lemma new_lemma_55027 (h0 : distrib_lattice string_imp -> Prop) : Exists h0 := sorry --non-trivial
lemma new_lemma_55028 (h1 : function.extfun Type topological_space) : @path_connected_space.{0} linarith.comp_source (@function.extfun_app.{2 1} Type topological_space.{0} h1 linarith.comp_source)  := sorry --non-trivial
lemma new_lemma_55029 (h0 : functor.add_const (ring (finset linarith.comp)) (finset (finset (finset (finset linarith.comp))))) : @rank_condition.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (finset.{0} linarith.comp)) (finset.{0} (finset.{0} (finset.{0} (finset.{0} linarith.comp)))) h0)  := sorry --non-trivial
lemma new_lemma_55030 (h0 : topological_space (has_one (has_norm linarith.comp))) : path_connected_space (has_one (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_55031 (h0 : topological_space (has_bot (option empty))) : t0_space (has_bot (option empty)) := sorry --non-trivial
lemma new_lemma_55032 (h0 : function.extfun nat fin) : @regular_space.{1} (has_pos_part.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@matrix.vec_empty.{2} (function.extfun.{3 2} (Type 1) topological_space.{1}) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero))) (has_pos_part.{1} Type))  := sorry --non-trivial
lemma new_lemma_55033 (h0 : fin has_zero.zero) : @totally_disconnected_space.{0} (has_bot.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (has_bot.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_55034 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (ordered_comm_ring pos)) := sorry --non-trivial
lemma new_lemma_55035 (h0 : functor.add_const (topological_space (boolean_algebra unsigned)) pos) : @totally_separated_space.{0} (boolean_algebra.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_55036 (h0 : functor.add_const (uniform_space (normed_comm_ring linarith.comp)) environment.implicit_infer_kind) : @separated_space.{0} (normed_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (normed_comm_ring.{0} linarith.comp)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_55037 (h0 : filter (has_edist (option unsigned))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55038 (h1 : topological_space (simple_graph std_gen)) : path_connected_space (simple_graph std_gen) := sorry --non-trivial
lemma new_lemma_55039 (h0 : ring (has_le char)) : is_domain (has_le char) := sorry --non-trivial
lemma new_lemma_55040 (h0 : function.extfun Type group) : @group.fg.{0} (option.{0} pos) (@function.extfun_app.{2 1} Type group.{0} h0 (option.{0} pos))  := sorry --non-trivial
lemma new_lemma_55041 (h0 : not (function.extfun Type group -> false)) : @normalizer_condition.{0} (semiring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (semiring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_55042 (h0 : functor.add_const (topological_space (generalized_boolean_algebra Type)) pos) : @preconnected_space.{1} (generalized_boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (generalized_boolean_algebra.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_55043 (h0 : functor.add_const (function.extfun Type complete_lattice) environment.implicit_infer_kind) : @is_compactly_generated.{0} (has_to_string.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) environment.implicit_infer_kind h0) (has_to_string.{0} pos))  := sorry --non-trivial
lemma new_lemma_55044 (h0 : ring (ring (has_add (has_Inf Type)))) : rank_condition (ring (has_add (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_55045 (h0 : function.extfun nat fin) : @is_compactly_generated.{1} (ordered_comm_ring.{1} Type) (@matrix.vec_empty.{1} (complete_lattice.{1} (ordered_comm_ring.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_55046 (h0 : complete_lattice (has_emptyc (random_gen (random_gen num)))) : complete_lattice.is_Sup_finite_compact (has_emptyc (random_gen (random_gen num))) := sorry --non-trivial
lemma new_lemma_55047 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (has_Sup.{0} empty) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (has_Sup.{0} empty))  := sorry --non-trivial
lemma new_lemma_55048 (h0 : list (has_zero environment.implicit_infer_kind)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_55049 (h0 : topological_space (comm_group (has_add (comm_group pos)))) : discrete_topology (comm_group (has_add (comm_group pos))) := sorry --non-trivial
lemma new_lemma_55050 (h0 : add_group (id (random_gen fun_info))) : is_add_cyclic (id (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_55051 (h0 : linear_ordered_field num -> linear_ordered_field num -> Prop) : reflexive h0 := sorry --non-trivial
lemma new_lemma_55052 (h0 : complete_lattice (has_lt (mul_one_class (mul_one_class char)))) : is_compactly_generated (has_lt (mul_one_class (mul_one_class char))) := sorry --non-trivial
lemma new_lemma_55053 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (add_cancel_comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (add_cancel_comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55054 (h0 : functor.add_const (finset (canonically_ordered_comm_semiring unsigned)) Type) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_55055 (h0 : topological_space (has_ssubset ereal)) : totally_disconnected_space (has_ssubset ereal) := sorry --non-trivial
lemma new_lemma_55056 (h0 : not (ring (uniform_space linarith.ineq) -> false)) : @strong_rank_condition.{0} (uniform_space.{0} linarith.ineq) (@classical.by_contradiction'.{1} (ring.{0} (uniform_space.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_55057 (h0 : functor.add_const (complete_lattice (has_neg_part pos)) Type) : @is_compactly_generated.{0} (has_neg_part.{0} pos) (@functor.add_const.run.{0 1} (complete_lattice.{0} (has_neg_part.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_55058 (h0 : function.extfun nat fin) : @unique_factorization_monoid.{1} (has_pos_part.{1} Type) (@matrix.vec_empty.{1} (cancel_comm_monoid_with_zero.{1} (has_pos_part.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_55059 (h0 : topological_space (ordered_comm_monoid (finset linarith.comp))) : preconnected_space (ordered_comm_monoid (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_55060 (h0 : not (topological_space (measurable_space.dynkin_system num) -> false)) : @path_connected_space.{0} (measurable_space.dynkin_system.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (measurable_space.dynkin_system.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_55061 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55062 (h0 : topological_space (has_Inf (has_add Type))) : topological_space.separable_space (has_Inf (has_add Type)) := sorry --non-trivial
lemma new_lemma_55063 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (ordered_comm_ring.{0} real) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (ordered_comm_ring.{0} real))  := sorry --non-trivial
lemma new_lemma_55064 (h0 : topological_space (plift (semiring unsigned))) : discrete_topology (plift (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_55065 (h0 : group (has_pos_part (has_add (canonically_linear_ordered_monoid Type)))) : is_simple_group (has_pos_part (has_add (canonically_linear_ordered_monoid Type))) := sorry --non-trivial
lemma new_lemma_55066 (h0 : topological_space (has_add pos)) : discrete_topology (has_add pos) := sorry --non-trivial
lemma new_lemma_55067 (h1 : not (topological_space (random_gen to_additive.value_type) -> false)) : @discrete_topology.{0} (random_gen.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} to_additive.value_type)) h1)  := sorry --non-trivial
lemma new_lemma_55068 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @is_domain.{1} (complete_distrib_lattice.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 ring.{1}) (complete_distrib_lattice.{1} Type))  := sorry --non-trivial
lemma new_lemma_55069 (h0 : ordered_add_comm_monoid (comm_monoid (comm_monoid empty))) : archimedean (comm_monoid (comm_monoid empty)) := sorry --non-trivial
lemma new_lemma_55070 (h0 : topological_space (mul_zero_class (has_add name))) : irreducible_space (mul_zero_class (has_add name)) := sorry --non-trivial
lemma new_lemma_55071 (h0 : semiring (has_nndist (has_neg linarith.comp))) : is_noetherian_ring (has_nndist (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_55072 (h0 : filter (simple_graph (ring Type))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_55073 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (complete_distrib_lattice.{0} empty) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (complete_distrib_lattice.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ordered_add_comm_monoid.{0} (complete_distrib_lattice.{0} empty))) (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 (functor.add_const.{0 0} (ordered_add_comm_monoid.{0} (complete_distrib_lattice.{0} empty)))) empty))  := sorry --non-trivial
lemma new_lemma_55074 (h0 : functor.add_const (add_monoid (semigroup name)) pos) : @add_monoid.fg.{0} (semigroup.{0} name) (@functor.add_const.run.{0 0} (add_monoid.{0} (semigroup.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_55075 (h0 : functor.add_const (topological_space (has_zero environment.implicit_infer_kind)) pos) : @topological_space.separable_space.{0} (has_zero.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_55076 (h0 : monoid (random_gen (random_gen (has_norm (has_norm fun_info))))) : monoid.fg (random_gen (random_gen (has_norm (has_norm fun_info)))) := sorry --non-trivial
lemma new_lemma_55077 (h0 : finset (has_add ennreal) -> finset (has_add ennreal) -> Prop) : is_symm (finset (has_add ennreal)) h0 := sorry --non-trivial
lemma new_lemma_55078 (h0 : functor.add_const (ordered_comm_monoid (has_Inf name)) linarith.comp) : @has_exists_mul_of_le.{0} (has_Inf.{0} name) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (has_Inf.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55079 (h0 : ordered_add_comm_monoid (comm_monoid (option unsigned))) : archimedean (comm_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_55080 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_55081 (h0 : topological_space (has_add (has_neg linarith.comp))) : totally_separated_space (has_add (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_55082 (h0 : functor.add_const (group (ring Type)) linarith.comp) : @is_cyclic.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (ring.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55083 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @is_cyclic.{0} (linear_ordered_comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) group.{0}) (linear_ordered_comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55084 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @is_add_cyclic.{0} pos (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) add_group.{0}) pos)  := sorry --non-trivial
lemma new_lemma_55085 (h0 : add_monoid (normed_lattice_add_comm_group real)) : add_monoid.fg (normed_lattice_add_comm_group real) := sorry --non-trivial
lemma new_lemma_55086 (h3 : complete_lattice (has_ssubset (random_gen (random_gen (random_gen char))))) : is_compactly_generated (has_ssubset (random_gen (random_gen (random_gen char)))) := sorry --non-trivial
lemma new_lemma_55087 (h0 : uniform_space (mul_zero_class (boolean_algebra.core (semigroup Type)))) : separated_space (mul_zero_class (boolean_algebra.core (semigroup Type))) := sorry --non-trivial
lemma new_lemma_55088 (h1 : not (group (has_union congr_arg_kind) -> false)) : @is_cyclic.{0} (has_union.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (group.{0} (has_union.{0} congr_arg_kind)) h1)  := sorry --non-trivial
lemma new_lemma_55089 (h0 : function.extfun Type group) : @group.fg.{0} (pseudo_metric_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (pseudo_metric_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55090 (h0 : list (add_comm_monoid (option unsigned))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_55091 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (has_inter.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_inter.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55092 (h0 : functor.add_const (function.extfun Type ordered_add_comm_monoid) name) : @archimedean.{0} (ordered_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_add_comm_monoid.{0}) name h0) (ordered_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_55093 (h0 : filter (has_dist (option empty))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55094 (h0 : group (has_nndist (option pos))) : is_simple_group (has_nndist (option pos)) := sorry --non-trivial
lemma new_lemma_55095 (h0 : functor.add_const (topological_space (comm_group Type)) Type) : @normal_space.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (comm_group.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_55096 (h0 : topological_space (has_zero (finset environment.implicit_infer_kind))) : normal_space (has_zero (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_55097 (h0 : filter (has_star (semiring (semiring (semiring (semiring congr_arg_kind)))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55098 (h0 : ring (boolean_algebra.core (option ennreal))) : rank_condition (boolean_algebra.core (option ennreal)) := sorry --non-trivial
lemma new_lemma_55099 (h0 : topological_space (add_comm_monoid name)) : normal_space (add_comm_monoid name) := sorry --non-trivial
lemma new_lemma_55100 (h0 : not (function.extfun Type group -> false)) : @normalizer_condition.{0} (measurable_space.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (measurable_space.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_55101 (h0 : functor.add_const (ring (ordered_ring pos)) pos) : @is_domain.{0} (ordered_ring.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (ordered_ring.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_55102 (h0 : filter (linear_ordered_comm_group ennreal)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_55103 (h4 : measurable_space (has_lt (mul_one_class (mul_one_class string.iterator_imp)))) (h5 : filter (has_lt (mul_one_class (mul_one_class string.iterator_imp)))) : filter.is_measurably_generated h5 := sorry --non-trivial
lemma new_lemma_55104 (h0 : function.extfun (finset Type) (has_mem.mem (metric_space linarith.comp))) : @complete_space.{0} (metric_space.{0} linarith.comp) (@finset.pi.empty.{1 0} Type uniform_space.{0} (metric_space.{0} linarith.comp) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (metric_space.{0} linarith.comp)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_55105 (h0 : functor.add_const (add_monoid (option pos)) unsigned) : @add_monoid.fg.{0} (option.{0} pos) (@functor.add_const.run.{0 0} (add_monoid.{0} (option.{0} pos)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_55106 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem complete_lattice)) : @complete_lattice.is_Sup_finite_compact.{0} (has_top.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) complete_lattice.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) complete_lattice.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (has_top.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55107 (h0 : ordered_add_comm_monoid (has_inter empty)) : archimedean (has_inter empty) := sorry --non-trivial
lemma new_lemma_55108 (h0 : functor.add_const (complete_lattice (ring name)) name) : @is_compactly_generated.{0} (ring.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (ring.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_55109 (h0 : fin has_zero.zero) : @monoid.fg.{0} (sub_neg_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type monoid.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type monoid.{0}) h0) (sub_neg_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55110 (h0 : has_mem.mem ring has_emptyc.emptyc) : @rank_condition.{0} (linear_ordered_semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} h0) (linear_ordered_semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55111 (h0 : function.extfun Type (functor.add_const (add_monoid pos))) : @add_monoid.fg.{0} pos (@functor.add_const.run.{0 0} (add_monoid.{0} pos) pos (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (add_monoid.{0} pos)) h0 pos))  := sorry --non-trivial
lemma new_lemma_55112 (h0 : functor.comp ring canonically_ordered_comm_semiring name) : @is_principal_ideal_ring.{0} (canonically_ordered_comm_semiring.{0} name) (@functor.comp.run.{0 0 0} ring.{0} canonically_ordered_comm_semiring.{0} name h0)  := sorry --non-trivial
lemma new_lemma_55113 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (semi_normed_comm_ring.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (semi_normed_comm_ring.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_55114 (h2 : topological_space (normed_field reducibility_hints)) : t0_space (normed_field reducibility_hints) := sorry --non-trivial
lemma new_lemma_55115 (h0 : topological_space (preorder (semiring (semiring (semiring unsigned))))) : t0_space (preorder (semiring (semiring (semiring unsigned)))) := sorry --non-trivial
lemma new_lemma_55116 (h1 : topological_space linarith.comp_source) : locally_compact_space linarith.comp_source := sorry --non-trivial
lemma new_lemma_55117 (h0 : fin has_zero.zero) : @monoid.fg.{0} (finset.{0} pos) (@matrix.vec_empty.{0} (monoid.{0} (finset.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_55118 (h0 : group (bin_tree congr_arg_kind)) : normalizer_condition (bin_tree congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55119 (h0 : topological_space (has_add (has_pos_part (has_pos_part (normed_comm_ring linarith.comp))))) : totally_disconnected_space (has_add (has_pos_part (has_pos_part (normed_comm_ring linarith.comp)))) := sorry --non-trivial
lemma new_lemma_55120 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : list.nodup (function.extfun_app (function.extfun_app h0 list) (add_semigroup empty)) := sorry --non-trivial
lemma new_lemma_55121 (h0 : uniform_space (linear_ordered_semiring linarith.comp_source)) : separated_space (linear_ordered_semiring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_55122 (h0 : topological_space (filter unsigned)) : loc_path_connected_space (filter unsigned) := sorry --non-trivial
lemma new_lemma_55123 (h0 : list (add_cancel_monoid (add_cancel_monoid name))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_55124 (h0 : group (generalized_boolean_algebra (ring Type))) : normalizer_condition (generalized_boolean_algebra (ring Type)) := sorry --non-trivial
lemma new_lemma_55125 (h0 : group (add_cancel_monoid (has_neg linarith.comp))) : is_cyclic (add_cancel_monoid (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_55126 (h3 : not (topological_space (random_gen fun_info) -> false)) : @path_connected_space.{0} (random_gen.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} fun_info)) h3)  := sorry --non-trivial
lemma new_lemma_55127 (h0 : add_group (has_top (has_top (has_top (semiring (has_top (semiring unsigned))))))) : is_add_cyclic (has_top (has_top (has_top (semiring (has_top (semiring unsigned)))))) := sorry --non-trivial
lemma new_lemma_55128 (h0 : not (group (metric_space fun_info) -> false)) : @group.fg.{0} (metric_space.{0} fun_info) (@classical.by_contradiction'.{1} (group.{0} (metric_space.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_55129 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (linear_ordered_comm_monoid_with_zero.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_comm_monoid_with_zero.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55130 (h0 : topological_space (bin_tree (semiring empty))) : topological_space.separable_space (bin_tree (semiring empty)) := sorry --non-trivial
lemma new_lemma_55131 (h0 : function.extfun Type topological_space) : t1_space nnreal := sorry --non-trivial
lemma new_lemma_55132 (h0 : function.extfun Type topological_space) : preirreducible_space real := sorry --non-trivial
lemma new_lemma_55133 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_group.{0} h0 (ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55134 (h0 : functor.add_const (topological_space (semigroup name)) unsigned) : @t1_space.{0} (semigroup.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_55135 (h0 : function.extfun (Type 1) list) : palindrome (function.extfun_app h0 (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_55136 (h0 : function.extfun (finset Type) (has_mem.mem (semiring empty))) : @totally_disconnected_space.{0} (semiring.{0} empty) (@finset.pi.empty.{1 0} Type topological_space.{0} (semiring.{0} empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (semiring.{0} empty)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_55137 (h0 : topological_space (random_gen (semiring (has_norm unsigned)))) : preirreducible_space (random_gen (semiring (has_norm unsigned))) := sorry --non-trivial
lemma new_lemma_55138 (h0 : ordered_comm_monoid (comm_semigroup pos)) : has_exists_mul_of_le (comm_semigroup pos) := sorry --non-trivial
lemma new_lemma_55139 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (with_one.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (with_one.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55140 (h0 : not (topological_space (random_gen num) -> false)) : @irreducible_space.{0} (random_gen.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_55141 (h0 : ordered_comm_monoid (comm_group (has_add (has_add (has_to_string Type))))) : has_exists_mul_of_le (comm_group (has_add (has_add (has_to_string Type)))) := sorry --non-trivial
lemma new_lemma_55142 (h0 : functor.add_const (monoid (ordered_comm_ring linarith.comp)) Type) : @monoid.fg.{0} (ordered_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 1} (monoid.{0} (ordered_comm_ring.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_55143 (h0 : topological_space (monoid (option (option congr_arg_kind)))) : totally_disconnected_space (monoid (option (option congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_55144 (h0 : ring (has_Inf (has_neg name))) : is_domain (has_Inf (has_neg name)) := sorry --non-trivial
lemma new_lemma_55145 (h0 : topological_space (has_norm string_imp)) (h1 : function.extfun (has_norm string_imp) (fun (x : has_norm string_imp), Prop)) : is_open (function.extfun_app h1) := sorry --non-trivial
lemma new_lemma_55146 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (add_semigroup.{0} empty) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (add_semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_55147 (h0 : uniform_space (linear_ordered_field empty)) : separated_space (linear_ordered_field empty) := sorry --non-trivial
lemma new_lemma_55148 (h1 : has_mem.mem uniform_space has_emptyc.emptyc) : @complete_space.{0} (complete_semilattice_Sup.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) uniform_space.{0} h1) (complete_semilattice_Sup.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55149 (h0 : complete_lattice (canonically_ordered_monoid name)) : is_compactly_generated (canonically_ordered_monoid name) := sorry --non-trivial
lemma new_lemma_55150 (h0 : functor.add_const (function.extfun Type topological_space) Type) : @path_connected_space.{0} (normed_comm_ring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) Type h0) (normed_comm_ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_55151 (h0 : topological_space (add_comm_monoid environment.implicit_infer_kind)) : regular_space (add_comm_monoid environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_55152 (h2 : group (with_one (random_gen (with_bot congr_arg_kind)))) : normalizer_condition (with_one (random_gen (with_bot congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_55153 (h0 : not (topological_space (set linarith.comp_source) -> false)) : @path_connected_space.{0} (set.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (set.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_55154 (h0 : fin has_zero.zero) : @discrete_topology.{0} (complete_distrib_lattice.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (complete_distrib_lattice.{0} real))  := sorry --non-trivial
lemma new_lemma_55155 (h0 : topological_space (pseudo_metric_space (option name))) : preconnected_space (pseudo_metric_space (option name)) := sorry --non-trivial
lemma new_lemma_55156 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (add_semigroup.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_55157 (h1 : semiring ereal) (h2 : ereal) : even h2 := sorry --non-trivial
lemma new_lemma_55158 (h0 : topological_space (add_group num)) : preirreducible_space (add_group num) := sorry --non-trivial
lemma new_lemma_55159 (h0 : functor.add_const (function.extfun (Type 1) group) (semiring empty)) : @normalizer_condition.{1} (plift.{1} num) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) (semiring.{0} empty) h0) (plift.{1} num))  := sorry --non-trivial
lemma new_lemma_55160 (h0 : group (semigroup (has_to_string Type))) : group.fg (semigroup (has_to_string Type)) := sorry --non-trivial
lemma new_lemma_55161 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (finset.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (finset.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_55162 (h0 : preorder (uniform_space reducibility_hints)) (h1 : uniform_space reducibility_hints -> set reducibility_hints) : filter.is_antitone_basis h1 := sorry --non-trivial
lemma new_lemma_55163 (h0 : function.extfun Type topological_space) : @normal_space.{0} (@id.{2} Type unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (@id.{2} Type unsigned))  := sorry --non-trivial
lemma new_lemma_55164 (h0 : complete_lattice (bin_tree num)) : is_atomistic (bin_tree num) := sorry --non-trivial
lemma new_lemma_55165 (h0 : ring (bin_tree (option unsigned))) : strong_rank_condition (bin_tree (option unsigned)) := sorry --non-trivial
lemma new_lemma_55166 (h2 : function.extfun Type group) : @is_cyclic.{0} (with_one.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h2 (with_one.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55167 (h0 : filter (sub_neg_monoid linarith.comp)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_55168 (h0 : ring (linear_ordered_add_comm_group (has_nnnorm string_imp))) : strong_rank_condition (linear_ordered_add_comm_group (has_nnnorm string_imp)) := sorry --non-trivial
lemma new_lemma_55169 (h0 : topological_space (semigroup (finset pos))) : path_connected_space (semigroup (finset pos)) := sorry --non-trivial
lemma new_lemma_55170 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (normed_lattice_add_comm_group congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_55171 (h0 : group (normed_group fun_info)) : group.fg (normed_group fun_info) := sorry --non-trivial
lemma new_lemma_55172 (h0 : functor.add_const (ring (finset name)) Type) : @is_domain.{0} (finset.{0} name) (@functor.add_const.run.{0 1} (ring.{0} (finset.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_55173 (h0 : uniform_space (has_norm (random_gen fun_info))) : complete_space (has_norm (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_55174 (h0 : topological_space (has_to_string (option name))) : sequential_space (has_to_string (option name)) := sorry --non-trivial
lemma new_lemma_55175 (h0 : semiring (omega_complete_partial_order unsigned)) : is_noetherian_ring (omega_complete_partial_order unsigned) := sorry --non-trivial
lemma new_lemma_55176 (h1 : ring (distrib (has_nnnorm string_imp))) : strong_rank_condition (distrib (has_nnnorm string_imp)) := sorry --non-trivial
lemma new_lemma_55177 (h0 : complete_lattice (add_cancel_monoid (boolean_algebra (finset pos)))) : complete_lattice.is_Sup_finite_compact (add_cancel_monoid (boolean_algebra (finset pos))) := sorry --non-trivial
lemma new_lemma_55178 (h0 : topological_space (boolean_algebra (has_to_string (has_to_string Type)))) : loc_path_connected_space (boolean_algebra (has_to_string (has_to_string Type))) := sorry --non-trivial
lemma new_lemma_55179 (h0 : topological_space (boolean_algebra (normed_comm_ring environment.implicit_infer_kind))) : preconnected_space (boolean_algebra (normed_comm_ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_55180 (h0 : functor.add_const (uniform_space (has_pos_part name)) pos) : @separated_space.{0} (has_pos_part.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_pos_part.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_55181 (h0 : topological_space (normed_comm_ring (option (option (option ennreal))))) : discrete_topology (normed_comm_ring (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_55182 (h0 : functor.add_const (group (semigroup ennreal)) (option pos)) : @group.fg.{0} (semigroup.{0} ennreal) (@functor.add_const.run.{0 0} (group.{0} (semigroup.{0} ennreal)) (option.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_55183 (h0 : complete_lattice (distrib_lattice (has_nnnorm (has_nnnorm fun_info)))) : complete_lattice.is_Sup_finite_compact (distrib_lattice (has_nnnorm (has_nnnorm fun_info))) := sorry --non-trivial
lemma new_lemma_55184 (h0 : topological_space (mul_one_class char)) : path_connected_space (mul_one_class char) := sorry --non-trivial
lemma new_lemma_55185 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} linarith.comp (@function.extfun_app.{2 1} Type topological_space.{0} h0 linarith.comp)  := sorry --non-trivial
lemma new_lemma_55186 (h0 : function.extfun Type topological_space) : @t1_space.{0} (boolean_algebra.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.{0} name))  := sorry --non-trivial
lemma new_lemma_55187 (h0 : functor.add_const (topological_space (left_cancel_monoid empty)) empty) : @normal_space.{0} (left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_55188 (h0 : group (boolean_algebra (has_add name))) : is_cyclic (boolean_algebra (has_add name)) := sorry --non-trivial
lemma new_lemma_55189 (h0 : functor.add_const (ring (mul_zero_class num)) num) : @is_domain.{0} (mul_zero_class.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (mul_zero_class.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_55190 (h0 : set (add_comm_semigroup string.iterator_imp -> enat)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_55191 (h0 : functor.add_const (function.extfun Type complete_lattice) name) : @complete_lattice.is_Sup_finite_compact.{0} (has_nndist.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) name h0) (has_nndist.{0} pos))  := sorry --non-trivial
lemma new_lemma_55192 (h0 : topological_space (has_zero (has_neg_part unsigned))) : topological_space.separable_space (has_zero (has_neg_part unsigned)) := sorry --non-trivial
lemma new_lemma_55193 (h0 : functor.add_const (topological_space (ring name)) Type) : @totally_disconnected_space.{0} (ring.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (ring.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_55194 (h0 : fin has_zero.zero) : @is_simple_group.{1} (has_pos_part.{1} Type) (@matrix.vec_empty.{1} (group.{1} (has_pos_part.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_55195 (h0 : topological_space (canonically_ordered_comm_semiring (has_neg_part ennreal))) : t1_space (canonically_ordered_comm_semiring (has_neg_part ennreal)) := sorry --non-trivial
lemma new_lemma_55196 (h0 : functor.add_const (function.extfun Type ring) linarith.comp) : @is_domain.{0} (normed_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) linarith.comp h0) (normed_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55197 (h0 h1 : multiset (has_nnnorm std_gen)) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_55198 (h0 : function.extfun Type complete_lattice) : is_compactly_generated (topological_space to_additive.value_type) := sorry --non-trivial
lemma new_lemma_55199 (h0 : topological_space (boolean_algebra (cancel_monoid (has_to_string Type)))) : loc_path_connected_space (boolean_algebra (cancel_monoid (has_to_string Type))) := sorry --non-trivial
lemma new_lemma_55200 (h0 : topological_space to_additive.value_type) : totally_disconnected_space to_additive.value_type := sorry --non-trivial
lemma new_lemma_55201 (h0 : function.extfun Type (functor.add_const (topological_space (partial_order unsigned)))) : @topological_space.separable_space.{0} (partial_order.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (partial_order.{0} unsigned)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (partial_order.{0} unsigned))) h0 empty))  := sorry --non-trivial
lemma new_lemma_55202 (h0 : complete_lattice (has_top (has_nnnorm linarith.comp_source))) : is_compactly_generated (has_top (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_55203 (h0 : functor.add_const (uniform_space (has_add environment.implicit_infer_kind)) environment.implicit_infer_kind) : @complete_space.{0} (has_add.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_add.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_55204 (h0 : monoid (filter (option (option unsigned)))) : monoid.fg (filter (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_55205 (h0 : ring (mul_zero_class (finset (finset (finset pos))))) : is_principal_ideal_ring (mul_zero_class (finset (finset (finset pos)))) := sorry --non-trivial
lemma new_lemma_55206 (h0 : functor.add_const (finset (has_to_string environment.implicit_infer_kind)) pos) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_55207 (h0 : cancel_comm_monoid_with_zero (ordered_comm_ring real)) : unique_factorization_monoid (ordered_comm_ring real) := sorry --non-trivial
lemma new_lemma_55208 (h0 : functor.add_const (topological_space (boolean_algebra environment.implicit_infer_kind)) linarith.comp) : @normal_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55209 (h0 : not (uniform_space (mul_one_class (has_lt char)) -> false)) : @complete_space.{0} (mul_one_class.{0} (has_lt.{0} char)) (@classical.by_contradiction'.{1} (uniform_space.{0} (mul_one_class.{0} (has_lt.{0} char))) h0)  := sorry --non-trivial
lemma new_lemma_55210 (h0 : function.extfun (finset Type) (has_mem.mem (semiring fun_info))) : @is_add_cyclic.{0} (semiring.{0} fun_info) (@finset.pi.empty.{1 0} Type add_group.{0} (semiring.{0} fun_info) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (semiring.{0} fun_info)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_55211 (h0 : topological_space (has_inv (has_nnnorm (with_one (has_nnnorm to_additive.value_type))))) : totally_disconnected_space (has_inv (has_nnnorm (with_one (has_nnnorm to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_55212 (h0 : topological_space (add_comm_monoid (add_comm_monoid environment.implicit_infer_kind))) : totally_disconnected_space (add_comm_monoid (add_comm_monoid environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_55213 (h0 : functor.add_const (add_group (ordered_cancel_add_comm_monoid unsigned)) (option unsigned)) : @is_add_cyclic.{0} (ordered_cancel_add_comm_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (add_group.{0} (ordered_cancel_add_comm_monoid.{0} unsigned)) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_55214 (h0 : function.extfun Type (functor.add_const (list (left_cancel_monoid empty)))) : list.nodup (functor.add_const.run (function.extfun_app h0 num)) := sorry --non-trivial
lemma new_lemma_55215 (h0 : fin has_zero.zero) : @sequential_space.{0} (sub_neg_monoid.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (sub_neg_monoid.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_55216 (h0 : group (normed_group (has_norm (has_top linarith.comp_source)))) : normalizer_condition (normed_group (has_norm (has_top linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_55217 (h0 : ring (add_right_cancel_monoid (semiring (semiring (semiring congr_arg_kind))))) : is_principal_ideal_ring (add_right_cancel_monoid (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_55218 (h0 : topological_space (generalized_boolean_algebra linarith.comp)) : preirreducible_space (generalized_boolean_algebra linarith.comp) := sorry --non-trivial
lemma new_lemma_55219 (h0 : topological_space (has_add (finset environment.implicit_infer_kind))) : normal_space (has_add (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_55220 (h0 : complete_lattice (canonically_ordered_monoid (has_Inf Type))) : is_compactly_generated (canonically_ordered_monoid (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_55221 (h0 : functor.add_const (ring (finset Type)) linarith.comp) : @rank_condition.{1} (finset.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (finset.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55222 (h0 : function.extfun Type group) : @is_simple_group.{0} (canonically_ordered_monoid.{0} (has_pos_part.{0} linarith.comp)) (@function.extfun_app.{2 1} Type group.{0} h0 (canonically_ordered_monoid.{0} (has_pos_part.{0} linarith.comp)))  := sorry --non-trivial
lemma new_lemma_55223 (h0 : ring (finset (has_pos_part (ring linarith.comp)))) : is_domain (finset (has_pos_part (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_55224 (h0 : topological_space (free_add_monoid (semiring (semiring (semiring (semiring empty)))))) : t0_space (free_add_monoid (semiring (semiring (semiring (semiring empty))))) := sorry --non-trivial
lemma new_lemma_55225 (h0 : functor.add_const (cancel_comm_monoid_with_zero (boolean_algebra Type)) unsigned) : @unique_factorization_monoid.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (cancel_comm_monoid_with_zero.{1} (boolean_algebra.{1} Type)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_55226 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (metric_space.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (metric_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_55227 (h0 : function.extfun Type (functor.add_const (topological_space (ordered_comm_group empty)))) : @totally_disconnected_space.{0} (ordered_comm_group.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_group.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (ordered_comm_group.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_55228 (h0 : functor.add_const (monoid (has_add Type)) environment.implicit_infer_kind) : @monoid.fg.{1} (has_add.{1} Type) (@functor.add_const.run.{1 0} (monoid.{1} (has_add.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_55229 (h0 : fin has_zero.zero) : @is_simple_group.{1} (generalized_boolean_algebra.{1} Type) (@matrix.vec_empty.{1} (group.{1} (generalized_boolean_algebra.{1} Type)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_55230 (h0 : functor.add_const (ring (option empty)) empty) : @is_principal_ideal_ring.{0} (option.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (option.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_55231 (h0 : functor.add_const (topological_space (has_nndist empty)) empty) : @totally_separated_space.{0} (has_nndist.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_55232 (h0 : complete_lattice (has_top (has_top empty))) : complete_lattice.is_Sup_finite_compact (has_top (has_top empty)) := sorry --non-trivial
lemma new_lemma_55233 (h1 : topological_space (measurable_space (semiring empty))) : locally_compact_space (measurable_space (semiring empty)) := sorry --non-trivial
lemma new_lemma_55234 (h0 : topological_space (boolean_algebra (has_neg linarith.comp))) : totally_disconnected_space (boolean_algebra (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_55235 (h0 : functor.add_const (topological_space (has_star unsigned)) congr_arg_kind) : @path_connected_space.{0} (has_star.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_star.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_55236 (h0 : functor.add_const (group (has_edist unsigned)) empty) : @normalizer_condition.{0} (has_edist.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (has_edist.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_55237 (h0 : fin has_zero.zero) : id (id (matrix.vec_empty (matrix.vec_empty h0))) := sorry --non-trivial
lemma new_lemma_55238 (h0 : functor.add_const (topological_space (canonically_ordered_add_monoid unsigned)) unsigned) : @locally_compact_space.{0} (canonically_ordered_add_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_add_monoid.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_55239 (h0 : function.extfun Type (functor.comp filter normed_comm_ring)) : filter.ne_bot (functor.comp.run (function.extfun_app h0 name)) := sorry --non-trivial
lemma new_lemma_55240 (h0 : add_monoid (comm_group unsigned)) : add_monoid.fg (comm_group unsigned) := sorry --non-trivial
lemma new_lemma_55241 (h0 : semiring (semigroup (has_zero unsigned))) : is_noetherian_ring (semigroup (has_zero unsigned)) := sorry --non-trivial
lemma new_lemma_55242 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (boolean_algebra.core.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.core.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_55243 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (random_gen.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (random_gen.{0} empty))  := sorry --non-trivial
lemma new_lemma_55244 (h1 : group (has_norm (random_gen linarith.comp))) : group.fg (has_norm (random_gen linarith.comp)) := sorry --non-trivial
lemma new_lemma_55245 (h0 : ring (has_emptyc (random_gen linarith.comp))) : rank_condition (has_emptyc (random_gen linarith.comp)) := sorry --non-trivial
lemma new_lemma_55246 (h0 : complete_lattice (has_to_string congr_arg_kind)) : is_compactly_generated (has_to_string congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55247 (h0 : functor.add_const (topological_space (has_neg Type)) linarith.comp) : @normal_space.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_neg.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55248 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (monoid.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_55249 (h0 : uniform_space (distrib (has_ssubset (has_ssubset fun_info)))) : complete_space (distrib (has_ssubset (has_ssubset fun_info))) := sorry --non-trivial
lemma new_lemma_55250 (h0 : topological_space (has_union congr_arg_kind)) : totally_disconnected_space (has_union congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55251 (h0 : ordered_comm_monoid (simple_graph (has_add (finset Type)))) : has_exists_mul_of_le (simple_graph (has_add (finset Type))) := sorry --non-trivial
lemma new_lemma_55252 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @discrete_topology.{0} (random_gen.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (random_gen.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_55253 (h0 : topological_space (has_top (has_norm fun_info))) : t0_space (has_top (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_55254 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (has_star.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_star.{0} num))  := sorry --non-trivial
lemma new_lemma_55255 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (boolean_algebra.core.{0} unsigned) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (boolean_algebra.core.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55256 (h2 : complete_lattice (has_append to_additive.value_type)) : complete_lattice.is_Sup_finite_compact (has_append to_additive.value_type) := sorry --non-trivial
lemma new_lemma_55257 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (filter.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (filter.{0} num))  := sorry --non-trivial
lemma new_lemma_55258 (h0 : functor.add_const (topological_space (as_linear_order empty)) (complete_distrib_lattice empty)) : @totally_separated_space.{0} (as_linear_order.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (as_linear_order.{0} empty)) (complete_distrib_lattice.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_55259 (h0 : complete_lattice (has_compl (has_ssubset reducibility_hints))) : complete_lattice.is_Sup_finite_compact (has_compl (has_ssubset reducibility_hints)) := sorry --non-trivial
lemma new_lemma_55260 (h0 : complete_lattice (with_bot (has_inv to_additive.value_type))) : is_atomistic (with_bot (has_inv to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_55261 (h0 : topological_space (normed_comm_ring environment.implicit_infer_kind)) : preirreducible_space (normed_comm_ring environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_55262 (h0 : topological_space (has_Inf (has_neg (has_neg Type)))) : t0_space (has_Inf (has_neg (has_neg Type))) := sorry --non-trivial
lemma new_lemma_55263 (h0 : functor.comp cancel_comm_monoid_with_zero add_comm_monoid name) : @unique_factorization_monoid.{0} (add_comm_monoid.{0} name) (@functor.comp.run.{0 0 0} cancel_comm_monoid_with_zero.{0} add_comm_monoid.{0} name h0)  := sorry --non-trivial
lemma new_lemma_55264 (h0 : topological_space (complete_linear_order empty)) : totally_disconnected_space (complete_linear_order empty) := sorry --non-trivial
lemma new_lemma_55265 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @totally_separated_space.{0} (linear_ordered_semiring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) topological_space.{0}) (linear_ordered_semiring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_55266 (h0 : topological_space ennreal) : t1_space ennreal := sorry --non-trivial
lemma new_lemma_55267 (h0 : topological_space pos) : t1_space pos := sorry --non-trivial
lemma new_lemma_55268 (h0 : monoid (complete_distrib_lattice unsigned)) : monoid.fg (complete_distrib_lattice unsigned) := sorry --non-trivial
lemma new_lemma_55269 (h0 : complete_lattice (ordered_comm_group unsigned)) : complete_lattice.is_Sup_finite_compact (ordered_comm_group unsigned) := sorry --non-trivial
lemma new_lemma_55270 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (has_ssubset.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_ssubset.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_55271 (h0 h2 : multiset (add_comm_semigroup std_gen)) : multiset.disjoint h0 h2 := sorry --non-trivial
lemma new_lemma_55272 (h0 : function.extfun nat fin) : @path_connected_space.{1} (add_comm_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (add_comm_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_55273 (h0 : topological_space (semi_normed_comm_ring fun_info)) (h1 : add_group (semi_normed_comm_ring fun_info)) : topological_add_group (semi_normed_comm_ring fun_info) := sorry --non-trivial
lemma new_lemma_55274 (h0 : topological_space (canonically_ordered_monoid linarith.comp)) : t0_space (canonically_ordered_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_55275 (h0 : monoid (canonically_ordered_monoid (ordered_comm_monoid (has_Inf (has_Inf real))))) : monoid.fg (canonically_ordered_monoid (ordered_comm_monoid (has_Inf (has_Inf real)))) := sorry --non-trivial
lemma new_lemma_55276 (h0 : ring (add_monoid (denumerable linarith.ineq))) : is_domain (add_monoid (denumerable linarith.ineq)) := sorry --non-trivial
lemma new_lemma_55277 (h0 : topological_space (boolean_algebra (has_add pos))) : t0_space (boolean_algebra (has_add pos)) := sorry --non-trivial
lemma new_lemma_55278 (h0 : function.extfun Type ring) : @is_domain.{0} (with_one.{0} string_imp) (@function.extfun_app.{2 1} Type ring.{0} h0 (with_one.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_55279 (h0 : topological_space (add_cancel_comm_monoid (random_gen (random_gen string.iterator_imp)))) : t0_space (add_cancel_comm_monoid (random_gen (random_gen string.iterator_imp))) := sorry --non-trivial
lemma new_lemma_55280 (h0 : ring (preorder congr_arg_kind)) : is_principal_ideal_ring (preorder congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55281 (h0 : add_group (linear_ordered_cancel_comm_monoid congr_arg_kind)) : is_add_cyclic (linear_ordered_cancel_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55282 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (with_one.{0} string_imp) (@function.extfun_app.{2 1} Type monoid.{0} h0 (with_one.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_55283 (h0 : complete_lattice (cancel_monoid (option empty))) : complete_lattice.is_Sup_finite_compact (cancel_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_55284 (h0 : list (cancel_monoid (semigroup (has_neg_part (comm_group name))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_55285 (h0 : topological_space (has_add (ordered_comm_monoid (has_Inf (sub_neg_monoid real))))) : preirreducible_space (has_add (ordered_comm_monoid (has_Inf (sub_neg_monoid real)))) := sorry --non-trivial
lemma new_lemma_55286 (h0 : function.extfun Type group) : @normalizer_condition.{0} (normed_linear_ordered_group.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (normed_linear_ordered_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_55287 (h0 : list (mul_zero_class (semigroup (semigroup Type)))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_55288 (h0 : topological_space (sub_neg_monoid (has_Inf linarith.comp))) : sequential_space (sub_neg_monoid (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_55289 (h0 : topological_space (has_add (add_cancel_monoid (comm_group linarith.comp)))) : t0_space (has_add (add_cancel_monoid (comm_group linarith.comp))) := sorry --non-trivial
lemma new_lemma_55290 (h0 : add_monoid (left_cancel_semigroup (semiring unsigned))) : add_monoid.fg (left_cancel_semigroup (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_55291 (h0 : group (boolean_algebra (has_add linarith.comp))) : is_cyclic (boolean_algebra (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_55292 (h0 : functor.add_const (function.extfun (Type 1) finset) (finset pos)) : finset.nonempty (function.extfun_app (functor.add_const.run h0) (has_nndist Type)) := sorry --non-trivial
lemma new_lemma_55293 (h0 : functor.add_const (topological_space (normed_comm_ring linarith.comp)) linarith.comp) : @locally_compact_space.{0} (normed_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55294 (h0 : topological_space (encodable linarith.ineq)) : path_connected_space (encodable linarith.ineq) := sorry --non-trivial
lemma new_lemma_55295 (h0 : group (id (with_bot (random_gen string_imp)))) : group.fg (id (with_bot (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_55296 (h0 : functor.add_const (group (left_cancel_monoid empty)) unsigned) : @normalizer_condition.{0} (left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (group.{0} (left_cancel_monoid.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_55297 (h0 : monoid (canonically_linear_ordered_monoid (has_bot (sub_neg_monoid real)))) : monoid.fg (canonically_linear_ordered_monoid (has_bot (sub_neg_monoid real))) := sorry --non-trivial
lemma new_lemma_55298 (h3 : topological_space (has_compl (random_gen (distrib char)))) : t0_space (has_compl (random_gen (distrib char))) := sorry --non-trivial
lemma new_lemma_55299 (h0 : cancel_comm_monoid_with_zero (ordered_comm_monoid pos)) : unique_factorization_monoid (ordered_comm_monoid pos) := sorry --non-trivial
lemma new_lemma_55300 (h0 : topological_space (add_cancel_comm_monoid string.iterator_imp)) : totally_disconnected_space (add_cancel_comm_monoid string.iterator_imp) := sorry --non-trivial
lemma new_lemma_55301 (h0 : topological_space (plift congr_arg_kind)) : topological_space.separable_space (plift congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55302 (h0 : group (add_cancel_monoid (ring name))) : is_simple_group (add_cancel_monoid (ring name)) := sorry --non-trivial
lemma new_lemma_55303 (h1 : mul_one_class (mul_one_class (normed_field char)) -> mul_one_class (mul_one_class (normed_field char)) -> Prop) (h2 : set (mul_one_class (mul_one_class (normed_field char)))) : set.bounded h1 h2 := sorry --non-trivial
lemma new_lemma_55304 (h0 : group (measurable_space (random_gen fun_info))) : normalizer_condition (measurable_space (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_55305 (h0 : topological_space (linear_ordered_comm_group congr_arg_kind)) : topological_space.separable_space (linear_ordered_comm_group congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55306 (h0 : function.extfun Type (functor.comp ring finset)) : @strong_rank_condition.{0} (finset.{0} ennreal) (@functor.comp.run.{0 0 0} ring.{0} finset.{0} ennreal (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} ring.{0} finset.{0}) h0 ennreal))  := sorry --non-trivial
lemma new_lemma_55307 (h0 : ring (dlist (has_top linarith.ineq))) : is_domain (dlist (has_top linarith.ineq)) := sorry --non-trivial
lemma new_lemma_55308 (h0 : functor.comp list complete_distrib_lattice environment.implicit_infer_kind) : list.nodup (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_55309 (h0 : topological_space (random_gen (has_top linarith.ineq))) : irreducible_space (random_gen (has_top linarith.ineq)) := sorry --non-trivial
lemma new_lemma_55310 (h0 : topological_space (simple_graph (has_add (has_add Type)))) : path_connected_space (simple_graph (has_add (has_add Type))) := sorry --non-trivial
lemma new_lemma_55311 (h0 : function.extfun Type (functor.add_const Prop)) : functor.add_const.run (function.extfun_app h0 (has_neg unsigned)) := sorry --non-trivial
lemma new_lemma_55312 (h0 : topological_space (has_neg_part (has_to_string environment.implicit_infer_kind))) : t0_space (has_neg_part (has_to_string environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_55313 (h0 : functor.add_const (monoid (normed_comm_ring empty)) ennreal) : @monoid.fg.{0} (normed_comm_ring.{0} empty) (@functor.add_const.run.{0 0} (monoid.{0} (normed_comm_ring.{0} empty)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_55314 (h0 : topological_space (mul_zero_class (has_nndist environment.implicit_infer_kind))) : preirreducible_space (mul_zero_class (has_nndist environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_55315 (h0 : topological_space (mul_zero_class (finset (finset ennreal)))) : totally_separated_space (mul_zero_class (finset (finset ennreal))) := sorry --non-trivial
lemma new_lemma_55316 (h1 : not (filter (has_nnnorm fun_info) -> false)) : filter.ne_bot (classical.by_contradiction' h1) := sorry --non-trivial
lemma new_lemma_55317 (h0 : has_mem.mem (random_gen linarith.comp) has_emptyc.emptyc) : @is_atomistic.{0} (random_gen.{0} linarith.comp) (@finset.pi.empty.{1 0} Type complete_lattice.{0} (random_gen.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_55318 (h0 : list (add_right_cancel_monoid (semiring unsigned))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_55319 (h0 : functor.add_const (function.extfun (Type 1) ring) (has_neg Type)) : @is_domain.{1} (semigroup.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) ring.{1}) (has_neg.{1} Type) h0) (semigroup.{1} Type))  := sorry --non-trivial
lemma new_lemma_55320 (h0 : functor.add_const (topological_space (has_add pos)) (ring (boolean_algebra pos))) : @t0_space.{0} (has_add.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} pos)) (ring.{0} (boolean_algebra.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_55321 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (has_neg.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_neg.{0} pos))  := sorry --non-trivial
lemma new_lemma_55322 (h0 : set (set (has_top fun_info))) : is_countably_spanning h0 := sorry --non-trivial
lemma new_lemma_55323 (h0 : monoid (canonically_linear_ordered_monoid (has_Inf (has_neg name)))) : monoid.fg (canonically_linear_ordered_monoid (has_Inf (has_neg name))) := sorry --non-trivial
lemma new_lemma_55324 (h0 : ring (has_add (has_Inf linarith.comp))) : is_domain (has_add (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_55325 (h0 : function.extfun Type group) : @group.fg.{0} (semigroup.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (semigroup.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55326 (h0 : uniform_space (cancel_monoid (finset (finset (finset (finset (finset (finset ennreal)))))))) : separated_space (cancel_monoid (finset (finset (finset (finset (finset (finset ennreal))))))) := sorry --non-trivial
lemma new_lemma_55327 (h0 : functor.add_const (topological_space (normed_comm_ring pos)) (finset linarith.comp)) : @t0_space.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} pos)) (finset.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_55328 (h1 h2 : multiset fun_info) : multiset.subset h1 h2 := sorry --non-trivial
lemma new_lemma_55329 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (monoid_with_zero.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (monoid_with_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_55330 (h0 : ring (has_top (has_norm linarith.comp))) : strong_rank_condition (has_top (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_55331 (h0 : topological_space (is_R_or_C (add_left_cancel_semigroup congr_arg_kind))) : discrete_topology (is_R_or_C (add_left_cancel_semigroup congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_55332 (h1 : not (add_group (complete_distrib_lattice linarith.comp_source) -> false)) : @is_add_cyclic.{0} (complete_distrib_lattice.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (add_group.{0} (complete_distrib_lattice.{0} linarith.comp_source)) h1)  := sorry --non-trivial
lemma new_lemma_55333 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : palindrome (function.extfun_app (function.extfun_app h0 list) (with_bot empty)) := sorry --non-trivial
lemma new_lemma_55334 (h0 : ring (complete_semilattice_Sup (distrib fun_info))) : rank_condition (complete_semilattice_Sup (distrib fun_info)) := sorry --non-trivial
lemma new_lemma_55335 (h0 : ring (has_bot (has_Inf real))) : strong_rank_condition (has_bot (has_Inf real)) := sorry --non-trivial
lemma new_lemma_55336 (h0 : functor.add_const (group (ring pos)) (has_neg (finset Type))) : @normalizer_condition.{0} (ring.{0} pos) (@functor.add_const.run.{0 1} (group.{0} (ring.{0} pos)) (has_neg.{1} (finset.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_55337 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @irreducible_space.{1} (complete_distrib_lattice.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (complete_distrib_lattice.{1} Type))  := sorry --non-trivial
lemma new_lemma_55338 (h0 : list (distrib_lattice congr_arg_kind)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_55339 (h0 : functor.add_const (topological_space (boolean_algebra Type)) environment.implicit_infer_kind) : @path_connected_space.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (boolean_algebra.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_55340 (h0 : fin has_zero.zero) : @preconnected_space.{1} (has_bot.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@matrix.vec_empty.{2} (function.extfun.{3 2} (Type 1) topological_space.{1}) h0) (has_bot.{1} Type))  := sorry --non-trivial
lemma new_lemma_55341 (h0 : add_group (has_add (fintype (random_gen linarith.comp_source)))) : is_add_cyclic (has_add (fintype (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_55342 (h0 : complete_lattice (finset (ordered_ring pos))) : complete_lattice.is_Sup_finite_compact (finset (ordered_ring pos)) := sorry --non-trivial
lemma new_lemma_55343 (h0 : functor.add_const (filter (normed_comm_ring name)) linarith.comp) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_55344 (h0 : semiring (ring (finset (has_neg pos)))) : is_noetherian_ring (ring (finset (has_neg pos))) := sorry --non-trivial
lemma new_lemma_55345 (h0 : functor.add_const (topological_space (ring (has_neg pos))) pos) : @regular_space.{0} (ring.{0} (has_neg.{0} pos)) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} (has_neg.{0} pos))) pos h0)  := sorry --non-trivial
lemma new_lemma_55346 (h0 : functor.add_const (complete_lattice (has_neg Type)) (has_neg (has_add linarith.comp))) : @is_compactly_generated.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (complete_lattice.{1} (has_neg.{1} Type)) (has_neg.{0} (has_add.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_55347 (h1 : ring (has_compl (random_gen char))) : is_domain (has_compl (random_gen char)) := sorry --non-trivial
lemma new_lemma_55348 (h0 : topological_space (linear_ordered_field (cancel_monoid ennreal))) : regular_space (linear_ordered_field (cancel_monoid ennreal)) := sorry --non-trivial
lemma new_lemma_55349 (h0 : topological_space (has_top (option ennreal))) : discrete_topology (has_top (option ennreal)) := sorry --non-trivial
lemma new_lemma_55350 (h0 : complete_lattice (has_one ereal)) : complete_lattice.is_Sup_finite_compact (has_one ereal) := sorry --non-trivial
lemma new_lemma_55351 (h0 : group (has_zero (has_add (normed_comm_ring (has_Inf (metric_space linarith.comp)))))) : group.fg (has_zero (has_add (normed_comm_ring (has_Inf (metric_space linarith.comp))))) := sorry --non-trivial
lemma new_lemma_55352 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (finset.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (finset.{0} name))  := sorry --non-trivial
lemma new_lemma_55353 (h0 : complete_lattice (linear_ordered_field empty)) : is_atomistic (linear_ordered_field empty) := sorry --non-trivial
lemma new_lemma_55354 (h0 : topological_space (add_cancel_monoid (finset (finset ennreal)))) : path_connected_space (add_cancel_monoid (finset (finset ennreal))) := sorry --non-trivial
lemma new_lemma_55355 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (boolean_algebra.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55356 (h0 : functor.add_const Prop (has_zero unsigned)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_55357 (h0 : monoid (with_one (has_inv (has_inv linarith.comp_source)))) : monoid.fg (with_one (has_inv (has_inv linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_55358 (h0 : functor.add_const (topological_space (semigroup empty)) empty) : @irreducible_space.{0} (semigroup.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_55359 (h0 : group (has_pos_part (has_Inf (ring pos)))) : group.fg (has_pos_part (has_Inf (ring pos))) := sorry --non-trivial
lemma new_lemma_55360 (h0 : function.extfun (((Type -> Type) -> Type 1) -> Type 1) (function.extfun ((Type -> Type) -> Type 1))) : @irreducible_space.{0} (with_one.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) (@function.extfun_app.{3 3} (((Type → Type) → Type 1) → Type 1) (function.extfun.{3 2} ((Type → Type) → Type 1)) h0 (function.extfun.{2 2} (Type → Type))) (function.extfun.{2 1} Type)) topological_space.{0}) (with_one.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_55361 (h0 : functor.add_const (topological_space environment.implicit_infer_kind) (comm_group (comm_group name))) : @discrete_topology.{0} environment.implicit_infer_kind (@functor.add_const.run.{0 0} (topological_space.{0} environment.implicit_infer_kind) (comm_group.{0} (comm_group.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_55362 (h0 : group (has_norm (random_gen linarith.comp_source))) : group.fg (has_norm (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_55363 (h0 : ring (with_zero char)) : strong_rank_condition (with_zero char) := sorry --non-trivial
lemma new_lemma_55364 (h0 : function.extfun (Type 1) finset) : finset.nonempty (function.extfun_app h0 (ordered_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_55365 (h0 : ring (with_bot (has_top empty))) : rank_condition (with_bot (has_top empty)) := sorry --non-trivial
lemma new_lemma_55366 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : discrete_topology empty := sorry --non-trivial
lemma new_lemma_55367 (h5 : prod ereal ereal) : set.diagonal ereal h5 := sorry --non-trivial
lemma new_lemma_55368 (h0 : monoid (has_top (has_norm linarith.ineq))) : monoid.fg (has_top (has_norm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_55369 (h0 : not (ring (fintype (random_gen to_additive.value_type)) -> false)) : @is_domain.{0} (fintype.{0} (random_gen.{0} to_additive.value_type)) (@classical.by_contradiction'.{1} (ring.{0} (fintype.{0} (random_gen.{0} to_additive.value_type))) h0)  := sorry --non-trivial
lemma new_lemma_55370 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (comm_group.{0} ennreal) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (comm_group.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_55371 (h2 : topological_space (distrib fun_info)) : path_connected_space (distrib fun_info) := sorry --non-trivial
lemma new_lemma_55372 (h0 : topological_space (has_to_string (add_comm_monoid linarith.comp))) : topological_space.separable_space (has_to_string (add_comm_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_55373 (h1 : topological_space (semiring (has_norm linarith.ineq))) : path_connected_space (semiring (has_norm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_55374 (h0 : topological_space (mul_one_class (add_comm_semigroup string.iterator_imp))) : path_connected_space (mul_one_class (add_comm_semigroup string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_55375 (h0 : fin has_zero.zero) : @is_noetherian_ring.{0} (add_comm_monoid.{0} name) (@function.extfun_app.{2 1} Type semiring.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type semiring.{0}) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)) (add_comm_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_55376 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (has_union.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_union.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55377 (h0 : complete_lattice (add_comm_monoid (has_nndist Type))) : complete_lattice.is_Sup_finite_compact (add_comm_monoid (has_nndist Type)) := sorry --non-trivial
lemma new_lemma_55378 (h0 : functor.add_const (topological_space (has_Inf linarith.comp)) (ring linarith.comp)) : @preirreducible_space.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} linarith.comp)) (ring.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_55379 (h0 : not (topological_space (uniform_space (mul_one_class linarith.ineq)) -> false)) : @t0_space.{0} (uniform_space.{0} (mul_one_class.{0} linarith.ineq)) (@classical.by_contradiction'.{1} (topological_space.{0} (uniform_space.{0} (mul_one_class.{0} linarith.ineq))) h0)  := sorry --non-trivial
lemma new_lemma_55380 (h0 : topological_space (with_one unsigned)) : discrete_topology (with_one unsigned) := sorry --non-trivial
lemma new_lemma_55381 (h1 : topological_space (distrib_lattice (has_norm linarith.ineq))) : t0_space (distrib_lattice (has_norm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_55382 (h0 : ring (linear_ordered_comm_group num) -> Prop) (h1 : Exists (fun (x : ring (linear_ordered_comm_group num)), h0 x)) : @is_domain.{0} (linear_ordered_comm_group.{0} num) (@classical.some.{1} (ring.{0} (linear_ordered_comm_group.{0} num)) h0 h1)  := sorry --non-trivial
lemma new_lemma_55383 (h0 : functor.add_const (monoid (mul_zero_class empty)) empty) : @monoid.fg.{0} (mul_zero_class.{0} empty) (@functor.add_const.run.{0 0} (monoid.{0} (mul_zero_class.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_55384 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (has_bot.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_bot.{0} name))  := sorry --non-trivial
lemma new_lemma_55385 (h0 : topological_space (ordered_ring (ordered_ring num))) : preirreducible_space (ordered_ring (ordered_ring num)) := sorry --non-trivial
lemma new_lemma_55386 (h0 : topological_space (with_bot (has_norm unsigned))) : t0_space (with_bot (has_norm unsigned)) := sorry --non-trivial
lemma new_lemma_55387 (h10 : topological_space char) (h11 : ring (topological_space.opens char)) : strong_rank_condition (topological_space.opens char) := sorry --non-trivial
lemma new_lemma_55388 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preconnected_space.{0} (has_inter.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_inter.{0} num))  := sorry --non-trivial
lemma new_lemma_55389 (h0 : uniform_space (random_gen unsigned)) : separated_space (random_gen unsigned) := sorry --non-trivial
lemma new_lemma_55390 (h0 : functor.add_const (finset (left_cancel_monoid unsigned)) congr_arg_kind) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_55391 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_noetherian_ring.{0} (ordered_cancel_add_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type semiring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 semiring.{0}) (ordered_cancel_add_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_55392 (h0 : group (random_gen (has_norm (random_gen (random_gen (has_norm linarith.ineq)))))) : group.fg (random_gen (has_norm (random_gen (random_gen (has_norm linarith.ineq))))) := sorry --non-trivial
lemma new_lemma_55393 (h0 : topological_space (has_inv (has_ssubset (has_ssubset (has_nnnorm (has_ssubset fun_info)))))) (h1 : set (has_inv (has_ssubset (has_ssubset (has_nnnorm (has_ssubset fun_info)))))) : is_open h1 := sorry --non-trivial
lemma new_lemma_55394 (h0 : function.extfun Type group) : @is_simple_group.{0} (finset.{0} pos) (@function.extfun_app.{2 1} Type group.{0} h0 (finset.{0} pos))  := sorry --non-trivial
lemma new_lemma_55395 (h0 : complete_lattice (canonically_ordered_monoid (has_bot (sub_neg_monoid Type)))) : is_atomistic (canonically_ordered_monoid (has_bot (sub_neg_monoid Type))) := sorry --non-trivial
lemma new_lemma_55396 (h0 : not (complete_lattice (uniform_space string_imp) -> false)) : complete_lattice.is_Sup_finite_compact (uniform_space string_imp) := sorry --non-trivial
lemma new_lemma_55397 (h0 : topological_space (comm_group (has_neg_part (normed_comm_ring name)))) : t0_space (comm_group (has_neg_part (normed_comm_ring name))) := sorry --non-trivial
lemma new_lemma_55398 (h0 : functor.add_const (topological_space (has_inter empty)) num) : @path_connected_space.{0} (has_inter.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_inter.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_55399 (h0 : complete_lattice (ordered_comm_ring (ordered_comm_ring real))) : complete_lattice.is_Sup_finite_compact (ordered_comm_ring (ordered_comm_ring real)) := sorry --non-trivial
lemma new_lemma_55400 (h0 : add_group (linear_ordered_add_comm_group reducibility_hints)) : is_add_cyclic (linear_ordered_add_comm_group reducibility_hints) := sorry --non-trivial
lemma new_lemma_55401 (h0 : functor.add_const (topological_space (ordered_comm_monoid Type)) (ring pos)) : @preconnected_space.{1} (ordered_comm_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (ordered_comm_monoid.{1} Type)) (ring.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_55402 (h0 : functor.add_const (add_monoid (semigroup name)) linarith.comp) : @add_monoid.fg.{0} (semigroup.{0} name) (@functor.add_const.run.{0 0} (add_monoid.{0} (semigroup.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55403 (h0 : topological_space (normed_lattice_add_comm_group (has_Inf (has_Inf real)))) : locally_compact_space (normed_lattice_add_comm_group (has_Inf (has_Inf real))) := sorry --non-trivial
lemma new_lemma_55404 (h0 : topological_space (generalized_boolean_algebra (has_Inf linarith.comp))) : sequential_space (generalized_boolean_algebra (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_55405 (h0 : topological_space (simple_graph (has_ssubset linarith.ineq))) : path_connected_space (simple_graph (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_55406 (h0 : has_mem.mem complete_lattice has_emptyc.emptyc) : @is_atomistic.{0} to_additive.value_type (@function.extfun_app.{2 1} Type complete_lattice.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) complete_lattice.{0} h0) to_additive.value_type)  := sorry --non-trivial
lemma new_lemma_55407 (h0 : topological_space (metric_space (has_top unsigned))) : t0_space (metric_space (has_top unsigned)) := sorry --non-trivial
lemma new_lemma_55408 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} linarith.comp_source (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 topological_space.{0}) linarith.comp_source)  := sorry --non-trivial
lemma new_lemma_55409 (h0 : function.extfun Type topological_space) : @t0_space.{0} (normed_lattice_add_comm_group.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_lattice_add_comm_group.{0} name))  := sorry --non-trivial
lemma new_lemma_55410 (h0 : group (has_Inf (has_add (has_add pos)))) : group.fg (has_Inf (has_add (has_add pos))) := sorry --non-trivial
lemma new_lemma_55411 (h0 : uniform_space (normed_comm_ring (mul_zero_class (has_add unsigned)))) : complete_space (normed_comm_ring (mul_zero_class (has_add unsigned))) := sorry --non-trivial
lemma new_lemma_55412 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (add_cancel_monoid.{0} num) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (add_cancel_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_55413 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (add_cancel_monoid (option ennreal))) := sorry --non-trivial
lemma new_lemma_55414 (h0 : not (function.extfun Type uniform_space -> false)) : @separated_space.{0} (linear_ordered_comm_ring.{0} num) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (linear_ordered_comm_ring.{0} num))  := sorry --non-trivial
lemma new_lemma_55415 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (monoid.{0} (option.{0} congr_arg_kind)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid.{0} (option.{0} congr_arg_kind)))  := sorry --non-trivial
lemma new_lemma_55416 (h0 : has_mem.mem (has_top to_additive.value_type) has_emptyc.emptyc) : @is_compactly_generated.{0} (has_top.{0} to_additive.value_type) (@finset.pi.empty.{1 0} Type complete_lattice.{0} (has_top.{0} to_additive.value_type) h0)  := sorry --non-trivial
lemma new_lemma_55417 (h0 : topological_space (has_norm (comm_ring to_additive.value_type))) : irreducible_space (has_norm (comm_ring to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_55418 (h0 : topological_space (comm_group (has_neg_part name))) : t1_space (comm_group (has_neg_part name)) := sorry --non-trivial
lemma new_lemma_55419 (h0 : list (has_inv (has_norm (random_gen (has_norm (monoid fun_info)))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_55420 (h0 : ring (has_top (has_nnnorm linarith.comp_source))) : strong_rank_condition (has_top (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_55421 (h0 : ring (ring (has_to_string pos))) : is_domain (ring (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_55422 (h0 : add_monoid (semigroup (option pos))) : add_monoid.fg (semigroup (option pos)) := sorry --non-trivial
lemma new_lemma_55423 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (complete_semilattice_Sup.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (complete_semilattice_Sup.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_55424 (h0 : ordered_add_comm_monoid (comm_group (has_nndist (option (has_to_string (has_to_string ennreal)))))) : archimedean (comm_group (has_nndist (option (has_to_string (has_to_string ennreal))))) := sorry --non-trivial
lemma new_lemma_55425 (h0 : topological_space (id (semiring (semiring empty)))) : t0_space (id (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_55426 (h0 : topological_space (denumerable (semi_normed_ring to_additive.value_type))) : totally_disconnected_space (denumerable (semi_normed_ring to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_55427 (h0 : not (ring (has_add to_additive.value_type) -> false)) : @rank_condition.{0} (has_add.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (has_add.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_55428 (h0 : topological_space (dlist (random_gen (has_inv to_additive.value_type)))) : irreducible_space (dlist (random_gen (has_inv to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_55429 (h0 : not (topological_space (fintype char) -> false)) : @path_connected_space.{0} (fintype.{0} char) (@classical.by_contradiction'.{1} (topological_space.{0} (fintype.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_55430 (h0 : topological_space (random_gen (add_cancel_comm_monoid linarith.comp_source))) : totally_disconnected_space (random_gen (add_cancel_comm_monoid linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_55431 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (comm_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (comm_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55432 (h0 : functor.add_const (topological_space (ring Type)) (metric_space Type)) : @normal_space.{1} (ring.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (ring.{1} Type)) (metric_space.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_55433 (h0 : semiring (has_inner (option (option (option num))) unsigned)) : is_noetherian_ring (has_inner (option (option (option num))) unsigned) := sorry --non-trivial
lemma new_lemma_55434 (h0 : add_group (linear_ordered_field (has_add (finset pos)))) : is_add_cyclic (linear_ordered_field (has_add (finset pos))) := sorry --non-trivial
lemma new_lemma_55435 (h0 : monoid (finset name)) : monoid.fg (finset name) := sorry --non-trivial
lemma new_lemma_55436 (h0 : semiring (has_norm (has_norm num))) : is_noetherian_ring (has_norm (has_norm num)) := sorry --non-trivial
lemma new_lemma_55437 (h0 : uniform_space (add_comm_semigroup (add_comm_semigroup enat))) : complete_space (add_comm_semigroup (add_comm_semigroup enat)) := sorry --non-trivial
lemma new_lemma_55438 (h0 : add_monoid (ring ennreal)) : add_monoid.fg (ring ennreal) := sorry --non-trivial
lemma new_lemma_55439 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (linear_ordered_add_comm_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (linear_ordered_add_comm_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55440 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @unique_factorization_monoid.{0} (measure_theory.measure_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 cancel_comm_monoid_with_zero.{0}) (measure_theory.measure_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55441 (h0 : function.extfun Type (functor.add_const (topological_space ennreal))) : normal_space ennreal := sorry --non-trivial
lemma new_lemma_55442 (h0 : uniform_space (dlist (has_nnnorm (random_gen string_imp)))) : complete_space (dlist (has_nnnorm (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_55443 (h0 : ordered_add_comm_monoid (has_neg (has_to_string pos))) : archimedean (has_neg (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_55444 (h0 : ring (has_lt enat)) : rank_condition (has_lt enat) := sorry --non-trivial
lemma new_lemma_55445 (h0 : topological_space (sub_neg_monoid (has_pos_part (has_add (has_Inf (has_Inf Type)))))) : t1_space (sub_neg_monoid (has_pos_part (has_add (has_Inf (has_Inf Type))))) := sorry --non-trivial
lemma new_lemma_55446 (h0 : complete_lattice (mul_one_class enat)) : is_compactly_generated (mul_one_class enat) := sorry --non-trivial
lemma new_lemma_55447 (h0 : functor.add_const (topological_space (semigroup Type)) name) : @totally_disconnected_space.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (semigroup.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_55448 (h0 : functor.add_const (functor.add_const (complete_lattice (add_left_cancel_semigroup empty)) empty) num) : @complete_lattice.is_Sup_finite_compact.{0} (add_left_cancel_semigroup.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (add_left_cancel_semigroup.{0} empty)) empty (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (complete_lattice.{0} (add_left_cancel_semigroup.{0} empty)) empty) num h0))  := sorry --non-trivial
lemma new_lemma_55449 (h0 : not (add_group (id linarith.comp) -> false)) : @is_add_cyclic.{0} (@id.{2} Type linarith.comp) (@classical.by_contradiction'.{1} (add_group.{0} (@id.{2} Type linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_55450 (h0 : cancel_comm_monoid_with_zero (plift (has_top (semiring congr_arg_kind)))) : unique_factorization_monoid (plift (has_top (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_55451 (h0 : topological_space (has_star unsigned)) : t1_space (has_star unsigned) := sorry --non-trivial
lemma new_lemma_55452 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @topological_space.separable_space.{0} (ring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (ring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_55453 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring name)) name) : @totally_separated_space.{0} (canonically_ordered_comm_semiring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_comm_semiring.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_55454 (h0 : topological_space (add_cancel_monoid (option name))) : t0_space (add_cancel_monoid (option name)) := sorry --non-trivial
lemma new_lemma_55455 (h0 : not (ring (has_div (distrib linarith.ineq)) -> false)) : @rank_condition.{0} (has_div.{0} (distrib.{0} linarith.ineq)) (@classical.by_contradiction'.{1} (ring.{0} (has_div.{0} (distrib.{0} linarith.ineq))) h0)  := sorry --non-trivial
lemma new_lemma_55456 (h0 : functor.add_const (group (complete_distrib_lattice unsigned)) congr_arg_kind) : @is_cyclic.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (complete_distrib_lattice.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_55457 (h0 : functor.add_const (group Type) pos) : @is_cyclic.{1} Type (@functor.add_const.run.{1 0} (group.{1} Type) pos h0)  := sorry --non-trivial
lemma new_lemma_55458 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @t1_space.{0} (has_zero.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (has_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_55459 (h0 : topological_space (has_Inf Type)) : loc_path_connected_space (has_Inf Type) := sorry --non-trivial
lemma new_lemma_55460 (h0 : functor.add_const (topological_space (has_add real)) real) : @path_connected_space.{0} (has_add.{0} real) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} real)) real h0)  := sorry --non-trivial
lemma new_lemma_55461 (h0 : functor.add_const (ring (option empty)) empty) : @strong_rank_condition.{0} (option.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (option.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_55462 (h0 : filter (left_cancel_monoid unsigned)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55463 (h0 : semiring linarith.ineq) (h1 : linarith.ineq) : even h1 := sorry --non-trivial
lemma new_lemma_55464 (h0 : topological_space (dlist (random_gen (random_gen fun_info)))) : irreducible_space (dlist (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_55465 (h0 : nat) (h1 : fin (nat.succ h0) -> list Prop) (h2 : fin h0) : id (list.head (matrix.vec_tail h1 h2)) := sorry --non-trivial
lemma new_lemma_55466 (h0 : filter (has_Sup congr_arg_kind)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55467 (h0 : measurable_space string.iterator_imp) (h1 : set string.iterator_imp) : measurable_set h1 := sorry --non-trivial
lemma new_lemma_55468 (h1 : uniform_space (mul_one_class (normed_field (mul_one_class enat)))) : complete_space (mul_one_class (normed_field (mul_one_class enat))) := sorry --non-trivial
lemma new_lemma_55469 (h0 : filter (has_nnnorm (linear_ordered_add_comm_group char))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55470 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (linear_ordered_comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (linear_ordered_comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55471 (h0 : ring (has_emptyc (has_top congr_arg_kind))) : strong_rank_condition (has_emptyc (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_55472 (h0 : function.extfun Type ring) : @is_domain.{0} (with_bot.{0} linarith.ineq) (@function.extfun_app.{2 1} Type ring.{0} h0 (with_bot.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_55473 (h0 : complete_lattice (pseudo_metric_space (option (option (option (option pos)))))) : is_compactly_generated (pseudo_metric_space (option (option (option (option pos))))) := sorry --non-trivial
lemma new_lemma_55474 (h0 : topological_space (random_gen (mul_one_class (mul_one_class fun_info)))) : t0_space (random_gen (mul_one_class (mul_one_class fun_info))) := sorry --non-trivial
lemma new_lemma_55475 (h0 : topological_space (boolean_algebra (has_add (has_add name)))) : normal_space (boolean_algebra (has_add (has_add name))) := sorry --non-trivial
lemma new_lemma_55476 (h0 : not (has_mem.mem (has_emptyc linarith.ineq) has_emptyc.emptyc -> false)) : @t0_space.{0} (has_emptyc.{0} linarith.ineq) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_emptyc.{0} linarith.ineq) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_emptyc.{0} linarith.ineq) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_55477 (h0 : topological_space (add_group (semiring (semiring unsigned)))) : topological_space.separable_space (add_group (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_55478 (h0 : functor.add_const (group (has_zero linarith.comp)) Type) : @is_simple_group.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 1} (group.{0} (has_zero.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_55479 (h0 : ring (simple_graph (mul_one_class environment.projection_info))) : rank_condition (simple_graph (mul_one_class environment.projection_info)) := sorry --non-trivial
lemma new_lemma_55480 (h0 : filter (boolean_algebra.core ennreal)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55481 (h0 : functor.add_const (topological_space (has_to_string pos)) pos) : @path_connected_space.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_55482 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (linear_ordered_add_comm_group.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (linear_ordered_add_comm_group.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_55483 (h0 : add_group (normed_group (random_gen to_additive.value_type))) : is_add_cyclic (normed_group (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_55484 (h0 : functor.add_const (add_group (semigroup Type)) environment.implicit_infer_kind) : @is_add_cyclic.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (add_group.{1} (semigroup.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_55485 (h0 : not (group (normed_field (normed_field linarith.comp_source)) -> false)) : @is_cyclic.{0} (normed_field.{0} (normed_field.{0} linarith.comp_source)) (@classical.by_contradiction'.{1} (group.{0} (normed_field.{0} (normed_field.{0} linarith.comp_source))) h0)  := sorry --non-trivial
lemma new_lemma_55486 (h0 : cancel_comm_monoid_with_zero (boolean_algebra (comm_group (comm_group name)))) : unique_factorization_monoid (boolean_algebra (comm_group (comm_group name))) := sorry --non-trivial
lemma new_lemma_55487 (h1 : complete_lattice (random_gen (denumerable char))) : complete_lattice.is_Sup_finite_compact (random_gen (denumerable char)) := sorry --non-trivial
lemma new_lemma_55488 (h0 : topological_space (has_top (has_top (has_norm linarith.comp)))) : t0_space (has_top (has_top (has_norm linarith.comp))) := sorry --non-trivial
lemma new_lemma_55489 (h0 : add_monoid (ordered_comm_monoid (has_Inf linarith.comp))) : add_monoid.fg (ordered_comm_monoid (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_55490 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (comm_ring.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (comm_ring.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_55491 (h0 : ring (has_star unsigned)) : is_principal_ideal_ring (has_star unsigned) := sorry --non-trivial
lemma new_lemma_55492 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @locally_compact_space.{0} (measurable_space.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (measurable_space.{0} num))  := sorry --non-trivial
lemma new_lemma_55493 (h1 : filter (comm_ring (has_nnnorm (has_nnnorm fun_info)))) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_55494 (h0 : fun_info -> fun_info -> bool) : is_dec_eq h0 := sorry --non-trivial
lemma new_lemma_55495 (h0 : not (function.extfun Type add_group -> false)) : @is_add_cyclic.{0} (random_gen.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_group.{0}) h0) (random_gen.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55496 (h0 : topological_space ordering) : totally_disconnected_space ordering := sorry --non-trivial
lemma new_lemma_55497 (h0 : topological_space (comm_group (has_zero (has_neg (has_neg (has_neg (has_to_string linarith.comp))))))) : t1_space (comm_group (has_zero (has_neg (has_neg (has_neg (has_to_string linarith.comp)))))) := sorry --non-trivial
lemma new_lemma_55498 (h0 : topological_space (non_assoc_semiring num)) : path_connected_space (non_assoc_semiring num) := sorry --non-trivial
lemma new_lemma_55499 (h1 : ring (normed_group char)) : strong_rank_condition (normed_group char) := sorry --non-trivial
lemma new_lemma_55500 (h0 : topological_space (ordered_comm_ring (has_Inf (has_Inf real)))) : path_connected_space (ordered_comm_ring (has_Inf (has_Inf real))) := sorry --non-trivial
lemma new_lemma_55501 (h0 : not (filter (distrib_lattice to_additive.value_type) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_55502 (h0 : list (has_add (has_neg name))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_55503 (h0 : topological_space (mul_zero_class (has_add Type))) : locally_compact_space (mul_zero_class (has_add Type)) := sorry --non-trivial
lemma new_lemma_55504 (h0 : functor.add_const (ring (canonically_ordered_comm_semiring Type)) environment.implicit_infer_kind) : @rank_condition.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (canonically_ordered_comm_semiring.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_55505 (h0 : complete_lattice (has_ssubset (has_lt linarith.comp_source))) : complete_lattice.is_Sup_finite_compact (has_ssubset (has_lt linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_55506 (h0 : topological_space (ordered_comm_ring (has_add linarith.comp))) : topological_space.separable_space (ordered_comm_ring (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_55507 (h0 : ring (canonically_ordered_comm_semiring (has_neg_part Type))) : rank_condition (canonically_ordered_comm_semiring (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_55508 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (filter.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (filter.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55509 (h0 : topological_space (sub_neg_monoid (has_Inf (has_add (has_add pos))))) : irreducible_space (sub_neg_monoid (has_Inf (has_add (has_add pos)))) := sorry --non-trivial
lemma new_lemma_55510 (h0 : group (add_right_cancel_monoid (semiring congr_arg_kind))) : normalizer_condition (add_right_cancel_monoid (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_55511 (h0 : not (topological_space (complete_semilattice_Sup fun_info) -> false)) : @t0_space.{0} (complete_semilattice_Sup.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (complete_semilattice_Sup.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_55512 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (linear_ordered_add_comm_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (linear_ordered_add_comm_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55513 (h0 : not (function.extfun Type complete_lattice -> false)) : @complete_lattice.is_Sup_finite_compact.{0} string_imp (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) string_imp)  := sorry --non-trivial
lemma new_lemma_55514 (h0 : fun_info -> add_comm_semigroup std_gen -> add_comm_semigroup std_gen) (h2 : add_comm_semigroup std_gen -> Prop) : covariant fun_info (add_comm_semigroup std_gen) h0 (fun (h1 : add_comm_semigroup std_gen), h2) := sorry --non-trivial
lemma new_lemma_55515 (h0 : functor.add_const (topological_space (has_add name)) unsigned) : @preconnected_space.{0} (has_add.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_55516 (h0 : list (metric_space linarith.comp)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_55517 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (has_dist.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_dist.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_55518 (h0 : group (has_union (has_top congr_arg_kind))) : normalizer_condition (has_union (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_55519 (h0 : function.extfun Type group) : @is_cyclic.{0} (linear_ordered_field.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (linear_ordered_field.{0} empty))  := sorry --non-trivial
lemma new_lemma_55520 (h0 : functor.add_const (topological_space (boolean_algebra Type)) name) : @totally_separated_space.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (boolean_algebra.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_55521 (h0 : ring (rel (has_edist empty) (option unsigned))) : is_domain (rel (has_edist empty) (option unsigned)) := sorry --non-trivial
lemma new_lemma_55522 (h0 : list (with_one (random_gen (has_top fun_info)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_55523 (h0 : not (function.extfun Type topological_space -> false)) : @locally_compact_space.{0} (div_inv_monoid.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (div_inv_monoid.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_55524 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (has_sub.{0} unsigned) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (has_sub.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55525 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (normed_lattice_add_comm_group.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_lattice_add_comm_group.{0} real))  := sorry --non-trivial
lemma new_lemma_55526 (h0 : topological_space (mul_one_class (mul_one_class ereal))) (h1 : set (mul_one_class (mul_one_class ereal))) : is_path_connected h1 := sorry --non-trivial
lemma new_lemma_55527 (h0 : complete_lattice (has_Inf (has_add Type))) : is_compactly_generated (has_Inf (has_add Type)) := sorry --non-trivial
lemma new_lemma_55528 (h0 : set (set (has_inv fun_info))) : is_countably_spanning h0 := sorry --non-trivial
lemma new_lemma_55529 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (left_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (left_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_55530 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (simple_graph.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (simple_graph.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55531 (h0 : functor.add_const (ring (has_nndist unsigned)) pos) : @is_principal_ideal_ring.{0} (has_nndist.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (has_nndist.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_55532 (h0 : functor.comp ring ring Type) : @rank_condition.{1} (ring.{1} Type) (@functor.comp.run.{1 1 1} ring.{1} ring.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_55533 (h0 : topological_space (comm_group (has_neg Type))) : t0_space (comm_group (has_neg Type)) := sorry --non-trivial
lemma new_lemma_55534 (h0 : functor.add_const (complete_lattice (free_add_monoid congr_arg_kind)) (semiring unsigned)) : @is_atomistic.{0} (free_add_monoid.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (free_add_monoid.{0} congr_arg_kind)) (semiring.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_55535 (h0 : topological_space (mul_zero_class congr_arg_kind)) : preirreducible_space (mul_zero_class congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55536 (h0 : topological_space (add_left_cancel_semigroup congr_arg_kind)) : topological_space.separable_space (add_left_cancel_semigroup congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55537 (h0 : complete_lattice (non_assoc_semiring unsigned)) : complete_lattice.is_Sup_finite_compact (non_assoc_semiring unsigned) := sorry --non-trivial
lemma new_lemma_55538 (h0 : ring (add_group (has_top unsigned))) : is_domain (add_group (has_top unsigned)) := sorry --non-trivial
lemma new_lemma_55539 (h0 : not (filter (normed_group char) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_55540 (h0 : functor.comp uniform_space mul_zero_class name) : @complete_space.{0} (mul_zero_class.{0} name) (@functor.comp.run.{0 0 0} uniform_space.{0} mul_zero_class.{0} name h0)  := sorry --non-trivial
lemma new_lemma_55541 (h0 : ring (canonically_linear_ordered_monoid (has_to_string name))) : is_domain (canonically_linear_ordered_monoid (has_to_string name)) := sorry --non-trivial
lemma new_lemma_55542 (h0 : monoid (canonically_ordered_comm_semiring (has_pos_part (has_nndist (boolean_algebra.core pos))))) : monoid.fg (canonically_ordered_comm_semiring (has_pos_part (has_nndist (boolean_algebra.core pos)))) := sorry --non-trivial
lemma new_lemma_55543 (h0 : topological_space (normed_comm_ring empty)) : discrete_topology (normed_comm_ring empty) := sorry --non-trivial
lemma new_lemma_55544 (h0 : functor.add_const (uniform_space (free_add_monoid empty)) empty) : @separated_space.{0} (free_add_monoid.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (free_add_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_55545 (h0 : topological_space (has_zero (option unsigned))) : totally_separated_space (has_zero (option unsigned)) := sorry --non-trivial
lemma new_lemma_55546 (h0 : finset (complete_distrib_lattice (ring name))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_55547 (h0 : group (comm_group (add_comm_monoid (has_add (has_add environment.implicit_infer_kind))))) : is_simple_group (comm_group (add_comm_monoid (has_add (has_add environment.implicit_infer_kind)))) := sorry --non-trivial
lemma new_lemma_55548 (h0 : topological_space (random_gen (has_norm empty))) : totally_separated_space (random_gen (has_norm empty)) := sorry --non-trivial
lemma new_lemma_55549 (h0 : complete_lattice (canonically_ordered_comm_semiring (finset environment.implicit_infer_kind))) : is_atomistic (canonically_ordered_comm_semiring (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_55550 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (complete_semilattice_Sup.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (complete_semilattice_Sup.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_55551 (h0 : functor.add_const (topological_space (sub_neg_monoid linarith.comp)) linarith.comp) : @t0_space.{0} (sub_neg_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (sub_neg_monoid.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55552 (h0 : group (has_top (has_norm (semiring congr_arg_kind)))) : normalizer_condition (has_top (has_norm (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_55553 (h0 : ring (with_one (has_top (has_top linarith.comp_source)))) : strong_rank_condition (with_one (has_top (has_top linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_55554 (h0 : functor.add_const (topological_space (add_cancel_monoid linarith.comp)) pos) : @regular_space.{0} (add_cancel_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_55555 (h0 : finset (bin_tree (semiring congr_arg_kind))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_55556 (h0 : function.extfun nat fin) : @is_principal_ideal_ring.{0} (canonically_ordered_monoid.{0} pos) (@matrix.vec_empty.{0} (ring.{0} (canonically_ordered_monoid.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_55557 (h0 : group (has_repr (random_gen string_imp))) : normalizer_condition (has_repr (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_55558 (h0 : topological_space (non_assoc_semiring congr_arg_kind)) : irreducible_space (non_assoc_semiring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55559 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (@id.{2} Type unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (@id.{2} Type unsigned))  := sorry --non-trivial
lemma new_lemma_55560 (h0 : semiring name) : is_noetherian_ring name := sorry --non-trivial
lemma new_lemma_55561 (h0 : group (with_bot (random_gen fun_info))) : normalizer_condition (with_bot (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_55562 (h0 : functor.add_const (topological_space (normed_comm_ring Type)) environment.implicit_infer_kind) : @locally_compact_space.{1} (normed_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (normed_comm_ring.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_55563 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (left_cancel_semigroup unsigned)) := sorry --non-trivial
lemma new_lemma_55564 (h0 : not (uniform_space (left_cancel_semigroup empty) -> false)) : @separated_space.{0} (left_cancel_semigroup.{0} empty) (@classical.by_contradiction'.{1} (uniform_space.{0} (left_cancel_semigroup.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_55565 (h1 : complete_lattice (semi_normed_ring linarith.ineq)) : complete_lattice.is_Sup_finite_compact (semi_normed_ring linarith.ineq) := sorry --non-trivial
lemma new_lemma_55566 (h0 : uniform_space (canonically_ordered_comm_semiring linarith.comp)) : complete_space (canonically_ordered_comm_semiring linarith.comp) := sorry --non-trivial
lemma new_lemma_55567 (h0 : group (topological_space (has_nnnorm linarith.comp_source))) : is_cyclic (topological_space (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_55568 (h0 : set (set (random_gen string_imp))) : is_countably_spanning h0 := sorry --non-trivial
lemma new_lemma_55569 (h0 : topological_space (comm_ring (has_ssubset linarith.ineq))) : t0_space (comm_ring (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_55570 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} linarith.comp_source (@function.extfun_app.{2 1} Type topological_space.{0} h0 linarith.comp_source)  := sorry --non-trivial
lemma new_lemma_55571 (h0 : complete_lattice (measurable_space (has_norm fun_info))) : is_atomistic (measurable_space (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_55572 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (has_to_string.{0} unsigned) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (has_to_string.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55573 (h2 : add_group (normed_field (normed_field (normed_field char)))) : is_add_cyclic (normed_field (normed_field (normed_field char))) := sorry --non-trivial
lemma new_lemma_55574 (h0 : functor.add_const (ordered_comm_monoid (semigroup name)) Type) : @has_exists_mul_of_le.{0} (semigroup.{0} name) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (semigroup.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_55575 (h0 : topological_space (ordered_comm_monoid (has_Inf linarith.comp))) : locally_compact_space (ordered_comm_monoid (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_55576 (h0 : functor.add_const (function.extfun Type ring) pos) : @strong_rank_condition.{0} (has_to_string.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) pos h0) (has_to_string.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_55577 (h0 : group (has_neg (ring (has_nndist (has_nndist (has_pos_part Type)))))) : group.fg (has_neg (ring (has_nndist (has_nndist (has_pos_part Type))))) := sorry --non-trivial
lemma new_lemma_55578 (h1 : ring (random_gen linarith.comp_source)) : is_domain (random_gen linarith.comp_source) := sorry --non-trivial
lemma new_lemma_55579 (h1 : nat) (h2 : vector (group (normed_field char)) (has_add.add h1 has_one.one)) : @is_cyclic.{0} (normed_field.{0} char) (@vector.last.{0} h1 (group.{0} (normed_field.{0} char)) h2)  := sorry --non-trivial
lemma new_lemma_55580 (h0 : not (topological_space (topological_space linarith.ineq) -> false)) : @path_connected_space.{0} (topological_space.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (topological_space.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_55581 (h0 : fin has_zero.zero) : @regular_space.{0} (has_pos_part.{0} name) (@matrix.vec_empty.{0} (topological_space.{0} (has_pos_part.{0} name)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)))  := sorry --non-trivial
lemma new_lemma_55582 (h0 : uniform_space (ring empty)) : complete_space (ring empty) := sorry --non-trivial
lemma new_lemma_55583 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (ordered_cancel_add_comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (ordered_cancel_add_comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_55584 (h0 : functor.add_const (function.extfun Type list) Type) : palindrome (function.extfun_app (functor.add_const.run h0) (has_neg pos)) := sorry --non-trivial
lemma new_lemma_55585 (h0 : functor.comp topological_space finset unsigned) : @sequential_space.{0} (finset.{0} unsigned) (@functor.comp.run.{0 0 0} topological_space.{0} finset.{0} unsigned h0)  := sorry --non-trivial
lemma new_lemma_55586 (h0 : functor.comp topological_space has_nndist name) : @normal_space.{0} (has_nndist.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_nndist.{0} name h0)  := sorry --non-trivial
lemma new_lemma_55587 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (semigroup.{0} (option.{0} pos)) (@function.extfun_app.{2 1} Type semiring.{0} h0 (semigroup.{0} (option.{0} pos)))  := sorry --non-trivial
lemma new_lemma_55588 (h0 : topological_space ordering) (h1 : add_group ordering) : topological_add_group ordering := sorry --non-trivial
lemma new_lemma_55589 (h0 : topological_space (normed_comm_ring (has_neg (has_neg pos)))) : loc_path_connected_space (normed_comm_ring (has_neg (has_neg pos))) := sorry --non-trivial
lemma new_lemma_55590 (h0 : functor.add_const (filter (simple_graph Type)) name) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_55591 (h0 : functor.add_const (functor.add_const (monoid (left_cancel_monoid num)) (option (option unsigned))) num) : @monoid.fg.{0} (left_cancel_monoid.{0} num) (@functor.add_const.run.{0 0} (monoid.{0} (left_cancel_monoid.{0} num)) (option.{0} (option.{0} unsigned)) (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (monoid.{0} (left_cancel_monoid.{0} num)) (option.{0} (option.{0} unsigned))) num h0))  := sorry --non-trivial
lemma new_lemma_55592 (h0 : cancel_comm_monoid_with_zero (non_assoc_semiring (option (option (option empty))))) : unique_factorization_monoid (non_assoc_semiring (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_55593 (h0 : functor.add_const (ordered_comm_monoid (normed_comm_ring pos)) (has_neg (finset Type))) : @has_exists_mul_of_le.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (normed_comm_ring.{0} pos)) (has_neg.{1} (finset.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_55594 (h1 : topological_space congr_arg_kind) : totally_separated_space congr_arg_kind := sorry --non-trivial
lemma new_lemma_55595 (h0 : topological_space (ring (has_pos_part (has_neg linarith.comp)))) : discrete_topology (ring (has_pos_part (has_neg linarith.comp))) := sorry --non-trivial
lemma new_lemma_55596 (h0 : topological_space (non_unital_non_assoc_semiring reducibility_hints)) : path_connected_space (non_unital_non_assoc_semiring reducibility_hints) := sorry --non-trivial
lemma new_lemma_55597 (h0 : functor.comp filter ring Type) : filter.ne_bot (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_55598 (h0 : group (semigroup (has_add (ordered_ring linarith.comp)))) : is_simple_group (semigroup (has_add (ordered_ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_55599 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (has_nndist.{0} linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_nndist.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55600 (h0 : complete_lattice (metric_space linarith.comp_source)) : is_compactly_generated (metric_space linarith.comp_source) := sorry --non-trivial
lemma new_lemma_55601 (h0 : std_gen -> std_gen) : function.has_right_inverse h0 := sorry --non-trivial
lemma new_lemma_55602 (h0 : topological_space (ordered_comm_monoid name)) : preconnected_space (ordered_comm_monoid name) := sorry --non-trivial
lemma new_lemma_55603 (h0 : topological_space (boolean_algebra.core (has_neg (has_neg name)))) : t0_space (boolean_algebra.core (has_neg (has_neg name))) := sorry --non-trivial
lemma new_lemma_55604 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (is_R_or_C.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (is_R_or_C.{0} empty))  := sorry --non-trivial
lemma new_lemma_55605 (h0 : functor.add_const (function.extfun Type list) unsigned) : list.nodup (function.extfun_app (functor.add_const.run h0) (has_inter unsigned)) := sorry --non-trivial
lemma new_lemma_55606 (h0 : topological_space (has_neg_part name)) : sequential_space (has_neg_part name) := sorry --non-trivial
lemma new_lemma_55607 (h0 : topological_space (has_neg reducibility_hints)) (h1 : preorder (has_neg reducibility_hints)) : order_topology (has_neg reducibility_hints) := sorry --non-trivial
lemma new_lemma_55608 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (add_cancel_comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_cancel_comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55609 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (add_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55610 (h0 : functor.add_const (topological_space (is_R_or_C empty)) empty) : @t0_space.{0} (is_R_or_C.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (is_R_or_C.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_55611 (h0 : function.extfun Type topological_space) : @normal_space.{0} (has_norm.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_norm.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55612 (h0 : function.extfun Type ring) : @rank_condition.{0} (has_top.{0} num) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_top.{0} num))  := sorry --non-trivial
lemma new_lemma_55613 (h0 : not (filter (has_inv (has_compl name)) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_55614 (h0 : functor.add_const (topological_space (has_nndist pos)) name) : @totally_disconnected_space.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_55615 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @separated_space.{1} (normed_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) uniform_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 uniform_space.{1}) (normed_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_55616 (h0 : functor.add_const (uniform_space (add_cancel_monoid name)) environment.implicit_infer_kind) : @separated_space.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (add_cancel_monoid.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_55617 (h0 : filter (topological_space (random_gen fun_info))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55618 (h0 : functor.comp add_group boolean_algebra.core Type) : @is_add_cyclic.{1} (boolean_algebra.core.{1} Type) (@functor.comp.run.{1 1 1} add_group.{1} boolean_algebra.core.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_55619 (h0 : ring (cancel_monoid (comm_group (comm_group ennreal)))) : strong_rank_condition (cancel_monoid (comm_group (comm_group ennreal))) := sorry --non-trivial
lemma new_lemma_55620 (h0 : not (topological_space (non_assoc_semiring (semiring (semiring (semiring (semiring empty))))) -> false)) : @preirreducible_space.{0} (non_assoc_semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} empty))))) (@classical.by_contradiction'.{1} (topological_space.{0} (non_assoc_semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} empty)))))) h0)  := sorry --non-trivial
lemma new_lemma_55621 (h0 : functor.add_const (topological_space (ring name)) (has_add linarith.comp)) : @discrete_topology.{0} (ring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} name)) (has_add.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_55622 (h0 : ring (boolean_algebra (has_to_string unsigned))) : is_principal_ideal_ring (boolean_algebra (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_55623 (h0 : not (group (with_one empty) -> false)) : @normalizer_condition.{0} (with_one.{0} empty) (@classical.by_contradiction'.{1} (group.{0} (with_one.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_55624 (h0 : topological_space (boolean_algebra (comm_group (has_zero unsigned)))) : preconnected_space (boolean_algebra (comm_group (has_zero unsigned))) := sorry --non-trivial
lemma new_lemma_55625 (h0 : add_group (distrib to_additive.value_type)) : is_add_cyclic (distrib to_additive.value_type) := sorry --non-trivial
lemma new_lemma_55626 (h0 : complete_lattice (has_bot Type)) : complete_lattice.is_Sup_finite_compact (has_bot Type) := sorry --non-trivial
lemma new_lemma_55627 (h0 : functor.add_const (uniform_space (has_zero linarith.comp)) name) : @complete_space.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_zero.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_55628 (h0 : topological_space (semigroup (normed_linear_ordered_group (ring (ring Type))))) : topological_space.separable_space (semigroup (normed_linear_ordered_group (ring (ring Type)))) := sorry --non-trivial
lemma new_lemma_55629 (h0 : semiring (add_comm_monoid name)) : is_noetherian_ring (add_comm_monoid name) := sorry --non-trivial
lemma new_lemma_55630 (h0 : topological_space (comm_group (has_nndist pos))) : totally_separated_space (comm_group (has_nndist pos)) := sorry --non-trivial
lemma new_lemma_55631 (h0 : topological_space (has_add (has_Inf real))) : loc_path_connected_space (has_add (has_Inf real)) := sorry --non-trivial
lemma new_lemma_55632 (h0 : ring (add_comm_monoid (comm_group (comm_group (has_neg_part Type))))) : is_domain (add_comm_monoid (comm_group (comm_group (has_neg_part Type)))) := sorry --non-trivial
lemma new_lemma_55633 (h0 : uniform_space (denumerable linarith.ineq)) : complete_space (denumerable linarith.ineq) := sorry --non-trivial
lemma new_lemma_55634 (h0 : fin has_zero.zero) : @locally_compact_space.{0} (has_Inf.{0} (has_Inf.{0} (has_add.{0} (has_Inf.{0} (has_Inf.{0} real))))) (@matrix.vec_empty.{0} (topological_space.{0} (has_Inf.{0} (has_Inf.{0} (has_add.{0} (has_Inf.{0} (has_Inf.{0} real)))))) h0)  := sorry --non-trivial
lemma new_lemma_55635 (h0 : ring (encodable (random_gen linarith.comp_source))) : strong_rank_condition (encodable (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_55636 (h0 : topological_space (comm_semigroup (sub_neg_monoid linarith.comp))) : path_connected_space (comm_semigroup (sub_neg_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_55637 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (has_neg_part.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_neg_part.{0} pos))  := sorry --non-trivial
lemma new_lemma_55638 (h0 : has_mem.mem group has_emptyc.emptyc) : @is_cyclic.{0} to_additive.value_type (@function.extfun_app.{2 1} Type group.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) group.{0} h0) to_additive.value_type)  := sorry --non-trivial
lemma new_lemma_55639 (h0 : functor.add_const (ring name) num) : @is_principal_ideal_ring.{0} name (@functor.add_const.run.{0 0} (ring.{0} name) num h0)  := sorry --non-trivial
lemma new_lemma_55640 (h0 : ring (linear_ordered_comm_group_with_zero (mul_one_class environment.projection_info))) : is_domain (linear_ordered_comm_group_with_zero (mul_one_class environment.projection_info)) := sorry --non-trivial
lemma new_lemma_55641 (h0 : function.extfun Type topological_space) : t1_space empty := sorry --non-trivial
lemma new_lemma_55642 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @sequential_space.{0} (pseudo_metric_space.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (pseudo_metric_space.{0} pos))  := sorry --non-trivial
lemma new_lemma_55643 (h0 : functor.add_const (topological_space (complete_distrib_lattice pos)) real) : @t1_space.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} pos)) real h0)  := sorry --non-trivial
lemma new_lemma_55644 (h0 : group (has_norm (random_gen linarith.comp))) : group.fg (has_norm (random_gen linarith.comp)) := sorry --non-trivial
lemma new_lemma_55645 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (add_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (add_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55646 (h1 : has_lt fun_info) : no_max_order fun_info := sorry --non-trivial
lemma new_lemma_55647 (h0 : group (simple_graph (has_add Type))) : group.fg (simple_graph (has_add Type)) := sorry --non-trivial
lemma new_lemma_55648 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (distrib.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (distrib.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_55649 (h0 : ordered_add_comm_monoid (non_assoc_semiring (option (option (option unsigned))))) : archimedean (non_assoc_semiring (option (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_55650 (h0 : functor.add_const (add_monoid (canonically_linear_ordered_monoid ennreal)) unsigned) : @add_monoid.fg.{0} (canonically_linear_ordered_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (add_monoid.{0} (canonically_linear_ordered_monoid.{0} ennreal)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_55651 (h0 : filter (has_zero (option (option (option pos))))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_55652 (h0 : complete_lattice (has_one (has_norm (has_norm (has_norm unsigned))))) : is_atomistic (has_one (has_norm (has_norm (has_norm unsigned)))) := sorry --non-trivial
lemma new_lemma_55653 (h0 : monoid (metric_space (semiring (semiring empty)))) : monoid.fg (metric_space (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_55654 (h0 : functor.add_const (cancel_comm_monoid_with_zero (ring Type)) linarith.comp) : @unique_factorization_monoid.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (cancel_comm_monoid_with_zero.{1} (ring.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55655 (h0 : filter (finset (has_nndist Type))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55656 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (has_nndist.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_nndist.{0} empty))  := sorry --non-trivial
lemma new_lemma_55657 (h0 : topological_space (normed_lattice_add_comm_group (has_add pos))) : loc_path_connected_space (normed_lattice_add_comm_group (has_add pos)) := sorry --non-trivial
lemma new_lemma_55658 (h0 : cancel_comm_monoid_with_zero (has_add (has_pos_part (sub_neg_monoid Type)))) : unique_factorization_monoid (has_add (has_pos_part (sub_neg_monoid Type))) := sorry --non-trivial
lemma new_lemma_55659 (h0 : group (has_compl (random_gen (random_gen linarith.ineq)))) : is_cyclic (has_compl (random_gen (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_55660 (h0 : functor.add_const (topological_space (add_comm_monoid ennreal)) Type) : @t1_space.{0} (add_comm_monoid.{0} ennreal) (@functor.add_const.run.{0 1} (topological_space.{0} (add_comm_monoid.{0} ennreal)) Type h0)  := sorry --non-trivial
lemma new_lemma_55661 (h0 : finset (linear_ordered_comm_monoid_with_zero num)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_55662 (h0 : fin has_zero.zero) : @complete_lattice.is_Sup_finite_compact.{0} (has_bot.{0} name) (@matrix.vec_empty.{0} (complete_lattice.{0} (has_bot.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_55663 (h0 : filter (has_neg_part (has_add name))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_55664 (h0 : not (topological_space (linear_ordered_comm_ring empty) -> false)) : @t1_space.{0} (linear_ordered_comm_ring.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (linear_ordered_comm_ring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_55665 (h0 : group (has_neg_part (comm_group (has_add (has_add Type))))) : is_simple_group (has_neg_part (comm_group (has_add (has_add Type)))) := sorry --non-trivial
lemma new_lemma_55666 (h0 : topological_space (add_cancel_monoid (option (option empty)))) : preirreducible_space (add_cancel_monoid (option (option empty))) := sorry --non-trivial
lemma new_lemma_55667 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (sub_neg_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (sub_neg_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55668 (h0 : topological_space (has_compl linarith.comp_source)) : totally_disconnected_space (has_compl linarith.comp_source) := sorry --non-trivial
lemma new_lemma_55669 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (has_Inf.{0} real) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_Inf.{0} real))  := sorry --non-trivial
lemma new_lemma_55670 (h2 : ring (non_unital_non_assoc_semiring to_additive.value_type)) : strong_rank_condition (non_unital_non_assoc_semiring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_55671 (h0 : function.extfun Type group) : @is_cyclic.{0} (has_inter.{0} num) (@function.extfun_app.{2 1} Type group.{0} h0 (has_inter.{0} num))  := sorry --non-trivial
lemma new_lemma_55672 (h0 : topological_space (ordered_comm_ring (finset (finset linarith.comp)))) : totally_separated_space (ordered_comm_ring (finset (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_55673 (h4 : pnat) : pnat.prime h4 := sorry --non-trivial
lemma new_lemma_55674 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @sequential_space.{0} (boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55675 (h0 : filter (complete_semilattice_Sup (has_norm linarith.ineq))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55676 (h0 : function.extfun (finset Type) (has_mem.mem (linear_ordered_semiring num))) : @is_cyclic.{0} (linear_ordered_semiring.{0} num) (@finset.pi.empty.{1 0} Type group.{0} (linear_ordered_semiring.{0} num) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (linear_ordered_semiring.{0} num)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_55677 (h0 : functor.add_const (ring (monoid ennreal)) ennreal) : @is_domain.{0} (monoid.{0} ennreal) (@functor.add_const.run.{0 0} (ring.{0} (monoid.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_55678 (h0 : ring (ordered_comm_ring (has_Inf linarith.comp))) : is_principal_ideal_ring (ordered_comm_ring (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_55679 (h0 : ring (has_nndist (has_to_string unsigned))) : strong_rank_condition (has_nndist (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_55680 (h0 : functor.add_const (group (has_zero pos)) linarith.comp) : @normalizer_condition.{0} (has_zero.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_zero.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55681 (h0 : ring (normed_group linarith.comp)) : rank_condition (normed_group linarith.comp) := sorry --non-trivial
lemma new_lemma_55682 (h0 : has_mem.mem group has_emptyc.emptyc) : @is_cyclic.{0} (has_norm.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) group.{0} h0) (has_norm.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55683 (h0 : ring (encodable (has_nnnorm (has_inv (random_gen linarith.comp_source))))) : strong_rank_condition (encodable (has_nnnorm (has_inv (random_gen linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_55684 (h0 : random_gen (random_gen to_additive.value_type) -> random_gen (random_gen to_additive.value_type) -> bool) : is_dec_refl h0 := sorry --non-trivial
lemma new_lemma_55685 (h0 : fin has_zero.zero) : @preirreducible_space.{0} (has_pos_part.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (has_pos_part.{0} pos)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_55686 (h0 : ring (add_right_cancel_monoid congr_arg_kind)) : is_principal_ideal_ring (add_right_cancel_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55687 (h0 : add_group (normed_group (has_top (has_top linarith.ineq)))) : is_add_cyclic (normed_group (has_top (has_top linarith.ineq))) := sorry --non-trivial
lemma new_lemma_55688 (h0 : ring (has_inter ennreal)) : rank_condition (has_inter ennreal) := sorry --non-trivial
lemma new_lemma_55689 (h0 : functor.add_const (complete_lattice ennreal) ennreal) : is_atomistic ennreal := sorry --non-trivial
lemma new_lemma_55690 (h0 : functor.add_const (cancel_comm_monoid_with_zero (linear_ordered_field unsigned)) pos) : @unique_factorization_monoid.{0} (linear_ordered_field.{0} unsigned) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (linear_ordered_field.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_55691 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (complete_linear_order.{0} unsigned) (@function.extfun_app.{2 1} Type add_group.{0} h0 (complete_linear_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55692 (h0 : functor.add_const (add_group (has_nndist ennreal)) Type) : @is_add_cyclic.{0} (has_nndist.{0} ennreal) (@functor.add_const.run.{0 1} (add_group.{0} (has_nndist.{0} ennreal)) Type h0)  := sorry --non-trivial
lemma new_lemma_55693 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (ordered_comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (ordered_comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55694 (h0 : topological_space (measurable_space.dynkin_system (semiring congr_arg_kind))) : preirreducible_space (measurable_space.dynkin_system (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_55695 (h0 : functor.add_const (ordered_comm_monoid (cancel_monoid name)) environment.implicit_infer_kind) : @has_exists_mul_of_le.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (cancel_monoid.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_55696 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (has_nnnorm.{0} linarith.ineq) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (has_nnnorm.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_55697 (h0 : list (has_neg_part environment.implicit_infer_kind)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_55698 (h0 : topological_space (id (has_top congr_arg_kind))) : path_connected_space (id (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_55699 (h0 : functor.add_const (topological_space (has_pos_part Type)) pos) : @regular_space.{1} (has_pos_part.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_pos_part.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_55700 (h0 : add_group (boolean_algebra.core (comm_group Type))) : is_add_cyclic (boolean_algebra.core (comm_group Type)) := sorry --non-trivial
lemma new_lemma_55701 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (canonically_linear_ordered_monoid.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} h0 (canonically_linear_ordered_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_55702 (h0 : functor.add_const (topological_space (has_nndist environment.implicit_infer_kind)) Type) : @sequential_space.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (has_nndist.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_55703 (h0 : finset (complete_distrib_lattice empty)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_55704 (h0 : group (complete_semilattice_Sup congr_arg_kind)) : is_cyclic (complete_semilattice_Sup congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55705 (h0 : complete_lattice (canonically_ordered_comm_semiring (has_add pos))) : is_compactly_generated (canonically_ordered_comm_semiring (has_add pos)) := sorry --non-trivial
lemma new_lemma_55706 (h0 : semiring (semiring (has_union (semiring unsigned)))) : is_noetherian_ring (semiring (has_union (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_55707 (h0 : ring (canonically_ordered_add_monoid empty)) : rank_condition (canonically_ordered_add_monoid empty) := sorry --non-trivial
lemma new_lemma_55708 (h0 : topological_space (semigroup (has_neg Type))) : t0_space (semigroup (has_neg Type)) := sorry --non-trivial
lemma new_lemma_55709 (h0 : functor.add_const (ordered_comm_monoid (boolean_algebra.core Type)) pos) : @has_exists_mul_of_le.{1} (boolean_algebra.core.{1} Type) (@functor.add_const.run.{1 0} (ordered_comm_monoid.{1} (boolean_algebra.core.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_55710 (h0 : group (has_add (option (option (option (option ennreal)))))) : is_simple_group (has_add (option (option (option (option ennreal))))) := sorry --non-trivial
lemma new_lemma_55711 (h0 : function.extfun Type group) : @normalizer_condition.{0} (semigroup.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (semigroup.{0} name))  := sorry --non-trivial
lemma new_lemma_55712 (h0 : list (semi_normed_comm_ring (has_nnnorm (has_nnnorm fun_info)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_55713 (h0 : topological_space (has_pos_part Type)) : loc_path_connected_space (has_pos_part Type) := sorry --non-trivial
lemma new_lemma_55714 (h0 : topological_space (normed_comm_ring (has_add (has_add (has_neg Type))))) : discrete_topology (normed_comm_ring (has_add (has_add (has_neg Type)))) := sorry --non-trivial
lemma new_lemma_55715 (h0 : function.extfun Type group) : @group.fg.{0} (complete_distrib_lattice.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} h0 (complete_distrib_lattice.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55716 (h0 : topological_space (has_norm (has_one (has_top empty)))) : t0_space (has_norm (has_one (has_top empty))) := sorry --non-trivial
lemma new_lemma_55717 (h0 : rel (add_comm_semigroup ereal -> char) char) : set.separates_points (rel.dom h0) := sorry --non-trivial
lemma new_lemma_55718 (h0 : complete_lattice (bin_tree (semiring (semiring (semiring num))))) : complete_lattice.is_Sup_finite_compact (bin_tree (semiring (semiring (semiring num)))) := sorry --non-trivial
lemma new_lemma_55719 (h0 : functor.add_const (functor.comp group semigroup name) name) : @is_cyclic.{0} (semigroup.{0} name) (@functor.add_const.run.{0 0} (group.{0} (semigroup.{0} name)) name (@functor.comp.run.{0 0 0} group.{0} semigroup.{0} name (@functor.add_const.run.{0 0} (functor.comp.{0 0 0} group.{0} semigroup.{0} name) name h0)))  := sorry --non-trivial
lemma new_lemma_55720 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (ring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (ring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_55721 (h0 : has_inter (cancel_monoid (option ennreal)) -> has_inter (cancel_monoid (option ennreal)) -> Prop) : reflexive h0 := sorry --non-trivial
lemma new_lemma_55722 (h0 : complete_lattice (complete_semilattice_Sup (semiring unsigned))) : complete_lattice.is_Sup_finite_compact (complete_semilattice_Sup (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_55723 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @t0_space.{0} (random_gen.{0} (semiring.{0} (has_one.{0} num))) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) topological_space.{0}) (random_gen.{0} (semiring.{0} (has_one.{0} num))))  := sorry --non-trivial
lemma new_lemma_55724 (h0 : functor.comp topological_space has_zero environment.implicit_infer_kind) : @regular_space.{0} (has_zero.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} topological_space.{0} has_zero.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_55725 (h1 : ring (random_gen (has_top fun_info))) : strong_rank_condition (random_gen (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_55726 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @sequential_space.{0} (has_to_string.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_to_string.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_55727 (h0 : function.extfun (Type 1) list) : palindrome (function.extfun_app h0 (comm_group Type)) := sorry --non-trivial
lemma new_lemma_55728 (h0 : functor.add_const (list (mul_zero_class ennreal)) Type) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_55729 (h0 : functor.add_const (functor.add_const (topological_space linarith.comp) pos) Type) : @totally_disconnected_space.{0} linarith.comp (@functor.add_const.run.{0 0} (topological_space.{0} linarith.comp) pos (@functor.add_const.run.{0 1} (functor.add_const.{0 0} (topological_space.{0} linarith.comp) pos) Type h0))  := sorry --non-trivial
lemma new_lemma_55730 (h0 : nat) (h1 : add_group (sym to_additive.value_type h0)) : is_add_cyclic (sym to_additive.value_type h0) := sorry --non-trivial
lemma new_lemma_55731 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (linear_ordered_field empty)) := sorry --non-trivial
lemma new_lemma_55732 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (has_nndist.{0} ennreal) (@function.extfun_app.{2 1} Type add_group.{0} h0 (has_nndist.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_55733 (h0 : topological_space (boolean_algebra (has_pos_part pos))) : discrete_topology (boolean_algebra (has_pos_part pos)) := sorry --non-trivial
lemma new_lemma_55734 (h0 : ordered_add_comm_monoid (add_left_cancel_semigroup unsigned)) : archimedean (add_left_cancel_semigroup unsigned) := sorry --non-trivial
lemma new_lemma_55735 (h0 : not (uniform_space (add_right_cancel_monoid num) -> false)) : @separated_space.{0} (add_right_cancel_monoid.{0} num) (@classical.by_contradiction'.{1} (uniform_space.{0} (add_right_cancel_monoid.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_55736 (h0 : group (random_gen (random_gen string_imp))) : group.fg (random_gen (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_55737 (h0 : cancel_comm_monoid_with_zero (linear_ordered_semiring empty)) : unique_factorization_monoid (linear_ordered_semiring empty) := sorry --non-trivial
lemma new_lemma_55738 (h1 : group (comm_ring (add_cancel_comm_monoid string_imp))) : is_cyclic (comm_ring (add_cancel_comm_monoid string_imp)) := sorry --non-trivial
lemma new_lemma_55739 (h0 : topological_space (has_neg_part (has_add ennreal))) : sequential_space (has_neg_part (has_add ennreal)) := sorry --non-trivial
lemma new_lemma_55740 (h0 : ring (has_add (has_neg (has_add name)))) : is_principal_ideal_ring (has_add (has_neg (has_add name))) := sorry --non-trivial
lemma new_lemma_55741 (h0 : group (has_ssubset (has_inv linarith.ineq))) : group.fg (has_ssubset (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_55742 (h0 : filter (complete_semilattice_Sup fun_info)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55743 (h0 : group (generalized_boolean_algebra pos)) : group.fg (generalized_boolean_algebra pos) := sorry --non-trivial
lemma new_lemma_55744 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (add_group.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_group.{0} num))  := sorry --non-trivial
lemma new_lemma_55745 (h0 : functor.add_const (add_monoid (boolean_algebra linarith.comp)) (has_add (has_to_string Type))) : @add_monoid.fg.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 1} (add_monoid.{0} (boolean_algebra.{0} linarith.comp)) (has_add.{1} (has_to_string.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_55746 (h0 : not (function.extfun Type topological_space -> false)) : @t0_space.{0} (@id.{2} Type empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (@id.{2} Type empty))  := sorry --non-trivial
lemma new_lemma_55747 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (ordered_comm_ring.{0} real) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (ordered_comm_ring.{0} real))  := sorry --non-trivial
lemma new_lemma_55748 (h0 : ring (sub_neg_monoid (sub_neg_monoid (sub_neg_monoid (has_Inf real))))) : strong_rank_condition (sub_neg_monoid (sub_neg_monoid (sub_neg_monoid (has_Inf real)))) := sorry --non-trivial
lemma new_lemma_55749 (h0 : ring (topological_space (has_ssubset (random_gen char)))) : rank_condition (topological_space (has_ssubset (random_gen char))) := sorry --non-trivial
lemma new_lemma_55750 (h0 : topological_space (canonically_linear_ordered_monoid (has_Inf linarith.comp))) : discrete_topology (canonically_linear_ordered_monoid (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_55751 (h0 : group (normed_group linarith.ineq)) : is_cyclic (normed_group linarith.ineq) := sorry --non-trivial
lemma new_lemma_55752 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (has_nndist.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_nndist.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55753 (h0 : topological_space (plift (has_top empty))) : totally_disconnected_space (plift (has_top empty)) := sorry --non-trivial
lemma new_lemma_55754 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (has_edist.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_edist.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55755 (h0 : function.extfun Type (functor.add_const (topological_space environment.implicit_infer_kind))) : @t1_space.{0} environment.implicit_infer_kind (@functor.add_const.run.{0 0} (topological_space.{0} environment.implicit_infer_kind) name (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} environment.implicit_infer_kind)) h0 name))  := sorry --non-trivial
lemma new_lemma_55756 (h0 : group (encodable (has_nnnorm (has_nnnorm char)))) : group.fg (encodable (has_nnnorm (has_nnnorm char))) := sorry --non-trivial
lemma new_lemma_55757 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_55758 (h0 : ring (has_bot (has_add (has_add pos)))) : is_domain (has_bot (has_add (has_add pos))) := sorry --non-trivial
lemma new_lemma_55759 (h0 : functor.add_const (topological_space (normed_comm_ring (ring (has_add pos)))) pos) : @preirreducible_space.{0} (normed_comm_ring.{0} (ring.{0} (has_add.{0} pos))) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} (ring.{0} (has_add.{0} pos)))) pos h0)  := sorry --non-trivial
lemma new_lemma_55760 (h1 : topological_space (has_emptyc fun_info)) : locally_compact_space (has_emptyc fun_info) := sorry --non-trivial
lemma new_lemma_55761 (h0 : topological_space (non_assoc_semiring (semiring num))) : preirreducible_space (non_assoc_semiring (semiring num)) := sorry --non-trivial
lemma new_lemma_55762 (h0 : multiset (topological_space (measurable_space linarith.ineq))) : @totally_disconnected_space.{0} (measurable_space.{0} linarith.ineq) (@multiset.inf.{0} (topological_space.{0} (measurable_space.{0} linarith.ineq)) (@lattice.to_semilattice_inf.{0} (topological_space.{0} (measurable_space.{0} linarith.ineq)) (@conditionally_complete_lattice.to_lattice.{0} (topological_space.{0} (measurable_space.{0} linarith.ineq)) (@complete_lattice.to_conditionally_complete_lattice.{0} (topological_space.{0} (measurable_space.{0} linarith.ineq)) (@topological_space.complete_lattice.{0} (measurable_space.{0} linarith.ineq))))) (@bounded_order.to_order_top.{0} (topological_space.{0} (measurable_space.{0} linarith.ineq)) (@preorder.to_has_le.{0} (topological_space.{0} (measurable_space.{0} linarith.ineq)) (@partial_order.to_preorder.{0} (topological_space.{0} (measurable_space.{0} linarith.ineq)) (@semilattice_inf.to_partial_order.{0} (topological_space.{0} (measurable_space.{0} linarith.ineq)) (@lattice.to_semilattice_inf.{0} (topological_space.{0} (measurable_space.{0} linarith.ineq)) (@conditionally_complete_lattice.to_lattice.{0} (topological_space.{0} (measurable_space.{0} linarith.ineq)) (@complete_lattice.to_conditionally_complete_lattice.{0} (topological_space.{0} (measurable_space.{0} linarith.ineq)) (@topological_space.complete_lattice.{0} (measurable_space.{0} linarith.ineq)))))))) (@complete_lattice.to_bounded_order.{0} (topological_space.{0} (measurable_space.{0} linarith.ineq)) (@topological_space.complete_lattice.{0} (measurable_space.{0} linarith.ineq)))) h0)  := sorry --non-trivial
lemma new_lemma_55763 (h0 : has_mem.mem (with_bot num) has_emptyc.emptyc) : @normalizer_condition.{0} (with_bot.{0} num) (@finset.pi.empty.{1 0} Type group.{0} (with_bot.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_55764 (h0 : topological_space (add_cancel_monoid linarith.comp)) : totally_disconnected_space (add_cancel_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_55765 (h0 : uniform_space (mul_one_class enat)) : complete_space (mul_one_class enat) := sorry --non-trivial
lemma new_lemma_55766 (h0 : topological_space (with_one (has_norm (semiring (semiring empty))))) : path_connected_space (with_one (has_norm (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_55767 (h0 : topological_space (canonically_ordered_comm_semiring (has_add pos))) : totally_separated_space (canonically_ordered_comm_semiring (has_add pos)) := sorry --non-trivial
lemma new_lemma_55768 (h0 : ring (has_sub empty)) : strong_rank_condition (has_sub empty) := sorry --non-trivial
lemma new_lemma_55769 (h0 : functor.add_const (topological_space (has_nndist linarith.comp)) linarith.comp) : @totally_disconnected_space.{0} (has_nndist.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55770 (h0 : complete_lattice (comm_ring (random_gen (random_gen linarith.comp_source)))) : complete_lattice.is_Sup_finite_compact (comm_ring (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_55771 (h0 : functor.comp ring add_cancel_monoid pos) : @is_principal_ideal_ring.{0} (add_cancel_monoid.{0} pos) (@functor.comp.run.{0 0 0} ring.{0} add_cancel_monoid.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_55772 (h0 : not (function.extfun Type ring -> false)) : @is_domain.{0} (add_group.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (add_group.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_55773 (h0 : add_group (has_neg_part (mul_zero_class pos))) : is_add_cyclic (has_neg_part (mul_zero_class pos)) := sorry --non-trivial
lemma new_lemma_55774 (h0 : complete_lattice (add_cancel_monoid (has_pos_part linarith.comp))) : complete_lattice.is_Sup_finite_compact (add_cancel_monoid (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_55775 (h0 : function.extfun Type (functor.comp topological_space has_add)) : @preirreducible_space.{0} (has_add.{0} ennreal) (@functor.comp.run.{0 0 0} topological_space.{0} has_add.{0} ennreal (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} has_add.{0}) h0 ennreal))  := sorry --non-trivial
lemma new_lemma_55776 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (measurable_space.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (measurable_space.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55777 (h1 : topological_space (comm_ring (has_lt fun_info))) : path_connected_space (comm_ring (has_lt fun_info)) := sorry --non-trivial
lemma new_lemma_55778 (h0 : not (topological_space (semiring congr_arg_kind) -> false)) : @normal_space.{0} (semiring.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (semiring.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_55779 (h0 : ordered_add_comm_monoid (finset (ring (ring linarith.comp)))) : archimedean (finset (ring (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_55780 (h0 : functor.add_const (function.extfun Type topological_space) name) : @totally_separated_space.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) name h0) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55781 (h0 : topological_space (plift (semiring unsigned))) : totally_disconnected_space (plift (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_55782 (h0 : not (add_comm_group (fintype fun_info) -> false)) (h1 : has_norm (fintype fun_info)) : @normed_group.core.{0} (fintype.{0} fun_info) (@classical.by_contradiction'.{1} (add_comm_group.{0} (fintype.{0} fun_info)) h0) h1  := sorry --non-trivial
lemma new_lemma_55783 (h0 : uniform_space (canonically_ordered_comm_semiring name)) : complete_space (canonically_ordered_comm_semiring name) := sorry --non-trivial
lemma new_lemma_55784 (h0 : ring (denumerable char)) : is_domain (denumerable char) := sorry --non-trivial
lemma new_lemma_55785 (h0 : topological_space (left_cancel_monoid (semiring (semiring unsigned)))) : discrete_topology (left_cancel_monoid (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_55786 (h0 : group (has_star (semiring num))) : normalizer_condition (has_star (semiring num)) := sorry --non-trivial
lemma new_lemma_55787 (h0 : functor.add_const (semiring (finset linarith.comp)) linarith.comp) : @is_noetherian_ring.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 0} (semiring.{0} (finset.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55788 (h0 : ring (cancel_monoid (semiring (semiring empty)))) : strong_rank_condition (cancel_monoid (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_55789 (h0 : filter (topological_space fun_info)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55790 (h0 : topological_space (ring (has_zero (mul_one_class linarith.comp)))) : locally_compact_space (ring (has_zero (mul_one_class linarith.comp))) := sorry --non-trivial
lemma new_lemma_55791 (h0 : ring (monoid unsigned)) : strong_rank_condition (monoid unsigned) := sorry --non-trivial
lemma new_lemma_55792 (h0 : functor.add_const (add_monoid (add_group empty)) empty) : @add_monoid.fg.{0} (add_group.{0} empty) (@functor.add_const.run.{0 0} (add_monoid.{0} (add_group.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_55793 (h0 : linear_ordered_field (complete_distrib_lattice pos) -> linear_ordered_field (complete_distrib_lattice pos) -> Prop) : is_symm (linear_ordered_field (complete_distrib_lattice pos)) h0 := sorry --non-trivial
lemma new_lemma_55794 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @path_connected_space.{0} (has_to_string.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (has_to_string.{0} pos))  := sorry --non-trivial
lemma new_lemma_55795 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring Type)) name) : @discrete_topology.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (canonically_ordered_comm_semiring.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_55796 (h0 : topological_space (has_emptyc congr_arg_kind)) : path_connected_space (has_emptyc congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55797 (h0 : list (has_add (has_neg_part unsigned))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_55798 (h0 : has_neg (has_lt to_additive.value_type)) (h1 : measurable_space (has_lt to_additive.value_type)) : has_measurable_neg (has_lt to_additive.value_type) := sorry --non-trivial
lemma new_lemma_55799 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_noetherian_ring.{0} (has_inter.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type semiring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 semiring.{0}) (has_inter.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55800 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_nndist.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_nndist.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55801 (h0 : functor.add_const (list (semigroup environment.implicit_infer_kind)) pos) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_55802 (h1 : complete_lattice (distrib_lattice to_additive.value_type)) : is_compactly_generated (distrib_lattice to_additive.value_type) := sorry --non-trivial
lemma new_lemma_55803 (h0 : topological_space (has_to_string (has_neg linarith.comp))) : normal_space (has_to_string (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_55804 (h0 : filter (semiring (semiring (semiring unsigned)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55805 (h0 : uniform_space (has_emptyc (random_gen linarith.ineq))) : complete_space (has_emptyc (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_55806 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @t0_space.{0} (with_bot.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) topological_space.{0}) (with_bot.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_55807 (h0 : group (mul_zero_class congr_arg_kind)) : is_cyclic (mul_zero_class congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55808 (h0 : uniform_space (add_monoid fun_info)) : complete_space (add_monoid fun_info) := sorry --non-trivial
lemma new_lemma_55809 (h0 : topological_space (linear_ordered_comm_monoid_with_zero (semiring (semiring num)))) : totally_separated_space (linear_ordered_comm_monoid_with_zero (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_55810 (h0 : topological_space (has_nnnorm (mul_one_class (mul_one_class enat)))) : path_connected_space (has_nnnorm (mul_one_class (mul_one_class enat))) := sorry --non-trivial
lemma new_lemma_55811 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (monoid_with_zero.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (monoid_with_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_55812 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55813 (h1 : uniform_space (denumerable linarith.ineq)) : complete_space (denumerable linarith.ineq) := sorry --non-trivial
lemma new_lemma_55814 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (complete_semilattice_Sup.{0} char) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (complete_semilattice_Sup.{0} char))  := sorry --non-trivial
lemma new_lemma_55815 (h0 : function.extfun Type group) : @is_cyclic.{0} (preorder.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (preorder.{0} empty))  := sorry --non-trivial
lemma new_lemma_55816 (h0 : filter Prop) : @id.{1} Prop (@Lim.{0} Prop sierpinski_space (@nonempty_of_inhabited.{1} Prop sort.inhabited.{0}) (@id.{1} (filter.{0} Prop) h0))  := sorry --non-trivial
lemma new_lemma_55817 (h0 : functor.add_const (ring (has_nndist empty)) ennreal) : @is_principal_ideal_ring.{0} (has_nndist.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (has_nndist.{0} empty)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_55818 (h2 : ring (random_gen to_additive.value_type)) : is_domain (random_gen to_additive.value_type) := sorry --non-trivial
lemma new_lemma_55819 (h0 : topological_space empty) : preirreducible_space empty := sorry --non-trivial
lemma new_lemma_55820 (h0 : has_neg (simple_graph fun_info)) (h1 : measurable_space (simple_graph fun_info)) : has_measurable_neg (simple_graph fun_info) := sorry --non-trivial
lemma new_lemma_55821 (h0 : not (semiring real -> false)) : is_noetherian_ring real := sorry --non-trivial
lemma new_lemma_55822 (h0 : ordered_add_comm_monoid (has_neg (has_add (semigroup (complete_distrib_lattice unsigned))))) : archimedean (has_neg (has_add (semigroup (complete_distrib_lattice unsigned)))) := sorry --non-trivial
lemma new_lemma_55823 (h0 : finset (has_neg_part (option pos))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_55824 (h0 : function.extfun Type topological_space) : @normal_space.{0} (finset.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (finset.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55825 (h0 : list (ordered_comm_monoid (has_add Type))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_55826 (h0 : function.extfun Type topological_space) : @t0_space.{0} (with_bot.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_bot.{0} empty))  := sorry --non-trivial
lemma new_lemma_55827 (h0 : list (canonically_ordered_add_monoid empty)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_55828 (h0 : functor.add_const (topological_space empty) empty) : loc_path_connected_space empty := sorry --non-trivial
lemma new_lemma_55829 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @has_exists_mul_of_le.{0} (finset.{0} ennreal) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_comm_monoid.{0}) (finset.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_55830 (h0 : function.extfun (Type 1) topological_space) : @totally_disconnected_space.{1} (semigroup.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (semigroup.{1} Type))  := sorry --non-trivial
lemma new_lemma_55831 (h0 : semiring (normed_group (semiring empty))) : is_noetherian_ring (normed_group (semiring empty)) := sorry --non-trivial
lemma new_lemma_55832 (h0 : functor.add_const (ring (mul_zero_class congr_arg_kind)) unsigned) : @rank_condition.{0} (mul_zero_class.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (ring.{0} (mul_zero_class.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_55833 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (preorder.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (preorder.{0} num))  := sorry --non-trivial
lemma new_lemma_55834 (h0 : functor.add_const (complete_lattice (complete_distrib_lattice Type)) Type) : @complete_lattice.is_Sup_finite_compact.{1} (complete_distrib_lattice.{1} Type) (@functor.add_const.run.{1 1} (complete_lattice.{1} (complete_distrib_lattice.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_55835 (h0 : function.extfun Type topological_space) : @t0_space.{0} (has_add.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_add.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_55836 (h0 : finset (left_cancel_monoid (semiring empty))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_55837 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (add_cancel_monoid congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_55838 (h0 : topological_space (boolean_algebra (has_add (sub_neg_monoid name)))) : locally_compact_space (boolean_algebra (has_add (sub_neg_monoid name))) := sorry --non-trivial
lemma new_lemma_55839 (h0 : complete_lattice (ordered_comm_ring pos)) : is_compactly_generated (ordered_comm_ring pos) := sorry --non-trivial
lemma new_lemma_55840 (h0 : topological_space (left_cancel_semigroup unsigned)) : normal_space (left_cancel_semigroup unsigned) := sorry --non-trivial
lemma new_lemma_55841 (h0 : topological_space (ring (has_neg Type))) : totally_separated_space (ring (has_neg Type)) := sorry --non-trivial
lemma new_lemma_55842 (h0 : filter (comm_monoid (semiring empty))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55843 (h0 : function.extfun Type topological_space) : @t1_space.{0} (ring.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_55844 (h0 : fin has_zero.zero) : @sequential_space.{0} (ordered_comm_monoid.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (ordered_comm_monoid.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_55845 (h0 : ring (sub_neg_monoid string.iterator_imp)) : strong_rank_condition (sub_neg_monoid string.iterator_imp) := sorry --non-trivial
lemma new_lemma_55846 (h0 : topological_space (fintype (has_ssubset linarith.ineq))) : t0_space (fintype (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_55847 (h0 : topological_space (add_cancel_monoid (comm_group (add_comm_monoid environment.implicit_infer_kind)))) : t1_space (add_cancel_monoid (comm_group (add_comm_monoid environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_55848 (h0 : topological_space (comm_monoid (option empty))) : t0_space (comm_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_55849 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (random_gen.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (random_gen.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_55850 (h0 : semiring (add_cancel_comm_monoid empty)) : is_noetherian_ring (add_cancel_comm_monoid empty) := sorry --non-trivial
lemma new_lemma_55851 (h0 : ring (comm_semigroup real)) : strong_rank_condition (comm_semigroup real) := sorry --non-trivial
lemma new_lemma_55852 (h0 : ring (boolean_algebra.core (ordered_ring (ordered_ring pos)))) : is_domain (boolean_algebra.core (ordered_ring (ordered_ring pos))) := sorry --non-trivial
lemma new_lemma_55853 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (canonically_linear_ordered_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (canonically_linear_ordered_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_55854 (h0 : ring (boolean_algebra (has_Inf (has_Inf Type)))) : is_principal_ideal_ring (boolean_algebra (has_Inf (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_55855 (h0 : functor.add_const (ring (semigroup name)) pos) : @rank_condition.{0} (semigroup.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (semigroup.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_55856 (h0 : topological_space (has_one (add_group linarith.comp))) : irreducible_space (has_one (add_group linarith.comp)) := sorry --non-trivial
lemma new_lemma_55857 (h0 : topological_space (has_union (semiring linarith.comp))) : locally_compact_space (has_union (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_55858 (h0 h1 : multiset (linear_ordered_comm_group_with_zero char)) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_55859 (h0 : topological_space (left_cancel_semigroup empty)) : path_connected_space (left_cancel_semigroup empty) := sorry --non-trivial
lemma new_lemma_55860 (h0 : complete_lattice (semi_normed_ring (has_nnnorm (has_lt linarith.ineq)))) : is_compactly_generated (semi_normed_ring (has_nnnorm (has_lt linarith.ineq))) := sorry --non-trivial
lemma new_lemma_55861 (h0 : functor.add_const (topological_space (sub_neg_monoid linarith.comp)) linarith.comp) : @normal_space.{0} (sub_neg_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (sub_neg_monoid.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55862 (h0 : topological_space (with_bot num)) : discrete_topology (with_bot num) := sorry --non-trivial
lemma new_lemma_55863 (h0 : list (add_cancel_monoid (boolean_algebra.core name))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_55864 (h0 : not (monoid (complete_semilattice_Sup num) -> false)) : @monoid.fg.{0} (complete_semilattice_Sup.{0} num) (@classical.by_contradiction'.{1} (monoid.{0} (complete_semilattice_Sup.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_55865 (h0 : topological_space (left_cancel_monoid (option (option empty)))) : totally_disconnected_space (left_cancel_monoid (option (option empty))) := sorry --non-trivial
lemma new_lemma_55866 (h0 : functor.add_const (topological_space (ordered_comm_ring name)) linarith.comp) : @discrete_topology.{0} (ordered_comm_ring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_ring.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55867 (h0 : ring (boolean_algebra.core (finset unsigned))) : rank_condition (boolean_algebra.core (finset unsigned)) := sorry --non-trivial
lemma new_lemma_55868 (h0 : functor.add_const (function.extfun (Type 1) topological_space) (has_neg Type)) : @t0_space.{1} (ordered_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) topological_space.{1}) (has_neg.{1} Type) h0) (ordered_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_55869 (h0 : function.extfun Type group) : @is_simple_group.{0} (add_cancel_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type group.{0} h0 (add_cancel_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_55870 (h0 : add_monoid (cancel_monoid (has_add (normed_comm_ring Type)))) : add_monoid.fg (cancel_monoid (has_add (normed_comm_ring Type))) := sorry --non-trivial
lemma new_lemma_55871 (h0 : uniform_space (random_gen (has_top (random_gen fun_info)))) : complete_space (random_gen (has_top (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_55872 (h0 : functor.add_const (topological_space (has_to_string Type)) linarith.comp) : @normal_space.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_to_string.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55873 (h0 : function.extfun Type ring) : @rank_condition.{0} (add_comm_monoid.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (add_comm_monoid.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_55874 (h0 : topological_space (has_add (has_to_string (option (has_add unsigned))))) : topological_space.separable_space (has_add (has_to_string (option (has_add unsigned)))) := sorry --non-trivial
lemma new_lemma_55875 (h0 : topological_space (add_cancel_monoid (option pos))) : topological_space.separable_space (add_cancel_monoid (option pos)) := sorry --non-trivial
lemma new_lemma_55876 (h0 : eq Prop string_imp) (h1 : string_imp) : eq.mpr h0 h1 := sorry --non-trivial
lemma new_lemma_55877 (h0 : topological_space (has_pos_part name)) : path_connected_space (has_pos_part name) := sorry --non-trivial
lemma new_lemma_55878 (h0 : function.extfun nat fin) : @complete_space.{0} (has_bot.{0} real) (@function.extfun_app.{2 1} Type uniform_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type uniform_space.{0}) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero))) (has_bot.{0} real))  := sorry --non-trivial
lemma new_lemma_55879 (h0 : functor.add_const (add_monoid (ordered_comm_ring pos)) pos) : @add_monoid.fg.{0} (ordered_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (add_monoid.{0} (ordered_comm_ring.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_55880 (h0 : function.extfun Type group) : @group.fg.{0} (has_emptyc.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type group.{0} h0 (has_emptyc.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_55881 (h1 : topological_space (complete_semilattice_Sup string_imp)) : path_connected_space (complete_semilattice_Sup string_imp) := sorry --non-trivial
lemma new_lemma_55882 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (ordered_comm_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_55883 (h0 : functor.add_const (function.extfun Type uniform_space) name) : @complete_space.{0} (boolean_algebra.{0} name) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) name h0) (boolean_algebra.{0} name))  := sorry --non-trivial
lemma new_lemma_55884 (h0 : fin has_zero.zero) : @normal_space.{0} (sub_neg_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (sub_neg_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_55885 (h0 : topological_space (finset (has_add (ring pos)))) : regular_space (finset (has_add (ring pos))) := sorry --non-trivial
lemma new_lemma_55886 (h0 : functor.add_const (functor.add_const (ring (boolean_algebra linarith.comp)) pos) linarith.comp) : @rank_condition.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.{0} linarith.comp)) pos (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (ring.{0} (boolean_algebra.{0} linarith.comp)) pos) linarith.comp h0))  := sorry --non-trivial
lemma new_lemma_55887 (h0 : prod (ordered_comm_group (option (option empty))) (ordered_comm_group (option (option empty)))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_55888 (h0 : uniform_space (semi_normed_comm_ring (has_ssubset (has_ssubset (has_ssubset char))))) : complete_space (semi_normed_comm_ring (has_ssubset (has_ssubset (has_ssubset char)))) := sorry --non-trivial
lemma new_lemma_55889 (h0 : not (topological_space (measurable_space.dynkin_system num) -> false)) : @locally_compact_space.{0} (measurable_space.dynkin_system.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (measurable_space.dynkin_system.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_55890 (h0 : complete_lattice (pseudo_metric_space (finset name))) : is_compactly_generated (pseudo_metric_space (finset name)) := sorry --non-trivial
lemma new_lemma_55891 (h0 : linarith.ineq -> linarith.ineq -> Prop) : is_order_connected linarith.ineq h0 := sorry --non-trivial
lemma new_lemma_55892 (h0 : group (add_cancel_monoid (has_Inf name))) : is_cyclic (add_cancel_monoid (has_Inf name)) := sorry --non-trivial
lemma new_lemma_55893 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (has_add.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_add.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55894 (h0 : cancel_comm_monoid_with_zero (semigroup (has_add name))) : unique_factorization_monoid (semigroup (has_add name)) := sorry --non-trivial
lemma new_lemma_55895 (h0 : functor.add_const Prop (add_cancel_monoid name)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_55896 (h0 : topological_space (boolean_algebra environment.implicit_infer_kind)) : topological_space.separable_space (boolean_algebra environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_55897 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (has_neg.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_neg.{0} name))  := sorry --non-trivial
lemma new_lemma_55898 (h0 : functor.comp ring complete_distrib_lattice name) : @is_principal_ideal_ring.{0} (complete_distrib_lattice.{0} name) (@functor.comp.run.{0 0 0} ring.{0} complete_distrib_lattice.{0} name h0)  := sorry --non-trivial
lemma new_lemma_55899 (h0 : functor.add_const (topological_space (boolean_algebra environment.implicit_infer_kind)) pos) : @t1_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_55900 (h0 : not (topological_space (has_compl fun_info) -> false)) : @path_connected_space.{0} (has_compl.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (has_compl.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_55901 (h0 : topological_space (semigroup (finset Type))) : normal_space (semigroup (finset Type)) := sorry --non-trivial
lemma new_lemma_55902 (h0 : ring (add_comm_semigroup enat)) : rank_condition (add_comm_semigroup enat) := sorry --non-trivial
lemma new_lemma_55903 (h0 : functor.add_const (topological_space (plift empty)) empty) : @topological_space.separable_space.{1} (plift.{1} empty) (@functor.add_const.run.{1 0} (topological_space.{1} (plift.{1} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_55904 (h0 : list (cancel_monoid (has_neg congr_arg_kind))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_55905 (h0 : functor.add_const (topological_space (add_cancel_monoid linarith.comp)) (has_add name)) : @totally_separated_space.{0} (add_cancel_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} linarith.comp)) (has_add.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_55906 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (@id.{2} Type string_imp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (@id.{2} Type string_imp))  := sorry --non-trivial
lemma new_lemma_55907 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (has_add.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_add.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_55908 (h0 : functor.add_const (function.extfun (Type 1) filter) linarith.comp) : countable_Inter_filter (function.extfun_app (functor.add_const.run h0) (normed_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_55909 (h1 : complete_lattice (topological_space (random_gen string_imp))) : complete_lattice.is_Sup_finite_compact (topological_space (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_55910 (h0 : topological_space (ordered_comm_ring (sub_neg_monoid (sub_neg_monoid pos)))) : path_connected_space (ordered_comm_ring (sub_neg_monoid (sub_neg_monoid pos))) := sorry --non-trivial
lemma new_lemma_55911 (h0 : functor.add_const (topological_space (ring pos)) pos) : @discrete_topology.{0} (ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_55912 (h0 : add_group (boolean_algebra.core (add_comm_monoid unsigned))) : is_add_cyclic (boolean_algebra.core (add_comm_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_55913 (h0 : complete_lattice (mul_zero_class empty)) : is_atomistic (mul_zero_class empty) := sorry --non-trivial
lemma new_lemma_55914 (h0 : functor.add_const (topological_space (partial_order empty)) num) : @normal_space.{0} (partial_order.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (partial_order.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_55915 (h0 : ring (simple_graph (semi_normed_comm_ring reducibility_hints))) : strong_rank_condition (simple_graph (semi_normed_comm_ring reducibility_hints)) := sorry --non-trivial
lemma new_lemma_55916 (h0 : filter (ring congr_arg_kind)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_55917 (h0 : complete_lattice (distrib_lattice (random_gen (random_gen char)))) : is_compactly_generated (distrib_lattice (random_gen (random_gen char))) := sorry --non-trivial
lemma new_lemma_55918 (h0 : functor.comp add_group ring environment.implicit_infer_kind) : @is_add_cyclic.{0} (ring.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} add_group.{0} ring.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_55919 (h0 : function.extfun Type topological_space) : @normal_space.{0} (has_zero.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_zero.{0} empty))  := sorry --non-trivial
lemma new_lemma_55920 (h0 : functor.add_const (add_group (has_neg environment.implicit_infer_kind)) name) : @is_add_cyclic.{0} (has_neg.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (add_group.{0} (has_neg.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_55921 (h0 : ordered_comm_monoid (canonically_linear_ordered_monoid real)) : has_exists_mul_of_le (canonically_linear_ordered_monoid real) := sorry --non-trivial
lemma new_lemma_55922 (h0 : functor.add_const (add_monoid (preorder num)) num) : @add_monoid.fg.{0} (preorder.{0} num) (@functor.add_const.run.{0 0} (add_monoid.{0} (preorder.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_55923 (h0 : function.extfun Type ordered_comm_monoid) : @has_exists_mul_of_le.{0} (comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} h0 (comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55924 (h0 : functor.add_const (ring (boolean_algebra pos)) pos) : @is_domain.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_55925 (h1 : complete_lattice (encodable fun_info)) : complete_lattice.is_Sup_finite_compact (encodable fun_info) := sorry --non-trivial
lemma new_lemma_55926 (h0 : topological_space (has_nndist (has_to_string (finset linarith.comp)))) : preconnected_space (has_nndist (has_to_string (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_55927 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} linarith.comp (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) linarith.comp)  := sorry --non-trivial
lemma new_lemma_55928 (h1 : complete_lattice (distrib_lattice (random_gen linarith.comp_source))) : is_atomistic (distrib_lattice (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_55929 (h0 : ring (measure_theory.measure_space num)) : strong_rank_condition (measure_theory.measure_space num) := sorry --non-trivial
lemma new_lemma_55930 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (add_comm_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_55931 (h0 : function.extfun Type monoid) : @monoid.fg.{0} real.angle (@function.extfun_app.{2 1} Type monoid.{0} h0 real.angle)  := sorry --non-trivial
lemma new_lemma_55932 (h0 : function.extfun nat fin) : @complete_space.{1} (normed_lattice_add_comm_group.{1} Type) (@matrix.vec_empty.{1} (uniform_space.{1} (normed_lattice_add_comm_group.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_55933 (h1 : ring (non_unital_non_assoc_semiring (uniform_space linarith.comp_source))) : rank_condition (non_unital_non_assoc_semiring (uniform_space linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_55934 (h0 : not (group (has_norm empty) -> false)) : @is_cyclic.{0} (has_norm.{0} empty) (@classical.by_contradiction'.{1} (group.{0} (has_norm.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_55935 (h0 : topological_space (semigroup (comm_group Type))) : path_connected_space (semigroup (comm_group Type)) := sorry --non-trivial
lemma new_lemma_55936 (h0 : ring (normed_group (semiring (semiring empty)))) : is_domain (normed_group (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_55937 (h1 : complete_lattice (linear_ordered_add_comm_group congr_arg_kind)) : complete_lattice.is_Sup_finite_compact (linear_ordered_add_comm_group congr_arg_kind) := sorry --non-trivial
lemma new_lemma_55938 (h0 : list (semigroup (has_neg ennreal))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_55939 (h0 : monoid (has_top (semiring linarith.comp))) : monoid.fg (has_top (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_55940 (h0 : has_mem.mem pos has_zero.zero) : @unique_factorization_monoid.{0} pos (@multiset.pi.empty.{1 0} Type cancel_comm_monoid_with_zero.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_55941 (h0 : complete_lattice (has_Inf (has_neg (has_neg pos)))) : complete_lattice.is_Sup_finite_compact (has_Inf (has_neg (has_neg pos))) := sorry --non-trivial
lemma new_lemma_55942 (h0 : not (complete_lattice (with_bot unsigned) -> false)) : @is_compactly_generated.{0} (with_bot.{0} unsigned) (@classical.by_contradiction'.{1} (complete_lattice.{0} (with_bot.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_55943 (h0 : functor.add_const (topological_space (has_add linarith.comp)) (has_neg (has_neg (has_neg (has_neg Type))))) : @totally_disconnected_space.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (has_add.{0} linarith.comp)) (has_neg.{1} (has_neg.{1} (has_neg.{1} (has_neg.{1} Type)))) h0)  := sorry --non-trivial
lemma new_lemma_55944 (h0 : ring (ring num)) : is_domain (ring num) := sorry --non-trivial
lemma new_lemma_55945 (h0 : group (id (has_norm (has_norm linarith.comp)))) : group.fg (id (has_norm (has_norm linarith.comp))) := sorry --non-trivial
lemma new_lemma_55946 (h1 : function.extfun Type add_group) : @is_add_cyclic.{0} (with_one.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_group.{0} h1 (with_one.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_55947 (h0 : functor.add_const (uniform_space (complete_distrib_lattice environment.implicit_infer_kind)) linarith.comp) : @separated_space.{0} (complete_distrib_lattice.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (uniform_space.{0} (complete_distrib_lattice.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_55948 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (measure_theory.measure_space.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (measure_theory.measure_space.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_55949 (h0 : topological_space linarith.ineq) (h1 : set linarith.ineq) : is_path_connected h1 := sorry --non-trivial
lemma new_lemma_55950 (h0 : functor.add_const (ring (has_neg_part name)) ennreal) : @is_domain.{0} (has_neg_part.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (has_neg_part.{0} name)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_55951 (h0 : ring (add_right_cancel_monoid (semiring empty))) : strong_rank_condition (add_right_cancel_monoid (semiring empty)) := sorry --non-trivial
lemma new_lemma_55952 (h0 : ring environment.projection_info) : strong_rank_condition environment.projection_info := sorry --non-trivial
lemma new_lemma_55953 (h0 : add_group (ordered_comm_ring (finset (has_add linarith.comp)))) : is_add_cyclic (ordered_comm_ring (finset (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_55954 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @loc_path_connected_space.{0} (ordered_comm_ring.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) topological_space.{0}) (ordered_comm_ring.{0} real))  := sorry --non-trivial
lemma new_lemma_55955 (h0 : topological_space (has_add real)) : totally_disconnected_space (has_add real) := sorry --non-trivial
lemma new_lemma_55956 (h0 : option (add_group (dlist to_additive.value_type))) (h1 : add_group (dlist to_additive.value_type)) : is_add_cyclic (dlist to_additive.value_type) := sorry --non-trivial
lemma new_lemma_55957 (h0 : topological_space (has_nndist (option empty))) : discrete_topology (has_nndist (option empty)) := sorry --non-trivial
lemma new_lemma_55958 (h0 : not (list (complete_semilattice_Sup empty) -> false)) : list.nodup (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_55959 (h0 : topological_space (has_zero (boolean_algebra.core (cancel_monoid (semigroup name))))) : preirreducible_space (has_zero (boolean_algebra.core (cancel_monoid (semigroup name)))) := sorry --non-trivial
lemma new_lemma_55960 (h0 : ring (linear_ordered_semiring (semiring num))) : is_principal_ideal_ring (linear_ordered_semiring (semiring num)) := sorry --non-trivial
lemma new_lemma_55961 (h0 : functor.add_const (topological_space (canonically_linear_ordered_monoid real)) name) : @totally_disconnected_space.{0} (canonically_linear_ordered_monoid.{0} real) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_linear_ordered_monoid.{0} real)) name h0)  := sorry --non-trivial
lemma new_lemma_55962 (h0 : topological_space (ordered_comm_ring (ordered_ring Type))) : totally_disconnected_space (ordered_comm_ring (ordered_ring Type)) := sorry --non-trivial
lemma new_lemma_55963 (h0 : topological_space (add_cancel_monoid (comm_group pos))) : path_connected_space (add_cancel_monoid (comm_group pos)) := sorry --non-trivial
lemma new_lemma_55964 (h0 : functor.add_const (function.extfun (Type 1) topological_space) name) : @preconnected_space.{1} (ordered_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) name h0) (ordered_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_55965 (h0 : not (function.extfun Type semiring -> false)) : @is_noetherian_ring.{0} (with_one.{0} linarith.comp) (@function.extfun_app.{2 1} Type semiring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type semiring.{0}) h0) (with_one.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_55966 (h1 : not (function.extfun Type topological_space -> false)) : @totally_separated_space.{0} (semiring.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h1) (semiring.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_55967 (h0 : functor.add_const (list (boolean_algebra.core environment.implicit_infer_kind)) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_55968 (h0 : functor.add_const (list (normed_linear_ordered_group unsigned)) unsigned) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_55969 (h0 : topological_space (comm_ring (comm_ring (has_nnnorm (has_nnnorm linarith.ineq))))) : path_connected_space (comm_ring (comm_ring (has_nnnorm (has_nnnorm linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_55970 (h0 : topological_space (has_to_string (has_add Type))) : t0_space (has_to_string (has_add Type)) := sorry --non-trivial
lemma new_lemma_55971 (h0 : ring (comm_group (has_add name))) : rank_condition (comm_group (has_add name)) := sorry --non-trivial
lemma new_lemma_55972 (h0 : add_group (has_pos_part (ring (ring (has_add linarith.comp))))) : is_add_cyclic (has_pos_part (ring (ring (has_add linarith.comp)))) := sorry --non-trivial
lemma new_lemma_55973 (h0 : finset (group_with_zero num)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_55974 (h0 : fin has_zero.zero) : @topological_space.separable_space.{0} (has_pos_part.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_pos_part.{0} real))  := sorry --non-trivial
lemma new_lemma_55975 (h0 : topological_space (ring (has_Inf (has_Inf (has_Inf (has_zero (has_neg Type))))))) : locally_compact_space (ring (has_Inf (has_Inf (has_Inf (has_zero (has_neg Type)))))) := sorry --non-trivial
lemma new_lemma_55976 (h0 : ordered_comm_monoid (has_zero (has_neg_part (finset Type)))) : has_exists_mul_of_le (has_zero (has_neg_part (finset Type))) := sorry --non-trivial
lemma new_lemma_55977 (h0 : ring (add_comm_semigroup environment.projection_info)) : strong_rank_condition (add_comm_semigroup environment.projection_info) := sorry --non-trivial
lemma new_lemma_55978 (h0 : topological_space (with_bot (has_inv linarith.comp_source))) : t0_space (with_bot (has_inv linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_55979 (h0 : ring (has_top (random_gen (random_gen (random_gen linarith.comp_source))))) : rank_condition (has_top (random_gen (random_gen (random_gen linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_55980 (h0 : ring (semigroup (has_add name))) : is_domain (semigroup (has_add name)) := sorry --non-trivial
lemma new_lemma_55981 (h0 : topological_space (boolean_algebra (has_add (has_Inf pos)))) : sequential_space (boolean_algebra (has_add (has_Inf pos))) := sorry --non-trivial
lemma new_lemma_55982 (h0 : functor.add_const (topological_space (has_neg name)) name) : @t0_space.{0} (has_neg.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_55983 (h0 : topological_space (has_nnnorm (mul_one_class char))) : path_connected_space (has_nnnorm (mul_one_class char)) := sorry --non-trivial
lemma new_lemma_55984 (h2 : group (with_one (has_top congr_arg_kind))) : is_cyclic (with_one (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_55985 (h0 : complete_lattice (random_gen empty)) : is_atomistic (random_gen empty) := sorry --non-trivial
lemma new_lemma_55986 (h0 : uniform_space (bin_tree empty)) : complete_space (bin_tree empty) := sorry --non-trivial
lemma new_lemma_55987 (h0 : functor.add_const (functor.add_const Prop linarith.comp) (ring (ordered_ring (ring name)))) : functor.add_const.run (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_55988 (h1 h2 : multiset ereal) : multiset.disjoint h1 h2 := sorry --non-trivial
lemma new_lemma_55989 (h1 : topological_space (distrib_lattice fun_info)) : totally_separated_space (distrib_lattice fun_info) := sorry --non-trivial
lemma new_lemma_55990 (h1 : group (has_emptyc (semiring (has_top to_additive.value_type)))) : normalizer_condition (has_emptyc (semiring (has_top to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_55991 (h0 : functor.add_const (topological_space (preorder empty)) unsigned) : @t0_space.{0} (preorder.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_55992 (h0 : list Prop) : list.head h0 := sorry --non-trivial
lemma new_lemma_55993 (h0 : functor.add_const (uniform_space (has_nndist linarith.comp)) (finset (finset linarith.comp))) : @separated_space.{0} (has_nndist.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_nndist.{0} linarith.comp)) (finset.{0} (finset.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_55994 (h0 : functor.add_const (topological_space (sub_neg_monoid pos)) (has_neg real)) : @irreducible_space.{0} (sub_neg_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (sub_neg_monoid.{0} pos)) (has_neg.{0} real) h0)  := sorry --non-trivial
lemma new_lemma_55995 (h0 : group (add_comm_monoid linarith.comp)) : is_simple_group (add_comm_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_55996 (h0 : topological_space (has_zero (has_neg_part linarith.comp))) : topological_space.separable_space (has_zero (has_neg_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_55997 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} environment.implicit_infer_kind (@function.extfun_app.{2 1} Type ring.{0} h0 environment.implicit_infer_kind)  := sorry --non-trivial
lemma new_lemma_55998 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (@id.{2} Type linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 topological_space.{0}) (@id.{2} Type linarith.comp))  := sorry --non-trivial
lemma new_lemma_55999 (h0 : cancel_comm_monoid_with_zero (add_cancel_comm_monoid empty)) : unique_factorization_monoid (add_cancel_comm_monoid empty) := sorry --non-trivial
