import imports
lemma new_lemma_152000 (h0 : complete_lattice (measurable_space (has_norm linarith.ineq))) : is_compactly_generated (measurable_space (has_norm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_152001 (h2 : uniform_space (mul_one_class (mul_one_class char))) : complete_space (mul_one_class (mul_one_class char)) := sorry --non-trivial
lemma new_lemma_152002 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (normed_comm_ring.{0} unsigned) (@function.extfun_app.{2 1} Type add_group.{0} h0 (normed_comm_ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152003 (h0 : uniform_space (linear_ordered_cancel_comm_monoid (semiring (semiring empty)))) : complete_space (linear_ordered_cancel_comm_monoid (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_152004 (h0 : uniform_space (boolean_algebra (has_add (has_Inf real)))) : complete_space (boolean_algebra (has_add (has_Inf real))) := sorry --non-trivial
lemma new_lemma_152005 (h2 : set (has_lt linarith.ineq)) : set.finite h2 := sorry --non-trivial
lemma new_lemma_152006 (h0 : functor.add_const (function.extfun Type topological_space) name) : @normal_space.{0} (comm_group.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) name h0) (comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_152007 (h0 : topological_space (has_append char)) : t0_space (has_append char) := sorry --non-trivial
lemma new_lemma_152008 (h0 : group (boolean_algebra.core (comm_group name))) : group.fg (boolean_algebra.core (comm_group name)) := sorry --non-trivial
lemma new_lemma_152009 (h0 : function.extfun Type (functor.add_const (topological_space (semigroup unsigned)))) : @loc_path_connected_space.{0} (semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} unsigned)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (semigroup.{0} unsigned))) h0 empty))  := sorry --non-trivial
lemma new_lemma_152010 (h0 : topological_space (linear_ordered_semiring (has_top (has_top congr_arg_kind)))) : totally_disconnected_space (linear_ordered_semiring (has_top (has_top congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_152011 (h0 : group (has_neg (has_neg_part linarith.comp))) : is_simple_group (has_neg (has_neg_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_152012 (h0 : add_group (has_norm (random_gen (has_top linarith.ineq)))) : is_add_cyclic (has_norm (random_gen (has_top linarith.ineq))) := sorry --non-trivial
lemma new_lemma_152013 (h0 : monoid (has_emptyc congr_arg_kind)) : monoid.fg (has_emptyc congr_arg_kind) := sorry --non-trivial
lemma new_lemma_152014 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (normed_lattice_add_comm_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_lattice_add_comm_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_152015 (h0 : ring (comm_group (cancel_monoid unsigned))) : is_principal_ideal_ring (comm_group (cancel_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_152016 (h0 : function.extfun (Type 1) topological_space) : @totally_disconnected_space.{1} (plift.{1} unsigned) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (plift.{1} unsigned))  := sorry --non-trivial
lemma new_lemma_152017 (h0 : topological_space (linear_ordered_semiring (semiring (semiring (has_top empty))))) : t0_space (linear_ordered_semiring (semiring (semiring (has_top empty)))) := sorry --non-trivial
lemma new_lemma_152018 (h0 : topological_space (boolean_algebra (mul_one_class (ring (has_neg environment.implicit_infer_kind))))) : t0_space (boolean_algebra (mul_one_class (ring (has_neg environment.implicit_infer_kind)))) := sorry --non-trivial
lemma new_lemma_152019 (h0 : topological_space (sub_neg_monoid (finset (finset (has_add pos))))) : preconnected_space (sub_neg_monoid (finset (finset (has_add pos)))) := sorry --non-trivial
lemma new_lemma_152020 (h0 : functor.add_const (add_group (non_assoc_semiring empty)) empty) : @is_add_cyclic.{0} (non_assoc_semiring.{0} empty) (@functor.add_const.run.{0 0} (add_group.{0} (non_assoc_semiring.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_152021 (h0 : functor.comp ring has_zero name) : @rank_condition.{0} (has_zero.{0} name) (@functor.comp.run.{0 0 0} ring.{0} has_zero.{0} name h0)  := sorry --non-trivial
lemma new_lemma_152022 (h0 : topological_space (add_comm_semigroup string.iterator_imp)) (h1 : set (add_comm_semigroup string.iterator_imp)) : is_path_connected h1 := sorry --non-trivial
lemma new_lemma_152023 (h1 : not (ring (semi_normed_ring linarith.ineq) -> false)) : @strong_rank_condition.{0} (semi_normed_ring.{0} linarith.ineq) (@classical.by_contradiction'.{1} (ring.{0} (semi_normed_ring.{0} linarith.ineq)) h1)  := sorry --non-trivial
lemma new_lemma_152024 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (denumerable.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (denumerable.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_152025 (h0 : topological_space (canonically_ordered_add_monoid (option empty))) : preirreducible_space (canonically_ordered_add_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_152026 (h0 : functor.comp ring mul_zero_class pos) : @rank_condition.{0} (mul_zero_class.{0} pos) (@functor.comp.run.{0 0 0} ring.{0} mul_zero_class.{0} pos (@functor.comp.run.{0 0 0} ring.{0} mul_zero_class.{0} pos (@functor.comp.run.{0 0 0} ring.{0} mul_zero_class.{0} pos (@functor.comp.run.{0 0 0} ring.{0} mul_zero_class.{0} pos h0))))  := sorry --non-trivial
lemma new_lemma_152027 (h0 : ordered_comm_monoid (semigroup (finset (ring (finset (has_pos_part linarith.comp)))))) : has_exists_mul_of_le (semigroup (finset (ring (finset (has_pos_part linarith.comp))))) := sorry --non-trivial
lemma new_lemma_152028 (h0 : functor.add_const (topological_space (comm_group ennreal)) ennreal) : @locally_compact_space.{0} (comm_group.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_152029 (h0 : functor.add_const (function.extfun (Type 1) list) linarith.comp) : palindrome (function.extfun_app (functor.add_const.run h0) (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_152030 (h0 : functor.add_const (uniform_space (has_nndist pos)) pos) : @separated_space.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_nndist.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_152031 (h0 : uniform_space (normed_linear_ordered_group empty)) : separated_space (normed_linear_ordered_group empty) := sorry --non-trivial
lemma new_lemma_152032 (h0 : functor.add_const (uniform_space (ordered_comm_monoid pos)) linarith.comp) : @separated_space.{0} (ordered_comm_monoid.{0} pos) (@functor.add_const.run.{0 0} (uniform_space.{0} (ordered_comm_monoid.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152033 (h0 : measurable_space (normed_field to_additive.value_type)) (h1 : filter (normed_field to_additive.value_type)) : filter.is_measurably_generated h1 := sorry --non-trivial
lemma new_lemma_152034 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : filter.ne_bot (function.extfun_app (function.extfun_app h0 filter) (cancel_monoid pos)) := sorry --non-trivial
lemma new_lemma_152035 (h0 : topological_space (add_comm_semigroup fun_info)) (h2 : preorder (add_comm_semigroup fun_info)) : order_topology (add_comm_semigroup fun_info) := sorry --non-trivial
lemma new_lemma_152036 (h0 : filter (canonically_ordered_comm_semiring name)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_152037 (h0 : complete_lattice (normed_linear_ordered_group empty)) : complete_lattice.is_Sup_finite_compact (normed_linear_ordered_group empty) := sorry --non-trivial
lemma new_lemma_152038 (h0 : functor.add_const (topological_space (linear_ordered_comm_group ennreal)) ennreal) : @topological_space.separable_space.{0} (linear_ordered_comm_group.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (linear_ordered_comm_group.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_152039 (h0 : functor.add_const (topological_space (add_cancel_monoid Type)) name) : @totally_disconnected_space.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (add_cancel_monoid.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_152040 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (sub_neg_monoid pos)) := sorry --non-trivial
lemma new_lemma_152041 (h0 : topological_space (generalized_boolean_algebra pos)) : t0_space (generalized_boolean_algebra pos) := sorry --non-trivial
lemma new_lemma_152042 (h0 : function.extfun (((finset Type -> Prop) -> Prop) -> Prop) (function.extfun ((finset Type -> Prop) -> Prop))) : @t0_space.{0} (has_one.{0} unsigned) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_one.{0} unsigned) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_one.{0} unsigned)) (@function.extfun_app.{2 0} (finset.{1} Type → Prop) (function.extfun.{2 0} (finset.{1} Type)) (@function.extfun_app.{2 0} ((finset.{1} Type → Prop) → Prop) (function.extfun.{2 0} (finset.{1} Type → Prop)) (@function.extfun_app.{2 0} (((finset.{1} Type → Prop) → Prop) → Prop) (function.extfun.{2 0} ((finset.{1} Type → Prop) → Prop)) h0 (function.extfun.{2 0} (finset.{1} Type → Prop))) (function.extfun.{2 0} (finset.{1} Type))) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_one.{0} unsigned))) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_152043 (h0 : function.extfun (finset Type) (has_mem.mem (semiring linarith.ineq))) : @irreducible_space.{0} (semiring.{0} linarith.ineq) (@finset.pi.empty.{1 0} Type topological_space.{0} (semiring.{0} linarith.ineq) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (semiring.{0} linarith.ineq)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_152044 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (measurable_space.dynkin_system.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measurable_space.dynkin_system.{0} num))  := sorry --non-trivial
lemma new_lemma_152045 (h0 : functor.add_const (topological_space (semigroup Type)) environment.implicit_infer_kind) : @preconnected_space.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (semigroup.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_152046 (h0 : functor.add_const (ordered_add_comm_monoid (complete_distrib_lattice pos)) (has_neg (has_Inf (has_neg pos)))) : @archimedean.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (complete_distrib_lattice.{0} pos)) (has_neg.{0} (has_Inf.{0} (has_neg.{0} pos))) h0)  := sorry --non-trivial
lemma new_lemma_152047 (h0 : functor.comp topological_space has_add name) : @topological_space.separable_space.{0} (has_add.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_add.{0} name h0)  := sorry --non-trivial
lemma new_lemma_152048 (h0 : filter (has_zero (add_cancel_monoid ennreal))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_152049 (h0 : not (function.extfun Type add_group -> false)) : @is_add_cyclic.{0} (has_union.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_group.{0}) h0) (has_union.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_152050 (h0 : uniform_space (normed_comm_ring (finset (finset (finset linarith.comp))))) : separated_space (normed_comm_ring (finset (finset (finset linarith.comp)))) := sorry --non-trivial
lemma new_lemma_152051 (h0 : functor.add_const (filter (has_Inf pos)) Type) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152052 (h0 : functor.add_const (monoid (normed_comm_ring Type)) environment.implicit_infer_kind) : @monoid.fg.{1} (normed_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (monoid.{1} (normed_comm_ring.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_152053 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (semigroup.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (semigroup.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_152054 (h0 : topological_space (boolean_algebra (has_add real))) : discrete_topology (boolean_algebra (has_add real)) := sorry --non-trivial
lemma new_lemma_152055 (h1 : ring (with_bot to_additive.value_type)) : is_domain (with_bot to_additive.value_type) := sorry --non-trivial
lemma new_lemma_152056 (h0 : topological_space (has_pos_part (has_add (has_add (has_pos_part (has_add linarith.comp)))))) : t0_space (has_pos_part (has_add (has_add (has_pos_part (has_add linarith.comp))))) := sorry --non-trivial
lemma new_lemma_152057 (h0 : ring (has_add (ring (measurable_space.dynkin_system Type)))) : rank_condition (has_add (ring (measurable_space.dynkin_system Type))) := sorry --non-trivial
lemma new_lemma_152058 (h0 : functor.add_const (uniform_space (has_Inf pos)) (has_add pos)) : @separated_space.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_Inf.{0} pos)) (has_add.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_152059 (h1 : complete_lattice (normed_group (random_gen string_imp))) : is_compactly_generated (normed_group (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_152060 (h2 : ring (semi_normed_comm_ring to_additive.value_type)) : is_domain (semi_normed_comm_ring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_152061 (h0 : topological_space (finset (option ennreal))) : t1_space (finset (option ennreal)) := sorry --non-trivial
lemma new_lemma_152062 (h0 : functor.add_const (list (ring unsigned)) pos) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152063 (h0 : uniform_space.core (encodable fun_info)) : @path_connected_space.{0} (encodable.{0} fun_info) (@uniform_space.core.to_topological_space.{0} (encodable.{0} fun_info) h0)  := sorry --non-trivial
lemma new_lemma_152064 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (ring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (ring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_152065 (h0 : group (ring (has_neg_part (has_neg_part pos)))) : group.fg (ring (has_neg_part (has_neg_part pos))) := sorry --non-trivial
lemma new_lemma_152066 (h0 : complete_lattice (has_pos_part real)) : is_atomistic (has_pos_part real) := sorry --non-trivial
lemma new_lemma_152067 (h0 : not (topological_space (semiring num) -> false)) : @path_connected_space.{0} (semiring.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (semiring.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_152068 (h0 : has_top empty -> has_top empty -> Prop) : is_equiv (has_top empty) h0 := sorry --non-trivial
lemma new_lemma_152069 (h0 : topological_space (has_edist empty)) : topological_space.separable_space (has_edist empty) := sorry --non-trivial
lemma new_lemma_152070 (h1 : group (distrib_lattice (random_gen to_additive.value_type))) : group.fg (distrib_lattice (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_152071 (h0 : complete_lattice (metric_space fun_info)) : complete_lattice.is_Sup_finite_compact (metric_space fun_info) := sorry --non-trivial
lemma new_lemma_152072 (h1 : complete_lattice (nondiscrete_normed_field (add_comm_semigroup linarith.ineq))) : complete_lattice.is_Sup_finite_compact (nondiscrete_normed_field (add_comm_semigroup linarith.ineq)) := sorry --non-trivial
lemma new_lemma_152073 (h0 : functor.add_const (uniform_space (has_neg environment.implicit_infer_kind)) pos) : @complete_space.{0} (has_neg.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_neg.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_152074 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (ordered_comm_ring.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (ordered_comm_ring.{0} empty))  := sorry --non-trivial
lemma new_lemma_152075 (h0 : topological_space (linear_ordered_comm_monoid_with_zero (option (option empty)))) : preirreducible_space (linear_ordered_comm_monoid_with_zero (option (option empty))) := sorry --non-trivial
lemma new_lemma_152076 (h0 : ring (simple_graph (has_add (ring linarith.comp)))) : is_domain (simple_graph (has_add (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_152077 (h0 : not (topological_space (add_right_cancel_monoid empty) -> false)) : @locally_compact_space.{0} (add_right_cancel_monoid.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (add_right_cancel_monoid.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_152078 (h0 : functor.add_const (topological_space (left_cancel_monoid empty)) (semiring num)) : @normal_space.{0} (left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_monoid.{0} empty)) (semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_152079 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (add_left_cancel_semigroup.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_left_cancel_semigroup.{0} num))  := sorry --non-trivial
lemma new_lemma_152080 (h0 : topological_space (measure_theory.measure_space (semiring congr_arg_kind))) : totally_separated_space (measure_theory.measure_space (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_152081 (h0 : functor.add_const (add_monoid (add_group num)) num) : @add_monoid.fg.{0} (add_group.{0} num) (@functor.add_const.run.{0 0} (add_monoid.{0} (add_group.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_152082 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (has_zero.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (has_zero.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152083 (h0 : topological_space (has_Inf name)) : regular_space (has_Inf name) := sorry --non-trivial
lemma new_lemma_152084 (h0 : topological_space (canonically_ordered_comm_semiring (option pos))) : discrete_topology (canonically_ordered_comm_semiring (option pos)) := sorry --non-trivial
lemma new_lemma_152085 (h0 : functor.add_const (topological_space (has_Sup empty)) empty) : @t1_space.{0} (has_Sup.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Sup.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_152086 (h0 : cancel_comm_monoid_with_zero (has_ssubset (option (option empty)))) : unique_factorization_monoid (has_ssubset (option (option empty))) := sorry --non-trivial
lemma new_lemma_152087 (h0 : functor.add_const (list nnreal) empty) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152088 (h1 : function.extfun (finset Type) (has_mem.mem (semiring fun_info))) : @complete_lattice.is_Sup_finite_compact.{0} (semiring.{0} fun_info) (@finset.pi.empty.{1 0} Type complete_lattice.{0} (semiring.{0} fun_info) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (semiring.{0} fun_info)) h1 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_152089 (h1 : not (topological_space linarith.comp_source -> false)) : @path_connected_space.{0} linarith.comp_source (@classical.by_contradiction'.{1} (topological_space.{0} linarith.comp_source) h1)  := sorry --non-trivial
lemma new_lemma_152090 (h0 : functor.add_const (semiring (has_to_string name)) unsigned) : @is_noetherian_ring.{0} (has_to_string.{0} name) (@functor.add_const.run.{0 0} (semiring.{0} (has_to_string.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_152091 (h0 : ring (id (random_gen linarith.comp))) : rank_condition (id (random_gen linarith.comp)) := sorry --non-trivial
lemma new_lemma_152092 (h0 : set (simple_graph (mul_one_class (mul_one_class (mul_one_class char))))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_152093 (h0 : add_group (canonically_ordered_monoid linarith.comp)) : is_add_cyclic (canonically_ordered_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_152094 (h0 : complete_lattice (has_lt (mul_one_class (mul_one_class string.iterator_imp)))) : is_compactly_generated (has_lt (mul_one_class (mul_one_class string.iterator_imp))) := sorry --non-trivial
lemma new_lemma_152095 (h0 : functor.add_const (functor.comp uniform_space boolean_algebra.core name) unsigned) : @separated_space.{0} (boolean_algebra.core.{0} name) (@functor.comp.run.{0 0 0} uniform_space.{0} boolean_algebra.core.{0} name (@functor.add_const.run.{0 0} (functor.comp.{0 0 0} uniform_space.{0} boolean_algebra.core.{0} name) unsigned h0))  := sorry --non-trivial
lemma new_lemma_152096 (h0 : topological_space (random_gen (random_gen (random_gen num)))) : totally_separated_space (random_gen (random_gen (random_gen num))) := sorry --non-trivial
lemma new_lemma_152097 (h0 : with_bot (semiring (measurable_space unsigned))) (h1 : ne h0 has_bot.bot) : @is_noetherian_ring.{0} (measurable_space.{0} unsigned) (@with_bot.unbot.{0} (semiring.{0} (measurable_space.{0} unsigned)) h0 h1)  := sorry --non-trivial
lemma new_lemma_152098 (h0 : functor.add_const (function.extfun Type uniform_space) environment.implicit_infer_kind) : @separated_space.{0} (has_nndist.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) environment.implicit_infer_kind h0) (has_nndist.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_152099 (h0 : topological_space (ordered_comm_ring (has_Inf linarith.comp))) : sequential_space (ordered_comm_ring (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_152100 (h0 : functor.add_const (complete_lattice (has_nndist name)) unsigned) : @is_compactly_generated.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_nndist.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_152101 (h0 : topological_space (semigroup (comm_group (comm_group unsigned)))) : totally_disconnected_space (semigroup (comm_group (comm_group unsigned))) := sorry --non-trivial
lemma new_lemma_152102 (h0 : functor.add_const (group (ordered_ring empty)) empty) : @normalizer_condition.{0} (ordered_ring.{0} empty) (@functor.add_const.run.{0 0} (group.{0} (ordered_ring.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_152103 (h0 : filter (add_comm_monoid (has_add name))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_152104 (h0 : topological_space (has_pos_part (has_zero linarith.comp))) : regular_space (has_pos_part (has_zero linarith.comp)) := sorry --non-trivial
lemma new_lemma_152105 (h0 : functor.add_const (topological_space (add_comm_monoid environment.implicit_infer_kind)) linarith.comp) : @preirreducible_space.{0} (add_comm_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (add_comm_monoid.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152106 (h0 : topological_space (normed_comm_ring (add_comm_monoid Type))) : sequential_space (normed_comm_ring (add_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_152107 (h0 : topological_space (ring (has_neg (ring pos)))) : path_connected_space (ring (has_neg (ring pos))) := sorry --non-trivial
lemma new_lemma_152108 (h0 : topological_space (boolean_algebra (ring (has_Inf linarith.comp)))) : irreducible_space (boolean_algebra (ring (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_152109 (h0 : group (add_cancel_monoid (option (option (option pos))))) : is_cyclic (add_cancel_monoid (option (option (option pos)))) := sorry --non-trivial
lemma new_lemma_152110 (h0 : topological_space (has_bot (semiring (semiring empty)))) : discrete_topology (has_bot (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_152111 (h0 : functor.add_const (ring (has_pos_part pos)) (has_neg (add_cancel_monoid name))) : @strong_rank_condition.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (has_pos_part.{0} pos)) (has_neg.{0} (add_cancel_monoid.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_152112 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (distrib_lattice.{0} (has_ssubset.{0} fun_info)) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (distrib_lattice.{0} (has_ssubset.{0} fun_info)))  := sorry --non-trivial
lemma new_lemma_152113 (h0 : ring (comm_ring fun_info)) : rank_condition (comm_ring fun_info) := sorry --non-trivial
lemma new_lemma_152114 (h0 : list (with_one (has_norm (has_inv fun_info)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_152115 (h0 : monoid (ordered_comm_ring name)) : monoid.fg (ordered_comm_ring name) := sorry --non-trivial
lemma new_lemma_152116 (h0 : topological_space (has_top (random_gen (comm_ring (has_norm (comm_ring to_additive.value_type)))))) : t0_space (has_top (random_gen (comm_ring (has_norm (comm_ring to_additive.value_type))))) := sorry --non-trivial
lemma new_lemma_152117 (h0 : list (add_cancel_monoid (option (option (option ennreal))))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_152118 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (linear_ordered_field.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_field.{0} pos))  := sorry --non-trivial
lemma new_lemma_152119 (h0 : topological_space (generalized_boolean_algebra (sub_neg_monoid real))) : t1_space (generalized_boolean_algebra (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_152120 (h0 : list (has_add (ring Type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_152121 (h0 : functor.add_const (ring (boolean_algebra linarith.comp)) (boolean_algebra Type)) : @is_domain.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 1} (ring.{0} (boolean_algebra.{0} linarith.comp)) (boolean_algebra.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_152122 (h0 : ring (has_neg (has_add (boolean_algebra.core pos)))) : is_principal_ideal_ring (has_neg (has_add (boolean_algebra.core pos))) := sorry --non-trivial
lemma new_lemma_152123 (h0 : monoid (add_cancel_monoid (ring pos))) : monoid.fg (add_cancel_monoid (ring pos)) := sorry --non-trivial
lemma new_lemma_152124 (h0 : finset (as_linear_order (option empty))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_152125 (h0 : topological_space (measurable_space fun_info)) : t0_space (measurable_space fun_info) := sorry --non-trivial
lemma new_lemma_152126 (h0 : complete_lattice (has_zero (comm_group name))) : is_atomistic (has_zero (comm_group name)) := sorry --non-trivial
lemma new_lemma_152127 (h3 : ring (distrib_lattice fun_info)) : is_domain (distrib_lattice fun_info) := sorry --non-trivial
lemma new_lemma_152128 (h0 : group (add_comm_monoid name)) : normalizer_condition (add_comm_monoid name) := sorry --non-trivial
lemma new_lemma_152129 (h0 : group (has_nndist environment.implicit_infer_kind)) : is_simple_group (has_nndist environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_152130 (h0 : function.extfun (Type 1) semiring) : @is_noetherian_ring.{1} (normed_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) semiring.{1} h0 (normed_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_152131 (h2 : group (with_one (with_bot linarith.comp_source))) : normalizer_condition (with_one (with_bot linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_152132 (h0 : has_mem.mem (has_neg_part unsigned) has_zero.zero) : @t0_space.{0} (has_neg_part.{0} unsigned) (@multiset.pi.empty.{1 0} Type topological_space.{0} (has_neg_part.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_152133 (h1 : uniform_space (with_zero (distrib char))) : complete_space (with_zero (distrib char)) := sorry --non-trivial
lemma new_lemma_152134 (h1 : group (linear_ordered_comm_group_with_zero char)) : is_cyclic (linear_ordered_comm_group_with_zero char) := sorry --non-trivial
lemma new_lemma_152135 (h0 : functor.add_const (topological_space (has_neg_part name)) unsigned) : @topological_space.separable_space.{0} (has_neg_part.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_152136 (h0 : ring (has_ssubset linarith.ineq)) : is_domain (has_ssubset linarith.ineq) := sorry --non-trivial
lemma new_lemma_152137 (h0 : functor.add_const (group (has_add Type)) Type) : @group.fg.{1} (has_add.{1} Type) (@functor.add_const.run.{1 1} (group.{1} (has_add.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_152138 (h0 : filter (boolean_algebra (comm_group (ring Type)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_152139 (h0 : complete_lattice (div_inv_monoid linarith.ineq)) : is_compactly_generated (div_inv_monoid linarith.ineq) := sorry --non-trivial
lemma new_lemma_152140 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (sub_neg_monoid.{0} pos) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (sub_neg_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_152141 (h0 : add_group (linear_ordered_field (option ennreal))) : is_add_cyclic (linear_ordered_field (option ennreal)) := sorry --non-trivial
lemma new_lemma_152142 (h0 : finset (semigroup Type)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_152143 (h0 : functor.add_const (ordered_add_comm_monoid (finset environment.implicit_infer_kind)) name) : @archimedean.{0} (finset.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (finset.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_152144 (h0 : group (complete_distrib_lattice (has_add pos))) : is_cyclic (complete_distrib_lattice (has_add pos)) := sorry --non-trivial
lemma new_lemma_152145 (h0 : functor.add_const (function.extfun Type topological_space) (mul_zero_class name)) : @sequential_space.{0} (has_to_string.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) (mul_zero_class.{0} name) h0) (has_to_string.{0} name))  := sorry --non-trivial
lemma new_lemma_152146 (h0 : fin has_zero.zero) : @normalizer_condition.{0} (canonically_ordered_monoid.{0} linarith.comp) (@matrix.vec_empty.{0} (group.{0} (canonically_ordered_monoid.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_152147 (h0 : topological_space (complete_distrib_lattice (comm_group unsigned))) : discrete_topology (complete_distrib_lattice (comm_group unsigned)) := sorry --non-trivial
lemma new_lemma_152148 (h0 : topological_space (has_norm (semiring empty))) : totally_disconnected_space (has_norm (semiring empty)) := sorry --non-trivial
lemma new_lemma_152149 (h0 : add_group (add_comm_monoid (finset pos))) : is_add_cyclic (add_comm_monoid (finset pos)) := sorry --non-trivial
lemma new_lemma_152150 (h0 : not (function.extfun Type topological_space -> false)) : @totally_separated_space.{0} (mul_zero_class.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (mul_zero_class.{0} num))  := sorry --non-trivial
lemma new_lemma_152151 (h0 : functor.add_const (topological_space (add_cancel_monoid Type)) (has_Inf linarith.comp)) : @normal_space.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (add_cancel_monoid.{1} Type)) (has_Inf.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_152152 (h0 : has_nnnorm (random_gen string_imp) -> has_nnnorm (random_gen string_imp) -> bool) : is_dec_refl h0 := sorry --non-trivial
lemma new_lemma_152153 (h0 : ring (finset (has_add linarith.comp))) : strong_rank_condition (finset (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_152154 (h0 : ring znum) : rank_condition znum := sorry --non-trivial
lemma new_lemma_152155 (h0 : topological_space (has_add pos)) : preirreducible_space (has_add pos) := sorry --non-trivial
lemma new_lemma_152156 (h0 : group (has_emptyc (random_gen linarith.ineq))) : group.fg (has_emptyc (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_152157 (h0 : topological_space (has_to_string Type)) : t0_space (has_to_string Type) := sorry --non-trivial
lemma new_lemma_152158 (h0 : functor.add_const (topological_space (complete_distrib_lattice pos)) real) : @discrete_topology.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} pos)) real h0)  := sorry --non-trivial
lemma new_lemma_152159 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preconnected_space.{0} (has_bot.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_bot.{0} name))  := sorry --non-trivial
lemma new_lemma_152160 (h0 : complete_lattice (cancel_monoid (boolean_algebra (has_add (has_add environment.implicit_infer_kind))))) : is_atomistic (cancel_monoid (boolean_algebra (has_add (has_add environment.implicit_infer_kind)))) := sorry --non-trivial
lemma new_lemma_152161 (h0 : complete_lattice (left_cancel_monoid fun_info)) : complete_lattice.is_Sup_finite_compact (left_cancel_monoid fun_info) := sorry --non-trivial
lemma new_lemma_152162 (h0 : add_group (has_compl (random_gen linarith.ineq))) : is_add_cyclic (has_compl (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_152163 (h0 : function.extfun linarith.comp_source (fun (x : linarith.comp_source), linarith.comp_source)) (h1 : linarith.comp_source) : function.periodic_pts (function.extfun_app h0) h1 := sorry --non-trivial
lemma new_lemma_152164 (h0 : function.extfun (Type 1) topological_space) : @t0_space.{1} (mul_zero_class.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (mul_zero_class.{1} Type))  := sorry --non-trivial
lemma new_lemma_152165 (h0 : filter (with_one linarith.ineq)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_152166 (h0 : complete_lattice (finset (finset linarith.comp))) : is_compactly_generated (finset (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_152167 (h0 : functor.add_const (filter (normed_comm_ring unsigned)) name) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152168 (h0 : list (omega_complete_partial_order congr_arg_kind)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_152169 (h0 : function.extfun Type topological_space) : preirreducible_space empty := sorry --non-trivial
lemma new_lemma_152170 (h0 : ring (id (has_inv (has_inv (has_inv (has_inv to_additive.value_type)))))) : is_domain (id (has_inv (has_inv (has_inv (has_inv to_additive.value_type))))) := sorry --non-trivial
lemma new_lemma_152171 (h0 : fin has_zero.zero) : @is_simple_group.{0} (has_bot.{0} linarith.comp) (@matrix.vec_empty.{0} (group.{0} (has_bot.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_152172 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (canonically_linear_ordered_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_152173 (h0 : function.extfun Type (functor.add_const (topological_space (canonically_ordered_add_monoid empty)))) : @discrete_topology.{0} (canonically_ordered_add_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_add_monoid.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (canonically_ordered_add_monoid.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_152174 (h0 : functor.add_const (topological_space (finset pos)) Type) : @sequential_space.{0} (finset.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (finset.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_152175 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_simple_group.{0} (canonically_linear_ordered_monoid.{0} name) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (canonically_linear_ordered_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_152176 (h0 : functor.add_const (complete_lattice (sub_neg_monoid pos)) linarith.comp) : @is_compactly_generated.{0} (sub_neg_monoid.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (sub_neg_monoid.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152177 (h0 : group (has_ssubset (has_nnnorm (has_nnnorm linarith.comp_source)))) : group.fg (has_ssubset (has_nnnorm (has_nnnorm linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_152178 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_add pos)) pos) : @unique_factorization_monoid.{0} (has_add.{0} pos) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (has_add.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_152179 (h0 : add_group (has_ssubset (denumerable to_additive.value_type))) : is_add_cyclic (has_ssubset (denumerable to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_152180 (h0 : filter (add_left_cancel_semigroup unsigned) -> Prop) (h1 : Exists (fun (x : filter (add_left_cancel_semigroup unsigned)), h0 x)) : filter.ne_bot (classical.some h1) := sorry --non-trivial
lemma new_lemma_152181 (h0 : functor.add_const (topological_space (preorder congr_arg_kind)) empty) : @loc_path_connected_space.{0} (preorder.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} congr_arg_kind)) empty h0)  := sorry --non-trivial
lemma new_lemma_152182 (h0 : ring (comm_group (has_neg name))) : is_domain (comm_group (has_neg name)) := sorry --non-trivial
lemma new_lemma_152183 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem monoid)) : @monoid.fg.{0} linarith.ineq (@function.extfun_app.{2 1} Type monoid.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) monoid.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) monoid.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) linarith.ineq)  := sorry --non-trivial
lemma new_lemma_152184 (h0 : not (topological_space (has_nnnorm linarith.comp_source) -> false)) : @t0_space.{0} (has_nnnorm.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (has_nnnorm.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_152185 (h0 : filter (generalized_boolean_algebra linarith.comp)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_152186 (h1 : topological_space (random_gen (random_gen string_imp))) : totally_separated_space (random_gen (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_152187 (h1 : ring (non_unital_non_assoc_semiring char)) : strong_rank_condition (non_unital_non_assoc_semiring char) := sorry --non-trivial
lemma new_lemma_152188 (h0 : functor.add_const (function.extfun Type uniform_space) linarith.comp) : @complete_space.{0} (add_cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) linarith.comp h0) (add_cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_152189 (h0 : group (has_pos_part (has_Inf (ring (ordered_ring name))))) : group.fg (has_pos_part (has_Inf (ring (ordered_ring name)))) := sorry --non-trivial
lemma new_lemma_152190 (h0 : add_group (with_one empty)) : is_add_cyclic (with_one empty) := sorry --non-trivial
lemma new_lemma_152191 (h0 : functor.add_const (uniform_space (has_to_string pos)) linarith.comp) : @complete_space.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_to_string.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152192 (h0 : functor.add_const (topological_space (add_comm_monoid name)) pos) : @totally_separated_space.{0} (add_comm_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (add_comm_monoid.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_152193 (h0 : functor.add_const (ring (mul_zero_class num)) (semiring num)) : @strong_rank_condition.{0} (mul_zero_class.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (mul_zero_class.{0} num)) (semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_152194 (h0 : semiring fun_info) (h1 : ideal fun_info) : ideal.is_prime h1 := sorry --non-trivial
lemma new_lemma_152195 (h0 : topological_space (simple_graph Type)) : irreducible_space (simple_graph Type) := sorry --non-trivial
lemma new_lemma_152196 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (has_nndist.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_nndist.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_152197 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (has_add.{0} linarith.comp) (@function.extfun_app.{2 1} Type monoid.{0} h0 (has_add.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_152198 (h0 : list (linear_ordered_comm_monoid_with_zero (comm_monoid congr_arg_kind))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_152199 (h0 : function.extfun Type topological_space) : @t0_space.{0} (random_gen.{0} (has_inv.{0} (comm_ring.{0} (comm_ring.{0} (comm_ring.{0} fun_info))))) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (random_gen.{0} (has_inv.{0} (comm_ring.{0} (comm_ring.{0} (comm_ring.{0} fun_info))))))  := sorry --non-trivial
lemma new_lemma_152200 (h0 : group (normed_field (comm_ring (has_nnnorm reducibility_hints)))) : is_cyclic (normed_field (comm_ring (has_nnnorm reducibility_hints))) := sorry --non-trivial
lemma new_lemma_152201 (h0 : fin has_zero.zero) : @preirreducible_space.{0} (boolean_algebra.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (boolean_algebra.{0} real))  := sorry --non-trivial
lemma new_lemma_152202 (h0 : add_group (linear_ordered_semiring (semiring empty))) : is_add_cyclic (linear_ordered_semiring (semiring empty)) := sorry --non-trivial
lemma new_lemma_152203 (h0 : ring (semiring (random_gen linarith.ineq))) : rank_condition (semiring (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_152204 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (has_inv.{0} (random_gen.{0} fun_info)) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_inv.{0} (random_gen.{0} fun_info)))  := sorry --non-trivial
lemma new_lemma_152205 (h0 : function.extfun Type (functor.comp group has_neg)) : @is_cyclic.{0} (has_neg.{0} name) (@functor.comp.run.{0 0 0} group.{0} has_neg.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} group.{0} has_neg.{0}) h0 name))  := sorry --non-trivial
lemma new_lemma_152206 (h0 : function.extfun Type ring) : @is_domain.{0} (has_bot.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_bot.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152207 (h0 : functor.add_const (ring (add_comm_monoid pos)) (finset (ring linarith.comp))) : @strong_rank_condition.{0} (add_comm_monoid.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (add_comm_monoid.{0} pos)) (finset.{0} (ring.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_152208 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (random_gen.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (random_gen.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_152209 (h0 : complete_lattice (with_one (has_one num))) : complete_lattice.is_Sup_finite_compact (with_one (has_one num)) := sorry --non-trivial
lemma new_lemma_152210 (h0 : add_group (semi_normed_comm_ring (random_gen (random_gen char)))) : is_add_cyclic (semi_normed_comm_ring (random_gen (random_gen char))) := sorry --non-trivial
lemma new_lemma_152211 (h0 : functor.add_const (ordered_comm_monoid (ring name)) linarith.comp) : @has_exists_mul_of_le.{0} (ring.{0} name) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (ring.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152212 (h0 : not (complete_lattice (has_compl fun_info) -> false)) : @is_compactly_generated.{0} (has_compl.{0} fun_info) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_compl.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_152213 (h0 : topological_space (canonically_linear_ordered_monoid congr_arg_kind)) : locally_compact_space (canonically_linear_ordered_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_152214 (h0 : ring (complete_distrib_lattice (boolean_algebra.core pos))) : rank_condition (complete_distrib_lattice (boolean_algebra.core pos)) := sorry --non-trivial
lemma new_lemma_152215 (h0 : functor.add_const (function.extfun Type ordered_add_comm_monoid) Type) : @archimedean.{0} (cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type ordered_add_comm_monoid.{0}) Type h0) (cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_152216 (h0 : uniform_space (complete_semilattice_Sup (semiring unsigned))) : complete_space (complete_semilattice_Sup (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_152217 (h0 : fin has_zero.zero) : @preconnected_space.{0} (sub_neg_monoid.{0} (has_Inf.{0} name)) (@matrix.vec_empty.{0} (topological_space.{0} (sub_neg_monoid.{0} (has_Inf.{0} name))) h0)  := sorry --non-trivial
lemma new_lemma_152218 (h0 : ring (has_neg (mul_one_class linarith.comp_source))) : strong_rank_condition (has_neg (mul_one_class linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_152219 (h0 : functor.add_const (filter (has_nndist name)) (has_nndist linarith.comp)) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152220 (h0 : fin has_zero.zero) : @normal_space.{0} (has_nndist.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (has_nndist.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_152221 (h0 : topological_space (encodable char)) : t0_space (encodable char) := sorry --non-trivial
lemma new_lemma_152222 (h0 : topological_space (has_pos_part (has_Inf (has_bot real)))) : irreducible_space (has_pos_part (has_Inf (has_bot real))) := sorry --non-trivial
lemma new_lemma_152223 (h0 : functor.add_const (topological_space (has_add name)) environment.implicit_infer_kind) : @regular_space.{0} (has_add.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_152224 (h0 : group (measurable_space (has_norm congr_arg_kind))) : is_cyclic (measurable_space (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_152225 (h5 h6 : multiset (non_unital_non_assoc_semiring string_imp)) : multiset.disjoint h5 h6 := sorry --non-trivial
lemma new_lemma_152226 (h1 : ring (normed_group linarith.comp)) : is_domain (normed_group linarith.comp) := sorry --non-trivial
lemma new_lemma_152227 (h0 : not (function.extfun Type uniform_space -> false)) : @separated_space.{0} stieltjes_function (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) stieltjes_function)  := sorry --non-trivial
lemma new_lemma_152228 (h0 : group (linear_ordered_comm_ring (semiring (semiring (semiring congr_arg_kind))))) : is_cyclic (linear_ordered_comm_ring (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_152229 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @unique_factorization_monoid.{0} (simple_graph.{0} linarith.comp) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 cancel_comm_monoid_with_zero.{0}) (simple_graph.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_152230 (h0 : functor.add_const (function.extfun (Type 1) topological_space) pos) : @t0_space.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) pos h0) (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_152231 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (finset.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (finset.{0} pos))  := sorry --non-trivial
lemma new_lemma_152232 (h0 : topological_space (ring (semigroup Type))) : regular_space (ring (semigroup Type)) := sorry --non-trivial
lemma new_lemma_152233 (h0 : group (has_one (has_norm (has_norm num)))) : normalizer_condition (has_one (has_norm (has_norm num))) := sorry --non-trivial
lemma new_lemma_152234 (h0 : topological_space (boolean_algebra.core name)) : preconnected_space (boolean_algebra.core name) := sorry --non-trivial
lemma new_lemma_152235 (h0 : topological_space (has_neg (boolean_algebra name))) : t0_space (has_neg (boolean_algebra name)) := sorry --non-trivial
lemma new_lemma_152236 (h6 : uniform_space (has_ssubset ereal)) : complete_space (has_ssubset ereal) := sorry --non-trivial
lemma new_lemma_152237 (h0 : functor.add_const (add_monoid (finset name)) name) : @add_monoid.fg.{0} (finset.{0} name) (@functor.add_const.run.{0 0} (add_monoid.{0} (finset.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_152238 (h0 : functor.add_const (topological_space (boolean_algebra pos)) (has_add name)) : @topological_space.separable_space.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} pos)) (has_add.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_152239 (h0 : list (finset (boolean_algebra pos))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_152240 (h0 : function.extfun Type ring) : @rank_condition.{0} (has_inv.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_inv.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_152241 (h0 : function.extfun Type topological_space) : @t1_space.{0} (add_cancel_comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_cancel_comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_152242 (h0 : topological_space (has_Inf (has_pos_part pos))) : locally_compact_space (has_Inf (has_pos_part pos)) := sorry --non-trivial
lemma new_lemma_152243 (h0 : group (has_to_string (has_to_string Type))) : is_cyclic (has_to_string (has_to_string Type)) := sorry --non-trivial
lemma new_lemma_152244 (h0 : functor.add_const (function.extfun Type topological_space) (has_neg Type)) : @regular_space.{0} (boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) (has_neg.{1} Type) h0) (boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_152245 (h0 : topological_space (complete_distrib_lattice pos)) : path_connected_space (complete_distrib_lattice pos) := sorry --non-trivial
lemma new_lemma_152246 (h0 : set (linarith.comp_source -> mul_one_class (mul_one_class reducibility_hints))) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_152247 (h0 : Prop) (h1 : list Prop) : list.ilast' h0 h1 := sorry --non-trivial
lemma new_lemma_152248 (h0 : ordered_comm_monoid (finset name)) : has_exists_mul_of_le (finset name) := sorry --non-trivial
lemma new_lemma_152249 (h0 : functor.add_const (semiring (sub_neg_monoid pos)) (finset (finset linarith.comp))) : @is_noetherian_ring.{0} (sub_neg_monoid.{0} pos) (@functor.add_const.run.{0 0} (semiring.{0} (sub_neg_monoid.{0} pos)) (finset.{0} (finset.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_152250 (h0 : group (has_inv (has_nnnorm (has_nnnorm linarith.ineq)))) : is_cyclic (has_inv (has_nnnorm (has_nnnorm linarith.ineq))) := sorry --non-trivial
lemma new_lemma_152251 (h0 : functor.add_const (add_group (semigroup name)) (has_zero Type)) : @is_add_cyclic.{0} (semigroup.{0} name) (@functor.add_const.run.{0 1} (add_group.{0} (semigroup.{0} name)) (has_zero.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_152252 (h0 : functor.add_const (monoid (left_cancel_semigroup pos)) environment.implicit_infer_kind) : @monoid.fg.{0} (left_cancel_semigroup.{0} pos) (@functor.add_const.run.{0 0} (monoid.{0} (left_cancel_semigroup.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_152253 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (normed_lattice_add_comm_group.{0} real) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (normed_lattice_add_comm_group.{0} real))  := sorry --non-trivial
lemma new_lemma_152254 (h0 : functor.add_const (group (simple_graph linarith.comp)) pos) : @is_simple_group.{0} (simple_graph.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (simple_graph.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_152255 (h1 : has_mem.mem (has_top string_imp) has_emptyc.emptyc) : @normalizer_condition.{0} (has_top.{0} string_imp) (@finset.pi.empty.{1 0} Type group.{0} (has_top.{0} string_imp) h1)  := sorry --non-trivial
lemma new_lemma_152256 (h0 : functor.add_const (filter (preorder empty)) empty) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152257 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_152258 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (cancel_monoid.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_152259 (h0 : topological_space (comm_semigroup (has_bot (has_bot real)))) : locally_compact_space (comm_semigroup (has_bot (has_bot real))) := sorry --non-trivial
lemma new_lemma_152260 (h0 : function.extfun Type (functor.add_const (finset nnreal))) : finset.nonempty (functor.add_const.run (function.extfun_app h0 num)) := sorry --non-trivial
lemma new_lemma_152261 (h0 : functor.add_const (topological_space (normed_comm_ring name)) name) : @irreducible_space.{0} (normed_comm_ring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_152262 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (ordered_comm_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (ordered_comm_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_152263 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (canonically_ordered_comm_semiring.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_comm_semiring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152264 (h0 : functor.add_const (function.extfun Type list) pos) : list.nodup (function.extfun_app (functor.add_const.run h0) pos) := sorry --non-trivial
lemma new_lemma_152265 (h0 : topological_space (add_right_cancel_monoid (semiring unsigned))) : preirreducible_space (add_right_cancel_monoid (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_152266 (h0 : topological_space (measurable_space.dynkin_system num)) : normal_space (measurable_space.dynkin_system num) := sorry --non-trivial
lemma new_lemma_152267 (h0 : functor.add_const (complete_lattice (boolean_algebra name)) pos) : @is_compactly_generated.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (boolean_algebra.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_152268 (h0 : topological_space (id (semiring empty))) : locally_compact_space (id (semiring empty)) := sorry --non-trivial
lemma new_lemma_152269 (h0 : group (linear_ordered_add_comm_group (random_gen (random_gen char)))) : group.fg (linear_ordered_add_comm_group (random_gen (random_gen char))) := sorry --non-trivial
lemma new_lemma_152270 (h0 : functor.add_const (ring (comm_group linarith.comp)) (has_neg_part pos)) : @rank_condition.{0} (comm_group.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (comm_group.{0} linarith.comp)) (has_neg_part.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_152271 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (add_cancel_comm_monoid empty)) := sorry --non-trivial
lemma new_lemma_152272 (h0 : topological_space (has_neg_part (option (option unsigned)))) : t1_space (has_neg_part (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_152273 (h0 : semiring (bin_tree (option (option unsigned)))) : is_noetherian_ring (bin_tree (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_152274 (h0 : ring (add_comm_monoid (finset (ring linarith.comp)))) : strong_rank_condition (add_comm_monoid (finset (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_152275 (h0 : functor.add_const (topological_space (add_cancel_monoid Type)) (has_add pos)) : @normal_space.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (add_cancel_monoid.{1} Type)) (has_add.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_152276 (h0 : topological_space (linear_ordered_comm_group ennreal)) : regular_space (linear_ordered_comm_group ennreal) := sorry --non-trivial
lemma new_lemma_152277 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (has_neg.{0} (semigroup.{0} pos)) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (has_neg.{0} (semigroup.{0} pos)))  := sorry --non-trivial
lemma new_lemma_152278 (h0 : functor.add_const (list (has_neg Type)) environment.implicit_infer_kind) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152279 (h0 : functor.add_const (topological_space (add_cancel_monoid ennreal)) num) : @totally_separated_space.{0} (add_cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} ennreal)) num h0)  := sorry --non-trivial
lemma new_lemma_152280 (h0 : ring (ring (semigroup ennreal))) : is_domain (ring (semigroup ennreal)) := sorry --non-trivial
lemma new_lemma_152281 (h0 : ring (canonically_ordered_monoid name)) : is_domain (canonically_ordered_monoid name) := sorry --non-trivial
lemma new_lemma_152282 (h0 : functor.add_const (topological_space (add_comm_monoid unsigned)) (has_add Type)) : @irreducible_space.{0} (add_comm_monoid.{0} unsigned) (@functor.add_const.run.{0 1} (topological_space.{0} (add_comm_monoid.{0} unsigned)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_152283 (h2 : topological_space (random_gen (has_top to_additive.value_type))) : t0_space (random_gen (has_top to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_152284 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (with_bot.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (with_bot.{0} num))  := sorry --non-trivial
lemma new_lemma_152285 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (has_zero.{0} ennreal) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_152286 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (has_neg.{0} (mul_zero_class.{0} unsigned)) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (has_neg.{0} (mul_zero_class.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_152287 (h0 : topological_space (left_cancel_semigroup (semiring (semiring congr_arg_kind)))) : discrete_topology (left_cancel_semigroup (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_152288 (h0 : functor.add_const (ring (ordered_ring empty)) num) : @is_domain.{0} (ordered_ring.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (ordered_ring.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_152289 (h0 : not (ring (has_top reducibility_hints) -> false)) : @strong_rank_condition.{0} (has_top.{0} reducibility_hints) (@classical.by_contradiction'.{1} (ring.{0} (has_top.{0} reducibility_hints)) h0)  := sorry --non-trivial
lemma new_lemma_152290 (h0 : topological_space (semiring (has_norm (has_top fun_info)))) : irreducible_space (semiring (has_norm (has_top fun_info))) := sorry --non-trivial
lemma new_lemma_152291 (h0 : functor.add_const (topological_space (has_zero Type)) name) : @t0_space.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_zero.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_152292 (h0 : add_comm_semigroup fun_info -> add_comm_semigroup fun_info -> Prop) (h1 : set (add_comm_semigroup fun_info)) : directed_on h0 h1 := sorry --non-trivial
lemma new_lemma_152293 (h0 : not (monoid (complete_semilattice_Sup empty) -> false)) : @monoid.fg.{0} (complete_semilattice_Sup.{0} empty) (@classical.by_contradiction'.{1} (monoid.{0} (complete_semilattice_Sup.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_152294 (h0 : functor.add_const (group (has_neg pos)) linarith.comp) : @normalizer_condition.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_neg.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152295 (h0 : uniform_space (has_pos_part (has_Inf real))) : separated_space (has_pos_part (has_Inf real)) := sorry --non-trivial
lemma new_lemma_152296 (h0 : topological_space (boolean_algebra.core (boolean_algebra name))) : t1_space (boolean_algebra.core (boolean_algebra name)) := sorry --non-trivial
lemma new_lemma_152297 (h0 : filter (distrib_lattice char)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_152298 (h0 : group (topological_space linarith.comp_source)) : is_cyclic (topological_space linarith.comp_source) := sorry --non-trivial
lemma new_lemma_152299 (h3 : ring num) : strong_rank_condition num := sorry --non-trivial
lemma new_lemma_152300 (h0 : topological_space (add_cancel_monoid (has_to_string unsigned))) : preirreducible_space (add_cancel_monoid (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_152301 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (add_group (semiring empty))) := sorry --non-trivial
lemma new_lemma_152302 (h0 : topological_space (ordered_comm_ring (has_add name))) : t0_space (ordered_comm_ring (has_add name)) := sorry --non-trivial
lemma new_lemma_152303 (h0 : topological_space (finset (has_pos_part (finset (has_neg Type))))) : preconnected_space (finset (has_pos_part (finset (has_neg Type)))) := sorry --non-trivial
lemma new_lemma_152304 (h0 : uniform_space (has_norm congr_arg_kind)) : complete_space (has_norm congr_arg_kind) := sorry --non-trivial
lemma new_lemma_152305 (h1 : not (topological_space (has_emptyc num) -> false)) : @irreducible_space.{0} (has_emptyc.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (has_emptyc.{0} num)) h1)  := sorry --non-trivial
lemma new_lemma_152306 (h0 : topological_space (comm_group (boolean_algebra (has_add Type)))) : sequential_space (comm_group (boolean_algebra (has_add Type))) := sorry --non-trivial
lemma new_lemma_152307 (h0 : functor.add_const (topological_space (add_comm_monoid name)) (has_neg environment.implicit_infer_kind)) : @preconnected_space.{0} (add_comm_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (add_comm_monoid.{0} name)) (has_neg.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_152308 (h0 : list (left_cancel_monoid (semiring unsigned))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_152309 (h0 : topological_space (normed_group (semiring (semiring linarith.comp)))) : path_connected_space (normed_group (semiring (semiring linarith.comp))) := sorry --non-trivial
lemma new_lemma_152310 (h0 : function.extfun Type (prod (cancel_monoid ennreal))) : id_rel (function.extfun_app h0 (cancel_monoid ennreal)) := sorry --non-trivial
lemma new_lemma_152311 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (has_Sup.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_Sup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152312 (h0 : function.extfun Type (prod (semigroup name))) : id_rel (function.extfun_app h0 (semigroup name)) := sorry --non-trivial
lemma new_lemma_152313 (h0 : not (function.extfun Type topological_space -> false)) : @t0_space.{0} (dlist.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (dlist.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_152314 (h0 : topological_space (has_norm string_imp)) : irreducible_space (has_norm string_imp) := sorry --non-trivial
lemma new_lemma_152315 (h0 : functor.add_const (complete_lattice (is_R_or_C unsigned)) empty) : @complete_lattice.is_Sup_finite_compact.{0} (is_R_or_C.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (is_R_or_C.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_152316 (h0 : functor.add_const (ring (semigroup linarith.comp)) (boolean_algebra (finset linarith.comp))) : @rank_condition.{0} (semigroup.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (semigroup.{0} linarith.comp)) (boolean_algebra.{0} (finset.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_152317 (h0 : function.extfun Type (functor.comp topological_space add_cancel_monoid)) : @irreducible_space.{0} (add_cancel_monoid.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} add_cancel_monoid.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} add_cancel_monoid.{0}) h0 name))  := sorry --non-trivial
lemma new_lemma_152318 (h0 : functor.add_const (function.extfun Type cancel_comm_monoid_with_zero) linarith.comp) : @unique_factorization_monoid.{0} (generalized_boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type cancel_comm_monoid_with_zero.{0}) linarith.comp h0) (generalized_boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_152319 (h0 : functor.add_const (topological_space pos) Type) : @sequential_space.{0} pos (@functor.add_const.run.{0 1} (topological_space.{0} pos) Type h0)  := sorry --non-trivial
lemma new_lemma_152320 (h1 : ring (distrib (has_nnnorm fun_info))) : rank_condition (distrib (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_152321 (h0 : topological_space (canonically_ordered_comm_semiring (has_add linarith.comp))) : preirreducible_space (canonically_ordered_comm_semiring (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_152322 (h0 : complete_lattice (simple_graph (has_add (has_add (has_add linarith.comp))))) : is_compactly_generated (simple_graph (has_add (has_add (has_add linarith.comp)))) := sorry --non-trivial
lemma new_lemma_152323 (h0 : group (has_to_string (comm_group (comm_group pos)))) : normalizer_condition (has_to_string (comm_group (comm_group pos))) := sorry --non-trivial
lemma new_lemma_152324 (h0 : function.extfun Type group) : @group.fg.{0} (has_edist.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (has_edist.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152325 (h0 : add_group (semiring (id (metric_space (has_top empty))))) : is_add_cyclic (semiring (id (metric_space (has_top empty)))) := sorry --non-trivial
lemma new_lemma_152326 (h0 : not (semiring (mul_zero_class empty) -> false)) : @is_noetherian_ring.{0} (mul_zero_class.{0} empty) (@classical.by_contradiction'.{1} (semiring.{0} (mul_zero_class.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_152327 (h0 : functor.add_const (add_group (cancel_monoid name)) linarith.comp) : @is_add_cyclic.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (add_group.{0} (cancel_monoid.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152328 (h0 : fin has_zero.zero) : @t0_space.{0} (has_bot.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (has_bot.{0} real)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)))  := sorry --non-trivial
lemma new_lemma_152329 (h0 : has_add (mul_one_class (mul_one_class fun_info))) (h1 : has_lt (add_con (mul_one_class (mul_one_class fun_info)))) : no_max_order (add_con (mul_one_class (mul_one_class fun_info))) := sorry --non-trivial
lemma new_lemma_152330 (h0 : function.extfun Type group) : @group.fg.{0} (ring.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152331 (h0 : topological_space (semigroup pos)) : path_connected_space (semigroup pos) := sorry --non-trivial
lemma new_lemma_152332 (h0 : filter (complete_distrib_lattice empty)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_152333 (h1 : complete_lattice (normed_group fun_info)) : is_atomistic (normed_group fun_info) := sorry --non-trivial
lemma new_lemma_152334 (h0 : topological_space (has_norm (has_inv (has_inv (random_gen fun_info))))) : locally_compact_space (has_norm (has_inv (has_inv (random_gen fun_info)))) := sorry --non-trivial
lemma new_lemma_152335 (h0 : not (function.extfun Type topological_space -> false)) : @topological_space.separable_space.{0} (has_one.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_one.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152336 (h0 : fin has_zero.zero) : @complete_lattice.is_Sup_finite_compact.{0} (has_pos_part.{0} real) (@matrix.vec_empty.{0} (complete_lattice.{0} (has_pos_part.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_152337 (h0 : ordered_add_comm_monoid (sub_neg_monoid name)) : archimedean (sub_neg_monoid name) := sorry --non-trivial
lemma new_lemma_152338 (h0 : complete_lattice (add_cancel_monoid (option (option (option num))))) : complete_lattice.is_Sup_finite_compact (add_cancel_monoid (option (option (option num)))) := sorry --non-trivial
lemma new_lemma_152339 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preconnected_space.{0} (boolean_algebra.core.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (boolean_algebra.core.{0} name))  := sorry --non-trivial
lemma new_lemma_152340 (h0 : ring (comm_ring (has_inv fun_info))) : strong_rank_condition (comm_ring (has_inv fun_info)) := sorry --non-trivial
lemma new_lemma_152341 (h0 : functor.add_const (topological_space (boolean_algebra.core unsigned)) Type) : @totally_separated_space.{0} (boolean_algebra.core.{0} unsigned) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.core.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_152342 (h0 : function.extfun (Type 1) topological_space) : @irreducible_space.{1} (add_cancel_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (add_cancel_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_152343 (h1 : ring (has_ssubset char)) : strong_rank_condition (has_ssubset char) := sorry --non-trivial
lemma new_lemma_152344 (h0 : ring (with_bot (dlist fun_info))) : is_domain (with_bot (dlist fun_info)) := sorry --non-trivial
lemma new_lemma_152345 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (has_add.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_add.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_152346 (h0 : uniform_space (option (semiring empty))) : separated_space (option (semiring empty)) := sorry --non-trivial
lemma new_lemma_152347 (h0 : topological_space (ordered_cancel_add_comm_monoid ennreal)) : loc_path_connected_space (ordered_cancel_add_comm_monoid ennreal) := sorry --non-trivial
lemma new_lemma_152348 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_152349 (h0 : complete_lattice (has_inv linarith.ineq)) : complete_lattice.is_Sup_finite_compact (has_inv linarith.ineq) := sorry --non-trivial
lemma new_lemma_152350 (h1 : topological_space (random_gen (has_top linarith.comp_source))) : totally_disconnected_space (random_gen (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_152351 (h0 : not (ring (has_ssubset linarith.ineq) -> false)) : @strong_rank_condition.{0} (has_ssubset.{0} linarith.ineq) (@classical.by_contradiction'.{1} (ring.{0} (has_ssubset.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_152352 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (semigroup.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semigroup.{0} pos))  := sorry --non-trivial
lemma new_lemma_152353 (h0 : group (has_neg_part (add_comm_monoid Type))) : is_cyclic (has_neg_part (add_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_152354 (h0 : ring (measurable_space linarith.ineq)) : rank_condition (measurable_space linarith.ineq) := sorry --non-trivial
lemma new_lemma_152355 (h0 : topological_space (has_add (ordered_ring linarith.comp))) : preconnected_space (has_add (ordered_ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_152356 (h0 : uniform_space (has_compl (mul_one_class (add_comm_semigroup fun_info)))) : complete_space (has_compl (mul_one_class (add_comm_semigroup fun_info))) := sorry --non-trivial
lemma new_lemma_152357 (h1 : ring (semi_normed_comm_ring string.iterator_imp)) : strong_rank_condition (semi_normed_comm_ring string.iterator_imp) := sorry --non-trivial
lemma new_lemma_152358 (h0 : fin has_zero.zero) : @is_domain.{1} (semigroup.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (semigroup.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_152359 (h0 : uniform_space (ordered_comm_ring (has_Inf (ordered_comm_monoid (has_Inf real))))) : complete_space (ordered_comm_ring (has_Inf (ordered_comm_monoid (has_Inf real)))) := sorry --non-trivial
lemma new_lemma_152360 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (random_gen.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (random_gen.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152361 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (has_norm.{0} (has_norm.{0} (has_norm.{0} (has_top.{0} empty)))) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_norm.{0} (has_norm.{0} (has_norm.{0} (has_top.{0} empty)))))  := sorry --non-trivial
lemma new_lemma_152362 (h0 : topological_space (add_left_cancel_semigroup (has_Inf (has_pos_part pos)))) : topological_space.separable_space (add_left_cancel_semigroup (has_Inf (has_pos_part pos))) := sorry --non-trivial
lemma new_lemma_152363 (h0 : filter (comm_semigroup (sub_neg_monoid (comm_semigroup (comm_semigroup (ordered_comm_ring (has_add real))))))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_152364 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (complete_semilattice_Sup.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_semilattice_Sup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152365 (h0 : functor.add_const (semiring (semigroup pos)) (finset (has_to_string name))) : @is_noetherian_ring.{0} (semigroup.{0} pos) (@functor.add_const.run.{0 0} (semiring.{0} (semigroup.{0} pos)) (finset.{0} (has_to_string.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_152366 (h0 : fin has_zero.zero) : @preconnected_space.{0} pos (@matrix.vec_empty.{0} (topological_space.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_152367 (h0 : functor.comp ring normed_comm_ring Type) : @rank_condition.{1} (normed_comm_ring.{1} Type) (@functor.comp.run.{1 1 1} ring.{1} normed_comm_ring.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_152368 (h0 : functor.add_const (topological_space (ordered_comm_monoid pos)) (simple_graph pos)) : @regular_space.{0} (ordered_comm_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_monoid.{0} pos)) (simple_graph.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_152369 (h0 : uniform_space (option (option empty))) : separated_space (option (option empty)) := sorry --non-trivial
lemma new_lemma_152370 (h0 : ring (has_neg (has_neg_part pos))) : rank_condition (has_neg (has_neg_part pos)) := sorry --non-trivial
lemma new_lemma_152371 (h0 : topological_space (has_norm (semiring congr_arg_kind))) : normal_space (has_norm (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_152372 (h0 : ring (complete_distrib_lattice (option pos))) : is_domain (complete_distrib_lattice (option pos)) := sorry --non-trivial
lemma new_lemma_152373 (h0 : functor.add_const (ordered_comm_monoid (complete_distrib_lattice pos)) (has_Inf pos)) : @has_exists_mul_of_le.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (complete_distrib_lattice.{0} pos)) (has_Inf.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_152374 (h0 : topological_space (complete_linear_order (semiring empty))) : preirreducible_space (complete_linear_order (semiring empty)) := sorry --non-trivial
lemma new_lemma_152375 (h0 : prod (partial_order num) (partial_order num)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_152376 (h0 : functor.add_const (semiring (semigroup unsigned)) empty) : @is_noetherian_ring.{0} (semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (semiring.{0} (semigroup.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_152377 (h0 : topological_space (complete_distrib_lattice (has_pos_part real))) : path_connected_space (complete_distrib_lattice (has_pos_part real)) := sorry --non-trivial
lemma new_lemma_152378 (h0 : functor.add_const (list (free_add_monoid unsigned)) num) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152379 (h0 : topological_space (simple_graph (has_Inf (has_Inf (has_Inf (has_Inf pos)))))) : totally_separated_space (simple_graph (has_Inf (has_Inf (has_Inf (has_Inf pos))))) := sorry --non-trivial
lemma new_lemma_152380 (h0 : functor.add_const Prop ennreal) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_152381 (h0 : semiring (has_top (has_top (semiring (has_top empty))))) : is_noetherian_ring (has_top (has_top (semiring (has_top empty)))) := sorry --non-trivial
lemma new_lemma_152382 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (@id.{2} Type to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (@id.{2} Type to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_152383 (h0 : functor.add_const (topological_space (complete_distrib_lattice unsigned)) name) : @normal_space.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_152384 (h0 : topological_space (has_nndist unsigned)) : totally_disconnected_space (has_nndist unsigned) := sorry --non-trivial
lemma new_lemma_152385 (h0 : functor.add_const (list (comm_group pos)) name) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152386 (h0 : uniform_space (generalized_boolean_algebra (has_Inf linarith.comp))) : separated_space (generalized_boolean_algebra (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_152387 (h0 : filter (add_comm_monoid (has_add unsigned))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_152388 (h0 : functor.add_const (filter (has_to_string ennreal)) (option (option unsigned))) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152389 (h0 : filter (generalized_boolean_algebra (has_neg (has_Inf Type)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_152390 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (has_Inf.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_Inf.{0} pos))  := sorry --non-trivial
lemma new_lemma_152391 (h0 : functor.comp topological_space complete_distrib_lattice num) : @path_connected_space.{0} (complete_distrib_lattice.{0} num) (@functor.comp.run.{0 0 0} topological_space.{0} complete_distrib_lattice.{0} num h0)  := sorry --non-trivial
lemma new_lemma_152392 (h0 : ordered_comm_monoid (cancel_monoid (option unsigned))) : has_exists_mul_of_le (cancel_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_152393 (h0 : topological_space (canonically_ordered_monoid (has_add pos))) : preconnected_space (canonically_ordered_monoid (has_add pos)) := sorry --non-trivial
lemma new_lemma_152394 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (monoid_with_zero.{0} num) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (monoid_with_zero.{0} num))  := sorry --non-trivial
lemma new_lemma_152395 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_add.{0} (finset.{0} linarith.comp)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_add.{0} (finset.{0} linarith.comp)))  := sorry --non-trivial
lemma new_lemma_152396 (h0 : list (linear_ordered_add_comm_group (has_inv (has_inv linarith.comp_source)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_152397 (h0 : ordered_add_comm_monoid (canonically_linear_ordered_add_monoid (option empty))) : archimedean (canonically_linear_ordered_add_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_152398 (h0 : monoid (has_norm empty)) : monoid.fg (has_norm empty) := sorry --non-trivial
lemma new_lemma_152399 (h0 : add_group (has_lt (normed_field std_gen))) : is_add_cyclic (has_lt (normed_field std_gen)) := sorry --non-trivial
lemma new_lemma_152400 (h0 : monoid (random_gen congr_arg_kind)) : monoid.fg (random_gen congr_arg_kind) := sorry --non-trivial
lemma new_lemma_152401 (h0 : functor.add_const (ring (free_add_monoid num)) num) : @strong_rank_condition.{0} (free_add_monoid.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (free_add_monoid.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_152402 (h0 : fin has_zero.zero) : @is_compactly_generated.{1} (canonically_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (complete_lattice.{1} (canonically_ordered_monoid.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_152403 (h0 : topological_space (has_add (has_add (has_Inf (has_pos_part Type))))) : totally_separated_space (has_add (has_add (has_Inf (has_pos_part Type)))) := sorry --non-trivial
lemma new_lemma_152404 (h0 : functor.comp group has_neg_part pos) : @is_simple_group.{0} (has_neg_part.{0} pos) (@functor.comp.run.{0 0 0} group.{0} has_neg_part.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_152405 (h0 : uniform_space (linear_ordered_comm_ring (semiring (semiring (semiring (semiring unsigned)))))) : separated_space (linear_ordered_comm_ring (semiring (semiring (semiring (semiring unsigned))))) := sorry --non-trivial
lemma new_lemma_152406 (h0 : uniform_space (canonically_linear_ordered_monoid (has_Inf real))) : complete_space (canonically_linear_ordered_monoid (has_Inf real)) := sorry --non-trivial
lemma new_lemma_152407 (h0 : topological_space (normed_comm_ring Type)) : regular_space (normed_comm_ring Type) := sorry --non-trivial
lemma new_lemma_152408 (h0 : complete_lattice (with_one linarith.ineq)) : is_compactly_generated (with_one linarith.ineq) := sorry --non-trivial
lemma new_lemma_152409 (h0 : semiring (mul_zero_class (has_add Type))) : is_noetherian_ring (mul_zero_class (has_add Type)) := sorry --non-trivial
lemma new_lemma_152410 (h0 : functor.add_const (topological_space (boolean_algebra Type)) (finset (finset pos))) : @normal_space.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (boolean_algebra.{1} Type)) (finset.{0} (finset.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_152411 (h0 : complete_lattice (with_one (has_nnnorm linarith.comp_source))) : complete_lattice.is_Sup_finite_compact (with_one (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_152412 (h0 : complete_lattice (canonically_ordered_comm_semiring (option (option pos)))) : is_compactly_generated (canonically_ordered_comm_semiring (option (option pos))) := sorry --non-trivial
lemma new_lemma_152413 (h0 : topological_space (cancel_monoid unsigned)) : sequential_space (cancel_monoid unsigned) := sorry --non-trivial
lemma new_lemma_152414 (h0 : functor.add_const (topological_space (semigroup environment.implicit_infer_kind)) linarith.comp) : @locally_compact_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152415 (h0 : functor.add_const (topological_space (simple_graph linarith.comp)) pos) : @path_connected_space.{0} (simple_graph.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (simple_graph.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_152416 (h0 : topological_space (has_sdiff to_additive.value_type)) : path_connected_space (has_sdiff to_additive.value_type) := sorry --non-trivial
lemma new_lemma_152417 (h0 : function.extfun nat fin) : @regular_space.{1} (has_Inf.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (has_Inf.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_152418 (h0 : functor.add_const (ordered_add_comm_monoid (canonically_ordered_comm_semiring name)) pos) : @archimedean.{0} (canonically_ordered_comm_semiring.{0} name) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (canonically_ordered_comm_semiring.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_152419 (h0 : function.extfun (Type 1) list) : list.nodup (function.extfun_app h0 (has_add Type)) := sorry --non-trivial
lemma new_lemma_152420 (h0 : complete_lattice (with_one (complete_semilattice_Sup linarith.comp))) : is_atomistic (with_one (complete_semilattice_Sup linarith.comp)) := sorry --non-trivial
lemma new_lemma_152421 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @is_noetherian_ring.{1} (has_Inf.{1} Type) (@function.extfun_app.{3 2} (Type 1) semiring.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 semiring.{1}) (has_Inf.{1} Type))  := sorry --non-trivial
lemma new_lemma_152422 (h1 : uniform_space (has_div reducibility_hints)) : complete_space (has_div reducibility_hints) := sorry --non-trivial
lemma new_lemma_152423 (h0 : group (add_comm_monoid (has_add (comm_group pos)))) : normalizer_condition (add_comm_monoid (has_add (comm_group pos))) := sorry --non-trivial
lemma new_lemma_152424 (h0 : group (has_nndist (ring (ring Type)))) : group.fg (has_nndist (ring (ring Type))) := sorry --non-trivial
lemma new_lemma_152425 (h0 : uniform_space (has_one (has_top (semiring num)))) : complete_space (has_one (has_top (semiring num))) := sorry --non-trivial
lemma new_lemma_152426 (h0 : topological_space (has_to_string (option unsigned))) : sequential_space (has_to_string (option unsigned)) := sorry --non-trivial
lemma new_lemma_152427 (h0 : group (semi_normed_comm_ring (random_gen (has_nnnorm reducibility_hints)))) : is_cyclic (semi_normed_comm_ring (random_gen (has_nnnorm reducibility_hints))) := sorry --non-trivial
lemma new_lemma_152428 (h0 : functor.add_const (topological_space (ordered_ring unsigned)) empty) : @locally_compact_space.{0} (ordered_ring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_ring.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_152429 (h0 : complete_lattice (add_left_cancel_monoid (has_nnnorm fun_info))) : complete_lattice.is_Sup_finite_compact (add_left_cancel_monoid (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_152430 (h0 : ring fun_info) : is_field fun_info := sorry --non-trivial
lemma new_lemma_152431 (h0 : functor.add_const (group (has_zero Type)) (has_to_string Type)) : @is_simple_group.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 1} (group.{1} (has_zero.{1} Type)) (has_to_string.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_152432 (h0 : functor.add_const (monoid (linear_order empty)) unsigned) : @monoid.fg.{0} (linear_order.{0} empty) (@functor.add_const.run.{0 0} (monoid.{0} (linear_order.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_152433 (h0 : topological_space (has_neg_part name)) : normal_space (has_neg_part name) := sorry --non-trivial
lemma new_lemma_152434 (h0 : topological_space (has_neg_part (finset pos))) : irreducible_space (has_neg_part (finset pos)) := sorry --non-trivial
lemma new_lemma_152435 (h1 : set to_additive.value_type) : set.finite h1 := sorry --non-trivial
lemma new_lemma_152436 (h0 : has_mem.mem (semiring linarith.comp_source) has_emptyc.emptyc) : @complete_space.{0} (semiring.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type uniform_space.{0} (semiring.{0} linarith.comp_source) h0)  := sorry --non-trivial
lemma new_lemma_152437 (h0 : monoid (linear_ordered_add_comm_group (comm_ring (has_top to_additive.value_type)))) : monoid.fg (linear_ordered_add_comm_group (comm_ring (has_top to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_152438 (h0 : not (finset (order_dual num) -> false)) : finset.nonempty (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_152439 (h0 : functor.add_const (list (ordered_comm_monoid name)) name) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152440 (h0 : topological_space (linear_ordered_semiring to_additive.value_type)) : path_connected_space (linear_ordered_semiring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_152441 (h6 : measurable_space (add_comm_semigroup enat)) (h7 : measure_theory.measure (add_comm_semigroup enat)) : measure_theory.is_finite_measure h7 := sorry --non-trivial
lemma new_lemma_152442 (h0 : complete_lattice (bin_tree num)) : is_compactly_generated (bin_tree num) := sorry --non-trivial
lemma new_lemma_152443 (h0 : topological_space (boolean_algebra (has_neg_part Type))) : preirreducible_space (boolean_algebra (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_152444 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @loc_path_connected_space.{1} (semigroup.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (semigroup.{1} Type))  := sorry --non-trivial
lemma new_lemma_152445 (h0 : fin has_zero.zero) : @preconnected_space.{0} (normed_lattice_add_comm_group.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (normed_lattice_add_comm_group.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_152446 (h0 : functor.add_const (function.extfun Type monoid) unsigned) : @monoid.fg.{0} (finset.{0} num) (@function.extfun_app.{2 1} Type monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type monoid.{0}) unsigned h0) (finset.{0} num))  := sorry --non-trivial
lemma new_lemma_152447 (h0 : topological_space (has_add Type)) : totally_disconnected_space (has_add Type) := sorry --non-trivial
lemma new_lemma_152448 (h0 : not (topological_space (random_gen linarith.comp_source) -> false)) : @discrete_topology.{0} (random_gen.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_152449 (h2 : group (has_add linarith.ineq)) : is_cyclic (has_add linarith.ineq) := sorry --non-trivial
lemma new_lemma_152450 (h0 : monoid (mul_zero_class (semiring (semiring (semiring (semiring (semiring num))))))) : monoid.fg (mul_zero_class (semiring (semiring (semiring (semiring (semiring num)))))) := sorry --non-trivial
lemma new_lemma_152451 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (monoid_with_zero.{0} num) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (monoid_with_zero.{0} num))  := sorry --non-trivial
lemma new_lemma_152452 (h0 : function.extfun Type (functor.comp ring has_to_string)) : @rank_condition.{0} (has_to_string.{0} (add_comm_monoid.{0} environment.implicit_infer_kind)) (@functor.comp.run.{0 0 0} ring.{0} has_to_string.{0} (add_comm_monoid.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} ring.{0} has_to_string.{0}) h0 (add_comm_monoid.{0} environment.implicit_infer_kind)))  := sorry --non-trivial
lemma new_lemma_152453 (h0 : not (topological_space (bin_tree (semiring (semiring (semiring (semiring (semiring unsigned)))))) -> false)) : @t0_space.{0} (bin_tree.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} unsigned)))))) (@classical.by_contradiction'.{1} (topological_space.{0} (bin_tree.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} unsigned))))))) h0)  := sorry --non-trivial
lemma new_lemma_152454 (h0 : functor.add_const (function.extfun Type cancel_comm_monoid_with_zero) name) : @unique_factorization_monoid.{0} (has_neg_part.{0} pos) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type cancel_comm_monoid_with_zero.{0}) name h0) (has_neg_part.{0} pos))  := sorry --non-trivial
lemma new_lemma_152455 (h0 : complete_lattice (ring (has_Inf pos))) : complete_lattice.is_Sup_finite_compact (ring (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_152456 (h0 : has_mem.mem (with_bot linarith.comp_source) has_emptyc.emptyc) : @strong_rank_condition.{0} (with_bot.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type ring.{0} (with_bot.{0} linarith.comp_source) h0)  := sorry --non-trivial
lemma new_lemma_152457 (h0 : topological_space (has_bot (has_pos_part (has_add real)))) : regular_space (has_bot (has_pos_part (has_add real))) := sorry --non-trivial
lemma new_lemma_152458 (h0 : topological_space (has_zero (has_Inf pos))) : totally_disconnected_space (has_zero (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_152459 (h0 : topological_space (normed_lattice_add_comm_group (has_Inf pos))) : preirreducible_space (normed_lattice_add_comm_group (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_152460 (h0 : ordered_add_comm_monoid (has_pos_part (has_add (ring Type)))) : archimedean (has_pos_part (has_add (ring Type))) := sorry --non-trivial
lemma new_lemma_152461 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem uniform_space)) : @complete_space.{0} (normed_group.{0} fun_info) (@function.extfun_app.{2 1} Type uniform_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) uniform_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) uniform_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (normed_group.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_152462 (h0 : ring (has_pos_part (has_Inf (has_neg Type)))) : strong_rank_condition (has_pos_part (has_Inf (has_neg Type))) := sorry --non-trivial
lemma new_lemma_152463 (h0 : complete_lattice (canonically_ordered_comm_semiring (has_add Type))) : is_compactly_generated (canonically_ordered_comm_semiring (has_add Type)) := sorry --non-trivial
lemma new_lemma_152464 (h0 : monoid (metric_space (has_norm num))) : monoid.fg (metric_space (has_norm num)) := sorry --non-trivial
lemma new_lemma_152465 (h0 : not (add_group (topological_space fun_info) -> false)) : @is_add_cyclic.{0} (topological_space.{0} fun_info) (@classical.by_contradiction'.{1} (add_group.{0} (topological_space.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_152466 (h1 : complete_lattice (has_nnnorm (has_nnnorm (random_gen (random_gen string_imp))))) : is_compactly_generated (has_nnnorm (has_nnnorm (random_gen (random_gen string_imp)))) := sorry --non-trivial
lemma new_lemma_152467 (h0 : topological_space (has_nndist ennreal)) : totally_disconnected_space (has_nndist ennreal) := sorry --non-trivial
lemma new_lemma_152468 (h0 : ring (add_cancel_monoid (has_add name))) : rank_condition (add_cancel_monoid (has_add name)) := sorry --non-trivial
lemma new_lemma_152469 (h0 : ring (linear_ordered_cancel_comm_monoid congr_arg_kind)) : strong_rank_condition (linear_ordered_cancel_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_152470 (h0 : topological_space (ordered_comm_ring (ring (ring Type)))) : loc_path_connected_space (ordered_comm_ring (ring (ring Type))) := sorry --non-trivial
lemma new_lemma_152471 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_152472 (h0 : functor.add_const (topological_space (boolean_algebra.core name)) (has_add Type)) : @irreducible_space.{0} (boolean_algebra.core.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.core.{0} name)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_152473 (h0 : ring (has_sub empty)) : is_principal_ideal_ring (has_sub empty) := sorry --non-trivial
lemma new_lemma_152474 (h0 : add_group (has_top (semiring (semiring empty)))) : is_add_cyclic (has_top (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_152475 (h0 : complete_lattice (mul_zero_class (has_nndist (cancel_monoid name)))) : is_compactly_generated (mul_zero_class (has_nndist (cancel_monoid name))) := sorry --non-trivial
lemma new_lemma_152476 (h0 : topological_space (finset (boolean_algebra.core (has_add Type)))) : locally_compact_space (finset (boolean_algebra.core (has_add Type))) := sorry --non-trivial
lemma new_lemma_152477 (h0 : functor.add_const (semiring (partial_order congr_arg_kind)) empty) : @is_noetherian_ring.{0} (partial_order.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (semiring.{0} (partial_order.{0} congr_arg_kind)) empty h0)  := sorry --non-trivial
lemma new_lemma_152478 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (add_comm_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_comm_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_152479 (h0 : complete_lattice (add_cancel_monoid (option empty))) : complete_lattice.is_Sup_finite_compact (add_cancel_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_152480 (h0 : topological_space (has_nnnorm (mul_one_class ereal))) : path_connected_space (has_nnnorm (mul_one_class ereal)) := sorry --non-trivial
lemma new_lemma_152481 (h0 : functor.add_const (ordered_add_comm_monoid (mul_zero_class pos)) pos) : @archimedean.{0} (mul_zero_class.{0} pos) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (mul_zero_class.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_152482 (h0 : topological_space (has_zero unsigned)) : preirreducible_space (has_zero unsigned) := sorry --non-trivial
lemma new_lemma_152483 (h0 : ring (has_pos_part (has_neg name))) : rank_condition (has_pos_part (has_neg name)) := sorry --non-trivial
lemma new_lemma_152484 (h0 : uniform_space (measurable_space (has_norm (has_top num)))) : separated_space (measurable_space (has_norm (has_top num))) := sorry --non-trivial
lemma new_lemma_152485 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (has_add.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_add.{0} real))  := sorry --non-trivial
lemma new_lemma_152486 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (topological_space.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (topological_space.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_152487 (h0 : functor.add_const (ring (boolean_algebra name)) pos) : @is_domain.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_152488 (h0 : functor.add_const (topological_space (complete_distrib_lattice unsigned)) pos) : @topological_space.separable_space.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_152489 (h0 : topological_space (semiring (random_gen (random_gen (random_gen (random_gen fun_info)))))) : discrete_topology (semiring (random_gen (random_gen (random_gen (random_gen fun_info))))) := sorry --non-trivial
lemma new_lemma_152490 (h0 : has_mem.mem (metric_space complex) has_emptyc.emptyc) : @add_monoid.fg.{0} (metric_space.{0} complex) (@finset.pi.empty.{1 0} Type add_monoid.{0} (metric_space.{0} complex) h0)  := sorry --non-trivial
lemma new_lemma_152491 (h0 : not (topological_space (linear_ordered_add_comm_group char) -> false)) : @t0_space.{0} (linear_ordered_add_comm_group.{0} char) (@classical.by_contradiction'.{1} (topological_space.{0} (linear_ordered_add_comm_group.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_152492 (h0 : functor.comp topological_space has_neg_part name) : @normal_space.{0} (has_neg_part.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_neg_part.{0} name h0)  := sorry --non-trivial
lemma new_lemma_152493 (h0 : ring (has_pos_part (ring (has_neg pos)))) : rank_condition (has_pos_part (ring (has_neg pos))) := sorry --non-trivial
lemma new_lemma_152494 (h0 : functor.add_const (complete_lattice (has_neg pos)) Type) : @is_compactly_generated.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 1} (complete_lattice.{0} (has_neg.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_152495 (h2 : not (filter (fintype fun_info) -> false)) : filter.ne_bot (classical.by_contradiction' h2) := sorry --non-trivial
lemma new_lemma_152496 (h0 : emetric_space linarith.comp_source -> Prop) : @infi.{0 1} Prop (@conditionally_complete_lattice.to_has_Inf.{0} Prop (@complete_lattice.to_conditionally_complete_lattice.{0} Prop Prop.complete_lattice)) (emetric_space.{0} linarith.comp_source) h0  := sorry --non-trivial
lemma new_lemma_152497 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_norm.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_norm.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_152498 (h0 : topological_space real.angle) : totally_disconnected_space real.angle := sorry --non-trivial
lemma new_lemma_152499 (h0 : semiring (option (option (cancel_monoid pos)))) : is_noetherian_ring (option (option (cancel_monoid pos))) := sorry --non-trivial
lemma new_lemma_152500 (h0 : functor.add_const (ring (comm_group environment.implicit_infer_kind)) (has_add Type)) : @rank_condition.{0} (comm_group.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (ring.{0} (comm_group.{0} environment.implicit_infer_kind)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_152501 (h0 : topological_space (has_to_string (has_neg (has_neg (has_neg linarith.comp))))) : preconnected_space (has_to_string (has_neg (has_neg (has_neg linarith.comp)))) := sorry --non-trivial
lemma new_lemma_152502 (h0 : topological_space (generalized_boolean_algebra (has_bot real))) : preirreducible_space (generalized_boolean_algebra (has_bot real)) := sorry --non-trivial
lemma new_lemma_152503 (h0 : topological_space (add_cancel_monoid (has_Inf (has_add pos)))) : locally_compact_space (add_cancel_monoid (has_Inf (has_add pos))) := sorry --non-trivial
lemma new_lemma_152504 (h0 : list (complete_distrib_lattice (mul_zero_class name))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_152505 (h0 : topological_space (semiring (random_gen (random_gen to_additive.value_type)))) : discrete_topology (semiring (random_gen (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_152506 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @totally_disconnected_space.{0} (has_norm.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (has_norm.{0} num))  := sorry --non-trivial
lemma new_lemma_152507 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (linear_ordered_field.{0} ennreal) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (linear_ordered_field.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_152508 (h0 : std_gen -> linarith.ineq -> Prop) (h1 : prod std_gen linarith.ineq) : function.uncurry h0 h1 := sorry --non-trivial
lemma new_lemma_152509 (h0 : complete_lattice (has_lt (mul_one_class (has_compl linarith.comp_source)))) : is_compactly_generated (has_lt (mul_one_class (has_compl linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_152510 (h0 : functor.add_const (complete_lattice (has_to_string Type)) environment.implicit_infer_kind) : @is_atomistic.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (complete_lattice.{1} (has_to_string.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_152511 (h1 : ring (random_gen (has_nnnorm (has_inv fun_info)))) : is_domain (random_gen (has_nnnorm (has_inv fun_info))) := sorry --non-trivial
lemma new_lemma_152512 (h0 : filter (normed_comm_ring (has_add linarith.comp))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_152513 (h0 : ring (normed_comm_ring (has_neg (has_nndist (has_add linarith.comp))))) : is_principal_ideal_ring (normed_comm_ring (has_neg (has_nndist (has_add linarith.comp)))) := sorry --non-trivial
lemma new_lemma_152514 (h1 : complete_lattice (normed_field fun_info)) : complete_lattice.is_Sup_finite_compact (normed_field fun_info) := sorry --non-trivial
lemma new_lemma_152515 (h1 h2 : multiset (add_comm_semigroup char)) : multiset.disjoint h1 h2 := sorry --non-trivial
lemma new_lemma_152516 (h0 : group (has_neg_part (add_comm_monoid Type))) : normalizer_condition (has_neg_part (add_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_152517 (h0 : not (group linarith.comp -> false)) : @normalizer_condition.{0} linarith.comp (@classical.by_contradiction'.{1} (group.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_152518 (h0 : complete_lattice (with_bot (has_inv to_additive.value_type))) : complete_lattice.is_Sup_finite_compact (with_bot (has_inv to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_152519 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (has_dist.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_dist.{0} num))  := sorry --non-trivial
lemma new_lemma_152520 (h0 : add_group (simple_graph (option (option empty)))) : is_add_cyclic (simple_graph (option (option empty))) := sorry --non-trivial
lemma new_lemma_152521 (h0 : uniform_space (finset (option (option ennreal)))) : separated_space (finset (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_152522 (h0 : list (finset (has_to_string pos))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_152523 (h0 : topological_space (normed_lattice_add_comm_group (has_neg pos))) : preirreducible_space (normed_lattice_add_comm_group (has_neg pos)) := sorry --non-trivial
lemma new_lemma_152524 (h0 : topological_space (plift (complete_linear_order num))) : preirreducible_space (plift (complete_linear_order num)) := sorry --non-trivial
lemma new_lemma_152525 (h0 : group (comm_ring (has_nnnorm to_additive.value_type))) : group.fg (comm_ring (has_nnnorm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_152526 (h0 : not (add_group (distrib to_additive.value_type) -> false)) : @is_add_cyclic.{0} (distrib.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (add_group.{0} (distrib.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_152527 (h0 : topological_space (ordered_ring (semiring empty))) : loc_path_connected_space (ordered_ring (semiring empty)) := sorry --non-trivial
lemma new_lemma_152528 (h0 : ring (measurable_space num)) : strong_rank_condition (measurable_space num) := sorry --non-trivial
lemma new_lemma_152529 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (has_top.{0} empty) (@function.extfun_app.{2 1} Type semiring.{0} h0 (has_top.{0} empty))  := sorry --non-trivial
lemma new_lemma_152530 (h0 : has_mem.mem (has_norm linarith.comp_source) has_emptyc.emptyc) : @locally_compact_space.{0} (has_norm.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_norm.{0} linarith.comp_source) h0)  := sorry --non-trivial
lemma new_lemma_152531 (h0 : finset (add_group empty)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_152532 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (preorder.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (preorder.{0} empty))  := sorry --non-trivial
lemma new_lemma_152533 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (ring.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} h0 (ring.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_152534 (h0 : topological_space (boolean_algebra (has_to_string Type))) : t0_space (boolean_algebra (has_to_string Type)) := sorry --non-trivial
lemma new_lemma_152535 (h0 : topological_space (semiring (has_norm to_additive.value_type))) : irreducible_space (semiring (has_norm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_152536 (h1 : topological_space fun_info) (h2 : set fun_info) : is_path_connected h2 := sorry --non-trivial
lemma new_lemma_152537 (h0 : group (has_add congr_arg_kind)) : is_simple_group (has_add congr_arg_kind) := sorry --non-trivial
lemma new_lemma_152538 (h0 : fin has_zero.zero) : @add_monoid.fg.{0} (has_Inf.{0} name) (@matrix.vec_empty.{0} (add_monoid.{0} (has_Inf.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_152539 (h0 : functor.add_const (functor.add_const (topological_space linarith.comp) name) name) : @topological_space.separable_space.{0} linarith.comp (@functor.add_const.run.{0 0} (topological_space.{0} linarith.comp) name (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (topological_space.{0} linarith.comp) name) name h0))  := sorry --non-trivial
lemma new_lemma_152540 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (canonically_ordered_comm_semiring.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_comm_semiring.{0} name))  := sorry --non-trivial
lemma new_lemma_152541 (h0 : function.extfun Type (prod (ordered_cancel_add_comm_monoid pos))) : id_rel (function.extfun_app h0 (ordered_cancel_add_comm_monoid pos)) := sorry --non-trivial
lemma new_lemma_152542 (h0 : topological_space (canonically_linear_ordered_monoid real)) : regular_space (canonically_linear_ordered_monoid real) := sorry --non-trivial
lemma new_lemma_152543 (h0 : functor.add_const (function.extfun Type topological_space) name) : @sequential_space.{0} (has_neg.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) name h0) (has_neg.{0} name))  := sorry --non-trivial
lemma new_lemma_152544 (h0 : group (semiring (has_top congr_arg_kind))) : group.fg (semiring (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_152545 (h0 : complete_lattice (left_cancel_monoid (option congr_arg_kind))) : is_atomistic (left_cancel_monoid (option congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_152546 (h1 : not (ring (fintype fun_info) -> false)) : @rank_condition.{0} (fintype.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (fintype.{0} fun_info)) h1)  := sorry --non-trivial
lemma new_lemma_152547 (h0 : topological_space (distrib_lattice to_additive.value_type)) : path_connected_space (distrib_lattice to_additive.value_type) := sorry --non-trivial
lemma new_lemma_152548 (h0 : functor.add_const (topological_space (has_nndist name)) linarith.comp) : @discrete_topology.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152549 (h0 : topological_space (complete_distrib_lattice empty)) : normal_space (complete_distrib_lattice empty) := sorry --non-trivial
lemma new_lemma_152550 (h0 : fin has_zero.zero) : separated_space real := sorry --non-trivial
lemma new_lemma_152551 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (monoid_with_zero.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid_with_zero.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_152552 (h0 : monoid (linear_ordered_field congr_arg_kind)) : monoid.fg (linear_ordered_field congr_arg_kind) := sorry --non-trivial
lemma new_lemma_152553 (h0 : not (function.extfun Type group -> false)) : @is_cyclic.{0} (has_union.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (has_union.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_152554 (h0 : monoid fun_info) : monoid.fg fun_info := sorry --non-trivial
lemma new_lemma_152555 (h0 : functor.comp filter has_zero pos) : filter.ne_bot (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_152556 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @regular_space.{1} (has_neg.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (has_neg.{1} Type))  := sorry --non-trivial
lemma new_lemma_152557 (h1 : not (uniform_space (has_emptyc linarith.comp) -> false)) : @complete_space.{0} (has_emptyc.{0} linarith.comp) (@classical.by_contradiction'.{1} (uniform_space.{0} (has_emptyc.{0} linarith.comp)) h1)  := sorry --non-trivial
lemma new_lemma_152558 (h3 : ring (comm_ring to_additive.value_type)) : is_domain (comm_ring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_152559 (h0 : complete_lattice (linear_ordered_comm_group_with_zero to_additive.value_type)) : complete_lattice.is_Sup_finite_compact (linear_ordered_comm_group_with_zero to_additive.value_type) := sorry --non-trivial
lemma new_lemma_152560 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @t0_space.{0} (with_bot.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (with_bot.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_152561 (h0 : functor.add_const (topological_space (free_add_monoid num)) unsigned) : @discrete_topology.{0} (free_add_monoid.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (free_add_monoid.{0} num)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_152562 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (canonically_linear_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_linear_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_152563 (h0 : not (topological_space nnreal -> false)) : topological_space.separable_space nnreal := sorry --non-trivial
lemma new_lemma_152564 (h0 : complete_lattice (has_star empty)) : complete_lattice.is_Sup_finite_compact (has_star empty) := sorry --non-trivial
lemma new_lemma_152565 (h0 : functor.add_const (ring (add_cancel_monoid empty)) empty) : @is_domain.{0} (add_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (add_cancel_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_152566 (h0 : not (function.extfun Type ring -> false)) : @is_domain.{0} (has_top.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (has_top.{0} num))  := sorry --non-trivial
lemma new_lemma_152567 (h0 : fin has_zero.zero) : @normal_space.{0} (complete_distrib_lattice.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (complete_distrib_lattice.{0} pos)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_152568 (h0 : functor.add_const (ring (has_neg linarith.comp)) name) : @rank_condition.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (has_neg.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_152569 (h0 : functor.add_const (topological_space (complete_distrib_lattice Type)) Type) : @locally_compact_space.{1} (complete_distrib_lattice.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (complete_distrib_lattice.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_152570 (h0 : group (add_right_cancel_monoid (semiring (semiring empty)))) : normalizer_condition (add_right_cancel_monoid (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_152571 (h0 : not (add_group (measurable_space (has_top fun_info)) -> false)) : @is_add_cyclic.{0} (measurable_space.{0} (has_top.{0} fun_info)) (@classical.by_contradiction'.{1} (add_group.{0} (measurable_space.{0} (has_top.{0} fun_info))) h0)  := sorry --non-trivial
lemma new_lemma_152572 (h1 : set (fun_info -> enat)) : set.separates_points h1 := sorry --non-trivial
lemma new_lemma_152573 (h0 : functor.add_const (ring (boolean_algebra.core unsigned)) unsigned) : @is_principal_ideal_ring.{0} (boolean_algebra.core.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.core.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_152574 (h0 : function.extfun Type topological_space) : @normal_space.{0} (add_cancel_monoid.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_cancel_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_152575 (h1 : not (topological_space (random_gen string_imp) -> false)) : @t0_space.{0} (random_gen.{0} string_imp) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} string_imp)) h1)  := sorry --non-trivial
lemma new_lemma_152576 (h0 : finset (semigroup (finset linarith.comp))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_152577 (h0 : functor.add_const (function.extfun (Type 1) filter) linarith.comp) : filter.ne_bot (function.extfun_app (functor.add_const.run h0) (finset Type)) := sorry --non-trivial
lemma new_lemma_152578 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (left_cancel_semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (left_cancel_semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152579 (h0 : uniform_space (measurable_space.dynkin_system (semiring unsigned))) : complete_space (measurable_space.dynkin_system (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_152580 (h0 : functor.add_const (topological_space (normed_comm_ring environment.implicit_infer_kind)) name) : @path_connected_space.{0} (normed_comm_ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_152581 (h0 : add_group (has_pos_part (has_Inf (has_add real)))) : is_add_cyclic (has_pos_part (has_Inf (has_add real))) := sorry --non-trivial
lemma new_lemma_152582 (h0 : functor.add_const (topological_space (has_to_string environment.implicit_infer_kind)) Type) : @t0_space.{0} (has_to_string.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (has_to_string.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_152583 (h0 : functor.add_const (topological_space (ordered_comm_group unsigned)) unsigned) : @locally_compact_space.{0} (ordered_comm_group.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_group.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_152584 (h0 : add_monoid (has_dist ennreal)) : add_monoid.fg (has_dist ennreal) := sorry --non-trivial
lemma new_lemma_152585 (h0 : topological_space (finset (has_neg pos))) : totally_separated_space (finset (has_neg pos)) := sorry --non-trivial
lemma new_lemma_152586 (h0 : functor.add_const (ring (boolean_algebra.core name)) pos) : @is_domain.{0} (boolean_algebra.core.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.core.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_152587 (h0 : functor.add_const (ring (has_edist empty)) empty) : @rank_condition.{0} (has_edist.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (has_edist.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_152588 (h0 : has_mem.mem (has_emptyc num) has_emptyc.emptyc) : @is_add_cyclic.{0} (has_emptyc.{0} num) (@finset.pi.empty.{1 0} Type add_group.{0} (has_emptyc.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_152589 (h1 : nat) (h2 : uniform_space (nat.partition h1)) : complete_space (nat.partition h1) := sorry --non-trivial
lemma new_lemma_152590 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @irreducible_space.{0} num (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) num)  := sorry --non-trivial
lemma new_lemma_152591 (h0 : fin has_zero.zero) : @separated_space.{0} (ordered_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type uniform_space.{0}) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)) (ordered_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_152592 (h0 : topological_space (cancel_monoid num)) : path_connected_space (cancel_monoid num) := sorry --non-trivial
lemma new_lemma_152593 (h0 : add_monoid (has_Sup congr_arg_kind)) : add_monoid.fg (has_Sup congr_arg_kind) := sorry --non-trivial
lemma new_lemma_152594 (h0 : ordered_comm_monoid (boolean_algebra (finset (finset (has_nndist linarith.comp))))) : has_exists_mul_of_le (boolean_algebra (finset (finset (has_nndist linarith.comp)))) := sorry --non-trivial
lemma new_lemma_152595 (h0 : function.extfun Type group) : @normalizer_condition.{0} (has_norm.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (has_norm.{0} empty))  := sorry --non-trivial
lemma new_lemma_152596 (h0 : uniform_space (complete_distrib_lattice (option ennreal))) : complete_space (complete_distrib_lattice (option ennreal)) := sorry --non-trivial
lemma new_lemma_152597 (h0 : functor.comp topological_space has_neg linarith.comp) : @preirreducible_space.{0} (has_neg.{0} linarith.comp) (@functor.comp.run.{0 0 0} topological_space.{0} has_neg.{0} linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152598 (h2 : complete_lattice (add_left_cancel_monoid (random_gen reducibility_hints))) : complete_lattice.is_Sup_finite_compact (add_left_cancel_monoid (random_gen reducibility_hints)) := sorry --non-trivial
lemma new_lemma_152599 (h0 : topological_space (has_neg_part (has_add Type))) : sequential_space (has_neg_part (has_add Type)) := sorry --non-trivial
lemma new_lemma_152600 (h0 : not (uniform_space (fintype linarith.comp_source) -> false)) : @complete_space.{0} (fintype.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (uniform_space.{0} (fintype.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_152601 (h0 : functor.add_const (finset (has_neg environment.implicit_infer_kind)) Type) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152602 (h0 : list (linear_ordered_field (option (option (option (option pos)))))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_152603 (h0 : not (group (has_star unsigned) -> false)) : @is_cyclic.{0} (has_star.{0} unsigned) (@classical.by_contradiction'.{1} (group.{0} (has_star.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_152604 (h0 : set (set (mul_one_class (add_comm_semigroup (normed_field (add_comm_semigroup (mul_one_class char))))))) (h1 : set (mul_one_class (add_comm_semigroup (normed_field (add_comm_semigroup (mul_one_class char)))))) : filter.generate_sets h0 h1 := sorry --non-trivial
lemma new_lemma_152605 (h0 : function.extfun nat fin) : @t0_space.{0} (simple_graph.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (simple_graph.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_152606 (h0 : list (is_R_or_C congr_arg_kind)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_152607 (h0 : functor.add_const (cancel_comm_monoid_with_zero (ordered_ring congr_arg_kind)) unsigned) : @unique_factorization_monoid.{0} (ordered_ring.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (ordered_ring.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_152608 (h0 : functor.add_const (add_group (semigroup environment.implicit_infer_kind)) (has_add (has_add (has_add name)))) : @is_add_cyclic.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (add_group.{0} (semigroup.{0} environment.implicit_infer_kind)) (has_add.{0} (has_add.{0} (has_add.{0} name))) h0)  := sorry --non-trivial
lemma new_lemma_152609 (h0 : topological_space (canonically_ordered_monoid (has_Inf Type))) : t0_space (canonically_ordered_monoid (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_152610 (h0 : list (comm_ring (distrib_lattice char))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_152611 (h0 : complete_lattice (has_norm (semiring unsigned))) : is_atomistic (has_norm (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_152612 (h0 : functor.add_const (topological_space (has_to_string pos)) pos) : @t0_space.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_152613 (h0 : ring (non_assoc_semiring (semiring congr_arg_kind))) : is_principal_ideal_ring (non_assoc_semiring (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_152614 (h0 : cancel_comm_monoid_with_zero (ring (boolean_algebra Type))) : unique_factorization_monoid (ring (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_152615 (h0 : ring (with_bot (has_top linarith.comp))) : rank_condition (with_bot (has_top linarith.comp)) := sorry --non-trivial
lemma new_lemma_152616 (h0 : topological_space enat) (h2 : Prop) : topological_space.is_topological_basis (id (fun (h1 : set enat), h2)) := sorry --non-trivial
lemma new_lemma_152617 (h0 : function.extfun Type group) : @normalizer_condition.{0} znum (@function.extfun_app.{2 1} Type group.{0} h0 znum)  := sorry --non-trivial
lemma new_lemma_152618 (h0 : monoid (comm_semigroup (sub_neg_monoid real))) : monoid.fg (comm_semigroup (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_152619 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (pseudo_metric_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (pseudo_metric_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_152620 (h1 : group congr_arg_kind) : group.fg congr_arg_kind := sorry --non-trivial
lemma new_lemma_152621 (h0 : function.extfun Type group) : @is_cyclic.{0} (semigroup.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} h0 (semigroup.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_152622 (h0 : topological_space (has_pos_part (has_Inf (finset linarith.comp)))) : preconnected_space (has_pos_part (has_Inf (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_152623 (h0 : functor.add_const (list (ring pos)) environment.implicit_infer_kind) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152624 (h0 : functor.add_const (ring (semigroup Type)) pos) : @strong_rank_condition.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (semigroup.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_152625 (h0 : topological_space (semiring linarith.comp_source)) : irreducible_space (semiring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_152626 (h0 : fin has_zero.zero) : @path_connected_space.{0} (has_add.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (has_add.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_152627 (h0 : ring (fintype (add_monoid char))) : is_domain (fintype (add_monoid char)) := sorry --non-trivial
lemma new_lemma_152628 (h0 : has_mem.mem (semiring num) has_emptyc.emptyc) : @is_domain.{0} (semiring.{0} num) (@finset.pi.empty.{1 0} Type ring.{0} (semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_152629 (h0 : not (ring (has_inv linarith.ineq) -> false)) : @strong_rank_condition.{0} (has_inv.{0} linarith.ineq) (@classical.by_contradiction'.{1} (ring.{0} (has_inv.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_152630 (h0 : function.extfun Type group) : @group.fg.{0} linarith.ineq (@function.extfun_app.{2 1} Type group.{0} h0 linarith.ineq)  := sorry --non-trivial
lemma new_lemma_152631 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (monoid_with_zero.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (monoid_with_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_152632 (h0 : functor.add_const (cancel_comm_monoid_with_zero (normed_comm_ring environment.implicit_infer_kind)) linarith.comp) : @unique_factorization_monoid.{0} (normed_comm_ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (normed_comm_ring.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152633 (h0 : has_mem.mem complete_lattice has_emptyc.emptyc) : @complete_lattice.is_Sup_finite_compact.{0} (random_gen.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) complete_lattice.{0} h0) (random_gen.{0} empty))  := sorry --non-trivial
lemma new_lemma_152634 (h0 : topological_space (pseudo_metric_space unsigned)) : normal_space (pseudo_metric_space unsigned) := sorry --non-trivial
lemma new_lemma_152635 (h0 : ring (has_ssubset reducibility_hints)) : is_domain (has_ssubset reducibility_hints) := sorry --non-trivial
lemma new_lemma_152636 (h0 : topological_space (ordered_comm_ring (has_Inf linarith.comp))) : locally_compact_space (ordered_comm_ring (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_152637 (h0 : group (pseudo_metric_space (option ennreal))) : is_simple_group (pseudo_metric_space (option ennreal)) := sorry --non-trivial
lemma new_lemma_152638 (h0 : topological_space (cancel_monoid (has_add (has_add (has_add pos))))) : irreducible_space (cancel_monoid (has_add (has_add (has_add pos)))) := sorry --non-trivial
lemma new_lemma_152639 (h0 : ring (ring (monoid_with_zero ennreal))) : rank_condition (ring (monoid_with_zero ennreal)) := sorry --non-trivial
lemma new_lemma_152640 (h0 : function.extfun (Type 1) semiring) : @is_noetherian_ring.{1} (has_add.{1} Type) (@function.extfun_app.{3 2} (Type 1) semiring.{1} h0 (has_add.{1} Type))  := sorry --non-trivial
lemma new_lemma_152641 (h0 : cancel_comm_monoid_with_zero (ordered_comm_ring (finset Type))) : unique_factorization_monoid (ordered_comm_ring (finset Type)) := sorry --non-trivial
lemma new_lemma_152642 (h0 : functor.add_const (complete_lattice (finset empty)) empty) : @complete_lattice.is_Sup_finite_compact.{0} (finset.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (finset.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_152643 (h0 : functor.add_const (add_monoid (finset Type)) environment.implicit_infer_kind) : @add_monoid.fg.{1} (finset.{1} Type) (@functor.add_const.run.{1 0} (add_monoid.{1} (finset.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_152644 (h0 : group (add_comm_monoid (option (option unsigned)))) : normalizer_condition (add_comm_monoid (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_152645 (h0 : not (topological_space (has_norm unsigned) -> false)) : @irreducible_space.{0} (has_norm.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (has_norm.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_152646 (h0 : ordered_add_comm_monoid (has_add (boolean_algebra.core (has_neg (ordered_ring name))))) : archimedean (has_add (boolean_algebra.core (has_neg (ordered_ring name)))) := sorry --non-trivial
lemma new_lemma_152647 (h0 : not (function.extfun Type uniform_space -> false)) : @complete_space.{0} (linear_ordered_comm_ring.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (linear_ordered_comm_ring.{0} empty))  := sorry --non-trivial
lemma new_lemma_152648 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : filter.ne_bot (function.extfun_app (function.extfun_app h0 filter) (has_top string_imp)) := sorry --non-trivial
lemma new_lemma_152649 (h0 : topological_space (comm_group (has_add pos))) : normal_space (comm_group (has_add pos)) := sorry --non-trivial
lemma new_lemma_152650 (h0 : functor.add_const (finset (add_comm_monoid name)) Type) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152651 (h0 : fin has_zero.zero) : @is_cyclic.{0} (canonically_linear_ordered_monoid.{0} name) (@function.extfun_app.{2 1} Type group.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type group.{0}) h0) (canonically_linear_ordered_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_152652 (h0 : not (has_mem.mem (measurable_space num) has_emptyc.emptyc -> false)) : @is_domain.{0} (measurable_space.{0} num) (@finset.pi.empty.{1 0} Type ring.{0} (measurable_space.{0} num) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (measurable_space.{0} num) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_152653 (h0 : functor.add_const (complete_lattice (has_zero linarith.comp)) unsigned) : @is_atomistic.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_zero.{0} linarith.comp)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_152654 (h0 : uniform_space (canonically_linear_ordered_monoid (has_neg (has_neg Type)))) : separated_space (canonically_linear_ordered_monoid (has_neg (has_neg Type))) := sorry --non-trivial
lemma new_lemma_152655 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (has_Inf.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_Inf.{0} pos))  := sorry --non-trivial
lemma new_lemma_152656 (h0 : function.extfun Type topological_space) : @t0_space.{0} (normed_comm_ring.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_comm_ring.{0} empty))  := sorry --non-trivial
lemma new_lemma_152657 (h0 : topological_space (monoid_with_zero congr_arg_kind)) : preconnected_space (monoid_with_zero congr_arg_kind) := sorry --non-trivial
lemma new_lemma_152658 (h0 : ring (metric_space empty)) : rank_condition (metric_space empty) := sorry --non-trivial
lemma new_lemma_152659 (h0 : group (random_gen (has_top (has_top (group_with_zero linarith.comp_source))))) : is_cyclic (random_gen (has_top (has_top (group_with_zero linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_152660 (h0 : topological_space (linear_ordered_comm_group_with_zero environment.projection_info)) : path_connected_space (linear_ordered_comm_group_with_zero environment.projection_info) := sorry --non-trivial
lemma new_lemma_152661 (h0 : complete_lattice (linear_ordered_field (option (option (option unsigned))))) : is_compactly_generated (linear_ordered_field (option (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_152662 (h0 : not (topological_space (metric_space linarith.comp_source) -> false)) : @totally_disconnected_space.{0} (metric_space.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (metric_space.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_152663 (h0 : group (measurable_space fun_info)) : normalizer_condition (measurable_space fun_info) := sorry --non-trivial
lemma new_lemma_152664 (h0 : functor.add_const (function.extfun nat fin) Type) : @archimedean.{1} (simple_graph.{1} Type) (@matrix.vec_empty.{1} (ordered_add_comm_monoid.{1} (simple_graph.{1} Type)) (@function.extfun_app.{1 1} nat fin (@functor.add_const.run.{0 1} (function.extfun.{1 1} nat fin) Type h0) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_152665 (h0 : topological_space (comm_group (ring (option (option (option (option unsigned))))))) : sequential_space (comm_group (ring (option (option (option (option unsigned)))))) := sorry --non-trivial
lemma new_lemma_152666 (h0 : preorder (nondiscrete_normed_field (mul_one_class char))) (h1 : set (nondiscrete_normed_field (mul_one_class char))) : set.is_pwo h1 := sorry --non-trivial
lemma new_lemma_152667 (h0 : topological_space (canonically_ordered_comm_semiring Type)) : discrete_topology (canonically_ordered_comm_semiring Type) := sorry --non-trivial
lemma new_lemma_152668 (h0 : topological_space (add_left_cancel_monoid (fintype char))) : totally_disconnected_space (add_left_cancel_monoid (fintype char)) := sorry --non-trivial
lemma new_lemma_152669 (h0 : functor.add_const (filter (add_comm_monoid name)) Type) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152670 (h0 : topological_space (semigroup (boolean_algebra (has_pos_part Type)))) : regular_space (semigroup (boolean_algebra (has_pos_part Type))) := sorry --non-trivial
lemma new_lemma_152671 (h0 : functor.add_const Prop (finset ennreal)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_152672 (h0 : add_monoid (non_assoc_semiring (semiring (semiring num)))) : add_monoid.fg (non_assoc_semiring (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_152673 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (has_one.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_one.{0} empty))  := sorry --non-trivial
lemma new_lemma_152674 (h1 : group real.angle) : is_cyclic real.angle := sorry --non-trivial
lemma new_lemma_152675 (h0 : not (has_mem.mem (complete_semilattice_Sup linarith.ineq) has_emptyc.emptyc -> false)) : @is_compactly_generated.{0} (complete_semilattice_Sup.{0} linarith.ineq) (@finset.pi.empty.{1 0} Type complete_lattice.{0} (complete_semilattice_Sup.{0} linarith.ineq) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (complete_semilattice_Sup.{0} linarith.ineq) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_152676 (h0 : topological_space (has_bot (left_cancel_monoid (option empty)))) : locally_compact_space (has_bot (left_cancel_monoid (option empty))) := sorry --non-trivial
lemma new_lemma_152677 (h0 : group (has_nndist (has_nndist ennreal))) : group.fg (has_nndist (has_nndist ennreal)) := sorry --non-trivial
lemma new_lemma_152678 (h0 : filter (left_cancel_monoid (option (option empty)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_152679 (h0 : complete_lattice (has_top (random_gen num))) : is_atomistic (has_top (random_gen num)) := sorry --non-trivial
lemma new_lemma_152680 (h0 : ring (metric_space unsigned)) : strong_rank_condition (metric_space unsigned) := sorry --non-trivial
lemma new_lemma_152681 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_152682 (h0 : fin has_zero.zero) : @t1_space.{1} (canonically_linear_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (canonically_linear_ordered_monoid.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_152683 (h0 : function.extfun Type ordered_comm_monoid) : @has_exists_mul_of_le.{0} (cancel_monoid.{0} (has_add.{0} (has_add.{0} (comm_group.{0} (has_add.{0} (has_add.{0} name)))))) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} h0 (cancel_monoid.{0} (has_add.{0} (has_add.{0} (comm_group.{0} (has_add.{0} (has_add.{0} name)))))))  := sorry --non-trivial
lemma new_lemma_152684 (h1 : topological_space (has_compl char)) : path_connected_space (has_compl char) := sorry --non-trivial
lemma new_lemma_152685 (h0 : topological_space (linear_ordered_semiring (semiring empty))) : normal_space (linear_ordered_semiring (semiring empty)) := sorry --non-trivial
lemma new_lemma_152686 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (add_cancel_comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (add_cancel_comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152687 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (mul_zero_class.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (mul_zero_class.{0} name))  := sorry --non-trivial
lemma new_lemma_152688 (h0 : topological_space (has_pos_part name)) : totally_disconnected_space (has_pos_part name) := sorry --non-trivial
lemma new_lemma_152689 (h0 : functor.add_const (topological_space (complete_distrib_lattice Type)) Type) : @preirreducible_space.{1} (complete_distrib_lattice.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (complete_distrib_lattice.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_152690 (h0 : ring (mul_one_class linarith.comp_source)) : rank_condition (mul_one_class linarith.comp_source) := sorry --non-trivial
lemma new_lemma_152691 (h0 : prod (has_add (option (mul_zero_class pos))) (has_add (option (mul_zero_class pos)))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_152692 (h0 : topological_space (has_add num)) : locally_compact_space (has_add num) := sorry --non-trivial
lemma new_lemma_152693 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (sub_neg_monoid.{0} real) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (sub_neg_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_152694 (h0 : topological_space (add_comm_monoid (option unsigned))) : totally_separated_space (add_comm_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_152695 (h0 : not (topological_space (normed_group linarith.ineq) -> false)) : @totally_disconnected_space.{0} (normed_group.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (normed_group.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_152696 (h0 : functor.add_const (topological_space (add_group congr_arg_kind)) unsigned) : @irreducible_space.{0} (add_group.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (add_group.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_152697 (h0 : functor.add_const (functor.add_const (uniform_space nnreal) congr_arg_kind) congr_arg_kind) : separated_space nnreal := sorry --non-trivial
lemma new_lemma_152698 (h0 : complete_lattice (semiring (random_gen linarith.comp_source))) : is_atomistic (semiring (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_152699 (h0 : list (has_add (normed_comm_ring (has_neg pos)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_152700 (h0 : functor.add_const (group (boolean_algebra unsigned)) (has_neg pos)) : @group.fg.{0} (boolean_algebra.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (boolean_algebra.{0} unsigned)) (has_neg.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_152701 (h0 : ring (linear_ordered_add_comm_group (random_gen (random_gen linarith.comp_source)))) : rank_condition (linear_ordered_add_comm_group (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_152702 (h0 : functor.add_const (topological_space (has_to_string environment.implicit_infer_kind)) name) : @topological_space.separable_space.{0} (has_to_string.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_152703 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} congr_arg_kind (@function.extfun_app.{2 1} Type topological_space.{0} h0 congr_arg_kind)  := sorry --non-trivial
lemma new_lemma_152704 (h0 : has_neg (semi_normed_comm_ring string.iterator_imp)) (h1 : measurable_space (semi_normed_comm_ring string.iterator_imp)) : has_measurable_neg (semi_normed_comm_ring string.iterator_imp) := sorry --non-trivial
lemma new_lemma_152705 (h0 : functor.add_const (topological_space (has_nndist ennreal)) num) : @topological_space.separable_space.{0} (has_nndist.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} ennreal)) num h0)  := sorry --non-trivial
lemma new_lemma_152706 (h0 : topological_space (with_bot (dlist (has_inv to_additive.value_type)))) : path_connected_space (with_bot (dlist (has_inv to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_152707 (h0 : functor.add_const (group (cancel_monoid ennreal)) unsigned) : @normalizer_condition.{0} (cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (group.{0} (cancel_monoid.{0} ennreal)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_152708 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (has_inter.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_inter.{0} num))  := sorry --non-trivial
lemma new_lemma_152709 (h0 : functor.add_const (complete_lattice (boolean_algebra name)) (finset (has_to_string linarith.comp))) : @is_compactly_generated.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (boolean_algebra.{0} name)) (finset.{0} (has_to_string.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_152710 (h0 : topological_space (has_emptyc (has_top to_additive.value_type))) : discrete_topology (has_emptyc (has_top to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_152711 (h1 : string_imp -> Prop) : @infi.{0 1} Prop (@conditionally_complete_lattice.to_has_Inf.{0} Prop (@complete_lattice.to_conditionally_complete_lattice.{0} Prop Prop.complete_lattice)) string_imp h1  := sorry --non-trivial
lemma new_lemma_152712 (h0 : not (topological_space (with_bot congr_arg_kind) -> false)) : @discrete_topology.{0} (with_bot.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (with_bot.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_152713 (h0 : group (has_neg unsigned)) : is_cyclic (has_neg unsigned) := sorry --non-trivial
lemma new_lemma_152714 (h0 : functor.add_const (topological_space (semigroup environment.implicit_infer_kind)) name) : @t0_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_152715 (h0 : functor.add_const (function.extfun Type filter) pos) : filter.ne_bot (function.extfun_app (functor.add_const.run h0) (has_neg name)) := sorry --non-trivial
lemma new_lemma_152716 (h0 : functor.add_const (group (ring linarith.comp)) Type) : @group.fg.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 1} (group.{0} (ring.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_152717 (h0 : ring (has_append (has_ssubset string_imp))) : rank_condition (has_append (has_ssubset string_imp)) := sorry --non-trivial
lemma new_lemma_152718 (h0 : not (topological_space (has_emptyc linarith.comp_source) -> false)) : @totally_separated_space.{0} (has_emptyc.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (has_emptyc.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_152719 (h0 : add_group (has_pos_part (has_add (has_add (has_add real))))) : is_add_cyclic (has_pos_part (has_add (has_add (has_add real)))) := sorry --non-trivial
lemma new_lemma_152720 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (complete_semilattice_Sup.{0} num) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (complete_semilattice_Sup.{0} num))  := sorry --non-trivial
lemma new_lemma_152721 (h0 : functor.add_const (list (complete_distrib_lattice Type)) name) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152722 (h0 : topological_space (has_nndist (finset environment.implicit_infer_kind))) : sequential_space (has_nndist (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_152723 (h0 : finset (add_comm_monoid (option unsigned))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_152724 (h0 : functor.add_const (topological_space (boolean_algebra environment.implicit_infer_kind)) Type) : @discrete_topology.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_152725 (h0 : complete_lattice (normed_group empty)) : is_atomistic (normed_group empty) := sorry --non-trivial
lemma new_lemma_152726 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (linear_ordered_comm_monoid_with_zero.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_comm_monoid_with_zero.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152727 (h0 : topological_space (generalized_boolean_algebra (has_add name))) : regular_space (generalized_boolean_algebra (has_add name)) := sorry --non-trivial
lemma new_lemma_152728 (h0 : not (group (has_norm to_additive.value_type) -> false)) : @is_cyclic.{0} (has_norm.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (group.{0} (has_norm.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_152729 (h0 : topological_space (encodable (random_gen linarith.ineq))) : path_connected_space (encodable (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_152730 (h2 : topological_space num) : path_connected_space num := sorry --non-trivial
lemma new_lemma_152731 (h0 : topological_space (add_group empty)) : discrete_topology (add_group empty) := sorry --non-trivial
lemma new_lemma_152732 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (has_inter.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_inter.{0} num))  := sorry --non-trivial
lemma new_lemma_152733 (h0 : functor.add_const (complete_lattice (complete_distrib_lattice unsigned)) unsigned) : @is_atomistic.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (complete_distrib_lattice.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_152734 (h0 : ring (bin_tree (option unsigned))) : is_principal_ideal_ring (bin_tree (option unsigned)) := sorry --non-trivial
lemma new_lemma_152735 (h0 : topological_space (has_top (has_ssubset to_additive.value_type))) (h1 : set (topological_space.opens (has_top (has_ssubset to_additive.value_type)))) : topological_space.opens.is_basis h1 := sorry --non-trivial
lemma new_lemma_152736 (h0 : group (canonically_ordered_comm_semiring (has_pos_part (has_neg (has_neg name))))) : group.fg (canonically_ordered_comm_semiring (has_pos_part (has_neg (has_neg name)))) := sorry --non-trivial
lemma new_lemma_152737 (h0 : uniform_space (semiring (has_top (has_top (has_top congr_arg_kind))))) : complete_space (semiring (has_top (has_top (has_top congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_152738 (h0 : group (topological_space (has_nnnorm (has_top to_additive.value_type)))) : group.fg (topological_space (has_nnnorm (has_top to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_152739 (h0 : ring (ring (has_to_string pos))) : is_principal_ideal_ring (ring (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_152740 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (encodable linarith.ineq)) := sorry --non-trivial
lemma new_lemma_152741 (h0 : function.extfun Type (functor.comp topological_space boolean_algebra.core)) : @preconnected_space.{0} (boolean_algebra.core.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} boolean_algebra.core.{0} pos (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} boolean_algebra.core.{0}) h0 pos))  := sorry --non-trivial
lemma new_lemma_152742 (h0 : group (has_nndist name)) : is_simple_group (has_nndist name) := sorry --non-trivial
lemma new_lemma_152743 (h0 : has_mem.mem ring has_emptyc.emptyc) : @strong_rank_condition.{0} (has_emptyc.{0} reducibility_hints) (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} h0) (has_emptyc.{0} reducibility_hints))  := sorry --non-trivial
lemma new_lemma_152744 (h0 : function.extfun Type group) : @is_cyclic.{0} (complete_semilattice_Sup.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (complete_semilattice_Sup.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_152745 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @monoid.fg.{1} (has_add.{1} Type) (@function.extfun_app.{3 2} (Type 1) monoid.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 monoid.{1}) (has_add.{1} Type))  := sorry --non-trivial
lemma new_lemma_152746 (h0 : functor.add_const (group (complete_distrib_lattice name)) (has_neg linarith.comp)) : @group.fg.{0} (complete_distrib_lattice.{0} name) (@functor.add_const.run.{0 0} (group.{0} (complete_distrib_lattice.{0} name)) (has_neg.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_152747 (h0 : filter (fintype (random_gen (add_monoid (random_gen (random_gen (random_gen to_additive.value_type))))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_152748 (h0 : functor.add_const (ring (id unsigned)) empty) : @is_domain.{0} (@id.{2} Type unsigned) (@functor.add_const.run.{0 0} (ring.{0} (@id.{2} Type unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_152749 (h0 : ring (normed_lattice_add_comm_group (has_Inf Type))) : is_domain (normed_lattice_add_comm_group (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_152750 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : palindrome (function.extfun_app (function.extfun_app h0 list) (mul_zero_class name)) := sorry --non-trivial
lemma new_lemma_152751 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_152752 (h0 : topological_space (has_lt char)) (h1 : preorder (has_lt char)) : order_topology (has_lt char) := sorry --non-trivial
lemma new_lemma_152753 (h0 : functor.add_const (topological_space (mul_zero_class empty)) empty) : @path_connected_space.{0} (mul_zero_class.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (mul_zero_class.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_152754 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (left_cancel_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (left_cancel_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152755 (h0 : complete_lattice (has_neg (has_add name))) : is_compactly_generated (has_neg (has_add name)) := sorry --non-trivial
lemma new_lemma_152756 (h0 : group (linear_ordered_add_comm_group string_imp)) : is_cyclic (linear_ordered_add_comm_group string_imp) := sorry --non-trivial
lemma new_lemma_152757 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (as_linear_order.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (as_linear_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152758 (h0 : topological_space (boolean_algebra name)) : locally_compact_space (boolean_algebra name) := sorry --non-trivial
lemma new_lemma_152759 (h0 : topological_space (ring pos)) : preirreducible_space (ring pos) := sorry --non-trivial
lemma new_lemma_152760 (h1 : has_neg (mul_one_class std_gen)) (h2 : measurable_space (mul_one_class std_gen)) : has_measurable_neg (mul_one_class std_gen) := sorry --non-trivial
lemma new_lemma_152761 (h0 : topological_space (ring (finset pos))) : t0_space (ring (finset pos)) := sorry --non-trivial
lemma new_lemma_152762 (h0 : topological_space (has_Inf (ring (has_neg linarith.comp)))) : sequential_space (has_Inf (ring (has_neg linarith.comp))) := sorry --non-trivial
lemma new_lemma_152763 (h0 : semiring (comm_semigroup (has_Inf (has_Inf Type)))) : is_noetherian_ring (comm_semigroup (has_Inf (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_152764 (h0 : topological_space (add_cancel_monoid (has_bot unsigned))) : discrete_topology (add_cancel_monoid (has_bot unsigned)) := sorry --non-trivial
lemma new_lemma_152765 (h0 : topological_space (pseudo_metric_space (option (option (option (option pos)))))) : sequential_space (pseudo_metric_space (option (option (option (option pos))))) := sorry --non-trivial
lemma new_lemma_152766 (h0 : function.extfun Type (functor.add_const (list znum))) : list.nodup (functor.add_const.run (function.extfun_app h0 num)) := sorry --non-trivial
lemma new_lemma_152767 (h0 : topological_space (has_neg_part (has_to_string pos))) : totally_disconnected_space (has_neg_part (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_152768 (h0 : not (ring (parser char) -> false)) : @is_domain.{0} (parser char) (@classical.by_contradiction'.{1} (ring.{0} (parser char)) h0)  := sorry --non-trivial
lemma new_lemma_152769 (h0 : functor.comp (functor.comp ring has_add) with_top nnreal) : @is_domain.{0} (has_add.{0} ennreal) (@functor.comp.run.{0 0 0} ring.{0} has_add.{0} ennreal (@functor.comp.run.{0 0 0} (functor.comp.{0 0 0} ring.{0} has_add.{0}) with_top.{0} nnreal h0))  := sorry --non-trivial
lemma new_lemma_152770 (h0 : topological_space (pseudo_metric_space name)) : regular_space (pseudo_metric_space name) := sorry --non-trivial
lemma new_lemma_152771 (h0 : ring (has_edist empty)) : is_principal_ideal_ring (has_edist empty) := sorry --non-trivial
lemma new_lemma_152772 (h0 : uniform_space (preorder (semiring num))) : separated_space (preorder (semiring num)) := sorry --non-trivial
lemma new_lemma_152773 (h0 : functor.add_const (topological_space (has_add pos)) pos) : @sequential_space.{0} (has_add.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_152774 (h0 : prod (add_comm_semigroup enat) (add_comm_semigroup enat)) : set.diagonal (add_comm_semigroup enat) h0 := sorry --non-trivial
lemma new_lemma_152775 (h0 : functor.add_const (topological_space (boolean_algebra environment.implicit_infer_kind)) pos) : @discrete_topology.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_152776 (h0 : ring (measurable_space empty)) : is_domain (measurable_space empty) := sorry --non-trivial
lemma new_lemma_152777 (h0 : group (denumerable (has_nnnorm fun_info))) : group.fg (denumerable (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_152778 (h0 : ring (ring (comm_group name))) : is_domain (ring (comm_group name)) := sorry --non-trivial
lemma new_lemma_152779 (h0 : topological_space (has_neg_part (has_to_string pos))) : topological_space.separable_space (has_neg_part (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_152780 (h0 : ring (cancel_monoid (add_comm_semigroup linarith.ineq))) : strong_rank_condition (cancel_monoid (add_comm_semigroup linarith.ineq)) := sorry --non-trivial
lemma new_lemma_152781 (h0 : complete_lattice unsigned) : is_compactly_generated unsigned := sorry --non-trivial
lemma new_lemma_152782 (h0 : uniform_space (id (has_top empty))) : complete_space (id (has_top empty)) := sorry --non-trivial
lemma new_lemma_152783 (h0 : functor.add_const (topological_space (add_left_cancel_semigroup empty)) (semiring empty)) : @path_connected_space.{0} (add_left_cancel_semigroup.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (add_left_cancel_semigroup.{0} empty)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_152784 (h0 : ring (simple_graph (mul_one_class to_additive.value_type))) : rank_condition (simple_graph (mul_one_class to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_152785 (h0 : ring (has_emptyc (has_norm fun_info))) : strong_rank_condition (has_emptyc (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_152786 (h0 : not (topological_space (measurable_space unsigned) -> false)) : @t0_space.{0} (measurable_space.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (measurable_space.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_152787 (h0 : functor.add_const (complete_lattice (complete_distrib_lattice linarith.comp)) (ring Type)) : @is_compactly_generated.{0} (complete_distrib_lattice.{0} linarith.comp) (@functor.add_const.run.{0 1} (complete_lattice.{0} (complete_distrib_lattice.{0} linarith.comp)) (ring.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_152788 (h0 : functor.add_const (topological_space (semigroup linarith.comp)) linarith.comp) : @totally_disconnected_space.{0} (semigroup.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152789 (h0 : functor.add_const (group (semigroup environment.implicit_infer_kind)) Type) : @is_cyclic.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (group.{0} (semigroup.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_152790 (h0 : topological_space (canonically_ordered_comm_semiring pos)) : normal_space (canonically_ordered_comm_semiring pos) := sorry --non-trivial
lemma new_lemma_152791 (h0 : group (has_nndist (comm_group (ring (semigroup name))))) : is_simple_group (has_nndist (comm_group (ring (semigroup name)))) := sorry --non-trivial
lemma new_lemma_152792 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (ordered_comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152793 (h0 : functor.add_const (topological_space (semigroup pos)) Type) : @t1_space.{0} (semigroup.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (semigroup.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_152794 (h0 : functor.add_const (uniform_space (free_add_monoid congr_arg_kind)) empty -> Prop) : @separated_space.{0} (free_add_monoid.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (uniform_space.{0} (free_add_monoid.{0} congr_arg_kind)) empty (@classical.epsilon.{1} (functor.add_const.{0 0} (uniform_space.{0} (free_add_monoid.{0} congr_arg_kind)) empty) (@nonempty_of_inhabited.{1} (functor.add_const.{0 0} (uniform_space.{0} (free_add_monoid.{0} congr_arg_kind)) empty) (@functor.add_const.inhabited.{0 0} (uniform_space.{0} (free_add_monoid.{0} congr_arg_kind)) empty (@inhabited_uniform_space.{0} (free_add_monoid.{0} congr_arg_kind)))) h0))  := sorry --non-trivial
lemma new_lemma_152795 (h0 : topological_space (add_comm_monoid Type)) : irreducible_space (add_comm_monoid Type) := sorry --non-trivial
lemma new_lemma_152796 (h0 : group (comm_group (option unsigned))) : is_cyclic (comm_group (option unsigned)) := sorry --non-trivial
lemma new_lemma_152797 (h0 : semiring (normed_comm_ring empty)) : is_noetherian_ring (normed_comm_ring empty) := sorry --non-trivial
lemma new_lemma_152798 (h0 : function.extfun Type group) : @is_cyclic.{0} (has_neg_part.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (has_neg_part.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_152799 (h0 : ring (semi_normed_comm_ring (has_nnnorm char))) : strong_rank_condition (semi_normed_comm_ring (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_152800 (h0 : topological_space (plift (semiring num))) : irreducible_space (plift (semiring num)) := sorry --non-trivial
lemma new_lemma_152801 (h0 : group (with_bot num)) : is_cyclic (with_bot num) := sorry --non-trivial
lemma new_lemma_152802 (h0 : topological_space (add_comm_monoid (has_add environment.implicit_infer_kind))) : preirreducible_space (add_comm_monoid (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_152803 (h0 : ordered_add_comm_monoid (add_cancel_monoid (has_to_string pos))) : archimedean (add_cancel_monoid (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_152804 (h0 : add_group (measurable_space.dynkin_system (has_top empty))) : is_add_cyclic (measurable_space.dynkin_system (has_top empty)) := sorry --non-trivial
lemma new_lemma_152805 (h0 : group (denumerable (random_gen (random_gen (random_gen (random_gen linarith.ineq)))))) : group.fg (denumerable (random_gen (random_gen (random_gen (random_gen linarith.ineq))))) := sorry --non-trivial
lemma new_lemma_152806 (h0 : ordered_comm_monoid (has_zero (add_comm_monoid name))) : has_exists_mul_of_le (has_zero (add_comm_monoid name)) := sorry --non-trivial
lemma new_lemma_152807 (h0 : fun_info -> fun_info) (h1 : fun_info) : function.periodic_pts h0 h1 := sorry --non-trivial
lemma new_lemma_152808 (h0 : functor.add_const (filter (has_to_string pos)) (boolean_algebra pos)) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152809 (h0 : topological_space (semigroup (ring (ring (has_neg pos))))) : preirreducible_space (semigroup (ring (ring (has_neg pos)))) := sorry --non-trivial
lemma new_lemma_152810 (h0 : add_monoid (ordered_comm_ring (has_add real))) : add_monoid.fg (ordered_comm_ring (has_add real)) := sorry --non-trivial
lemma new_lemma_152811 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (linear_ordered_add_comm_group.{0} linarith.ineq) (@function.extfun_app.{2 1} Type add_group.{0} h0 (linear_ordered_add_comm_group.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_152812 (h0 : topological_space (finset (has_neg (has_nndist environment.implicit_infer_kind)))) : t1_space (finset (has_neg (has_nndist environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_152813 (h0 : functor.comp topological_space has_to_string name) : @regular_space.{0} (has_to_string.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_to_string.{0} name h0)  := sorry --non-trivial
lemma new_lemma_152814 (h0 : topological_space (filter congr_arg_kind)) : topological_space.separable_space (filter congr_arg_kind) := sorry --non-trivial
lemma new_lemma_152815 (h0 : topological_space (measurable_space.dynkin_system empty)) : totally_disconnected_space (measurable_space.dynkin_system empty) := sorry --non-trivial
lemma new_lemma_152816 (h0 : topological_space (complete_distrib_lattice (boolean_algebra Type))) : loc_path_connected_space (complete_distrib_lattice (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_152817 (h0 : topological_space (has_neg (has_neg (has_Inf (finset (has_add pos)))))) : totally_disconnected_space (has_neg (has_neg (has_Inf (finset (has_add pos))))) := sorry --non-trivial
lemma new_lemma_152818 (h0 : functor.add_const (topological_space (comm_monoid empty)) empty) : @irreducible_space.{0} (comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_152819 (h0 : not (ring (linear_ordered_semiring empty) -> false)) : @rank_condition.{0} (linear_ordered_semiring.{0} empty) (@classical.by_contradiction'.{1} (ring.{0} (linear_ordered_semiring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_152820 (h0 : cancel_comm_monoid_with_zero (canonically_ordered_comm_semiring environment.implicit_infer_kind)) : unique_factorization_monoid (canonically_ordered_comm_semiring environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_152821 (h0 : topological_space (has_neg (has_Inf (has_to_string (has_neg pos))))) : locally_compact_space (has_neg (has_Inf (has_to_string (has_neg pos)))) := sorry --non-trivial
lemma new_lemma_152822 (h0 : fin has_zero.zero) : @is_compactly_generated.{0} (ordered_comm_ring.{0} name) (@matrix.vec_empty.{0} (complete_lattice.{0} (ordered_comm_ring.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_152823 (h0 : functor.add_const (topological_space (has_neg_part ennreal)) pos) : @loc_path_connected_space.{0} (has_neg_part.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} ennreal)) pos h0)  := sorry --non-trivial
lemma new_lemma_152824 (h0 : functor.add_const (topological_space (comm_group name)) pos) : @preconnected_space.{0} (comm_group.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_152825 (h0 : group (ring (has_add Type))) : is_cyclic (ring (has_add Type)) := sorry --non-trivial
lemma new_lemma_152826 (h0 : topological_space (pseudo_metric_space (option ennreal))) : preirreducible_space (pseudo_metric_space (option ennreal)) := sorry --non-trivial
lemma new_lemma_152827 (h0 : functor.add_const (list (has_zero pos)) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152828 (h0 : ordered_comm_monoid (add_cancel_monoid name)) : has_exists_mul_of_le (add_cancel_monoid name) := sorry --non-trivial
lemma new_lemma_152829 (h0 : uniform_space (semigroup (has_to_string (has_neg Type)))) : separated_space (semigroup (has_to_string (has_neg Type))) := sorry --non-trivial
lemma new_lemma_152830 (h0 : functor.add_const (topological_space (cancel_monoid linarith.comp)) linarith.comp) : @normal_space.{0} (cancel_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152831 (h0 : semiring (add_group (has_Inf real))) : is_noetherian_ring (add_group (has_Inf real)) := sorry --non-trivial
lemma new_lemma_152832 (h0 : functor.add_const (function.extfun Type topological_space) name) : @loc_path_connected_space.{0} (add_cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) name h0) (add_cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_152833 (h0 : add_group (semigroup (finset (has_neg (mul_zero_class pos))))) : is_add_cyclic (semigroup (finset (has_neg (mul_zero_class pos)))) := sorry --non-trivial
lemma new_lemma_152834 (h0 : add_monoid (semiring unsigned)) : add_monoid.fg (semiring unsigned) := sorry --non-trivial
lemma new_lemma_152835 (h0 : topological_space std_gen) (h2 : preorder std_gen) : order_closed_topology std_gen := sorry --non-trivial
lemma new_lemma_152836 (h0 : filter (has_zero (comm_group unsigned))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_152837 (h0 : topological_space (has_bot (sub_neg_monoid real))) : preconnected_space (has_bot (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_152838 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (has_edist.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_edist.{0} empty))  := sorry --non-trivial
lemma new_lemma_152839 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @locally_compact_space.{0} (normed_group.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (normed_group.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_152840 (h0 : topological_space (semigroup (has_neg_part linarith.comp))) : preconnected_space (semigroup (has_neg_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_152841 (h0 : functor.add_const (topological_space (comm_group environment.implicit_infer_kind)) pos) : @normal_space.{0} (comm_group.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_152842 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_152843 (h0 : functor.add_const (topological_space (mul_zero_class Type)) Type) : @loc_path_connected_space.{1} (mul_zero_class.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (mul_zero_class.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_152844 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (has_neg name)) := sorry --non-trivial
lemma new_lemma_152845 (h0 : topological_space (simple_graph unsigned)) : preconnected_space (simple_graph unsigned) := sorry --non-trivial
lemma new_lemma_152846 (h0 : add_group (has_inter (option unsigned))) : is_add_cyclic (has_inter (option unsigned)) := sorry --non-trivial
lemma new_lemma_152847 (h0 : topological_space (has_norm (random_gen linarith.ineq))) : locally_compact_space (has_norm (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_152848 (h0 : topological_space (linear_ordered_field ennreal)) : t1_space (linear_ordered_field ennreal) := sorry --non-trivial
lemma new_lemma_152849 (h0 : topological_space (add_comm_semigroup (add_comm_semigroup fun_info))) : path_connected_space (add_comm_semigroup (add_comm_semigroup fun_info)) := sorry --non-trivial
lemma new_lemma_152850 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (has_add.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_add.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_152851 (h0 : functor.add_const (topological_space (semigroup pos)) pos) : @preirreducible_space.{0} (semigroup.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_152852 (h0 : functor.comp topological_space boolean_algebra.core Type) : @discrete_topology.{1} (boolean_algebra.core.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} boolean_algebra.core.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_152853 (h0 : finset (normed_lattice_add_comm_group (ordered_comm_monoid real))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_152854 (h0 : functor.add_const (topological_space (add_cancel_monoid unsigned)) name) : @preconnected_space.{0} (add_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_152855 (h0 : not (measurable_space (with_bot linarith.comp) -> false)) (h1 : has_inf (with_bot linarith.comp)) : @has_measurable_inf₂.{0} (with_bot.{0} linarith.comp) (@classical.by_contradiction'.{1} (measurable_space.{0} (with_bot.{0} linarith.comp)) h0) h1  := sorry --non-trivial
lemma new_lemma_152856 (h0 : topological_space (has_zero (ring name))) : discrete_topology (has_zero (ring name)) := sorry --non-trivial
lemma new_lemma_152857 (h0 : ring (has_append (random_gen string_imp))) : strong_rank_condition (has_append (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_152858 (h0 : fin has_zero.zero) : @topological_space.separable_space.{0} (ordered_comm_ring.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)))) (ordered_comm_ring.{0} real))  := sorry --non-trivial
lemma new_lemma_152859 (h0 : functor.add_const (function.extfun Type topological_space) (has_neg linarith.comp)) : @preconnected_space.{0} (has_Inf.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) (has_neg.{0} linarith.comp) h0) (has_Inf.{0} name))  := sorry --non-trivial
lemma new_lemma_152860 (h1 : topological_space (random_gen fun_info)) : path_connected_space (random_gen fun_info) := sorry --non-trivial
lemma new_lemma_152861 (h0 : topological_space (non_assoc_semiring (semiring empty))) : t0_space (non_assoc_semiring (semiring empty)) := sorry --non-trivial
lemma new_lemma_152862 (h0 : fin has_zero.zero) : @sequential_space.{1} (ordered_comm_ring.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (ordered_comm_ring.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_152863 (h0 : topological_space (has_Inf pos)) : preirreducible_space (has_Inf pos) := sorry --non-trivial
lemma new_lemma_152864 (h2 : measurable_space (distrib_lattice (random_gen linarith.comp_source))) (h3 : has_sup (distrib_lattice (random_gen linarith.comp_source))) : has_measurable_sup (distrib_lattice (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_152865 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (random_gen.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (random_gen.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152866 (h0 : functor.add_const (topological_space (plift congr_arg_kind)) empty) : @locally_compact_space.{1} (plift.{1} congr_arg_kind) (@functor.add_const.run.{1 0} (topological_space.{1} (plift.{1} congr_arg_kind)) empty h0)  := sorry --non-trivial
lemma new_lemma_152867 (h0 : add_monoid (add_semigroup unsigned)) : add_monoid.fg (add_semigroup unsigned) := sorry --non-trivial
lemma new_lemma_152868 (h0 : functor.add_const (topological_space (ordered_comm_ring pos)) (ring (has_add name))) : @sequential_space.{0} (ordered_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_ring.{0} pos)) (ring.{0} (has_add.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_152869 (h0 : measurable_space (has_lt (mul_one_class (mul_one_class string.iterator_imp)))) (h1 : filter (has_lt (mul_one_class (mul_one_class string.iterator_imp)))) : filter.is_measurably_generated h1 := sorry --non-trivial
lemma new_lemma_152870 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : list.nodup (function.extfun_app (function.extfun_app h0 list) (plift unsigned)) := sorry --non-trivial
lemma new_lemma_152871 (h0 : function.extfun Type group) : @normalizer_condition.{0} (with_bot.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type group.{0} h0 (with_bot.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_152872 (h0 : ring (has_Sup environment.projection_info)) : is_domain (has_Sup environment.projection_info) := sorry --non-trivial
lemma new_lemma_152873 (h0 : topological_space (comm_semigroup (has_pos_part real))) : preirreducible_space (comm_semigroup (has_pos_part real)) := sorry --non-trivial
lemma new_lemma_152874 (h0 : group (normed_comm_ring (comm_group (comm_group Type)))) : group.fg (normed_comm_ring (comm_group (comm_group Type))) := sorry --non-trivial
lemma new_lemma_152875 (h0 : set (add_comm_semigroup enat -> char)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_152876 (h1 : measurable_space (nondiscrete_normed_field (normed_field (mul_one_class std_gen)))) (h2 : measure_theory.measure (nondiscrete_normed_field (normed_field (mul_one_class std_gen)))) : measure_theory.is_finite_measure h2 := sorry --non-trivial
lemma new_lemma_152877 (h0 : topological_space (ordered_cancel_add_comm_monoid (option ennreal))) : preconnected_space (ordered_cancel_add_comm_monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_152878 (h0 : topological_space (sub_neg_monoid (has_add (finset pos)))) : path_connected_space (sub_neg_monoid (has_add (finset pos))) := sorry --non-trivial
lemma new_lemma_152879 (h0 : topological_space (nondiscrete_normed_field (mul_one_class char))) (h1 : preorder (nondiscrete_normed_field (mul_one_class char))) : order_topology (nondiscrete_normed_field (mul_one_class char)) := sorry --non-trivial
lemma new_lemma_152880 (h0 : topological_space (omega_complete_partial_order unsigned)) : preirreducible_space (omega_complete_partial_order unsigned) := sorry --non-trivial
lemma new_lemma_152881 (h0 : topological_space (semiring (has_top fun_info))) : locally_compact_space (semiring (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_152882 (h0 : topological_space (boolean_algebra (normed_comm_ring (normed_comm_ring Type)))) : irreducible_space (boolean_algebra (normed_comm_ring (normed_comm_ring Type))) := sorry --non-trivial
lemma new_lemma_152883 (h0 : uniform_space (canonically_ordered_comm_semiring environment.implicit_infer_kind)) : complete_space (canonically_ordered_comm_semiring environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_152884 (h0 : functor.add_const (topological_space (boolean_algebra (boolean_algebra linarith.comp))) linarith.comp) : @path_connected_space.{0} (boolean_algebra.{0} (boolean_algebra.{0} linarith.comp)) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} (boolean_algebra.{0} linarith.comp))) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152885 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem group)) : @normalizer_condition.{0} (metric_space.{0} fun_info) (@function.extfun_app.{2 1} Type group.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) group.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) group.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (metric_space.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_152886 (h0 : functor.add_const (uniform_space (semigroup unsigned)) environment.implicit_infer_kind) : @complete_space.{0} (semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (uniform_space.{0} (semigroup.{0} unsigned)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_152887 (h0 : functor.add_const Prop (monoid congr_arg_kind)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_152888 (h0 : function.extfun Type topological_space) : @t1_space.{0} (complete_distrib_lattice.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_distrib_lattice.{0} empty))  := sorry --non-trivial
lemma new_lemma_152889 (h0 : topological_space (pseudo_metric_space unsigned)) : totally_disconnected_space (pseudo_metric_space unsigned) := sorry --non-trivial
lemma new_lemma_152890 (h0 : topological_space (has_to_string (finset ennreal))) : t0_space (has_to_string (finset ennreal)) := sorry --non-trivial
lemma new_lemma_152891 (h0 : functor.add_const (ring (measurable_space.dynkin_system num)) num) : @is_principal_ideal_ring.{0} (measurable_space.dynkin_system.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (measurable_space.dynkin_system.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_152892 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (semigroup.{0} pos) (@function.extfun_app.{2 1} Type semiring.{0} h0 (semigroup.{0} pos))  := sorry --non-trivial
lemma new_lemma_152893 (h0 : add_group (simple_graph string_imp)) : is_add_cyclic (simple_graph string_imp) := sorry --non-trivial
lemma new_lemma_152894 (h0 : group (has_one (semiring (semiring (semiring (semiring (semiring num))))))) : normalizer_condition (has_one (semiring (semiring (semiring (semiring (semiring num)))))) := sorry --non-trivial
lemma new_lemma_152895 (h0 : functor.add_const (function.extfun Type complete_lattice) (has_Inf Type)) : @is_compactly_generated.{0} environment.implicit_infer_kind (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type complete_lattice.{0}) (has_Inf.{1} Type) h0) environment.implicit_infer_kind)  := sorry --non-trivial
lemma new_lemma_152896 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} linarith.ineq (@function.extfun_app.{2 1} Type topological_space.{0} h0 linarith.ineq)  := sorry --non-trivial
lemma new_lemma_152897 (h0 : function.extfun Type (functor.comp ordered_comm_monoid boolean_algebra)) : @has_exists_mul_of_le.{0} (boolean_algebra.{0} name) (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} ordered_comm_monoid.{0} boolean_algebra.{0}) h0 name))))))))))))))))))))))))))))))))))))))))))))  := sorry --non-trivial
lemma new_lemma_152898 (h0 : ordered_comm_monoid (canonically_ordered_comm_semiring (has_add (has_add Type)))) : has_exists_mul_of_le (canonically_ordered_comm_semiring (has_add (has_add Type))) := sorry --non-trivial
lemma new_lemma_152899 (h0 : not (function.extfun Type ring -> false)) : @is_domain.{0} (linear_ordered_comm_ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (linear_ordered_comm_ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_152900 (h0 : functor.add_const (ring (normed_comm_ring (has_add (has_add pos)))) environment.implicit_infer_kind) : @is_principal_ideal_ring.{0} (normed_comm_ring.{0} (has_add.{0} (has_add.{0} pos))) (@functor.add_const.run.{0 0} (ring.{0} (normed_comm_ring.{0} (has_add.{0} (has_add.{0} pos)))) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_152901 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (measurable_space.dynkin_system empty)) := sorry --non-trivial
lemma new_lemma_152902 (h0 h2 : multiset enat) : multiset.le h0 h2 := sorry --non-trivial
lemma new_lemma_152903 (h0 : function.extfun (function.extfun Type ring -> false) (fun (x : function.extfun Type ring -> false), false)) : @is_domain.{0} (comm_ring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) (@function.extfun_app.{0 0} (function.extfun.{2 1} Type ring.{0} → false) (λ (x : function.extfun.{2 1} Type ring.{0} → false), false) h0)) (comm_ring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_152904 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : palindrome (function.extfun_app (function.extfun_app h0 list) (add_cancel_monoid empty)) := sorry --non-trivial
lemma new_lemma_152905 (h0 : topological_space (generalized_boolean_algebra (ordered_comm_monoid real))) : discrete_topology (generalized_boolean_algebra (ordered_comm_monoid real)) := sorry --non-trivial
lemma new_lemma_152906 (h0 : function.extfun (finset Type) (has_mem.mem (linear_ordered_semiring linarith.comp))) : @strong_rank_condition.{0} (linear_ordered_semiring.{0} linarith.comp) (@finset.pi.empty.{1 0} Type ring.{0} (linear_ordered_semiring.{0} linarith.comp) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (linear_ordered_semiring.{0} linarith.comp)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_152907 (h0 : functor.add_const (uniform_space (semigroup linarith.comp)) linarith.comp) : @complete_space.{0} (semigroup.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (semigroup.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_152908 (h0 : topological_space (boolean_algebra (finset pos))) : irreducible_space (boolean_algebra (finset pos)) := sorry --non-trivial
lemma new_lemma_152909 (h0 : add_monoid (add_group (has_top empty))) : add_monoid.fg (add_group (has_top empty)) := sorry --non-trivial
lemma new_lemma_152910 (h0 : ring (has_union unsigned)) : is_principal_ideal_ring (has_union unsigned) := sorry --non-trivial
lemma new_lemma_152911 (h0 : topological_space (monoid unsigned)) : normal_space (monoid unsigned) := sorry --non-trivial
lemma new_lemma_152912 (h0 : group (bin_tree empty)) : is_cyclic (bin_tree empty) := sorry --non-trivial
lemma new_lemma_152913 (h0 : add_group (has_inv (has_nnnorm linarith.ineq))) : is_add_cyclic (has_inv (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_152914 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (linear_ordered_add_comm_group.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_add_comm_group.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_152915 (h0 : topological_space (has_nndist congr_arg_kind)) : irreducible_space (has_nndist congr_arg_kind) := sorry --non-trivial
lemma new_lemma_152916 (h0 : function.extfun (Type 1) monoid) : @monoid.fg.{1} (plift.{1} unsigned) (@function.extfun_app.{3 2} (Type 1) monoid.{1} h0 (plift.{1} unsigned))  := sorry --non-trivial
lemma new_lemma_152917 (h0 : topological_space (canonically_ordered_comm_semiring (has_neg (has_neg name)))) : preconnected_space (canonically_ordered_comm_semiring (has_neg (has_neg name))) := sorry --non-trivial
lemma new_lemma_152918 (h0 : uniform_space (has_neg_part (mul_zero_class environment.implicit_infer_kind))) : complete_space (has_neg_part (mul_zero_class environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_152919 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @t1_space.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_152920 (h0 : topological_space (has_neg_part name)) : irreducible_space (has_neg_part name) := sorry --non-trivial
lemma new_lemma_152921 (h0 : complete_lattice (semiring linarith.comp)) : is_compactly_generated (semiring linarith.comp) := sorry --non-trivial
lemma new_lemma_152922 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (add_comm_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (add_comm_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_152923 (h0 : filter linarith.comp) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_152924 (h0 : topological_space (complete_distrib_lattice (finset environment.implicit_infer_kind))) : t1_space (complete_distrib_lattice (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_152925 (h0 : ring (canonically_ordered_comm_semiring pos)) : is_domain (canonically_ordered_comm_semiring pos) := sorry --non-trivial
lemma new_lemma_152926 (h0 : not (function.extfun Type group -> false)) : @normalizer_condition.{0} (add_right_cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (add_right_cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_152927 (h0 : functor.add_const (topological_space (partial_order num)) congr_arg_kind) : @t1_space.{0} (partial_order.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (partial_order.{0} num)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_152928 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (group_with_zero.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (group_with_zero.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_152929 (h0 : functor.add_const (group (is_R_or_C empty)) empty) : @group.fg.{0} (is_R_or_C.{0} empty) (@functor.add_const.run.{0 0} (group.{0} (is_R_or_C.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_152930 (h0 : cancel_comm_monoid_with_zero (has_to_string (option (option (option pos))))) : unique_factorization_monoid (has_to_string (option (option (option pos)))) := sorry --non-trivial
lemma new_lemma_152931 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (add_cancel_comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_cancel_comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_152932 (h0 : fin has_zero.zero) : @totally_disconnected_space.{0} (sub_neg_monoid.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (sub_neg_monoid.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_152933 (h0 : ring (add_group_with_zero_nhd (random_gen num))) : strong_rank_condition (add_group_with_zero_nhd (random_gen num)) := sorry --non-trivial
lemma new_lemma_152934 (h0 : list (add_semigroup empty)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_152935 (h0 : functor.add_const (ring (has_star empty)) num) : @is_domain.{0} (has_star.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (has_star.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_152936 (h0 : not (function.extfun Type uniform_space -> false)) : @complete_space.{0} (has_emptyc.{0} (has_norm.{0} linarith.comp_source)) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (has_emptyc.{0} (has_norm.{0} linarith.comp_source)))  := sorry --non-trivial
lemma new_lemma_152937 (h0 : functor.add_const (function.extfun (Type 1) topological_space) linarith.comp) : @normal_space.{1} (has_neg.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) linarith.comp h0) (has_neg.{1} Type))  := sorry --non-trivial
lemma new_lemma_152938 (h0 : ring (distrib_lattice (random_gen (random_gen (random_gen (random_gen string_imp)))))) : is_domain (distrib_lattice (random_gen (random_gen (random_gen (random_gen string_imp))))) := sorry --non-trivial
lemma new_lemma_152939 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : finset.nonempty (function.extfun_app (function.extfun_app h0 finset) (normed_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_152940 (h1 : not (topological_space (id linarith.comp) -> false)) : @discrete_topology.{0} (@id.{2} Type linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (@id.{2} Type linarith.comp)) h1)  := sorry --non-trivial
lemma new_lemma_152941 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (comm_semigroup.{0} pos) (@function.extfun_app.{2 1} Type semiring.{0} h0 (comm_semigroup.{0} pos))  := sorry --non-trivial
lemma new_lemma_152942 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : filter.ne_bot (function.extfun_app (function.extfun_app h0 filter) (has_top linarith.comp)) := sorry --non-trivial
lemma new_lemma_152943 (h0 : functor.comp topological_space add_cancel_monoid Type) : @locally_compact_space.{1} (add_cancel_monoid.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} add_cancel_monoid.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_152944 (h1 : topological_space (denumerable (has_nnnorm fun_info))) : t0_space (denumerable (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_152945 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring Type)) Type) : @preconnected_space.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (canonically_ordered_comm_semiring.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_152946 (h0 : topological_space (simple_graph char)) : totally_disconnected_space (simple_graph char) := sorry --non-trivial
lemma new_lemma_152947 (h0 : functor.add_const (filter (semigroup linarith.comp)) linarith.comp) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152948 (h0 : topological_space (generalized_boolean_algebra (has_pos_part (has_Inf linarith.comp)))) : t0_space (generalized_boolean_algebra (has_pos_part (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_152949 (h0 : functor.add_const (uniform_space (simple_graph linarith.comp)) pos) : @separated_space.{0} (simple_graph.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (simple_graph.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_152950 (h0 : ring (random_gen (random_gen (random_gen (random_gen char))))) : rank_condition (random_gen (random_gen (random_gen (random_gen char)))) := sorry --non-trivial
lemma new_lemma_152951 (h0 : functor.add_const (topological_space (has_add pos)) ennreal) : @t1_space.{0} (has_add.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} pos)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_152952 (h0 : topological_space (has_Inf (has_neg (ring Type)))) : t0_space (has_Inf (has_neg (ring Type))) := sorry --non-trivial
lemma new_lemma_152953 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} name (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) name)  := sorry --non-trivial
lemma new_lemma_152954 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (ordered_ring.{0} (semiring.{0} unsigned)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_ring.{0} (semiring.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_152955 (h0 : functor.add_const (group Type) (finset name)) : @is_simple_group.{1} Type (@functor.add_const.run.{1 0} (group.{1} Type) (finset.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_152956 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (semigroup.{0} (option.{0} ennreal)) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (semigroup.{0} (option.{0} ennreal)))  := sorry --non-trivial
lemma new_lemma_152957 (h0 : functor.add_const (topological_space (complete_distrib_lattice linarith.comp)) real) : @normal_space.{0} (complete_distrib_lattice.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} linarith.comp)) real h0)  := sorry --non-trivial
lemma new_lemma_152958 (h0 : semiring (has_bot (has_Inf (has_Inf real)))) : is_noetherian_ring (has_bot (has_Inf (has_Inf real))) := sorry --non-trivial
lemma new_lemma_152959 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (ordered_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_152960 (h0 : monoid (measure_theory.measure_space (has_norm (semiring empty)))) : monoid.fg (measure_theory.measure_space (has_norm (semiring empty))) := sorry --non-trivial
lemma new_lemma_152961 (h0 : not (function.extfun Type topological_space -> false)) : @t0_space.{0} (with_bot.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (with_bot.{0} num))  := sorry --non-trivial
lemma new_lemma_152962 (h1 : ring (div_inv_monoid char)) : strong_rank_condition (div_inv_monoid char) := sorry --non-trivial
lemma new_lemma_152963 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (has_zero name)) := sorry --non-trivial
lemma new_lemma_152964 (h0 : filter (canonically_ordered_monoid (has_Inf pos))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_152965 (h0 : complete_lattice (has_top (semiring (semiring empty)))) : is_atomistic (has_top (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_152966 (h0 : topological_space (has_nndist (option name))) : t1_space (has_nndist (option name)) := sorry --non-trivial
lemma new_lemma_152967 (h0 : topological_space (comm_group (add_comm_monoid environment.implicit_infer_kind))) : totally_disconnected_space (comm_group (add_comm_monoid environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_152968 (h0 : filter (has_nndist (has_neg_part unsigned))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_152969 (h0 : list (has_Inf (has_add (finset (finset (finset pos)))))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_152970 (h0 : functor.add_const (finset (canonically_linear_ordered_monoid unsigned)) unsigned) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_152971 (h0 : topological_space (ordered_cancel_add_comm_monoid (has_to_string num))) : preirreducible_space (ordered_cancel_add_comm_monoid (has_to_string num)) := sorry --non-trivial
lemma new_lemma_152972 (h0 : function.extfun Type (functor.add_const (group (canonically_ordered_add_monoid empty)))) : @is_cyclic.{0} (canonically_ordered_add_monoid.{0} empty) (@functor.add_const.run.{0 0} (group.{0} (canonically_ordered_add_monoid.{0} empty)) unsigned (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (group.{0} (canonically_ordered_add_monoid.{0} empty))) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_152973 (h3 h4 : multiset ereal) : multiset.le h3 h4 := sorry --non-trivial
lemma new_lemma_152974 (h0 : group (boolean_algebra (has_to_string Type))) : normalizer_condition (boolean_algebra (has_to_string Type)) := sorry --non-trivial
lemma new_lemma_152975 (h0 : functor.add_const (ring (is_R_or_C empty)) empty) : @strong_rank_condition.{0} (is_R_or_C.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (is_R_or_C.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_152976 (h0 : ring (fintype (random_gen char))) : rank_condition (fintype (random_gen char)) := sorry --non-trivial
lemma new_lemma_152977 (h0 : not (add_group (plift num) -> false)) : @is_add_cyclic.{1} (plift.{1} num) (@classical.by_contradiction'.{2} (add_group.{1} (plift.{1} num)) h0)  := sorry --non-trivial
lemma new_lemma_152978 (h0 : fin has_zero.zero) : @unique_factorization_monoid.{0} (add_comm_monoid.{0} real) (@matrix.vec_empty.{0} (cancel_comm_monoid_with_zero.{0} (add_comm_monoid.{0} real)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_152979 (h0 : complete_lattice (distrib_lattice to_additive.value_type)) : is_compactly_generated (distrib_lattice to_additive.value_type) := sorry --non-trivial
lemma new_lemma_152980 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (distrib_lattice linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_152981 (h0 : functor.add_const (function.extfun (Type 1) monoid) (ring Type)) : @monoid.fg.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) monoid.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) monoid.{1}) (ring.{1} Type) h0) (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_152982 (h0 : complete_lattice (with_one (has_top empty))) : complete_lattice.is_Sup_finite_compact (with_one (has_top empty)) := sorry --non-trivial
lemma new_lemma_152983 (h0 : complete_lattice (canonically_ordered_comm_semiring unsigned)) : complete_lattice.is_Sup_finite_compact (canonically_ordered_comm_semiring unsigned) := sorry --non-trivial
lemma new_lemma_152984 (h0 : topological_space (normed_comm_ring (has_to_string (boolean_algebra (finset linarith.comp))))) : totally_separated_space (normed_comm_ring (has_to_string (boolean_algebra (finset linarith.comp)))) := sorry --non-trivial
lemma new_lemma_152985 (h0 : uniform_space (has_bot (has_Inf (finset (has_add (has_add (has_add pos))))))) : complete_space (has_bot (has_Inf (finset (has_add (has_add (has_add pos)))))) := sorry --non-trivial
lemma new_lemma_152986 (h0 : monoid (option empty)) : monoid.fg (option empty) := sorry --non-trivial
lemma new_lemma_152987 (h0 : cancel_comm_monoid_with_zero (linear_ordered_semiring (semiring (semiring empty)))) : unique_factorization_monoid (linear_ordered_semiring (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_152988 (h0 : ring (has_top (random_gen (with_bot (has_inv (with_one to_additive.value_type)))))) : rank_condition (has_top (random_gen (with_bot (has_inv (with_one to_additive.value_type))))) := sorry --non-trivial
lemma new_lemma_152989 (h0 : fin has_zero.zero) : @sequential_space.{0} (comm_semigroup.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (comm_semigroup.{0} name))  := sorry --non-trivial
lemma new_lemma_152990 (h1 : not (ring (metric_space char) -> false)) : @rank_condition.{0} (metric_space.{0} char) (@classical.by_contradiction'.{1} (ring.{0} (metric_space.{0} char)) h1)  := sorry --non-trivial
lemma new_lemma_152991 (h0 : group (ring (finset (ring linarith.comp)))) : is_cyclic (ring (finset (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_152992 (h0 : group (cancel_monoid empty)) : normalizer_condition (cancel_monoid empty) := sorry --non-trivial
lemma new_lemma_152993 (h0 : uniform_space (has_nndist ennreal)) : complete_space (has_nndist ennreal) := sorry --non-trivial
lemma new_lemma_152994 (h0 : function.extfun Type topological_space) : @t0_space.{0} (topological_space.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (topological_space.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_152995 (h1 : add_group string.iterator_imp) : is_add_cyclic string.iterator_imp := sorry --non-trivial
lemma new_lemma_152996 (h0 : uniform_space (comm_ring (has_nnnorm fun_info))) : complete_space (comm_ring (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_152997 (h1 : ring (has_compl fun_info)) : strong_rank_condition (has_compl fun_info) := sorry --non-trivial
lemma new_lemma_152998 (h0 : topological_space (semigroup num)) : normal_space (semigroup num) := sorry --non-trivial
lemma new_lemma_152999 (h0 : topological_space (left_cancel_monoid (semiring (semiring num)))) : discrete_topology (left_cancel_monoid (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_153000 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153001 (h0 : list (normed_comm_ring (has_zero Type))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_153002 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (preorder.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (preorder.{0} num))  := sorry --non-trivial
lemma new_lemma_153003 (h0 : functor.add_const (topological_space (left_cancel_monoid empty)) empty) : @locally_compact_space.{0} (left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_153004 (h0 : uniform_space (random_gen (semiring unsigned))) : complete_space (random_gen (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_153005 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (semi_normed_comm_ring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (semi_normed_comm_ring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_153006 (h1 : uniform_space (measurable_space congr_arg_kind)) : separated_space (measurable_space congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153007 (h0 : ring (ordered_comm_monoid (has_add Type))) : rank_condition (ordered_comm_monoid (has_add Type)) := sorry --non-trivial
lemma new_lemma_153008 (h0 : topological_space (ring unsigned)) : discrete_topology (ring unsigned) := sorry --non-trivial
lemma new_lemma_153009 (h0 : complete_lattice (comm_group linarith.comp)) : is_compactly_generated (comm_group linarith.comp) := sorry --non-trivial
lemma new_lemma_153010 (h0 : group (has_zero (finset (normed_comm_ring (has_neg Type))))) : group.fg (has_zero (finset (normed_comm_ring (has_neg Type)))) := sorry --non-trivial
lemma new_lemma_153011 (h0 : functor.add_const (functor.add_const (function.extfun (Type 1) uniform_space) pos) pos) : @complete_space.{1} (normed_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) uniform_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) uniform_space.{1}) pos (@functor.add_const.run.{2 0} (functor.add_const.{2 0} (function.extfun.{3 2} (Type 1) uniform_space.{1}) pos) pos h0)) (normed_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_153012 (h0 : functor.add_const (topological_space (add_cancel_monoid linarith.comp)) name) : @totally_separated_space.{0} (add_cancel_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_153013 (h0 : has_mem.mem (semiring linarith.comp_source) has_emptyc.emptyc) : @strong_rank_condition.{0} (semiring.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type ring.{0} (semiring.{0} linarith.comp_source) h0)  := sorry --non-trivial
lemma new_lemma_153014 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (canonically_ordered_comm_semiring.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (canonically_ordered_comm_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_153015 (h0 : finset (add_comm_monoid num)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_153016 (h0 : functor.comp ring add_comm_monoid name) : @rank_condition.{0} (add_comm_monoid.{0} name) (@functor.comp.run.{0 0 0} ring.{0} add_comm_monoid.{0} name h0)  := sorry --non-trivial
lemma new_lemma_153017 (h0 : functor.add_const (complete_lattice (preorder congr_arg_kind)) congr_arg_kind) : @is_compactly_generated.{0} (preorder.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (preorder.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_153018 (h0 : ring (has_Inf (has_neg Type))) : is_principal_ideal_ring (has_Inf (has_neg Type)) := sorry --non-trivial
lemma new_lemma_153019 (h0 : topological_space (has_bot (option (option congr_arg_kind)))) : loc_path_connected_space (has_bot (option (option congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_153020 (h0 : has_mem.mem nnreal has_zero.zero) : @group.fg.{0} nnreal (@multiset.pi.empty.{1 0} Type group.{0} nnreal h0)  := sorry --non-trivial
lemma new_lemma_153021 (h0 : group (ring num)) : is_simple_group (ring num) := sorry --non-trivial
lemma new_lemma_153022 (h0 : function.extfun Type group) : @normalizer_condition.{0} (linear_ordered_field.{0} pos) (@function.extfun_app.{2 1} Type group.{0} h0 (linear_ordered_field.{0} pos))  := sorry --non-trivial
lemma new_lemma_153023 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (pseudo_metric_space.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (pseudo_metric_space.{0} num))  := sorry --non-trivial
lemma new_lemma_153024 (h0 : functor.add_const (ring (has_zero name)) pos) : @is_principal_ideal_ring.{0} (has_zero.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (has_zero.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_153025 (h0 : functor.add_const (group (add_cancel_monoid linarith.comp)) Type) : @is_simple_group.{0} (add_cancel_monoid.{0} linarith.comp) (@functor.add_const.run.{0 1} (group.{0} (add_cancel_monoid.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_153026 (h0 : functor.add_const (function.extfun Type ring) pos) : @rank_condition.{0} (normed_comm_ring.{0} name) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) pos h0) (normed_comm_ring.{0} name))  := sorry --non-trivial
lemma new_lemma_153027 (h0 : uniform_space (has_top fun_info) -> Prop) (h1 : Exists (fun (x : uniform_space (has_top fun_info)), h0 x)) : @complete_space.{0} (has_top.{0} fun_info) (@classical.some.{1} (uniform_space.{0} (has_top.{0} fun_info)) h0 h1)  := sorry --non-trivial
lemma new_lemma_153028 (h0 : ring (distrib_lattice (random_gen (random_gen (random_gen string_imp))))) : is_domain (distrib_lattice (random_gen (random_gen (random_gen string_imp)))) := sorry --non-trivial
lemma new_lemma_153029 (h0 : ring (fintype (denumerable linarith.comp_source))) : strong_rank_condition (fintype (denumerable linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_153030 (h0 : topological_space (measurable_space fun_info)) : totally_separated_space (measurable_space fun_info) := sorry --non-trivial
lemma new_lemma_153031 (h0 : topological_space (has_to_string (finset pos))) : locally_compact_space (has_to_string (finset pos)) := sorry --non-trivial
lemma new_lemma_153032 (h0 : topological_space (canonically_ordered_comm_semiring (has_add pos))) : sequential_space (canonically_ordered_comm_semiring (has_add pos)) := sorry --non-trivial
lemma new_lemma_153033 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (has_bot.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_bot.{0} empty))  := sorry --non-trivial
lemma new_lemma_153034 (h0 : not (has_lt (normed_field (mul_one_class (mul_one_class (mul_one_class linarith.comp_source)))) -> false)) : @no_max_order.{0} (normed_field.{0} (mul_one_class.{0} (mul_one_class.{0} (mul_one_class.{0} linarith.comp_source)))) (@classical.by_contradiction'.{1} (has_lt.{0} (normed_field.{0} (mul_one_class.{0} (mul_one_class.{0} (mul_one_class.{0} linarith.comp_source))))) h0)  := sorry --non-trivial
lemma new_lemma_153035 (h0 : functor.add_const (monoid (add_comm_monoid linarith.comp)) (has_to_string pos)) : @monoid.fg.{0} (add_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (monoid.{0} (add_comm_monoid.{0} linarith.comp)) (has_to_string.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_153036 (h0 : functor.add_const (complete_lattice (ordered_comm_monoid name)) linarith.comp) : @is_compactly_generated.{0} (ordered_comm_monoid.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (ordered_comm_monoid.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153037 (h0 : ring (boolean_algebra.core name)) : is_principal_ideal_ring (boolean_algebra.core name) := sorry --non-trivial
lemma new_lemma_153038 (h1 : not (monoid (measurable_space linarith.comp) -> false)) : @monoid.fg.{0} (measurable_space.{0} linarith.comp) (@classical.by_contradiction'.{1} (monoid.{0} (measurable_space.{0} linarith.comp)) h1)  := sorry --non-trivial
lemma new_lemma_153039 (h0 : uniform_space (measurable_space (has_norm num))) : complete_space (measurable_space (has_norm num)) := sorry --non-trivial
lemma new_lemma_153040 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : finset.nonempty (function.extfun_app (function.extfun_app h0 finset) (ordered_comm_monoid pos)) := sorry --non-trivial
lemma new_lemma_153041 (h0 : topological_space (semigroup (option unsigned))) : discrete_topology (semigroup (option unsigned)) := sorry --non-trivial
lemma new_lemma_153042 (h0 : functor.add_const (group (has_neg pos)) Type) : @group.fg.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 1} (group.{0} (has_neg.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_153043 (h0 : topological_space (normed_group (linear_ordered_semiring empty))) : irreducible_space (normed_group (linear_ordered_semiring empty)) := sorry --non-trivial
lemma new_lemma_153044 (h0 : fin has_zero.zero) : @preirreducible_space.{0} (has_add.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (has_add.{0} linarith.comp)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_153045 (h0 : functor.add_const (function.extfun Type ring) Type) : @strong_rank_condition.{0} (boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type ring.{0}) Type h0) (boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_153046 (h0 : topological_space (boolean_algebra (finset (finset linarith.comp)))) : normal_space (boolean_algebra (finset (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_153047 (h0 : uniform_space (add_cancel_comm_monoid (add_comm_monoid pos))) : separated_space (add_cancel_comm_monoid (add_comm_monoid pos)) := sorry --non-trivial
lemma new_lemma_153048 (h0 : functor.add_const (function.extfun Type group) pos) : @is_simple_group.{0} (semigroup.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) pos h0) (semigroup.{0} pos))  := sorry --non-trivial
lemma new_lemma_153049 (h0 : ring (preorder empty)) : is_domain (preorder empty) := sorry --non-trivial
lemma new_lemma_153050 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @has_exists_mul_of_le.{0} (boolean_algebra.core.{0} linarith.comp) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_comm_monoid.{0}) (boolean_algebra.core.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153051 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (normed_linear_ordered_group.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (normed_linear_ordered_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_153052 (h0 : functor.add_const (function.extfun Type topological_space) (ring Type)) : @irreducible_space.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) (ring.{1} Type) h0) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153053 (h0 : topological_space (has_pos_part (has_neg (has_neg (has_neg pos))))) : totally_separated_space (has_pos_part (has_neg (has_neg (has_neg pos)))) := sorry --non-trivial
lemma new_lemma_153054 (h0 : not (filter (fintype (has_nnnorm linarith.ineq)) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_153055 (h0 : group (boolean_algebra.core (has_nndist (finset pos)))) : normalizer_condition (boolean_algebra.core (has_nndist (finset pos))) := sorry --non-trivial
lemma new_lemma_153056 (h0 : uniform_space (has_to_string (metric_space linarith.comp))) : separated_space (has_to_string (metric_space linarith.comp)) := sorry --non-trivial
lemma new_lemma_153057 (h0 : ring (has_add num)) : rank_condition (has_add num) := sorry --non-trivial
lemma new_lemma_153058 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (canonically_ordered_comm_semiring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_comm_semiring.{0} pos))  := sorry --non-trivial
lemma new_lemma_153059 (h0 : uniform_space (distrib string.iterator_imp)) : complete_space (distrib string.iterator_imp) := sorry --non-trivial
lemma new_lemma_153060 (h2 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_emptyc.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h2 (has_emptyc.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153061 (h0 : topological_space (normed_lattice_add_comm_group Type)) : locally_compact_space (normed_lattice_add_comm_group Type) := sorry --non-trivial
lemma new_lemma_153062 (h0 : not (ring (uniform_space char) -> false)) : @is_domain.{0} (uniform_space.{0} char) (@classical.by_contradiction'.{1} (ring.{0} (uniform_space.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_153063 (h6 : topological_space (add_comm_semigroup std_gen)) : path_connected_space (add_comm_semigroup std_gen) := sorry --non-trivial
lemma new_lemma_153064 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring pos)) pos) : @topological_space.separable_space.{0} (canonically_ordered_comm_semiring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_comm_semiring.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_153065 (h0 : list (ring congr_arg_kind)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153066 (h0 : topological_space (normed_comm_ring (comm_group Type))) : t1_space (normed_comm_ring (comm_group Type)) := sorry --non-trivial
lemma new_lemma_153067 (h0 : functor.add_const (add_group (has_to_string environment.implicit_infer_kind)) unsigned) : @is_add_cyclic.{0} (has_to_string.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (add_group.{0} (has_to_string.{0} environment.implicit_infer_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153068 (h0 : functor.add_const (function.extfun (Type 1) group) pos) : @group.fg.{1} Type (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) pos h0) Type)  := sorry --non-trivial
lemma new_lemma_153069 (h0 : add_group (linear_ordered_semiring to_additive.value_type)) : is_add_cyclic (linear_ordered_semiring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_153070 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (canonically_linear_ordered_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (canonically_linear_ordered_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_153071 (h0 : add_group (has_top (has_norm (has_ssubset (has_top fun_info))))) : is_add_cyclic (has_top (has_norm (has_ssubset (has_top fun_info)))) := sorry --non-trivial
lemma new_lemma_153072 (h0 : has_mem.mem empty has_emptyc.emptyc) : @strong_rank_condition.{0} empty (@finset.pi.empty.{1 0} Type ring.{0} empty h0)  := sorry --non-trivial
lemma new_lemma_153073 (h0 : ring (plift empty)) : strong_rank_condition (plift empty) := sorry --non-trivial
lemma new_lemma_153074 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (semigroup.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_153075 (h0 : topological_space (normed_comm_ring (has_add linarith.comp))) : sequential_space (normed_comm_ring (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_153076 (h0 : topological_space (finset (finset linarith.comp))) : path_connected_space (finset (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_153077 (h0 : uniform_space (has_dist unsigned)) : separated_space (has_dist unsigned) := sorry --non-trivial
lemma new_lemma_153078 (h0 : functor.add_const (topological_space name) unsigned) : @totally_separated_space.{0} name (@functor.add_const.run.{0 0} (topological_space.{0} name) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153079 (h0 : uniform_space (bin_tree (add_right_cancel_monoid empty))) : complete_space (bin_tree (add_right_cancel_monoid empty)) := sorry --non-trivial
lemma new_lemma_153080 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (ordered_ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153081 (h0 : functor.add_const (function.extfun Type topological_space) Type) : @locally_compact_space.{0} (has_to_string.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) Type h0) (has_to_string.{0} pos))  := sorry --non-trivial
lemma new_lemma_153082 (h0 : topological_space (add_cancel_monoid (finset linarith.comp))) : irreducible_space (add_cancel_monoid (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_153083 (h0 : functor.add_const (topological_space (generalized_boolean_algebra linarith.comp)) name) : @totally_separated_space.{0} (generalized_boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (generalized_boolean_algebra.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_153084 (h0 : functor.add_const (group (left_cancel_monoid empty)) num) : @normalizer_condition.{0} (left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (group.{0} (left_cancel_monoid.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_153085 (h0 : ring (has_compl (has_inv to_additive.value_type))) : is_domain (has_compl (has_inv to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_153086 (h0 : function.extfun Type topological_space) : @normal_space.{0} (canonically_ordered_comm_semiring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_comm_semiring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153087 (h0 : not (function.extfun Type complete_lattice -> false)) : complete_lattice.is_Sup_finite_compact (topological_space fun_info) := sorry --non-trivial
lemma new_lemma_153088 (h0 : topological_space (denumerable (has_nnnorm fun_info))) : irreducible_space (denumerable (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_153089 (h0 : empty) : @is_compactly_generated.{0} (has_ssubset.{0} string.iterator_imp) (@empty.elim.{1} (complete_lattice.{0} (has_ssubset.{0} string.iterator_imp)) h0)  := sorry --non-trivial
lemma new_lemma_153090 (h0 : not (function.extfun Type topological_space -> false)) : @totally_separated_space.{0} (has_norm.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_norm.{0} num))  := sorry --non-trivial
lemma new_lemma_153091 (h0 : topological_space (has_top linarith.comp_source)) : path_connected_space (has_top linarith.comp_source) := sorry --non-trivial
lemma new_lemma_153092 (h1 : uniform_space (add_comm_semigroup linarith.ineq)) : separated_space (add_comm_semigroup linarith.ineq) := sorry --non-trivial
lemma new_lemma_153093 (h0 : group ennreal) : is_simple_group ennreal := sorry --non-trivial
lemma new_lemma_153094 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (monoid.{0} ennreal) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_153095 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (has_star.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_star.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153096 (h0 : semiring (boolean_algebra.core empty)) : is_noetherian_ring (boolean_algebra.core empty) := sorry --non-trivial
lemma new_lemma_153097 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (add_group.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153098 (h0 : ring (has_zero (option (option (option pos))))) : strong_rank_condition (has_zero (option (option (option pos)))) := sorry --non-trivial
lemma new_lemma_153099 (h0 : fin has_zero.zero) : @is_domain.{0} (sub_neg_monoid.{0} name) (@matrix.vec_empty.{0} (ring.{0} (sub_neg_monoid.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_153100 (h0 : functor.add_const (topological_space (has_neg Type)) unsigned) : @totally_separated_space.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_neg.{1} Type)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153101 (h0 : topological_space (add_group unsigned)) : path_connected_space (add_group unsigned) := sorry --non-trivial
lemma new_lemma_153102 (h1 : topological_space char) : path_connected_space char := sorry --non-trivial
lemma new_lemma_153103 (h0 : topological_space (has_bot (ordered_comm_group congr_arg_kind))) : preirreducible_space (has_bot (ordered_comm_group congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_153104 (h0 : group (generalized_boolean_algebra (has_add pos))) : group.fg (generalized_boolean_algebra (has_add pos)) := sorry --non-trivial
lemma new_lemma_153105 (h0 : ring (dlist fun_info)) : rank_condition (dlist fun_info) := sorry --non-trivial
lemma new_lemma_153106 (h0 : list (normed_group real.angle)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153107 (h0 : group (has_one (semiring (has_top unsigned)))) : is_cyclic (has_one (semiring (has_top unsigned))) := sorry --non-trivial
lemma new_lemma_153108 (h0 : functor.add_const (topological_space (normed_lattice_add_comm_group pos)) Type) : @discrete_topology.{0} (normed_lattice_add_comm_group.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (normed_lattice_add_comm_group.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_153109 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (left_cancel_semigroup.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (left_cancel_semigroup.{0} num))  := sorry --non-trivial
lemma new_lemma_153110 (h0 : functor.add_const (list (simple_graph linarith.comp)) Type) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153111 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (ordered_comm_ring.{0} unsigned) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (ordered_comm_ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153112 (h0 : topological_space (with_one (distrib fun_info))) : totally_disconnected_space (with_one (distrib fun_info)) := sorry --non-trivial
lemma new_lemma_153113 (h0 : filter (has_union (semiring linarith.comp))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_153114 (h0 : topological_space (add_cancel_comm_monoid congr_arg_kind)) : path_connected_space (add_cancel_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153115 (h0 : not (has_mem.mem to_additive.value_type has_emptyc.emptyc -> false)) : @is_atomistic.{0} to_additive.value_type (@finset.pi.empty.{1 0} Type complete_lattice.{0} to_additive.value_type (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) to_additive.value_type (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_153116 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @path_connected_space.{0} (linear_ordered_semiring.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (linear_ordered_semiring.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_153117 (h0 : ring to_additive.value_type) (h1 : function.extfun (Type -> Type) (function.extfun Type)) (h2 : topological_space (units to_additive.value_type)) : @topological_ring.induced_units.{0} to_additive.value_type h0 (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 topological_space.{0}) to_additive.value_type) h2  := sorry --non-trivial
lemma new_lemma_153118 (h0 : has_mem.mem (with_one fun_info) has_emptyc.emptyc) : @is_compactly_generated.{0} (with_one.{0} fun_info) (@finset.pi.empty.{1 0} Type complete_lattice.{0} (with_one.{0} fun_info) h0)  := sorry --non-trivial
lemma new_lemma_153119 (h0 : uniform_space (linear_ordered_comm_group_with_zero reducibility_hints)) : complete_space (linear_ordered_comm_group_with_zero reducibility_hints) := sorry --non-trivial
lemma new_lemma_153120 (h0 : topological_space (has_neg_part (has_add pos))) : irreducible_space (has_neg_part (has_add pos)) := sorry --non-trivial
lemma new_lemma_153121 (h0 : ring (cancel_monoid (add_comm_monoid (finset unsigned)))) : rank_condition (cancel_monoid (add_comm_monoid (finset unsigned))) := sorry --non-trivial
lemma new_lemma_153122 (h0 : topological_space (normed_group empty)) : totally_disconnected_space (normed_group empty) := sorry --non-trivial
lemma new_lemma_153123 (h3 : complete_lattice (simple_graph linarith.comp_source)) : is_compactly_generated (simple_graph linarith.comp_source) := sorry --non-trivial
lemma new_lemma_153124 (h0 : monoid (semiring (has_top num))) : monoid.fg (semiring (has_top num)) := sorry --non-trivial
lemma new_lemma_153125 (h0 : not (group (has_norm linarith.comp_source) -> false)) : @is_cyclic.{0} (has_norm.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (group.{0} (has_norm.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_153126 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (ordered_cancel_add_comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type add_group.{0} h0 (ordered_cancel_add_comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_153127 (h0 : functor.add_const (function.extfun Type ordered_comm_monoid) pos) : @has_exists_mul_of_le.{0} (has_neg.{0} linarith.comp) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) pos h0) (has_neg.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153128 (h0 : ring (generalized_boolean_algebra pos)) : rank_condition (generalized_boolean_algebra pos) := sorry --non-trivial
lemma new_lemma_153129 (h0 : list (cancel_monoid (has_add name))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_153130 (h0 : group (canonically_linear_ordered_monoid (option ennreal))) : is_cyclic (canonically_linear_ordered_monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_153131 (h0 : function.extfun Type topological_space) : @t1_space.{0} (linear_ordered_field.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_field.{0} pos))  := sorry --non-trivial
lemma new_lemma_153132 (h0 : topological_space (has_pos_part (ring (has_pos_part linarith.comp)))) : totally_separated_space (has_pos_part (ring (has_pos_part linarith.comp))) := sorry --non-trivial
lemma new_lemma_153133 (h1 : complete_lattice (add_left_cancel_monoid linarith.ineq)) : complete_lattice.is_Sup_finite_compact (add_left_cancel_monoid linarith.ineq) := sorry --non-trivial
lemma new_lemma_153134 (h0 : complete_lattice (has_compl (mul_one_class (mul_one_class string.iterator_imp)))) : is_atomistic (has_compl (mul_one_class (mul_one_class string.iterator_imp))) := sorry --non-trivial
lemma new_lemma_153135 (h0 : uniform_space (has_star (option unsigned))) : complete_space (has_star (option unsigned)) := sorry --non-trivial
lemma new_lemma_153136 (h0 : group (id linarith.comp)) : is_cyclic (id linarith.comp) := sorry --non-trivial
lemma new_lemma_153137 (h0 : topological_space (has_norm empty)) : t0_space (has_norm empty) := sorry --non-trivial
lemma new_lemma_153138 (h0 : topological_space (sub_neg_monoid (has_Inf (has_Inf (has_add name))))) : normal_space (sub_neg_monoid (has_Inf (has_Inf (has_add name)))) := sorry --non-trivial
lemma new_lemma_153139 (h0 : not (uniform_space (complete_semilattice_Sup num) -> false)) : @separated_space.{0} (complete_semilattice_Sup.{0} num) (@classical.by_contradiction'.{1} (uniform_space.{0} (complete_semilattice_Sup.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_153140 (h0 : functor.comp ring ring congr_arg_kind) : @is_domain.{0} (ring.{0} congr_arg_kind) (@functor.comp.run.{0 0 0} ring.{0} ring.{0} congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_153141 (h0 : topological_space (add_cancel_monoid (option empty))) : totally_separated_space (add_cancel_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_153142 (h0 : topological_space (mul_one_class (add_comm_semigroup enat))) : t0_space (mul_one_class (add_comm_semigroup enat)) := sorry --non-trivial
lemma new_lemma_153143 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @add_monoid.fg.{1} (ordered_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_monoid.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 add_monoid.{1}) (ordered_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_153144 (h0 : functor.add_const (list (has_Inf Type)) Type) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153145 (h0 : group (boolean_algebra (has_nndist Type))) : is_simple_group (boolean_algebra (has_nndist Type)) := sorry --non-trivial
lemma new_lemma_153146 (h0 : topological_space (preorder (option empty))) : totally_disconnected_space (preorder (option empty)) := sorry --non-trivial
lemma new_lemma_153147 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (ring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (ring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_153148 (h0 : list (add_comm_monoid (has_to_string (finset linarith.comp)))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_153149 (h0 : not (monoid (has_norm congr_arg_kind) -> false)) : @monoid.fg.{0} (has_norm.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (monoid.{0} (has_norm.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_153150 (h0 : add_group (measurable_space (semiring num))) : is_add_cyclic (measurable_space (semiring num)) := sorry --non-trivial
lemma new_lemma_153151 (h0 : topological_space (add_group (option (option (option (option congr_arg_kind)))))) : discrete_topology (add_group (option (option (option (option congr_arg_kind))))) := sorry --non-trivial
lemma new_lemma_153152 (h0 : ring (linear_ordered_cancel_comm_monoid congr_arg_kind)) : rank_condition (linear_ordered_cancel_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153153 (h0 : not (topological_space (has_append (has_nnnorm linarith.ineq)) -> false)) : @totally_disconnected_space.{0} (has_append.{0} (has_nnnorm.{0} linarith.ineq)) (@classical.by_contradiction'.{1} (topological_space.{0} (has_append.{0} (has_nnnorm.{0} linarith.ineq))) h0)  := sorry --non-trivial
lemma new_lemma_153154 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (normed_comm_ring.{0} (option.{0} (option.{0} (option.{0} empty)))) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_comm_ring.{0} (option.{0} (option.{0} (option.{0} empty)))))  := sorry --non-trivial
lemma new_lemma_153155 (h0 : topological_space (semi_normed_ring reducibility_hints)) (h1 : preorder (semi_normed_ring reducibility_hints)) : order_topology (semi_normed_ring reducibility_hints) := sorry --non-trivial
lemma new_lemma_153156 (h0 : semiring (normed_comm_ring ennreal)) : is_noetherian_ring (normed_comm_ring ennreal) := sorry --non-trivial
lemma new_lemma_153157 (h0 : functor.add_const (uniform_space (has_Inf name)) linarith.comp) : @separated_space.{0} (has_Inf.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_Inf.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153158 (h0 : add_group (has_bot (option (option empty)))) : is_add_cyclic (has_bot (option (option empty))) := sorry --non-trivial
lemma new_lemma_153159 (h0 : functor.add_const (monoid ennreal) num) : monoid.fg ennreal := sorry --non-trivial
lemma new_lemma_153160 (h0 : ring (has_append (random_gen reducibility_hints))) : is_domain (has_append (random_gen reducibility_hints)) := sorry --non-trivial
lemma new_lemma_153161 (h0 : uniform_space (id (semiring unsigned))) : complete_space (id (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_153162 (h0 : topological_space (measurable_space (add_group (add_group unsigned)))) : preirreducible_space (measurable_space (add_group (add_group unsigned))) := sorry --non-trivial
lemma new_lemma_153163 (h0 : filter (has_ssubset (random_gen to_additive.value_type))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_153164 (h0 : function.extfun nat fin) : @complete_lattice.is_Sup_finite_compact.{0} (has_pos_part.{0} real) (@matrix.vec_empty.{0} (complete_lattice.{0} (has_pos_part.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_153165 (h0 : complete_lattice (group_with_zero (option (option ennreal)))) : is_compactly_generated (group_with_zero (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_153166 (h0 : semiring string.iterator_imp) (h2 : ideal string.iterator_imp) : ideal.is_prime h2 := sorry --non-trivial
lemma new_lemma_153167 (h0 : functor.add_const (complete_lattice (partial_order unsigned)) empty) : @is_atomistic.{0} (partial_order.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (partial_order.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_153168 (h0 : functor.add_const (group (add_cancel_monoid pos)) (option unsigned)) : @is_cyclic.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (add_cancel_monoid.{0} pos)) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_153169 (h0 : group (normed_group (has_norm (has_norm num)))) : is_cyclic (normed_group (has_norm (has_norm num))) := sorry --non-trivial
lemma new_lemma_153170 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @is_domain.{1} (plift.{1} num) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 ring.{1}) (plift.{1} num))  := sorry --non-trivial
lemma new_lemma_153171 (h0 : ordered_comm_monoid (has_zero (finset (has_neg (finset linarith.comp))))) : has_exists_mul_of_le (has_zero (finset (has_neg (finset linarith.comp)))) := sorry --non-trivial
lemma new_lemma_153172 (h0 : functor.add_const (uniform_space (has_neg pos)) environment.implicit_infer_kind) : @separated_space.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_neg.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_153173 (h0 : list (comm_ring linarith.ineq)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153174 (h0 : group (normed_group (has_inv fun_info))) : group.fg (normed_group (has_inv fun_info)) := sorry --non-trivial
lemma new_lemma_153175 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (linear_ordered_semiring.{0} empty) (@function.extfun_app.{2 1} Type semiring.{0} h0 (linear_ordered_semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_153176 (h0 : topological_space (with_bot (random_gen congr_arg_kind))) : totally_disconnected_space (with_bot (random_gen congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_153177 (h0 : function.extfun Type topological_space) (h1 : option (function.extfun Type topological_space)) : @irreducible_space.{0} (filter.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@option.lhoare.{1} (function.extfun.{2 1} Type topological_space.{0}) h0 h1) (filter.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153178 (h0 : function.extfun Type group) : @normalizer_condition.{0} linarith.comp_source (@function.extfun_app.{2 1} Type group.{0} h0 linarith.comp_source)  := sorry --non-trivial
lemma new_lemma_153179 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) (h1 : ne (function.extfun_app (function.extfun_app h0 with_bot) (function.extfun Type uniform_space)) has_bot.bot) : @complete_space.{0} (linear_ordered_add_comm_group.{0} num) (@function.extfun_app.{2 1} Type uniform_space.{0} (@with_bot.unbot.{1} (function.extfun.{2 1} Type uniform_space.{0}) (@function.extfun_app.{3 2} (Type 1) with_bot.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 with_bot.{1}) (function.extfun.{2 1} Type uniform_space.{0})) h1) (linear_ordered_add_comm_group.{0} num))  := sorry --non-trivial
lemma new_lemma_153180 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (normed_group.{0} string_imp) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (normed_group.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_153181 (h0 : uniform_space (option (semiring (semiring (ordered_cancel_comm_monoid unsigned))))) : complete_space (option (semiring (semiring (ordered_cancel_comm_monoid unsigned)))) := sorry --non-trivial
lemma new_lemma_153182 (h0 : group (has_neg (group_with_zero ennreal))) : is_simple_group (has_neg (group_with_zero ennreal)) := sorry --non-trivial
lemma new_lemma_153183 (h0 : add_monoid (canonically_ordered_comm_semiring (finset name))) : add_monoid.fg (canonically_ordered_comm_semiring (finset name)) := sorry --non-trivial
lemma new_lemma_153184 (h0 : functor.add_const (topological_space (has_nndist environment.implicit_infer_kind)) Type) : @discrete_topology.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (has_nndist.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_153185 (h0 : topological_space (has_top (random_gen num))) : t0_space (has_top (random_gen num)) := sorry --non-trivial
lemma new_lemma_153186 (h0 : function.extfun Type topological_space) : @t0_space.{0} (with_one.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_one.{0} empty))  := sorry --non-trivial
lemma new_lemma_153187 (h0 : complete_lattice (complete_distrib_lattice (option (option (option (option ennreal)))))) : is_compactly_generated (complete_distrib_lattice (option (option (option (option ennreal))))) := sorry --non-trivial
lemma new_lemma_153188 (h0 : functor.add_const (functor.add_const (topological_space (has_bot empty)) empty) empty) : @preirreducible_space.{0} (has_bot.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_bot.{0} empty)) empty (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (topological_space.{0} (has_bot.{0} empty)) empty) empty h0))  := sorry --non-trivial
lemma new_lemma_153189 (h0 : ring Type) : strong_rank_condition Type := sorry --non-trivial
lemma new_lemma_153190 (h0 : topological_space (normed_lattice_add_comm_group (has_Inf Type))) : loc_path_connected_space (normed_lattice_add_comm_group (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_153191 (h0 : functor.add_const (functor.const Prop unsigned) (option unsigned)) : functor.const.run (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153192 (h0 : group (metric_space reducibility_hints)) : is_cyclic (metric_space reducibility_hints) := sorry --non-trivial
lemma new_lemma_153193 (h0 : topological_space (sub_neg_monoid (has_Inf (has_Inf (has_Inf pos))))) : t0_space (sub_neg_monoid (has_Inf (has_Inf (has_Inf pos)))) := sorry --non-trivial
lemma new_lemma_153194 (h0 : prod (canonically_ordered_add_monoid congr_arg_kind) (canonically_ordered_add_monoid congr_arg_kind)) : set.diagonal (canonically_ordered_add_monoid congr_arg_kind) h0 := sorry --non-trivial
lemma new_lemma_153195 (h0 : add_group (has_top (semiring empty))) : is_add_cyclic (has_top (semiring empty)) := sorry --non-trivial
lemma new_lemma_153196 (h2 : not (topological_space (topological_space char) -> false)) : @path_connected_space.{0} (topological_space.{0} char) (@classical.by_contradiction'.{1} (topological_space.{0} (topological_space.{0} char)) h2)  := sorry --non-trivial
lemma new_lemma_153197 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (has_Inf.{0} real) (@function.extfun_app.{2 1} Type monoid.{0} h0 (has_Inf.{0} real))  := sorry --non-trivial
lemma new_lemma_153198 (h0 : add_group (has_pos_part (has_add pos))) : is_add_cyclic (has_pos_part (has_add pos)) := sorry --non-trivial
lemma new_lemma_153199 (h0 : topological_space (add_comm_monoid (has_add Type))) : preirreducible_space (add_comm_monoid (has_add Type)) := sorry --non-trivial
lemma new_lemma_153200 (h0 : add_group (canonically_linear_ordered_monoid (has_to_string congr_arg_kind))) : is_add_cyclic (canonically_linear_ordered_monoid (has_to_string congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_153201 (h0 : functor.add_const (function.extfun Type add_monoid) Type) : @add_monoid.fg.{0} (has_nndist.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_monoid.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type add_monoid.{0}) Type h0) (has_nndist.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153202 (h0 : filter (boolean_algebra.core (finset pos))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_153203 (h0 : functor.add_const (topological_space (linear_ordered_cancel_comm_monoid empty)) empty) : @normal_space.{0} (linear_ordered_cancel_comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (linear_ordered_cancel_comm_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_153204 (h0 : not (cancel_comm_monoid_with_zero (with_bot congr_arg_kind) -> false)) : @unique_factorization_monoid.{0} (with_bot.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (cancel_comm_monoid_with_zero.{0} (with_bot.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_153205 (h0 : topological_space (ordered_comm_monoid pos)) : preirreducible_space (ordered_comm_monoid pos) := sorry --non-trivial
lemma new_lemma_153206 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (ordered_cancel_add_comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (ordered_cancel_add_comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153207 (h0 : functor.add_const (topological_space (mul_zero_class pos)) linarith.comp) : @irreducible_space.{0} (mul_zero_class.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (mul_zero_class.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153208 (h0 : topological_space (ordered_comm_ring (has_Inf (has_Inf Type)))) : totally_disconnected_space (ordered_comm_ring (has_Inf (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_153209 (h0 : functor.add_const (ordered_comm_monoid (canonically_ordered_comm_semiring Type)) (has_add Type)) : @has_exists_mul_of_le.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 1} (ordered_comm_monoid.{1} (canonically_ordered_comm_semiring.{1} Type)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_153210 (h0 : topological_space (comm_semigroup real)) : path_connected_space (comm_semigroup real) := sorry --non-trivial
lemma new_lemma_153211 (h0 : topological_space (group_with_zero (option (option (option ennreal))))) : locally_compact_space (group_with_zero (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_153212 (h0 : topological_space (add_cancel_monoid pos)) : topological_space.separable_space (add_cancel_monoid pos) := sorry --non-trivial
lemma new_lemma_153213 (h0 : functor.add_const (topological_space (has_Sup congr_arg_kind)) (semiring empty)) : @totally_disconnected_space.{0} (has_Sup.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Sup.{0} congr_arg_kind)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_153214 (h0 : not (add_monoid (partial_order unsigned) -> false)) : @add_monoid.fg.{0} (partial_order.{0} unsigned) (@classical.by_contradiction'.{1} (add_monoid.{0} (partial_order.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_153215 (h0 : add_group (ring (ring environment.implicit_infer_kind))) : is_add_cyclic (ring (ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_153216 (h0 : functor.add_const (function.extfun Type ordered_comm_monoid) Type) : @has_exists_mul_of_le.{0} (normed_comm_ring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) Type h0) (normed_comm_ring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_153217 (h0 : topological_space (finset (has_neg linarith.comp))) : discrete_topology (finset (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_153218 (h0 : functor.add_const (ordered_add_comm_monoid (plift num)) empty) : @archimedean.{1} (plift.{1} num) (@functor.add_const.run.{1 0} (ordered_add_comm_monoid.{1} (plift.{1} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_153219 (h0 : functor.add_const (function.extfun Type filter) name) : countable_Inter_filter (function.extfun_app (functor.add_const.run h0) (ring name)) := sorry --non-trivial
lemma new_lemma_153220 (h0 : functor.comp complete_lattice cancel_monoid environment.implicit_infer_kind) : @is_compactly_generated.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} complete_lattice.{0} cancel_monoid.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_153221 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (complete_distrib_lattice.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (complete_distrib_lattice.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_153222 (h0 : not (topological_space (linear_ordered_comm_group_with_zero enat) -> false)) : @totally_disconnected_space.{0} (linear_ordered_comm_group_with_zero.{0} enat) (@classical.by_contradiction'.{1} (topological_space.{0} (linear_ordered_comm_group_with_zero.{0} enat)) h0)  := sorry --non-trivial
lemma new_lemma_153223 (h0 : functor.add_const (ring (has_Inf linarith.comp)) (has_neg pos)) : @is_domain.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (has_Inf.{0} linarith.comp)) (has_neg.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_153224 (h0 : filter (linear_ordered_add_comm_group (has_norm (has_norm (random_gen (has_norm to_additive.value_type)))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_153225 (h0 : uniform_space (normed_group (random_gen (random_gen fun_info)))) : complete_space (normed_group (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_153226 (h0 : filter (comm_ring (has_nnnorm (has_nnnorm (has_nnnorm fun_info))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_153227 (h0 : filter (add_cancel_monoid (has_add pos))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_153228 (h0 : filter (has_to_string (option unsigned))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_153229 (h0 : topological_space (id unsigned)) : path_connected_space (id unsigned) := sorry --non-trivial
lemma new_lemma_153230 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (finset.{0} (option.{0} unsigned)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (finset.{0} (option.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_153231 (h0 h1 : multiset (has_lt to_additive.value_type)) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_153232 (h0 : functor.add_const (topological_space (add_semigroup empty)) congr_arg_kind) : @totally_separated_space.{0} (add_semigroup.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (add_semigroup.{0} empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_153233 (h0 : functor.add_const (topological_space (comm_semigroup num)) num) : @locally_compact_space.{0} (comm_semigroup.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_semigroup.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_153234 (h0 : topological_space (comm_group unsigned)) : t0_space (comm_group unsigned) := sorry --non-trivial
lemma new_lemma_153235 (h0 : group (semiring (semiring (has_emptyc num)))) : group.fg (semiring (semiring (has_emptyc num))) := sorry --non-trivial
lemma new_lemma_153236 (h0 : cancel_comm_monoid_with_zero (with_bot congr_arg_kind)) : unique_factorization_monoid (with_bot congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153237 (h0 h1 : multiset (has_dist std_gen)) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_153238 (h0 : functor.add_const (group (has_zero linarith.comp)) linarith.comp) : @group.fg.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (has_zero.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153239 (h0 : ring (linear_ordered_field (option ennreal)) -> ring (linear_ordered_field (option ennreal)) -> Prop) : is_symm (ring (linear_ordered_field (option ennreal))) h0 := sorry --non-trivial
lemma new_lemma_153240 (h0 : monoid (canonically_linear_ordered_monoid (option ennreal))) : monoid.fg (canonically_linear_ordered_monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_153241 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (has_star.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_star.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153242 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (has_Sup.{0} (semiring.{0} congr_arg_kind)) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_Sup.{0} (semiring.{0} congr_arg_kind)))  := sorry --non-trivial
lemma new_lemma_153243 (h0 : functor.add_const (topological_space (has_to_string pos)) environment.implicit_infer_kind) : @t0_space.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_153244 (h0 : functor.add_const (uniform_space (non_assoc_semiring empty)) empty) : @separated_space.{0} (non_assoc_semiring.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (non_assoc_semiring.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_153245 (h0 : monoid (linear_ordered_add_comm_group (random_gen to_additive.value_type))) : monoid.fg (linear_ordered_add_comm_group (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_153246 (h0 : ordered_comm_monoid (has_to_string (finset linarith.comp))) : has_exists_mul_of_le (has_to_string (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_153247 (h0 : complete_lattice (complete_distrib_lattice num)) : is_atomistic (complete_distrib_lattice num) := sorry --non-trivial
lemma new_lemma_153248 (h0 : topological_space (add_comm_monoid congr_arg_kind)) : preconnected_space (add_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153249 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_153250 (h0 : ordered_comm_monoid (has_add (boolean_algebra linarith.comp))) : has_exists_mul_of_le (has_add (boolean_algebra linarith.comp)) := sorry --non-trivial
lemma new_lemma_153251 (h0 : topological_space (omega_complete_partial_order empty)) : totally_disconnected_space (omega_complete_partial_order empty) := sorry --non-trivial
lemma new_lemma_153252 (h0 : ring name -> ring name -> Prop) : is_antisymm (ring name) h0 := sorry --non-trivial
lemma new_lemma_153253 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (option.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (option.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153254 (h0 : functor.add_const (finset (finset pos)) name) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153255 (h0 : functor.add_const (topological_space (comm_group Type)) (add_cancel_monoid pos)) : @loc_path_connected_space.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (comm_group.{1} Type)) (add_cancel_monoid.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_153256 (h0 : not (complete_lattice (with_one linarith.comp_source) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (with_one.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (complete_lattice.{0} (with_one.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_153257 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (has_zero.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (has_zero.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153258 (h0 : filter (has_one fun_info)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_153259 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (canonically_linear_ordered_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_linear_ordered_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_153260 (h0 : has_le (simple_graph enat)) (h1 : bounded_order (simple_graph enat)) : is_simple_order (simple_graph enat) := sorry --non-trivial
lemma new_lemma_153261 (h0 : monoid (partial_order (semiring (semiring (has_norm num))))) : monoid.fg (partial_order (semiring (semiring (has_norm num)))) := sorry --non-trivial
lemma new_lemma_153262 (h1 : ring (add_monoid char)) : strong_rank_condition (add_monoid char) := sorry --non-trivial
lemma new_lemma_153263 (h0 : uniform_space (ordered_comm_ring (has_add (finset linarith.comp)))) : complete_space (ordered_comm_ring (has_add (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_153264 (h0 : not (uniform_space (with_one linarith.comp) -> false)) : @complete_space.{0} (with_one.{0} linarith.comp) (@classical.by_contradiction'.{1} (uniform_space.{0} (with_one.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_153265 (h0 : functor.add_const (topological_space (canonically_ordered_monoid real)) linarith.comp) : @topological_space.separable_space.{0} (canonically_ordered_monoid.{0} real) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_monoid.{0} real)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153266 (h0 : functor.comp topological_space boolean_algebra.core (finset pos)) : @discrete_topology.{0} (boolean_algebra.core.{0} (finset.{0} pos)) (@functor.comp.run.{0 0 0} topological_space.{0} boolean_algebra.core.{0} (finset.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_153267 (h0 : add_group (distrib (normed_field (has_nnnorm linarith.ineq)))) : is_add_cyclic (distrib (normed_field (has_nnnorm linarith.ineq))) := sorry --non-trivial
lemma new_lemma_153268 (h0 : cancel_comm_monoid_with_zero (ordered_comm_ring (has_add real))) : unique_factorization_monoid (ordered_comm_ring (has_add real)) := sorry --non-trivial
lemma new_lemma_153269 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @is_cyclic.{1} (has_pos_part.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 group.{1}) (has_pos_part.{1} Type))  := sorry --non-trivial
lemma new_lemma_153270 (h0 : function.extfun Type topological_space) : @normal_space.{0} (boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_153271 (h0 : topological_space (add_comm_monoid num)) : sequential_space (add_comm_monoid num) := sorry --non-trivial
lemma new_lemma_153272 (h0 : function.extfun Type ring) : @rank_condition.{0} (monoid_with_zero.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} h0 (monoid_with_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_153273 (h2 : ring (comm_ring (denumerable reducibility_hints))) : strong_rank_condition (comm_ring (denumerable reducibility_hints)) := sorry --non-trivial
lemma new_lemma_153274 (h0 : functor.add_const (uniform_space (semigroup empty)) unsigned) : @complete_space.{0} (semigroup.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (semigroup.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153275 (h0 : topological_space (has_Sup (option empty))) : preirreducible_space (has_Sup (option empty)) := sorry --non-trivial
lemma new_lemma_153276 (h0 : function.extfun Type topological_space) : @normal_space.{0} (left_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (left_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_153277 (h0 : fin has_zero.zero) : @add_monoid.fg.{0} (has_nndist.{0} pos) (@matrix.vec_empty.{0} (add_monoid.{0} (has_nndist.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_153278 (h0 : function.extfun Type topological_space) : @t0_space.{0} (has_pos_part.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_pos_part.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153279 (h1 : topological_space (has_emptyc (random_gen to_additive.value_type))) : totally_separated_space (has_emptyc (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_153280 (h0 : uniform_space (plift (option unsigned))) : complete_space (plift (option unsigned)) := sorry --non-trivial
lemma new_lemma_153281 (h0 : topological_space (has_zero (comm_group unsigned))) : regular_space (has_zero (comm_group unsigned)) := sorry --non-trivial
lemma new_lemma_153282 (h0 : has_lt (has_ssubset string_imp)) : no_max_order (has_ssubset string_imp) := sorry --non-trivial
lemma new_lemma_153283 (h0 : has_le (normed_linear_ordered_group linarith.comp_source)) (h1 : bounded_order (normed_linear_ordered_group linarith.comp_source)) : is_simple_order (normed_linear_ordered_group linarith.comp_source) := sorry --non-trivial
lemma new_lemma_153284 (h0 : topological_space (boolean_algebra.core (comm_group name))) : t0_space (boolean_algebra.core (comm_group name)) := sorry --non-trivial
lemma new_lemma_153285 (h0 : functor.add_const (topological_space (complete_distrib_lattice name)) linarith.comp) : @preconnected_space.{0} (complete_distrib_lattice.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153286 (h0 : topological_space (has_zero (boolean_algebra (has_add (boolean_algebra pos))))) : irreducible_space (has_zero (boolean_algebra (has_add (boolean_algebra pos)))) := sorry --non-trivial
lemma new_lemma_153287 (h0 : topological_space (finset (normed_comm_ring Type))) : irreducible_space (finset (normed_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_153288 (h0 : function.extfun Type ordered_comm_monoid) : @has_exists_mul_of_le.{0} (has_zero.{0} unsigned) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} h0 (has_zero.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153289 (h0 : uniform_space (uniform_space (random_gen reducibility_hints))) : complete_space (uniform_space (random_gen reducibility_hints)) := sorry --non-trivial
lemma new_lemma_153290 (h0 : add_monoid (ordered_comm_monoid (has_neg name))) : add_monoid.fg (ordered_comm_monoid (has_neg name)) := sorry --non-trivial
lemma new_lemma_153291 (h0 : complete_lattice (distrib_lattice (has_norm (random_gen to_additive.value_type)))) : is_compactly_generated (distrib_lattice (has_norm (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_153292 (h0 : functor.add_const (uniform_space (has_add name)) linarith.comp) : @complete_space.{0} (has_add.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_add.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153293 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (has_dist unsigned)) := sorry --non-trivial
lemma new_lemma_153294 (h0 : complete_lattice (has_nndist (add_comm_monoid environment.implicit_infer_kind))) : is_atomistic (has_nndist (add_comm_monoid environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_153295 (h0 : functor.add_const (uniform_space (free_add_monoid unsigned)) unsigned) : @separated_space.{0} (free_add_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (uniform_space.{0} (free_add_monoid.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153296 (h0 : functor.add_const (topological_space (normed_linear_ordered_group unsigned)) empty) : @t1_space.{0} (normed_linear_ordered_group.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_linear_ordered_group.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_153297 (h0 : fin has_zero.zero) : @has_exists_mul_of_le.{0} (complete_distrib_lattice.{0} pos) (@matrix.vec_empty.{0} (ordered_comm_monoid.{0} (complete_distrib_lattice.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_153298 (h0 : functor.add_const (ring (complete_distrib_lattice pos)) environment.implicit_infer_kind) : @is_principal_ideal_ring.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (complete_distrib_lattice.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_153299 (h0 : complete_lattice (normed_field (comm_ring reducibility_hints))) : is_compactly_generated (normed_field (comm_ring reducibility_hints)) := sorry --non-trivial
lemma new_lemma_153300 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (ordered_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153301 (h0 : functor.add_const (list (has_nndist name)) unsigned) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153302 (h0 : ring (cancel_monoid (option unsigned))) : strong_rank_condition (cancel_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_153303 (h0 : monoid (rel (option (option unsigned)) (option (option unsigned)))) : monoid.fg (rel (option (option unsigned)) (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_153304 (h0 : topological_space (ordered_comm_ring (has_neg linarith.comp))) : loc_path_connected_space (ordered_comm_ring (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_153305 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_star.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_star.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153306 (h0 : functor.add_const (topological_space (has_nndist pos)) environment.implicit_infer_kind) : @regular_space.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_153307 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} nnreal (@functor.add_const.run.{0 0} (complete_lattice.{0} nnreal) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (complete_lattice.{0} nnreal)) (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 (functor.add_const.{0 0} (complete_lattice.{0} nnreal))) empty))  := sorry --non-trivial
lemma new_lemma_153308 (h0 : functor.add_const (complete_lattice (finset ennreal)) (finset ennreal)) : @is_atomistic.{0} (finset.{0} ennreal) (@functor.add_const.run.{0 0} (complete_lattice.{0} (finset.{0} ennreal)) (finset.{0} ennreal) h0)  := sorry --non-trivial
lemma new_lemma_153309 (h0 : comm_group Type -> comm_group Type -> Prop) : is_antisymm (comm_group Type) h0 := sorry --non-trivial
lemma new_lemma_153310 (h0 : function.extfun Type topological_space) : @normal_space.{0} (normed_group.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153311 (h1 : ring enat) : is_domain enat := sorry --non-trivial
lemma new_lemma_153312 (h0 : functor.add_const (function.extfun Type topological_space) (mul_one_class Type)) : @preconnected_space.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) (mul_one_class.{1} Type) h0) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153313 (h0 : group (boolean_algebra (finset pos))) : group.fg (boolean_algebra (finset pos)) := sorry --non-trivial
lemma new_lemma_153314 (h0 : not (topological_space (linear_ordered_semiring unsigned) -> false)) : @locally_compact_space.{0} (linear_ordered_semiring.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (linear_ordered_semiring.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_153315 (h0 : complete_lattice (has_add (has_add linarith.comp))) : complete_lattice.is_Sup_finite_compact (has_add (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_153316 (h0 : ring (boolean_algebra (has_to_string Type))) : strong_rank_condition (boolean_algebra (has_to_string Type)) := sorry --non-trivial
lemma new_lemma_153317 (h0 : topological_space (comm_group (semigroup unsigned))) : preirreducible_space (comm_group (semigroup unsigned)) := sorry --non-trivial
lemma new_lemma_153318 (h0 : group (with_one (has_nnnorm to_additive.value_type))) : is_cyclic (with_one (has_nnnorm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_153319 (h0 : topological_space (has_zero (has_to_string pos))) : preconnected_space (has_zero (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_153320 (h0 h1 : multiset (simple_graph fun_info)) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_153321 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (non_assoc_semiring empty)) := sorry --non-trivial
lemma new_lemma_153322 (h0 : not (uniform_space (id unsigned) -> false)) : @separated_space.{0} (@id.{2} Type unsigned) (@classical.by_contradiction'.{1} (uniform_space.{0} (@id.{2} Type unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_153323 (h0 : ordered_add_comm_monoid (complete_semilattice_Sup (has_top to_additive.value_type))) : archimedean (complete_semilattice_Sup (has_top to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_153324 (h0 : uniform_space (ring (has_Inf Type))) : separated_space (ring (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_153325 (h0 : complete_lattice (finset (has_add environment.implicit_infer_kind))) : is_compactly_generated (finset (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_153326 (h0 : functor.add_const (topological_space (ordered_comm_monoid pos)) Type) : @regular_space.{0} (ordered_comm_monoid.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (ordered_comm_monoid.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_153327 (h0 : ring (add_group (semiring (semiring (semiring congr_arg_kind))))) : is_domain (add_group (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_153328 (h0 : function.extfun (finset Type) (has_mem.mem (has_top linarith.comp_source))) : @irreducible_space.{0} (has_top.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_top.{0} linarith.comp_source) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_top.{0} linarith.comp_source)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_153329 (h3 : topological_space (has_compl char)) : path_connected_space (has_compl char) := sorry --non-trivial
lemma new_lemma_153330 (h0 : group (random_gen (has_top (has_top to_additive.value_type)))) : is_cyclic (random_gen (has_top (has_top to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_153331 (h0 : not (function.extfun Type uniform_space -> false)) : @complete_space.{0} (mul_zero_class.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (mul_zero_class.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153332 (h0 : normed_comm_ring unsigned -> normed_comm_ring unsigned -> Prop) : total h0 := sorry --non-trivial
lemma new_lemma_153333 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (complete_semilattice_Sup.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (complete_semilattice_Sup.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_153334 (h0 : topological_space (has_le std_gen)) : path_connected_space (has_le std_gen) := sorry --non-trivial
lemma new_lemma_153335 (h0 : function.extfun Type topological_space) : @normal_space.{0} (add_group.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153336 (h0 : group (with_one (random_gen linarith.comp_source))) : normalizer_condition (with_one (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_153337 (h0 : cancel_comm_monoid_with_zero (has_zero (comm_group unsigned))) : unique_factorization_monoid (has_zero (comm_group unsigned)) := sorry --non-trivial
lemma new_lemma_153338 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (with_one.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} h0 (with_one.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_153339 (h0 : functor.add_const (ordered_comm_monoid (add_cancel_monoid pos)) Type) : @has_exists_mul_of_le.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (add_cancel_monoid.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_153340 (h0 : group (canonically_linear_ordered_monoid (option unsigned))) : normalizer_condition (canonically_linear_ordered_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_153341 (h0 : not (ring reducibility_hints -> false)) : @strong_rank_condition.{0} reducibility_hints (@classical.by_contradiction'.{1} (ring.{0} reducibility_hints) h0)  := sorry --non-trivial
lemma new_lemma_153342 (h0 : functor.add_const (ordered_comm_monoid (finset Type)) name) : @has_exists_mul_of_le.{1} (finset.{1} Type) (@functor.add_const.run.{1 0} (ordered_comm_monoid.{1} (finset.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_153343 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @unique_factorization_monoid.{0} (normed_comm_ring.{0} pos) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 cancel_comm_monoid_with_zero.{0}) (normed_comm_ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_153344 (h0 : complete_lattice (random_gen (has_inv (has_inv (has_inv linarith.comp_source))))) : is_compactly_generated (random_gen (has_inv (has_inv (has_inv linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_153345 (h0 : ring (has_nndist (has_nndist (finset name)))) : rank_condition (has_nndist (has_nndist (finset name))) := sorry --non-trivial
lemma new_lemma_153346 (h0 : topological_space (finset (option pos))) : t0_space (finset (option pos)) := sorry --non-trivial
lemma new_lemma_153347 (h0 : functor.add_const (monoid (bin_tree congr_arg_kind)) (option unsigned)) : @monoid.fg.{0} (bin_tree.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (monoid.{0} (bin_tree.{0} congr_arg_kind)) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_153348 (h0 : complete_lattice (canonically_ordered_monoid (has_add (has_add Type)))) : is_atomistic (canonically_ordered_monoid (has_add (has_add Type))) := sorry --non-trivial
lemma new_lemma_153349 (h0 : function.extfun Type group) : @normalizer_condition.{0} (has_neg.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (has_neg.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153350 (h0 : functor.add_const (group (cancel_monoid ennreal)) num) : @is_cyclic.{0} (cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (group.{0} (cancel_monoid.{0} ennreal)) num h0)  := sorry --non-trivial
lemma new_lemma_153351 (h0 : functor.add_const (topological_space (cancel_monoid environment.implicit_infer_kind)) name) : @preirreducible_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_153352 (h0 : ordered_add_comm_monoid (has_bot (has_bot (has_neg pos)))) : archimedean (has_bot (has_bot (has_neg pos))) := sorry --non-trivial
lemma new_lemma_153353 (h2 : not (ring (add_monoid char) -> false)) : @rank_condition.{0} (add_monoid.{0} char) (@classical.by_contradiction'.{1} (ring.{0} (add_monoid.{0} char)) h2)  := sorry --non-trivial
lemma new_lemma_153354 (h0 : topological_space (finset (normed_comm_ring (has_add linarith.comp)))) : normal_space (finset (normed_comm_ring (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_153355 (h0 : functor.comp list boolean_algebra.core environment.implicit_infer_kind) : palindrome (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_153356 (h0 : group (has_neg (has_Inf (has_add (has_pos_part linarith.comp))))) : is_simple_group (has_neg (has_Inf (has_add (has_pos_part linarith.comp)))) := sorry --non-trivial
lemma new_lemma_153357 (h0 : group (linear_ordered_add_comm_group (denumerable linarith.ineq))) : normalizer_condition (linear_ordered_add_comm_group (denumerable linarith.ineq)) := sorry --non-trivial
lemma new_lemma_153358 (h0 : functor.add_const (list (has_to_string unsigned)) unsigned) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153359 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (has_pos_part.{0} name) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_pos_part.{0} name))  := sorry --non-trivial
lemma new_lemma_153360 (h0 : complete_lattice (semiring (has_top linarith.ineq))) : complete_lattice.is_Sup_finite_compact (semiring (has_top linarith.ineq)) := sorry --non-trivial
lemma new_lemma_153361 (h0 : filter (boolean_algebra (has_add Type))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_153362 (h0 : monoid (denumerable (random_gen (has_norm to_additive.value_type)))) : monoid.fg (denumerable (random_gen (has_norm to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_153363 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (complete_semilattice_Sup.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_semilattice_Sup.{0} num))  := sorry --non-trivial
lemma new_lemma_153364 (h0 : add_group (normed_linear_ordered_group (semiring num))) : is_add_cyclic (normed_linear_ordered_group (semiring num)) := sorry --non-trivial
lemma new_lemma_153365 (h0 : functor.add_const (monoid (add_cancel_monoid name)) Type) : @monoid.fg.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 1} (monoid.{0} (add_cancel_monoid.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_153366 (h0 : group (linear_ordered_comm_group unsigned)) : is_cyclic (linear_ordered_comm_group unsigned) := sorry --non-trivial
lemma new_lemma_153367 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_153368 (h0 : function.extfun Type (functor.comp topological_space mul_zero_class)) : @preirreducible_space.{0} (mul_zero_class.{0} (finset.{0} name)) (@functor.comp.run.{0 0 0} topological_space.{0} mul_zero_class.{0} (finset.{0} name) (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} mul_zero_class.{0}) h0 (finset.{0} name)))  := sorry --non-trivial
lemma new_lemma_153369 (h0 : functor.add_const (topological_space (generalized_boolean_algebra linarith.comp)) linarith.comp) : @sequential_space.{0} (generalized_boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (generalized_boolean_algebra.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153370 (h0 : functor.add_const (topological_space (has_neg_part unsigned)) unsigned) : @t0_space.{0} (has_neg_part.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153371 (h0 : function.extfun linarith.comp (fun (x : linarith.comp), Prop)) : zzz_forall (function.extfun_app h0) := sorry --non-trivial
lemma new_lemma_153372 (h0 : list (has_bot pos)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153373 (h1 : add_monoid (semiring linarith.comp)) : add_monoid.fg (semiring linarith.comp) := sorry --non-trivial
lemma new_lemma_153374 (h0 : topological_space (semiring (has_top (has_top (has_top (has_top fun_info)))))) : locally_compact_space (semiring (has_top (has_top (has_top (has_top fun_info))))) := sorry --non-trivial
lemma new_lemma_153375 (h0 : ring (normed_comm_ring (has_to_string ennreal))) : is_principal_ideal_ring (normed_comm_ring (has_to_string ennreal)) := sorry --non-trivial
lemma new_lemma_153376 (h0 : not (uniform_space (id unsigned) -> false)) : @complete_space.{0} (@id.{2} Type unsigned) (@classical.by_contradiction'.{1} (uniform_space.{0} (@id.{2} Type unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_153377 (h0 : functor.add_const (topological_space (add_comm_monoid Type)) (has_to_string (has_neg_part Type))) : @t0_space.{1} (add_comm_monoid.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (add_comm_monoid.{1} Type)) (has_to_string.{1} (has_neg_part.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_153378 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (normed_group.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_group.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_153379 (h0 : multiset (linear_ordered_comm_group_with_zero linarith.ineq)) (h1 : multiset (linear_ordered_comm_group_with_zero linarith.ineq) -> Prop) (h2 : Exists (fun (x : multiset (linear_ordered_comm_group_with_zero linarith.ineq)), h1 x)) : multiset.disjoint h0 (classical.some h2) := sorry --non-trivial
lemma new_lemma_153380 (h0 : complete_lattice (normed_group (semiring unsigned))) : is_atomistic (normed_group (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_153381 (h0 : not (topological_space (distrib string.iterator_imp) -> false)) : @path_connected_space.{0} (distrib.{0} string.iterator_imp) (@classical.by_contradiction'.{1} (topological_space.{0} (distrib.{0} string.iterator_imp)) h0)  := sorry --non-trivial
lemma new_lemma_153382 (h0 : finset (has_Sup (option (option empty)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_153383 (h0 : function.extfun Type (functor.comp complete_lattice has_zero)) : @is_compactly_generated.{0} (has_zero.{0} pos) (@functor.comp.run.{0 0 0} complete_lattice.{0} has_zero.{0} pos (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} complete_lattice.{0} has_zero.{0}) h0 pos))  := sorry --non-trivial
lemma new_lemma_153384 (h0 : ring (has_Inf (finset pos))) : strong_rank_condition (has_Inf (finset pos)) := sorry --non-trivial
lemma new_lemma_153385 (h0 : functor.add_const (topological_space (left_cancel_monoid num)) num) : @totally_separated_space.{0} (left_cancel_monoid.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_monoid.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_153386 (h0 : ordered_add_comm_monoid (simple_graph (has_add linarith.comp))) : archimedean (simple_graph (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_153387 (h0 : group (has_pos_part (has_pos_part (normed_comm_ring (with_bot (has_pos_part name)))))) : is_cyclic (has_pos_part (has_pos_part (normed_comm_ring (with_bot (has_pos_part name))))) := sorry --non-trivial
lemma new_lemma_153388 (h1 : filter (add_monoid linarith.comp_source)) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_153389 (h0 : not (add_monoid (add_right_cancel_monoid unsigned) -> false)) : @add_monoid.fg.{0} (add_right_cancel_monoid.{0} unsigned) (@classical.by_contradiction'.{1} (add_monoid.{0} (add_right_cancel_monoid.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_153390 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t1_space.{0} (add_comm_monoid.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_comm_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_153391 (h0 : ring (uniform_space (mul_one_class (mul_one_class fun_info)))) : rank_condition (uniform_space (mul_one_class (mul_one_class fun_info))) := sorry --non-trivial
lemma new_lemma_153392 (h0 : functor.add_const (topological_space (finset linarith.comp)) linarith.comp) : @totally_disconnected_space.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153393 (h0 : add_monoid (mul_zero_class (semiring (semiring num)))) : add_monoid.fg (mul_zero_class (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_153394 (h0 : uniform_space (has_bot (has_Inf (has_neg Type)))) : separated_space (has_bot (has_Inf (has_neg Type))) := sorry --non-trivial
lemma new_lemma_153395 (h0 : fin has_zero.zero) : @loc_path_connected_space.{1} (generalized_boolean_algebra.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (generalized_boolean_algebra.{1} Type)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)))  := sorry --non-trivial
lemma new_lemma_153396 (h0 : functor.add_const (topological_space (add_comm_monoid name)) unsigned) : @totally_separated_space.{0} (add_comm_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (add_comm_monoid.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153397 (h0 : topological_space (omega_complete_partial_order congr_arg_kind)) : path_connected_space (omega_complete_partial_order congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153398 (h0 : nat) (h1 : fin (nat.succ (id h0)) -> Prop) (h2 : fin (id h0)) : id (matrix.vec_tail h1 h2) := sorry --non-trivial
lemma new_lemma_153399 (h0 : group (comm_ring (has_top linarith.ineq))) : group.fg (comm_ring (has_top linarith.ineq)) := sorry --non-trivial
lemma new_lemma_153400 (h0 : monoid (add_comm_monoid (has_add (has_add (has_nndist (has_add (has_nndist pos))))))) : monoid.fg (add_comm_monoid (has_add (has_add (has_nndist (has_add (has_nndist pos)))))) := sorry --non-trivial
lemma new_lemma_153401 (h0 : topological_space (denumerable (has_nnnorm fun_info))) : totally_disconnected_space (denumerable (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_153402 (h0 : ring (random_gen linarith.ineq)) : is_domain (random_gen linarith.ineq) := sorry --non-trivial
lemma new_lemma_153403 (h0 : list (has_neg (has_to_string pos))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153404 (h1 : semiring (nondiscrete_normed_field ereal)) (h2 : ideal (nondiscrete_normed_field ereal)) : ideal.is_prime h2 := sorry --non-trivial
lemma new_lemma_153405 (h0 : add_monoid (ordered_comm_monoid (has_add (ring (has_Inf (ring (has_to_string Type))))))) : add_monoid.fg (ordered_comm_monoid (has_add (ring (has_Inf (ring (has_to_string Type)))))) := sorry --non-trivial
lemma new_lemma_153406 (h0 : function.extfun Type topological_space) : @regular_space.{0} (normed_comm_ring.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_comm_ring.{0} name))  := sorry --non-trivial
lemma new_lemma_153407 (h0 : add_group (has_inv (random_gen (has_top to_additive.value_type)))) : is_add_cyclic (has_inv (random_gen (has_top to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_153408 (h0 : function.extfun Type (prod (has_sub num))) : id_rel (function.extfun_app h0 (has_sub num)) := sorry --non-trivial
lemma new_lemma_153409 (h1 : topological_space (add_comm_semigroup (add_comm_semigroup linarith.ineq))) : path_connected_space (add_comm_semigroup (add_comm_semigroup linarith.ineq)) := sorry --non-trivial
lemma new_lemma_153410 (h0 : group (has_zero (has_add unsigned))) : is_simple_group (has_zero (has_add unsigned)) := sorry --non-trivial
lemma new_lemma_153411 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @separated_space.{1} (has_neg_part.{1} Type) (@function.extfun_app.{3 2} (Type 1) uniform_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 uniform_space.{1}) (has_neg_part.{1} Type))  := sorry --non-trivial
lemma new_lemma_153412 (h0 : topological_space (add_cancel_monoid unsigned)) : loc_path_connected_space (add_cancel_monoid unsigned) := sorry --non-trivial
lemma new_lemma_153413 (h0 : function.extfun (Type 1) cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{1} (canonically_linear_ordered_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) cancel_comm_monoid_with_zero.{1} h0 (canonically_linear_ordered_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_153414 (h0 : topological_space (linear_ordered_add_comm_group (random_gen char))) : totally_disconnected_space (linear_ordered_add_comm_group (random_gen char)) := sorry --non-trivial
lemma new_lemma_153415 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_bot.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_bot.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153416 (h0 : ring (metric_space (random_gen reducibility_hints))) : is_domain (metric_space (random_gen reducibility_hints)) := sorry --non-trivial
lemma new_lemma_153417 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (preorder.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type monoid.{0} h0 (preorder.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153418 (h0 : filter (random_gen (has_norm linarith.comp))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_153419 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (complete_distrib_lattice.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (complete_distrib_lattice.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_153420 (h0 : functor.add_const (list (cancel_monoid name)) environment.implicit_infer_kind) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153421 (h0 : set (add_comm_semigroup ereal -> string.iterator_imp)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_153422 (h0 : uniform_space (linear_ordered_semiring (has_norm (semiring linarith.comp)))) : separated_space (linear_ordered_semiring (has_norm (semiring linarith.comp))) := sorry --non-trivial
lemma new_lemma_153423 (h0 : functor.add_const (ordered_add_comm_monoid (generalized_boolean_algebra Type)) linarith.comp) : @archimedean.{1} (generalized_boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (ordered_add_comm_monoid.{1} (generalized_boolean_algebra.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153424 (h0 : ordered_add_comm_monoid (comm_group name)) : archimedean (comm_group name) := sorry --non-trivial
lemma new_lemma_153425 (h0 : not (filter (div_inv_monoid linarith.comp_source) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_153426 (h0 : functor.add_const (ordered_add_comm_monoid (free_add_monoid empty)) (semiring empty)) : @archimedean.{0} (free_add_monoid.{0} empty) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (free_add_monoid.{0} empty)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_153427 (h0 : group (ordered_ring empty)) : group.fg (ordered_ring empty) := sorry --non-trivial
lemma new_lemma_153428 (h0 : function.extfun Type group) : @normalizer_condition.{0} (@id.{2} Type congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (@id.{2} Type congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153429 (h0 : functor.add_const (group (finset environment.implicit_infer_kind)) linarith.comp) : @is_simple_group.{0} (finset.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (finset.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153430 (h0 : topological_space (has_zero (has_neg (ring (has_neg environment.implicit_infer_kind))))) : irreducible_space (has_zero (has_neg (ring (has_neg environment.implicit_infer_kind)))) := sorry --non-trivial
lemma new_lemma_153431 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (with_one.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (with_one.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153432 (h0 : add_group (add_comm_monoid (has_pos_part pos))) : is_add_cyclic (add_comm_monoid (has_pos_part pos)) := sorry --non-trivial
lemma new_lemma_153433 (h0 : complete_lattice (linear_ordered_field (has_zero ennreal))) : is_compactly_generated (linear_ordered_field (has_zero ennreal)) := sorry --non-trivial
lemma new_lemma_153434 (h0 : function.extfun Type topological_space) : @t1_space.{0} (has_add.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_add.{0} real))  := sorry --non-trivial
lemma new_lemma_153435 (h0 : group (id (has_top (has_top empty)))) : normalizer_condition (id (has_top (has_top empty))) := sorry --non-trivial
lemma new_lemma_153436 (h0 : function.extfun nat fin) : @irreducible_space.{0} (has_pos_part.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (has_pos_part.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_153437 (h0 : has_mem.mem uniform_space has_emptyc.emptyc) : @complete_space.{0} (with_one.{0} num) (@function.extfun_app.{2 1} Type uniform_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) uniform_space.{0} h0) (with_one.{0} num))  := sorry --non-trivial
lemma new_lemma_153438 (h0 : not (uniform_space (with_bot fun_info) -> false)) : @complete_space.{0} (with_bot.{0} fun_info) (@classical.by_contradiction'.{1} (uniform_space.{0} (with_bot.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_153439 (h1 : function.extfun Type group) : @normalizer_condition.{0} (@id.{2} Type string_imp) (@function.extfun_app.{2 1} Type group.{0} h1 (@id.{2} Type string_imp))  := sorry --non-trivial
lemma new_lemma_153440 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (has_inv.{0} linarith.ineq) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_inv.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_153441 (h0 : not (group (measure_theory.measure_space congr_arg_kind) -> false)) : @is_cyclic.{0} (measure_theory.measure_space.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (group.{0} (measure_theory.measure_space.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_153442 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (has_to_string.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_to_string.{0} num))  := sorry --non-trivial
lemma new_lemma_153443 (h0 : monoid (has_sub unsigned)) : monoid.fg (has_sub unsigned) := sorry --non-trivial
lemma new_lemma_153444 (h0 : list (has_top congr_arg_kind)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153445 (h0 : has_mem.mem (function.extfun Type) has_emptyc.emptyc) : @strong_rank_condition.{0} fun_info (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@finset.pi.empty.{2 1} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) (function.extfun.{2 1} Type) h0) ring.{0}) fun_info)  := sorry --non-trivial
lemma new_lemma_153446 (h1 : group (uniform_space (denumerable (denumerable (has_compl to_additive.value_type))))) : is_cyclic (uniform_space (denumerable (denumerable (has_compl to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_153447 (h0 : set (has_lt (mul_one_class linarith.comp_source))) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_153448 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : palindrome (function.extfun_app (function.extfun_app h0 list) (has_nndist empty)) := sorry --non-trivial
lemma new_lemma_153449 (h0 : uniform_space (has_add (normed_comm_ring (finset name)))) : complete_space (has_add (normed_comm_ring (finset name))) := sorry --non-trivial
lemma new_lemma_153450 (h0 : topological_space (normed_lattice_add_comm_group (ring (has_add Type)))) : regular_space (normed_lattice_add_comm_group (ring (has_add Type))) := sorry --non-trivial
lemma new_lemma_153451 (h0 : functor.comp has_neg add_comm_semigroup reducibility_hints) (h1 : measurable_space (add_comm_semigroup reducibility_hints)) : @has_measurable_neg.{0} (add_comm_semigroup.{0} reducibility_hints) (@functor.comp.run.{0 0 0} has_neg.{0} add_comm_semigroup.{0} reducibility_hints h0) h1  := sorry --non-trivial
lemma new_lemma_153452 (h0 : cancel_comm_monoid_with_zero (free_add_monoid (option unsigned))) : unique_factorization_monoid (free_add_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_153453 (h0 : set (has_nnnorm char)) (h1 : has_nnnorm char) : set.compl h0 h1 := sorry --non-trivial
lemma new_lemma_153454 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (distrib_lattice.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (distrib_lattice.{0} num))  := sorry --non-trivial
lemma new_lemma_153455 (h0 : not (function.extfun Type topological_space -> false)) : @preirreducible_space.{0} (random_gen.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (random_gen.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153456 (h0 : topological_space (comm_group (has_to_string pos))) : topological_space.separable_space (comm_group (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_153457 (h0 : has_to_string Type -> has_to_string Type -> Prop) : is_antisymm (has_to_string Type) h0 := sorry --non-trivial
lemma new_lemma_153458 (h0 : not (function.extfun Type topological_space -> false)) : @normal_space.{0} (normed_group.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (normed_group.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153459 (h0 : function.extfun Type group) : @is_simple_group.{0} (semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153460 (h0 : cancel_comm_monoid_with_zero (add_cancel_monoid (normed_comm_ring environment.implicit_infer_kind))) : unique_factorization_monoid (add_cancel_monoid (normed_comm_ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_153461 (h0 : functor.add_const (topological_space (has_zero linarith.comp)) (finset (finset (ring Type)))) : @preirreducible_space.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (has_zero.{0} linarith.comp)) (finset.{1} (finset.{1} (ring.{1} Type))) h0)  := sorry --non-trivial
lemma new_lemma_153462 (h2 : group (normed_field string.iterator_imp)) : is_cyclic (normed_field string.iterator_imp) := sorry --non-trivial
lemma new_lemma_153463 (h0 : functor.add_const (function.extfun (Type 1) group) (has_add linarith.comp)) : @is_simple_group.{1} (ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) (has_add.{0} linarith.comp) h0) (ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_153464 (h0 : function.extfun Type topological_space) : @normal_space.{0} (has_to_string.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_to_string.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_153465 (h0 : ordered_comm_monoid (has_Inf (has_neg (has_Inf Type)))) : has_exists_mul_of_le (has_Inf (has_neg (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_153466 (h0 : complete_lattice (ordered_comm_ring (has_neg name))) : is_compactly_generated (ordered_comm_ring (has_neg name)) := sorry --non-trivial
lemma new_lemma_153467 (h0 : functor.add_const (group (normed_comm_ring Type)) pos) : @normalizer_condition.{1} (normed_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (normed_comm_ring.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_153468 (h0 : add_group (add_group (semiring (semiring (semiring congr_arg_kind))))) : is_add_cyclic (add_group (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_153469 (h0 : add_monoid (finset (option empty))) : add_monoid.fg (finset (option empty)) := sorry --non-trivial
lemma new_lemma_153470 (h0 : functor.add_const (add_group pos) pos) : @is_add_cyclic.{0} pos (@functor.add_const.run.{0 0} (add_group.{0} pos) pos h0)  := sorry --non-trivial
lemma new_lemma_153471 (h0 : group (linear_ordered_add_comm_group (linear_ordered_add_comm_group to_additive.value_type))) : is_cyclic (linear_ordered_add_comm_group (linear_ordered_add_comm_group to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_153472 (h0 : topological_space (linear_ordered_cancel_comm_monoid empty)) : locally_compact_space (linear_ordered_cancel_comm_monoid empty) := sorry --non-trivial
lemma new_lemma_153473 (h0 : not (topological_space (has_div string.iterator_imp) -> false)) : @path_connected_space.{0} (has_div.{0} string.iterator_imp) (@classical.by_contradiction'.{1} (topological_space.{0} (has_div.{0} string.iterator_imp)) h0)  := sorry --non-trivial
lemma new_lemma_153474 (h0 : uniform_space (finset Type)) : separated_space (finset Type) := sorry --non-trivial
lemma new_lemma_153475 (h0 : topological_space (has_add unsigned)) : normal_space (has_add unsigned) := sorry --non-trivial
lemma new_lemma_153476 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @unique_factorization_monoid.{0} (with_one.{0} unsigned) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 cancel_comm_monoid_with_zero.{0}) (with_one.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153477 (h0 : topological_space (finset (comm_semigroup real))) : regular_space (finset (comm_semigroup real)) := sorry --non-trivial
lemma new_lemma_153478 (h0 : fin has_zero.zero) : @has_exists_mul_of_le.{1} (has_pos_part.{1} Type) (@matrix.vec_empty.{1} (ordered_comm_monoid.{1} (has_pos_part.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_153479 (h0 : topological_space (canonically_ordered_monoid Type)) : topological_space.separable_space (canonically_ordered_monoid Type) := sorry --non-trivial
lemma new_lemma_153480 (h0 : add_group ereal) (h1 : add_subgroup ereal) : add_subgroup.normal h1 := sorry --non-trivial
lemma new_lemma_153481 (h0 : group (finset (has_to_string (has_to_string pos)))) : normalizer_condition (finset (has_to_string (has_to_string pos))) := sorry --non-trivial
lemma new_lemma_153482 (h0 : not (has_mem.mem (normed_group fun_info) has_emptyc.emptyc -> false)) : @is_principal_ideal_ring.{0} (normed_group.{0} fun_info) (@finset.pi.empty.{1 0} Type ring.{0} (normed_group.{0} fun_info) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (normed_group.{0} fun_info) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_153483 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (boolean_algebra.core num)) := sorry --non-trivial
lemma new_lemma_153484 (h0 : ordered_add_comm_monoid (pseudo_metric_space (finset name))) : archimedean (pseudo_metric_space (finset name)) := sorry --non-trivial
lemma new_lemma_153485 (h0 : topological_space (option (semiring num))) : preirreducible_space (option (semiring num)) := sorry --non-trivial
lemma new_lemma_153486 (h0 : functor.add_const (group (has_neg Type)) pos) : @normalizer_condition.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (has_neg.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_153487 (h0 : complete_lattice (with_one fun_info)) : is_compactly_generated (with_one fun_info) := sorry --non-trivial
lemma new_lemma_153488 (h0 : function.extfun Type group) : @normalizer_condition.{0} (add_comm_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (add_comm_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153489 (h0 : functor.add_const (complete_lattice (has_star unsigned)) congr_arg_kind) : @complete_lattice.is_Sup_finite_compact.{0} (has_star.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_star.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_153490 (h0 : ordered_add_comm_monoid (has_Inf (has_add pos))) : archimedean (has_Inf (has_add pos)) := sorry --non-trivial
lemma new_lemma_153491 (h0 : list (ordered_comm_monoid (semigroup linarith.comp))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153492 (h0 : functor.add_const (topological_space (ordered_comm_monoid pos)) Type) : @normal_space.{0} (ordered_comm_monoid.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (ordered_comm_monoid.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_153493 (h0 : function.extfun nat fin) : @regular_space.{1} (canonically_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (canonically_ordered_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_153494 (h0 : ring (normed_comm_ring (has_to_string unsigned))) : is_domain (normed_comm_ring (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_153495 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (option unsigned)) := sorry --non-trivial
lemma new_lemma_153496 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (dlist linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_153497 (h0 : cancel_comm_monoid_with_zero (ordered_comm_ring (ring pos))) : unique_factorization_monoid (ordered_comm_ring (ring pos)) := sorry --non-trivial
lemma new_lemma_153498 (h0 : functor.add_const (add_group (normed_comm_ring Type)) (finset environment.implicit_infer_kind)) : @is_add_cyclic.{1} (normed_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (add_group.{1} (normed_comm_ring.{1} Type)) (finset.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_153499 (h0 : group (complete_distrib_lattice unsigned)) : is_simple_group (complete_distrib_lattice unsigned) := sorry --non-trivial
lemma new_lemma_153500 (h0 : functor.add_const (topological_space (has_Sup empty)) empty) : @preirreducible_space.{0} (has_Sup.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Sup.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_153501 (h0 : group (group_with_zero (option ennreal))) : group.fg (group_with_zero (option ennreal)) := sorry --non-trivial
lemma new_lemma_153502 (h0 : group (normed_lattice_add_comm_group real)) : is_simple_group (normed_lattice_add_comm_group real) := sorry --non-trivial
lemma new_lemma_153503 (h0 : function.extfun nat fin) : @is_principal_ideal_ring.{0} (canonically_ordered_monoid.{0} real) (@matrix.vec_empty.{0} (ring.{0} (canonically_ordered_monoid.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_153504 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (ordered_cancel_add_comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (ordered_cancel_add_comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153505 (h0 : functor.add_const (topological_space (finset environment.implicit_infer_kind)) pos) : @regular_space.{0} (finset.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_153506 (h0 : topological_space (has_to_string (ring (ring Type)))) : loc_path_connected_space (has_to_string (ring (ring Type))) := sorry --non-trivial
lemma new_lemma_153507 (h0 : list (normed_group fun_info)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153508 (h0 : finset (has_neg (canonically_ordered_comm_semiring Type))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_153509 (h0 : not (function.extfun nat fin -> false)) : matrix.vec_empty (function.extfun_app (classical.by_contradiction' h0) has_zero.zero) := sorry --non-trivial
lemma new_lemma_153510 (h0 : functor.add_const (finset (semigroup Type)) name) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153511 (h2 : function.extfun Type topological_space) : @t0_space.{0} linarith.comp_source (@function.extfun_app.{2 1} Type topological_space.{0} h2 linarith.comp_source)  := sorry --non-trivial
lemma new_lemma_153512 (h0 : num -> num -> bool) : is_dec_refl h0 := sorry --non-trivial
lemma new_lemma_153513 (h0 : functor.add_const (uniform_space (boolean_algebra.core name)) environment.implicit_infer_kind) : @separated_space.{0} (boolean_algebra.core.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (boolean_algebra.core.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_153514 (h0 : list (pseudo_metric_space ennreal)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_153515 (h0 : group (boolean_algebra.core (has_zero (has_zero (has_zero (has_zero num)))))) : is_simple_group (boolean_algebra.core (has_zero (has_zero (has_zero (has_zero num))))) := sorry --non-trivial
lemma new_lemma_153516 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (measurable_space.dynkin_system.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measurable_space.dynkin_system.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153517 (h0 : group (canonically_ordered_add_monoid (cancel_monoid (semiring congr_arg_kind)))) : normalizer_condition (canonically_ordered_add_monoid (cancel_monoid (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_153518 (h0 : group (ring (has_neg_part linarith.comp))) : normalizer_condition (ring (has_neg_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_153519 (h0 : ring (comm_semigroup (has_Inf real))) : rank_condition (comm_semigroup (has_Inf real)) := sorry --non-trivial
lemma new_lemma_153520 (h0 : topological_space (mul_zero_class (mul_zero_class (option name)))) : totally_disconnected_space (mul_zero_class (mul_zero_class (option name))) := sorry --non-trivial
lemma new_lemma_153521 (h0 : ring (canonically_ordered_comm_semiring pos)) : is_principal_ideal_ring (canonically_ordered_comm_semiring pos) := sorry --non-trivial
lemma new_lemma_153522 (h0 : group (measurable_space (has_norm (has_norm (has_norm fun_info))))) : is_cyclic (measurable_space (has_norm (has_norm (has_norm fun_info)))) := sorry --non-trivial
lemma new_lemma_153523 (h2 : pfun fun_info Prop) (h3 : coe_sort (pfun.dom h2)) : pfun.as_subtype h2 h3 := sorry --non-trivial
lemma new_lemma_153524 (h0 : functor.comp ordered_comm_monoid comm_group ennreal) : @has_exists_mul_of_le.{0} (comm_group.{0} ennreal) (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} comm_group.{0} ennreal h0)  := sorry --non-trivial
lemma new_lemma_153525 (h0 : filter (has_add (has_Inf (has_to_string real)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_153526 (h0 : ring (linear_ordered_add_comm_group (random_gen (random_gen (random_gen char))))) : rank_condition (linear_ordered_add_comm_group (random_gen (random_gen (random_gen char)))) := sorry --non-trivial
lemma new_lemma_153527 (h0 : finset (add_comm_monoid (add_cancel_monoid (comm_group pos)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_153528 (h0 : topological_space (linear_ordered_semiring num)) : preirreducible_space (linear_ordered_semiring num) := sorry --non-trivial
lemma new_lemma_153529 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153530 (h0 : topological_space (has_one (has_top empty))) : normal_space (has_one (has_top empty)) := sorry --non-trivial
lemma new_lemma_153531 (h0 : functor.comp filter boolean_algebra.core pos) : countable_Inter_filter (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_153532 (h0 : functor.add_const (functor.comp topological_space semigroup pos) unsigned) : @totally_disconnected_space.{0} (semigroup.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} semigroup.{0} pos (@functor.add_const.run.{0 0} (functor.comp.{0 0 0} topological_space.{0} semigroup.{0} pos) unsigned h0))  := sorry --non-trivial
lemma new_lemma_153533 (h0 : ordered_comm_monoid (ordered_comm_monoid (finset Type))) : has_exists_mul_of_le (ordered_comm_monoid (finset Type)) := sorry --non-trivial
lemma new_lemma_153534 (h0 : add_group (canonically_ordered_monoid (has_bot pos))) : is_add_cyclic (canonically_ordered_monoid (has_bot pos)) := sorry --non-trivial
lemma new_lemma_153535 (h0 : functor.add_const (complete_lattice (bin_tree congr_arg_kind)) unsigned) : @is_compactly_generated.{0} (bin_tree.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (bin_tree.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153536 (h0 : group (has_sub (semiring (semiring (semiring empty))))) : is_cyclic (has_sub (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_153537 (h0 : semiring (has_add (has_add (has_add (has_add (sub_neg_monoid real)))))) : is_noetherian_ring (has_add (has_add (has_add (has_add (sub_neg_monoid real))))) := sorry --non-trivial
lemma new_lemma_153538 (h0 : topological_space (left_cancel_monoid (option (semiring (ordered_ring (semiring unsigned)))))) : t0_space (left_cancel_monoid (option (semiring (ordered_ring (semiring unsigned))))) := sorry --non-trivial
lemma new_lemma_153539 (h0 : complete_lattice (normed_group (has_norm (semiring (semiring fun_info))))) : is_compactly_generated (normed_group (has_norm (semiring (semiring fun_info)))) := sorry --non-trivial
lemma new_lemma_153540 (h1 : ring (non_unital_non_assoc_semiring reducibility_hints)) : rank_condition (non_unital_non_assoc_semiring reducibility_hints) := sorry --non-trivial
lemma new_lemma_153541 (h0 : function.extfun Type group) : @normalizer_condition.{0} (group_with_zero.{0} ennreal) (@function.extfun_app.{2 1} Type group.{0} h0 (group_with_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_153542 (h0 : topological_space (with_one fun_info)) : discrete_topology (with_one fun_info) := sorry --non-trivial
lemma new_lemma_153543 (h0 : group (has_zero linarith.comp)) : group.fg (has_zero linarith.comp) := sorry --non-trivial
lemma new_lemma_153544 (h0 : topological_space (has_nndist (mul_zero_class (mul_zero_class pos)))) : t0_space (has_nndist (mul_zero_class (mul_zero_class pos))) := sorry --non-trivial
lemma new_lemma_153545 (h0 : functor.add_const (list (has_neg_part unsigned)) unsigned) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153546 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (finset.{0} name) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (finset.{0} name))  := sorry --non-trivial
lemma new_lemma_153547 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (cancel_monoid.{0} num) (@function.extfun_app.{2 1} Type add_group.{0} h0 (cancel_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_153548 (h0 : topological_space (order_dual empty)) : loc_path_connected_space (order_dual empty) := sorry --non-trivial
lemma new_lemma_153549 (h0 : not (topological_space (add_monoid to_additive.value_type) -> false)) : @totally_disconnected_space.{0} (add_monoid.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (add_monoid.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_153550 (h0 : functor.add_const (uniform_space (add_cancel_monoid unsigned)) environment.implicit_infer_kind) : @complete_space.{0} (add_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (uniform_space.{0} (add_cancel_monoid.{0} unsigned)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_153551 (h0 : ordered_comm_monoid (generalized_boolean_algebra (has_neg name))) : has_exists_mul_of_le (generalized_boolean_algebra (has_neg name)) := sorry --non-trivial
lemma new_lemma_153552 (h0 : function.extfun Type has_neg) (h1 : functor.add_const (measurable_space (comm_group name)) linarith.comp) : @has_measurable_neg.{0} (comm_group.{0} name) (@function.extfun_app.{2 1} Type has_neg.{0} h0 (comm_group.{0} name)) (@functor.add_const.run.{0 0} (measurable_space.{0} (comm_group.{0} name)) linarith.comp h1)  := sorry --non-trivial
lemma new_lemma_153553 (h0 : fin has_zero.zero) : @is_simple_group.{1} (sub_neg_monoid.{1} Type) (@matrix.vec_empty.{1} (group.{1} (sub_neg_monoid.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_153554 (h0 : ring (has_inv (has_norm fun_info))) : is_domain (has_inv (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_153555 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (has_union.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_union.{0} empty))  := sorry --non-trivial
lemma new_lemma_153556 (h0 : uniform_space (simple_graph (has_neg (finset (ring (finset (has_add (ring Type)))))))) : complete_space (simple_graph (has_neg (finset (ring (finset (has_add (ring Type))))))) := sorry --non-trivial
lemma new_lemma_153557 (h0 : topological_space (has_bot (has_add real))) : irreducible_space (has_bot (has_add real)) := sorry --non-trivial
lemma new_lemma_153558 (h0 : not (ring (normed_group linarith.comp) -> false)) : @is_domain.{0} (normed_group.{0} linarith.comp) (@classical.by_contradiction'.{1} (ring.{0} (normed_group.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_153559 (h1 : not (has_mem.mem (complete_semilattice_Sup string_imp) has_emptyc.emptyc -> false)) : @irreducible_space.{0} (complete_semilattice_Sup.{0} string_imp) (@finset.pi.empty.{1 0} Type topological_space.{0} (complete_semilattice_Sup.{0} string_imp) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (complete_semilattice_Sup.{0} string_imp) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h1))  := sorry --non-trivial
lemma new_lemma_153560 (h0 : not (topological_space (random_gen unsigned) -> false)) : @discrete_topology.{0} (random_gen.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_153561 (h0 : not (function.extfun Type group -> false)) : @normalizer_condition.{0} (semiring.{0} (has_top.{0} (has_top.{0} (normed_group.{0} (has_top.{0} congr_arg_kind))))) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (semiring.{0} (has_top.{0} (has_top.{0} (normed_group.{0} (has_top.{0} congr_arg_kind))))))  := sorry --non-trivial
lemma new_lemma_153562 (h0 : functor.add_const (group (boolean_algebra linarith.comp)) (has_neg Type)) : @is_simple_group.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 1} (group.{0} (boolean_algebra.{0} linarith.comp)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_153563 (h0 : topological_space (has_star (semiring (semiring empty)))) : discrete_topology (has_star (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_153564 (h0 : complete_lattice (simple_graph unsigned)) : is_compactly_generated (simple_graph unsigned) := sorry --non-trivial
lemma new_lemma_153565 (h0 : not (ring (denumerable char) -> false)) : @is_domain.{0} (denumerable.{0} char) (@classical.by_contradiction'.{1} (ring.{0} (denumerable.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_153566 (h0 : topological_space (has_ssubset (has_nnnorm fun_info))) : t0_space (has_ssubset (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_153567 (h0 : topological_space (semi_normed_comm_ring to_additive.value_type)) : locally_compact_space (semi_normed_comm_ring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_153568 (h0 : functor.add_const (finset (has_add environment.implicit_infer_kind)) pos) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153569 (h0 : semiring (comm_ring char)) (h1 : not (ideal (comm_ring char) -> false)) : ideal.fg (classical.by_contradiction' h1) := sorry --non-trivial
lemma new_lemma_153570 (h0 : ring (add_cancel_monoid (mul_zero_class pos))) : rank_condition (add_cancel_monoid (mul_zero_class pos)) := sorry --non-trivial
lemma new_lemma_153571 (h0 : functor.add_const (ordered_add_comm_monoid (has_zero Type)) environment.implicit_infer_kind) : @archimedean.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (ordered_add_comm_monoid.{1} (has_zero.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_153572 (h0 : not (uniform_space (measurable_space num) -> false)) : @separated_space.{0} (measurable_space.{0} num) (@classical.by_contradiction'.{1} (uniform_space.{0} (measurable_space.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_153573 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} string_imp (@function.extfun_app.{2 1} Type topological_space.{0} h0 string_imp)  := sorry --non-trivial
lemma new_lemma_153574 (h0 : has_mem.mem uniform_space has_emptyc.emptyc) : @complete_space.{0} (random_gen.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) uniform_space.{0} h0) (random_gen.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153575 (h0 : topological_space (has_neg_part (has_add ennreal))) : preconnected_space (has_neg_part (has_add ennreal)) := sorry --non-trivial
lemma new_lemma_153576 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (normed_group.{0} string_imp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_group.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_153577 (h0 : functor.add_const (function.extfun Type ordered_add_comm_monoid) (finset pos)) : @archimedean.{0} pos (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_add_comm_monoid.{0}) (finset.{0} pos) h0) pos)  := sorry --non-trivial
lemma new_lemma_153578 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} num (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 topological_space.{0}) num)  := sorry --non-trivial
lemma new_lemma_153579 (h2 : uniform_space (semi_normed_comm_ring linarith.comp_source)) : complete_space (semi_normed_comm_ring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_153580 (h0 : not (ring (has_div reducibility_hints) -> false)) : @is_domain.{0} (has_div.{0} reducibility_hints) (@classical.by_contradiction'.{1} (ring.{0} (has_div.{0} reducibility_hints)) h0)  := sorry --non-trivial
lemma new_lemma_153581 (h0 : cancel_comm_monoid_with_zero (pseudo_metric_space empty)) : unique_factorization_monoid (pseudo_metric_space empty) := sorry --non-trivial
lemma new_lemma_153582 (h0 : topological_space (has_neg (has_neg environment.implicit_infer_kind))) : totally_disconnected_space (has_neg (has_neg environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_153583 (h1 : ring (distrib (random_gen linarith.comp_source))) : rank_condition (distrib (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_153584 (h0 : fin has_zero.zero) : @t0_space.{0} (has_bot.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (has_bot.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_153585 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (option empty)) := sorry --non-trivial
lemma new_lemma_153586 (h0 : list (id (random_gen (has_inv linarith.comp_source)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153587 : @trace_call_stack.{0} Prop (@is_bot.{0} unit (@preorder.to_has_le.{0} unit (@partial_order.to_preorder.{0} unit (@complete_semilattice_Inf.to_partial_order.{0} unit (@complete_lattice.to_complete_semilattice_Inf.{0} unit (@complete_distrib_lattice.to_complete_lattice.{0} unit (@complete_boolean_algebra.to_complete_distrib_lattice.{0} unit punit.complete_boolean_algebra.{0})))))))  := sorry --non-trivial
lemma new_lemma_153588 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (normed_group.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_group.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_153589 (h0 : topological_space (id congr_arg_kind)) : irreducible_space (id congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153590 (h0 : functor.add_const (topological_space (has_neg Type)) linarith.comp) : @discrete_topology.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_neg.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153591 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (encodable to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_153592 (h0 : ordered_add_comm_monoid (add_comm_monoid (has_neg (has_neg (has_neg linarith.comp))))) : archimedean (add_comm_monoid (has_neg (has_neg (has_neg linarith.comp)))) := sorry --non-trivial
lemma new_lemma_153593 (h0 : functor.add_const (ring (has_to_string linarith.comp)) Type) : @is_principal_ideal_ring.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 1} (ring.{0} (has_to_string.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_153594 (h0 : ring (finset (has_add name))) : strong_rank_condition (finset (has_add name)) := sorry --non-trivial
lemma new_lemma_153595 (h1 : topological_space (measurable_space congr_arg_kind)) : irreducible_space (measurable_space congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153596 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (has_top.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_top.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153597 (h0 : topological_space (has_bot linarith.comp)) : t0_space (has_bot linarith.comp) := sorry --non-trivial
lemma new_lemma_153598 (h0 : group (has_top (with_bot (with_bot linarith.comp_source)))) : normalizer_condition (has_top (with_bot (with_bot linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_153599 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (finset.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (finset.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_153600 (h0 : functor.add_const (semiring (ring linarith.comp)) unsigned) : @is_noetherian_ring.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (semiring.{0} (ring.{0} linarith.comp)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153601 (h0 : add_monoid (with_bot linarith.comp)) : add_monoid.fg (with_bot linarith.comp) := sorry --non-trivial
lemma new_lemma_153602 (h0 : ring (finset (option unsigned))) : is_principal_ideal_ring (finset (option unsigned)) := sorry --non-trivial
lemma new_lemma_153603 (h0 : uniform_space (add_group (semiring (semiring num)))) : separated_space (add_group (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_153604 (h0 : list (has_pos_part (normed_comm_ring pos))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153605 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @normal_space.{0} (semigroup.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (semigroup.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153606 (h0 : functor.add_const (topological_space (cancel_monoid Type)) name) : @t0_space.{1} (cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (cancel_monoid.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_153607 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (linear_ordered_cancel_comm_monoid empty)) := sorry --non-trivial
lemma new_lemma_153608 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (complete_distrib_lattice congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_153609 (h0 : topological_space (semi_normed_comm_ring (random_gen fun_info))) : path_connected_space (semi_normed_comm_ring (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_153610 (h0 : semiring (normed_comm_ring (has_neg_part pos))) : is_noetherian_ring (normed_comm_ring (has_neg_part pos)) := sorry --non-trivial
lemma new_lemma_153611 (h0 : not (function.extfun Type complete_lattice -> false)) : @is_atomistic.{0} (with_one.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (with_one.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_153612 (h0 : nat) (h1 : topological_space (add_comm_semigroup (array h0 char))) : totally_disconnected_space (add_comm_semigroup (array h0 char)) := sorry --non-trivial
lemma new_lemma_153613 (h0 : complete_lattice (measurable_space (semiring linarith.ineq))) : is_atomistic (measurable_space (semiring linarith.ineq)) := sorry --non-trivial
lemma new_lemma_153614 (h0 : filter (linear_ordered_comm_group num)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_153615 (h0 : ring (add_comm_monoid (option (option unsigned)))) : rank_condition (add_comm_monoid (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_153616 (h0 : functor.add_const (function.extfun (Type 1) ring) pos) : @rank_condition.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) ring.{1}) pos h0) (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_153617 (h0 : ring (has_pos_part (has_add pos))) : is_domain (has_pos_part (has_add pos)) := sorry --non-trivial
lemma new_lemma_153618 (h0 : group (id (has_top linarith.comp_source))) : normalizer_condition (id (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_153619 (h0 : uniform_space (has_nndist (has_add (has_pos_part (has_Inf (mul_one_class linarith.comp)))))) : complete_space (has_nndist (has_add (has_pos_part (has_Inf (mul_one_class linarith.comp))))) := sorry --non-trivial
lemma new_lemma_153620 (h2 : complete_lattice (dlist linarith.ineq)) : complete_lattice.is_Sup_finite_compact (dlist linarith.ineq) := sorry --non-trivial
lemma new_lemma_153621 (h0 : ring (has_norm (comm_ring (random_gen (comm_ring to_additive.value_type))))) : rank_condition (has_norm (comm_ring (random_gen (comm_ring to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_153622 (h0 : function.extfun Type (functor.add_const (topological_space Type))) : @loc_path_connected_space.{1} Type (@functor.add_const.run.{1 0} (topological_space.{1} Type) pos (@function.extfun_app.{2 2} Type (functor.add_const.{1 0} (topological_space.{1} Type)) h0 pos))  := sorry --non-trivial
lemma new_lemma_153623 (h0 : topological_space (with_bot (semiring congr_arg_kind))) : path_connected_space (with_bot (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_153624 (h0 : functor.comp topological_space has_neg_part Type) : @discrete_topology.{1} (has_neg_part.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} has_neg_part.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_153625 (h0 : functor.add_const (add_group (ordered_comm_ring Type)) Type) : @is_add_cyclic.{1} (ordered_comm_ring.{1} Type) (@functor.add_const.run.{1 1} (add_group.{1} (ordered_comm_ring.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_153626 (h0 : semiring (monoid unsigned)) : is_noetherian_ring (monoid unsigned) := sorry --non-trivial
lemma new_lemma_153627 (h0 : finset (has_to_string (has_add (has_to_string (has_add linarith.comp))))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_153628 (h0 : not (ring (has_append char) -> false)) : @strong_rank_condition.{0} (has_append.{0} char) (@classical.by_contradiction'.{1} (ring.{0} (has_append.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_153629 (h0 : functor.add_const Prop (has_Inf pos)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_153630 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (finset.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (finset.{0} name))  := sorry --non-trivial
lemma new_lemma_153631 (h0 : functor.add_const (uniform_space (has_to_string Type)) (has_neg Type)) : @complete_space.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 1} (uniform_space.{1} (has_to_string.{1} Type)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_153632 (h0 : functor.add_const Prop (cancel_monoid num)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_153633 (h0 : topological_space (metric_space (has_norm unsigned))) : normal_space (metric_space (has_norm unsigned)) := sorry --non-trivial
lemma new_lemma_153634 (h0 : functor.add_const (topological_space (plift empty)) empty) : @irreducible_space.{1} (plift.{1} empty) (@functor.add_const.run.{1 0} (topological_space.{1} (plift.{1} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_153635 (h0 : not (topological_space (has_emptyc linarith.comp) -> false)) : @discrete_topology.{0} (has_emptyc.{0} linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (has_emptyc.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_153636 (h0 : functor.add_const (group (canonically_ordered_comm_semiring Type)) name) : @group.fg.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (canonically_ordered_comm_semiring.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_153637 (h0 : function.extfun Type group) : @is_cyclic.{0} (comm_semigroup.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (comm_semigroup.{0} name))  := sorry --non-trivial
lemma new_lemma_153638 (h0 : functor.add_const (ring (plift empty)) congr_arg_kind) : @strong_rank_condition.{1} (plift.{1} empty) (@functor.add_const.run.{1 0} (ring.{1} (plift.{1} empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_153639 (h0 : add_monoid (cancel_monoid (finset ennreal))) : add_monoid.fg (cancel_monoid (finset ennreal)) := sorry --non-trivial
lemma new_lemma_153640 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (has_inv.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type monoid.{0} h0 (has_inv.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_153641 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (has_neg.{0} num) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_neg.{0} num))  := sorry --non-trivial
lemma new_lemma_153642 (h0 : topological_space (boolean_algebra.core linarith.comp)) : loc_path_connected_space (boolean_algebra.core linarith.comp) := sorry --non-trivial
lemma new_lemma_153643 (h0 : fin has_zero.zero) : @irreducible_space.{0} (complete_distrib_lattice.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (complete_distrib_lattice.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_153644 (h0 : functor.add_const (add_group (semigroup unsigned)) (semiring empty)) : @is_add_cyclic.{0} (semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (add_group.{0} (semigroup.{0} unsigned)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_153645 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (cancel_monoid.{0} (option.{0} num)) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (cancel_monoid.{0} (option.{0} num)))  := sorry --non-trivial
lemma new_lemma_153646 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (left_cancel_semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (left_cancel_semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153647 (h0 : functor.add_const (topological_space pos) ennreal) : @loc_path_connected_space.{0} pos (@functor.add_const.run.{0 0} (topological_space.{0} pos) ennreal h0)  := sorry --non-trivial
lemma new_lemma_153648 (h0 : functor.add_const (ring (normed_group empty)) empty) : @is_domain.{0} (normed_group.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (normed_group.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_153649 (h1 : measurable_space (add_comm_semigroup environment.projection_info)) (h2 : measure_theory.measure (add_comm_semigroup environment.projection_info)) : measure_theory.is_finite_measure h2 := sorry --non-trivial
lemma new_lemma_153650 (h0 : set (non_unital_non_assoc_semiring (mul_one_class (mul_one_class enat)))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_153651 (h0 : functor.add_const (filter (boolean_algebra.core Type)) ennreal) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153652 (h0 : ring (has_one fun_info)) : rank_condition (has_one fun_info) := sorry --non-trivial
lemma new_lemma_153653 (h0 : group (ordered_comm_ring (has_Inf real))) : normalizer_condition (ordered_comm_ring (has_Inf real)) := sorry --non-trivial
lemma new_lemma_153654 (h0 : topological_space (simple_graph (has_add pos))) : t1_space (simple_graph (has_add pos)) := sorry --non-trivial
lemma new_lemma_153655 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (has_norm.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_norm.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153656 (h0 : fin has_zero.zero) : @normalizer_condition.{0} (boolean_algebra.core.{0} linarith.comp) (@matrix.vec_empty.{0} (group.{0} (boolean_algebra.core.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_153657 (h0 : topological_space (plift (preorder congr_arg_kind))) : discrete_topology (plift (preorder congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_153658 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (normed_comm_ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_comm_ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153659 (h0 : uniform_space (has_nndist (bin_tree (cancel_monoid (cancel_monoid pos))))) : separated_space (has_nndist (bin_tree (cancel_monoid (cancel_monoid pos)))) := sorry --non-trivial
lemma new_lemma_153660 (h0 : functor.add_const (topological_space (filter empty)) empty) : @normal_space.{0} (filter.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (filter.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_153661 (h0 : complete_lattice (has_append reducibility_hints)) : complete_lattice.is_Sup_finite_compact (has_append reducibility_hints) := sorry --non-trivial
lemma new_lemma_153662 (h0 : ring (has_ssubset fun_info)) : rank_condition (has_ssubset fun_info) := sorry --non-trivial
lemma new_lemma_153663 (h0 : uniform_space (canonically_ordered_comm_semiring (has_add (finset Type)))) : complete_space (canonically_ordered_comm_semiring (has_add (finset Type))) := sorry --non-trivial
lemma new_lemma_153664 (h0 : function.extfun Type group) : @is_cyclic.{0} (linear_ordered_field.{0} pos) (@function.extfun_app.{2 1} Type group.{0} h0 (linear_ordered_field.{0} pos))  := sorry --non-trivial
lemma new_lemma_153665 (h0 : monoid (add_comm_monoid (has_to_string (has_neg_part environment.implicit_infer_kind)))) : monoid.fg (add_comm_monoid (has_to_string (has_neg_part environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_153666 (h0 : topological_space (normed_comm_ring (has_add (has_add pos)))) : sequential_space (normed_comm_ring (has_add (has_add pos))) := sorry --non-trivial
lemma new_lemma_153667 (h0 : add_group (semi_normed_comm_ring (has_nnnorm (has_nnnorm fun_info)))) : is_add_cyclic (semi_normed_comm_ring (has_nnnorm (has_nnnorm fun_info))) := sorry --non-trivial
lemma new_lemma_153668 (h0 : functor.add_const (ordered_add_comm_monoid (as_linear_order unsigned)) (option empty)) : @archimedean.{0} (as_linear_order.{0} unsigned) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (as_linear_order.{0} unsigned)) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_153669 (h0 : complete_lattice (left_cancel_semigroup empty)) : is_compactly_generated (left_cancel_semigroup empty) := sorry --non-trivial
lemma new_lemma_153670 (h0 : functor.add_const (topological_space (sub_neg_monoid linarith.comp)) pos) : @locally_compact_space.{0} (sub_neg_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (sub_neg_monoid.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_153671 (h0 : cancel_comm_monoid_with_zero (ordered_comm_ring linarith.comp)) : unique_factorization_monoid (ordered_comm_ring linarith.comp) := sorry --non-trivial
lemma new_lemma_153672 (h0 : functor.add_const (filter (add_cancel_monoid pos)) environment.implicit_infer_kind) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153673 (h0 : topological_space (linear_ordered_add_comm_group linarith.comp_source)) : totally_separated_space (linear_ordered_add_comm_group linarith.comp_source) := sorry --non-trivial
lemma new_lemma_153674 (h0 : fin has_zero.zero) : @has_exists_mul_of_le.{0} (canonically_linear_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))) (canonically_linear_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_153675 (h0 : functor.add_const (ring (has_add pos)) (has_neg Type)) : @is_domain.{0} (has_add.{0} pos) (@functor.add_const.run.{0 1} (ring.{0} (has_add.{0} pos)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_153676 (h0 : ring (complete_distrib_lattice (has_add environment.implicit_infer_kind))) : strong_rank_condition (complete_distrib_lattice (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_153677 (h0 : group (has_norm congr_arg_kind)) : is_cyclic (has_norm congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153678 (h0 : fin has_zero.zero) : @totally_separated_space.{1} (has_Inf.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@matrix.vec_empty.{2} (function.extfun.{3 2} (Type 1) topological_space.{1}) h0) (has_Inf.{1} Type))  := sorry --non-trivial
lemma new_lemma_153679 (h0 : not (functor.add_const Prop (has_norm empty) -> false)) : functor.add_const.run (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_153680 (h0 : fin has_zero.zero) : @archimedean.{0} (ordered_comm_ring.{0} real) (@matrix.vec_empty.{0} (ordered_add_comm_monoid.{0} (ordered_comm_ring.{0} real)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_153681 (h0 : finset (ring (has_add Type))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_153682 (h0 : group (random_gen (has_norm fun_info))) : is_cyclic (random_gen (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_153683 (h0 : fin has_zero.zero) : @discrete_topology.{1} (has_pos_part.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (has_pos_part.{1} Type)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_153684 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (ring.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} empty))  := sorry --non-trivial
lemma new_lemma_153685 (h0 : uniform_space (complete_linear_order num)) (h1 : option (uniform_space (complete_linear_order num))) : complete_space (complete_linear_order num) := sorry --non-trivial
lemma new_lemma_153686 (h0 : function.extfun nat fin) : @preirreducible_space.{0} (canonically_linear_ordered_monoid.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (canonically_linear_ordered_monoid.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_153687 (h0 : complete_lattice (non_unital_non_assoc_semiring string_imp)) : complete_lattice.is_Sup_finite_compact (non_unital_non_assoc_semiring string_imp) := sorry --non-trivial
lemma new_lemma_153688 (h0 : not (filter (complete_semilattice_Sup (semiring (semiring (semiring (semiring (semiring empty)))))) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_153689 (h0 : has_to_string ennreal -> has_to_string ennreal -> Prop) : reflexive h0 := sorry --non-trivial
lemma new_lemma_153690 (h0 : not (complete_lattice (semiring empty) -> false)) : @is_atomistic.{0} (semiring.{0} empty) (@classical.by_contradiction'.{1} (complete_lattice.{0} (semiring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_153691 (h0 : functor.add_const (ordered_add_comm_monoid (option ennreal)) empty) : @archimedean.{0} (option.{0} ennreal) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (option.{0} ennreal)) empty h0)  := sorry --non-trivial
lemma new_lemma_153692 (h0 : ring (distrib enat)) : strong_rank_condition (distrib enat) := sorry --non-trivial
lemma new_lemma_153693 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (add_cancel_comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_cancel_comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153694 (h0 : function.extfun nat fin) : @is_simple_group.{0} (has_Inf.{0} linarith.comp) (@matrix.vec_empty.{0} (group.{0} (has_Inf.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_153695 (h0 : complete_lattice (has_top unsigned)) : is_atomistic (has_top unsigned) := sorry --non-trivial
lemma new_lemma_153696 (h2 : topological_space (nondiscrete_normed_field linarith.ineq)) (h3 : set (nondiscrete_normed_field linarith.ineq)) : is_path_connected h3 := sorry --non-trivial
lemma new_lemma_153697 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_inner.{0 0} unsigned unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_inner.{0 0} unsigned unsigned))  := sorry --non-trivial
lemma new_lemma_153698 (h0 : topological_space (has_zero (option name))) : t1_space (has_zero (option name)) := sorry --non-trivial
lemma new_lemma_153699 (h0 : topological_space (plift (semiring (semiring unsigned)))) : t1_space (plift (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_153700 (h0 : topological_space (boolean_algebra (has_bot (has_Inf real)))) : totally_disconnected_space (boolean_algebra (has_bot (has_Inf real))) := sorry --non-trivial
lemma new_lemma_153701 (h0 : add_monoid (canonically_linear_ordered_monoid (ordered_comm_monoid Type))) : add_monoid.fg (canonically_linear_ordered_monoid (ordered_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_153702 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (with_one.{0} linarith.ineq) (@function.extfun_app.{2 1} Type add_group.{0} h0 (with_one.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_153703 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (has_to_string.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_to_string.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_153704 (h0 : functor.add_const (topological_space (bin_tree num)) unsigned) : @totally_disconnected_space.{0} (bin_tree.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (bin_tree.{0} num)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153705 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (add_comm_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_comm_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153706 (h0 : cancel_comm_monoid_with_zero (cancel_monoid linarith.comp)) : unique_factorization_monoid (cancel_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_153707 (h0 : ring (measurable_space (random_gen linarith.comp_source))) : is_domain (measurable_space (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_153708 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : locally_compact_space real := sorry --non-trivial
lemma new_lemma_153709 (h0 : function.extfun Type topological_space) : @regular_space.{0} (normed_lattice_add_comm_group.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_lattice_add_comm_group.{0} real))  := sorry --non-trivial
lemma new_lemma_153710 (h0 : group (normed_field (comm_ring linarith.comp_source))) : is_cyclic (normed_field (comm_ring linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_153711 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (group_with_zero num)) := sorry --non-trivial
lemma new_lemma_153712 (h0 : ring (comm_group (has_add Type))) : is_principal_ideal_ring (comm_group (has_add Type)) := sorry --non-trivial
lemma new_lemma_153713 (h0 : topological_space (semigroup (has_neg_part (has_add (add_comm_monoid Type))))) : topological_space.separable_space (semigroup (has_neg_part (has_add (add_comm_monoid Type)))) := sorry --non-trivial
lemma new_lemma_153714 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (has_pos_part.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_pos_part.{0} name))  := sorry --non-trivial
lemma new_lemma_153715 (h0 : topological_space (comm_group (has_to_string pos))) : discrete_topology (comm_group (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_153716 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_star empty)) empty) : @unique_factorization_monoid.{0} (has_star.{0} empty) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (has_star.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_153717 (h0 : group (comm_semigroup (has_bot (has_add pos)))) : normalizer_condition (comm_semigroup (has_bot (has_add pos))) := sorry --non-trivial
lemma new_lemma_153718 (h0 : complete_lattice (has_compl (monoid_with_zero to_additive.value_type))) : complete_lattice.is_Sup_finite_compact (has_compl (monoid_with_zero to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_153719 (h0 : list (ordered_comm_ring (has_add (has_add (has_add (sub_neg_monoid real)))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153720 (h3 h4 : multiset (mul_one_class fun_info)) : multiset.subset h3 h4 := sorry --non-trivial
lemma new_lemma_153721 (h0 : topological_space (simple_graph (boolean_algebra.core linarith.comp))) : t1_space (simple_graph (boolean_algebra.core linarith.comp)) := sorry --non-trivial
lemma new_lemma_153722 (h1 : measurable_space environment.projection_info) (h2 : set environment.projection_info) : measurable_set h2 := sorry --non-trivial
lemma new_lemma_153723 (h0 : ring (semi_normed_ring (random_gen (mul_one_class char)))) : strong_rank_condition (semi_normed_ring (random_gen (mul_one_class char))) := sorry --non-trivial
lemma new_lemma_153724 (h0 : topological_space (option num)) : t0_space (option num) := sorry --non-trivial
lemma new_lemma_153725 (h0 : filter (has_zero (has_add name))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_153726 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (add_comm_monoid.{0} name) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (add_comm_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_153727 (h0 : topological_space (is_R_or_C unsigned)) : loc_path_connected_space (is_R_or_C unsigned) := sorry --non-trivial
lemma new_lemma_153728 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (monoid_with_zero.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (monoid_with_zero.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153729 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (ring.{0} (option.{0} (option.{0} ennreal))) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (ring.{0} (option.{0} (option.{0} ennreal))))  := sorry --non-trivial
lemma new_lemma_153730 (h0 : topological_space (complete_distrib_lattice congr_arg_kind)) : locally_compact_space (complete_distrib_lattice congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153731 (h0 : not (cancel_comm_monoid_with_zero (measurable_space.dynkin_system empty) -> false)) : @unique_factorization_monoid.{0} (measurable_space.dynkin_system.{0} empty) (@classical.by_contradiction'.{1} (cancel_comm_monoid_with_zero.{0} (measurable_space.dynkin_system.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_153732 (h0 : functor.add_const (cancel_comm_monoid_with_zero (complete_distrib_lattice pos)) (has_neg pos)) : @unique_factorization_monoid.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (complete_distrib_lattice.{0} pos)) (has_neg.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_153733 (h0 : ring (has_append (denumerable (denumerable (metric_space char))))) : strong_rank_condition (has_append (denumerable (denumerable (metric_space char)))) := sorry --non-trivial
lemma new_lemma_153734 (h0 : topological_space (comm_monoid (option empty))) : loc_path_connected_space (comm_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_153735 (h0 : topological_space (has_Inf (sub_neg_monoid (has_add pos)))) : preirreducible_space (has_Inf (sub_neg_monoid (has_add pos))) := sorry --non-trivial
lemma new_lemma_153736 (h0 : ring (finset (finset (has_add (finset (has_add (has_add pos))))))) : rank_condition (finset (finset (has_add (finset (has_add (has_add pos)))))) := sorry --non-trivial
lemma new_lemma_153737 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (@id.{2} Type linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} h0 (@id.{2} Type linarith.comp))  := sorry --non-trivial
lemma new_lemma_153738 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (simple_graph.{0} empty) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (simple_graph.{0} empty))  := sorry --non-trivial
lemma new_lemma_153739 (h0 : functor.add_const (group (add_cancel_monoid pos)) (has_add name)) : @is_cyclic.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (add_cancel_monoid.{0} pos)) (has_add.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_153740 (h0 : functor.add_const (topological_space (has_zero unsigned)) environment.implicit_infer_kind) : @t0_space.{0} (has_zero.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} unsigned)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_153741 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (with_one.{0} (has_nnnorm.{0} linarith.ineq)) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (with_one.{0} (has_nnnorm.{0} linarith.ineq)))  := sorry --non-trivial
lemma new_lemma_153742 (h0 : set (linear_ordered_semiring linarith.comp)) : set.infinite h0 := sorry --non-trivial
lemma new_lemma_153743 (h0 : functor.add_const (uniform_space (has_to_string linarith.comp)) environment.implicit_infer_kind) : @separated_space.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_to_string.{0} linarith.comp)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_153744 (h1 : ring (complete_semilattice_Sup (has_inv char))) : rank_condition (complete_semilattice_Sup (has_inv char)) := sorry --non-trivial
lemma new_lemma_153745 (h0 : set (denumerable string_imp)) : set.infinite h0 := sorry --non-trivial
lemma new_lemma_153746 (h0 : has_mem.mem (random_gen num) has_emptyc.emptyc) : @rank_condition.{0} (random_gen.{0} num) (@finset.pi.empty.{1 0} Type ring.{0} (random_gen.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_153747 (h0 : cancel_comm_monoid_with_zero (normed_lattice_add_comm_group (boolean_algebra Type))) : unique_factorization_monoid (normed_lattice_add_comm_group (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_153748 (h0 : fin has_zero.zero) : @sequential_space.{0} subsingleton_info (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) subsingleton_info)  := sorry --non-trivial
lemma new_lemma_153749 (h0 : complete_lattice (boolean_algebra (has_add (has_add (has_add (comm_group Type)))))) : is_compactly_generated (boolean_algebra (has_add (has_add (has_add (comm_group Type))))) := sorry --non-trivial
lemma new_lemma_153750 (h0 : topological_space (has_append (semi_normed_ring (set (random_gen char))))) : t0_space (has_append (semi_normed_ring (set (random_gen char)))) := sorry --non-trivial
lemma new_lemma_153751 (h0 : topological_space (has_zero (finset pos))) : irreducible_space (has_zero (finset pos)) := sorry --non-trivial
lemma new_lemma_153752 (h0 : ring (monoid_with_zero (option unsigned))) : strong_rank_condition (monoid_with_zero (option unsigned)) := sorry --non-trivial
lemma new_lemma_153753 (h0 : functor.add_const (group (boolean_algebra.core unsigned)) name) : @group.fg.{0} (boolean_algebra.core.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (boolean_algebra.core.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_153754 (h0 : not (topological_space (random_gen to_additive.value_type) -> false)) : @discrete_topology.{0} (random_gen.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_153755 (h0 : function.extfun nat fin) : @is_atomistic.{1} (boolean_algebra.{1} Type) (@matrix.vec_empty.{1} (complete_lattice.{1} (boolean_algebra.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_153756 (h0 : functor.add_const (topological_space (ring ennreal)) pos) : @t1_space.{0} (ring.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} ennreal)) pos h0)  := sorry --non-trivial
lemma new_lemma_153757 (h0 : ring (has_zero (has_add name))) : is_principal_ideal_ring (has_zero (has_add name)) := sorry --non-trivial
lemma new_lemma_153758 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @regular_space.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_153759 (h1 : monoid (measurable_space (random_gen string_imp))) : monoid.fg (measurable_space (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_153760 (h0 : not (uniform_space (with_one empty) -> false)) : @complete_space.{0} (with_one.{0} empty) (@classical.by_contradiction'.{1} (uniform_space.{0} (with_one.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_153761 (h0 : group (boolean_algebra (sub_neg_monoid Type))) : is_cyclic (boolean_algebra (sub_neg_monoid Type)) := sorry --non-trivial
lemma new_lemma_153762 (h0 : fin has_zero.zero) : @is_compactly_generated.{0} (has_Inf.{0} pos) (@matrix.vec_empty.{0} (complete_lattice.{0} (has_Inf.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_153763 (h0 : simple_graph (distrib (semi_normed_ring (mul_one_class fun_info)))) (h1 : distrib (semi_normed_ring (mul_one_class fun_info))) : simple_graph.support h0 h1 := sorry --non-trivial
lemma new_lemma_153764 (h0 : not (function.extfun Type topological_space -> false)) : @totally_separated_space.{0} (complete_semilattice_Sup.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (complete_semilattice_Sup.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_153765 (h0 : function.extfun Type ring) : @is_domain.{0} (comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153766 (h0 : topological_space (sub_neg_monoid (has_bot Type))) : t0_space (sub_neg_monoid (has_bot Type)) := sorry --non-trivial
lemma new_lemma_153767 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @rank_condition.{1} Type (@function.extfun_app.{3 2} (Type 1) ring.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 ring.{1}) Type)  := sorry --non-trivial
lemma new_lemma_153768 (h0 : generalized_boolean_algebra (has_bot pos) -> generalized_boolean_algebra (has_bot pos) -> Prop) : transitive h0 := sorry --non-trivial
lemma new_lemma_153769 (h0 : fin has_zero.zero) : @totally_disconnected_space.{1} (comm_semigroup.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (comm_semigroup.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_153770 (h0 : ring (semi_normed_comm_ring string_imp)) : rank_condition (semi_normed_comm_ring string_imp) := sorry --non-trivial
lemma new_lemma_153771 (h0 : topological_space (comm_group (has_to_string Type))) : totally_separated_space (comm_group (has_to_string Type)) := sorry --non-trivial
lemma new_lemma_153772 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153773 (h0 : complete_lattice (complete_distrib_lattice (option (option ennreal)))) : complete_lattice.is_Sup_finite_compact (complete_distrib_lattice (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_153774 (h0 : not (topological_space (measurable_space to_additive.value_type) -> false)) : @t0_space.{0} (measurable_space.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (measurable_space.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_153775 (h0 : semiring (has_zero (has_neg Type))) : is_noetherian_ring (has_zero (has_neg Type)) := sorry --non-trivial
lemma new_lemma_153776 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @is_principal_ideal_ring.{1} (sub_neg_monoid.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (sub_neg_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_153777 (h0 : ring znum) : is_domain znum := sorry --non-trivial
lemma new_lemma_153778 (h0 : topological_space (encodable (has_nnnorm linarith.comp_source))) : path_connected_space (encodable (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_153779 (h0 : group (with_bot num)) : normalizer_condition (with_bot num) := sorry --non-trivial
lemma new_lemma_153780 (h0 : filter (has_norm (random_gen empty))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_153781 (h0 : functor.add_const (topological_space (boolean_algebra Type)) (has_Inf (has_Inf linarith.comp))) : @regular_space.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (boolean_algebra.{1} Type)) (has_Inf.{0} (has_Inf.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_153782 (h0 : topological_space (boolean_algebra.core (option (option (option empty))))) : normal_space (boolean_algebra.core (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_153783 (h0 : not (function.extfun Type cancel_comm_monoid_with_zero -> false)) : @unique_factorization_monoid.{0} (left_cancel_semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type cancel_comm_monoid_with_zero.{0}) h0) (left_cancel_semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153784 (h0 : not (add_monoid (semiring linarith.comp) -> false)) : @add_monoid.fg.{0} (semiring.{0} linarith.comp) (@classical.by_contradiction'.{1} (add_monoid.{0} (semiring.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_153785 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_153786 (h0 : topological_space (ordered_cancel_add_comm_monoid (option (option (has_zero pos))))) : t1_space (ordered_cancel_add_comm_monoid (option (option (has_zero pos)))) := sorry --non-trivial
lemma new_lemma_153787 (h0 : ring (canonically_ordered_monoid linarith.comp)) : rank_condition (canonically_ordered_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_153788 (h0 : functor.comp topological_space has_neg_part name) : @path_connected_space.{0} (has_neg_part.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_neg_part.{0} name h0)  := sorry --non-trivial
lemma new_lemma_153789 (h0 : functor.add_const (monoid (has_zero environment.implicit_infer_kind)) unsigned) : @monoid.fg.{0} (has_zero.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (monoid.{0} (has_zero.{0} environment.implicit_infer_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153790 (h0 : function.extfun Type topological_space) : @t0_space.{0} (cancel_monoid.{0} (option.{0} ennreal)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (cancel_monoid.{0} (option.{0} ennreal)))  := sorry --non-trivial
lemma new_lemma_153791 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (has_neg.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_neg.{0} num))  := sorry --non-trivial
lemma new_lemma_153792 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} to_additive.value_type (@function.extfun_app.{2 1} Type topological_space.{0} h0 to_additive.value_type)  := sorry --non-trivial
lemma new_lemma_153793 (h0 : ring (plift nnreal)) : strong_rank_condition (plift nnreal) := sorry --non-trivial
lemma new_lemma_153794 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (simple_graph.{0} linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (simple_graph.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153795 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (non_assoc_semiring.{0} num) (@function.extfun_app.{2 1} Type monoid.{0} h0 (non_assoc_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_153796 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (canonically_ordered_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (canonically_ordered_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_153797 (h1 : topological_space (measurable_space num)) : locally_compact_space (measurable_space num) := sorry --non-trivial
lemma new_lemma_153798 (h0 : not (filter (measurable_space unsigned) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_153799 (h0 : function.extfun (finset Type) (has_mem.mem congr_arg_kind)) : @complete_lattice.is_Sup_finite_compact.{0} congr_arg_kind (@finset.pi.empty.{1 0} Type complete_lattice.{0} congr_arg_kind (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) congr_arg_kind) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_153800 (h0 : functor.add_const (complete_lattice (is_R_or_C empty)) unsigned) : @complete_lattice.is_Sup_finite_compact.{0} (is_R_or_C.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (is_R_or_C.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153801 (h0 : functor.add_const (topological_space (has_to_string Type)) environment.implicit_infer_kind) : @t0_space.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_to_string.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_153802 (h0 : ring (comm_group (has_add name))) : is_principal_ideal_ring (comm_group (has_add name)) := sorry --non-trivial
lemma new_lemma_153803 (h0 : functor.add_const (topological_space (boolean_algebra pos)) (has_pos_part linarith.comp)) : @totally_disconnected_space.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} pos)) (has_pos_part.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_153804 (h0 : group (add_comm_monoid (comm_group Type))) : group.fg (add_comm_monoid (comm_group Type)) := sorry --non-trivial
lemma new_lemma_153805 (h0 : not (add_group (non_assoc_semiring congr_arg_kind) -> false)) : @is_add_cyclic.{0} (non_assoc_semiring.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (add_group.{0} (non_assoc_semiring.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_153806 (h0 : functor.add_const (topological_space (has_to_string ennreal)) pos) : @t0_space.{0} (has_to_string.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} ennreal)) pos h0)  := sorry --non-trivial
lemma new_lemma_153807 (h0 : uniform_space (preorder (option empty))) : separated_space (preorder (option empty)) := sorry --non-trivial
lemma new_lemma_153808 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (normed_comm_ring.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_comm_ring.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_153809 (h0 h1 : multiset (normed_field linarith.ineq)) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_153810 (h0 : set (semi_normed_ring (has_nnnorm (add_comm_monoid linarith.ineq)))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_153811 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (normed_group.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_group.{0} num))  := sorry --non-trivial
lemma new_lemma_153812 (h0 : functor.add_const (ordered_comm_monoid (has_neg linarith.comp)) Type) : @has_exists_mul_of_le.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (has_neg.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_153813 (h0 : ring (has_pos_part (canonically_linear_ordered_monoid name))) : strong_rank_condition (has_pos_part (canonically_linear_ordered_monoid name)) := sorry --non-trivial
lemma new_lemma_153814 (h0 : prod (has_nndist num) (has_nndist num)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_153815 (h0 : topological_space (has_union num)) : totally_separated_space (has_union num) := sorry --non-trivial
lemma new_lemma_153816 (h0 : functor.add_const (function.extfun (Type 1) group) (has_Inf (has_Inf (has_Inf pos)))) : @is_cyclic.{1} (finset.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) (has_Inf.{0} (has_Inf.{0} (has_Inf.{0} pos))) h0) (finset.{1} Type))  := sorry --non-trivial
lemma new_lemma_153817 (h0 : ordered_add_comm_monoid (comm_semigroup (sub_neg_monoid (has_pos_part (sub_neg_monoid real))))) : archimedean (comm_semigroup (sub_neg_monoid (has_pos_part (sub_neg_monoid real)))) := sorry --non-trivial
lemma new_lemma_153818 (h0 : functor.add_const (ring (comm_group name)) name) : @rank_condition.{0} (comm_group.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (comm_group.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_153819 (h0 : functor.add_const (complete_lattice (finset unsigned)) empty) : @complete_lattice.is_Sup_finite_compact.{0} (finset.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (finset.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_153820 (h0 : fin has_zero.zero) : @is_atomistic.{1} (generalized_boolean_algebra.{1} Type) (@matrix.vec_empty.{1} (complete_lattice.{1} (generalized_boolean_algebra.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_153821 (h0 : topological_space (sub_neg_monoid (has_Inf (has_Inf (has_Inf pos))))) : normal_space (sub_neg_monoid (has_Inf (has_Inf (has_Inf pos)))) := sorry --non-trivial
lemma new_lemma_153822 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (@id.{2} Type fun_info) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (@id.{2} Type fun_info))  := sorry --non-trivial
lemma new_lemma_153823 (h0 : topological_space (ordered_comm_monoid (has_Inf real))) : preconnected_space (ordered_comm_monoid (has_Inf real)) := sorry --non-trivial
lemma new_lemma_153824 (h0 : topological_space (with_bot (comm_ring string_imp))) : t0_space (with_bot (comm_ring string_imp)) := sorry --non-trivial
lemma new_lemma_153825 (h0 : cancel_comm_monoid_with_zero (has_bot (has_Inf (has_pos_part real)))) : unique_factorization_monoid (has_bot (has_Inf (has_pos_part real))) := sorry --non-trivial
lemma new_lemma_153826 (h0 : add_monoid (simple_graph (has_neg (has_add Type)))) : add_monoid.fg (simple_graph (has_neg (has_add Type))) := sorry --non-trivial
lemma new_lemma_153827 (h0 : functor.add_const Prop (has_neg (finset Type))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_153828 (h0 : not (group (complete_linear_order congr_arg_kind) -> false)) : @group.fg.{0} (complete_linear_order.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (group.{0} (complete_linear_order.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_153829 (h0 : function.extfun Type group) : @group.fg.{0} (random_gen.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} h0 (random_gen.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153830 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (add_group.{0} num) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (add_group.{0} num))  := sorry --non-trivial
lemma new_lemma_153831 (h0 : Prop) (h1 : punit) : category_theory.hom_of_element h0 h1 := sorry --non-trivial
lemma new_lemma_153832 (h0 : function.extfun nat fin) : @group.fg.{1} (has_pos_part.{1} Type) (@matrix.vec_empty.{1} (group.{1} (has_pos_part.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_153833 (h0 : ring (has_to_string (add_cancel_monoid pos))) : is_domain (has_to_string (add_cancel_monoid pos)) := sorry --non-trivial
lemma new_lemma_153834 (h0 : finset (option empty)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_153835 (h0 : topological_space (non_unital_non_assoc_semiring char)) (h1 : preorder (non_unital_non_assoc_semiring char)) : order_topology (non_unital_non_assoc_semiring char) := sorry --non-trivial
lemma new_lemma_153836 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (has_one.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_one.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153837 (h0 : list (distrib_lattice (has_norm (has_norm (has_ssubset (random_gen fun_info)))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153838 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @topological_space.separable_space.{1} (has_pos_part.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (has_pos_part.{1} Type))  := sorry --non-trivial
lemma new_lemma_153839 (h3 : function.extfun Type topological_space) : @path_connected_space.{0} linarith.comp_source (@function.extfun_app.{2 1} Type topological_space.{0} h3 linarith.comp_source)  := sorry --non-trivial
lemma new_lemma_153840 (h0 : semiring (has_nndist (finset linarith.comp))) : is_noetherian_ring (has_nndist (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_153841 (h0 : ring (has_norm (has_top linarith.ineq))) : rank_condition (has_norm (has_top linarith.ineq)) := sorry --non-trivial
lemma new_lemma_153842 (h0 : functor.comp group has_nndist name) : @is_simple_group.{0} (has_nndist.{0} name) (@functor.comp.run.{0 0 0} group.{0} has_nndist.{0} name (@functor.comp.run.{0 0 0} group.{0} has_nndist.{0} name (@functor.comp.run.{0 0 0} group.{0} has_nndist.{0} name h0)))  := sorry --non-trivial
lemma new_lemma_153843 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (canonically_linear_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type monoid.{0} h0 (canonically_linear_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_153844 (h0 : group (measurable_space (has_top congr_arg_kind))) : normalizer_condition (measurable_space (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_153845 (h0 : add_monoid (add_cancel_monoid (add_comm_monoid (boolean_algebra.core (add_comm_monoid Type))))) : add_monoid.fg (add_cancel_monoid (add_comm_monoid (boolean_algebra.core (add_comm_monoid Type)))) := sorry --non-trivial
lemma new_lemma_153846 (h0 : topological_space (cancel_monoid (option ennreal))) : normal_space (cancel_monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_153847 (h0 : topological_space (add_right_cancel_monoid num)) : topological_space.separable_space (add_right_cancel_monoid num) := sorry --non-trivial
lemma new_lemma_153848 (h0 : functor.add_const (complete_lattice (is_R_or_C empty)) num) : @complete_lattice.is_Sup_finite_compact.{0} (is_R_or_C.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (is_R_or_C.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_153849 (h0 : function.extfun Type topological_space) : regular_space real := sorry --non-trivial
lemma new_lemma_153850 (h0 : fin has_zero.zero) : @has_exists_mul_of_le.{0} (canonically_ordered_monoid.{0} real) (@matrix.vec_empty.{0} (ordered_comm_monoid.{0} (canonically_ordered_monoid.{0} real)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_153851 (h0 : topological_space (uniform_space (metric_space (mul_one_class string_imp)))) : totally_disconnected_space (uniform_space (metric_space (mul_one_class string_imp))) := sorry --non-trivial
lemma new_lemma_153852 (h0 : functor.add_const (filter (has_add linarith.comp)) environment.implicit_infer_kind) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153853 (h0 : topological_space (semiring (has_top (has_top linarith.ineq)))) : totally_disconnected_space (semiring (has_top (has_top linarith.ineq))) := sorry --non-trivial
lemma new_lemma_153854 (h0 : topological_space (has_pos_part name)) : preirreducible_space (has_pos_part name) := sorry --non-trivial
lemma new_lemma_153855 (h0 : functor.add_const (topological_space (comm_group Type)) linarith.comp) : @t1_space.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (comm_group.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153856 (h0 : functor.add_const (filter (boolean_algebra.core name)) name) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153857 (h0 : topological_space (finset (has_add name))) : irreducible_space (finset (has_add name)) := sorry --non-trivial
lemma new_lemma_153858 (h0 : function.extfun Type group) : @group.fg.{0} (normed_comm_ring.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (normed_comm_ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153859 (h0 : topological_space (has_top (has_norm (has_norm (has_norm empty))))) : preirreducible_space (has_top (has_norm (has_norm (has_norm empty)))) := sorry --non-trivial
lemma new_lemma_153860 (h0 : functor.add_const (cancel_comm_monoid_with_zero (normed_comm_ring pos)) pos) : @unique_factorization_monoid.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (normed_comm_ring.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_153861 (h0 : filter (has_nndist (option (option (option empty))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_153862 (h0 : group (normed_comm_ring pos)) : normalizer_condition (normed_comm_ring pos) := sorry --non-trivial
lemma new_lemma_153863 (h0 : complete_lattice (ordered_comm_ring (has_pos_part Type))) : complete_lattice.is_Sup_finite_compact (ordered_comm_ring (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_153864 (h0 : topological_space (generalized_boolean_algebra name)) : normal_space (generalized_boolean_algebra name) := sorry --non-trivial
lemma new_lemma_153865 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (linear_ordered_add_comm_group.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (linear_ordered_add_comm_group.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_153866 (h0 : functor.add_const (group (left_cancel_semigroup linarith.comp)) pos) : @normalizer_condition.{0} (left_cancel_semigroup.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (left_cancel_semigroup.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_153867 (h0 : to_additive.value_type -> to_additive.value_type) : set.subsingleton (function.periodic_pts h0) := sorry --non-trivial
lemma new_lemma_153868 (h0 : not (ring (non_assoc_semiring unsigned) -> false)) : @is_principal_ideal_ring.{0} (non_assoc_semiring.{0} unsigned) (@classical.by_contradiction'.{1} (ring.{0} (non_assoc_semiring.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_153869 (h0 : topological_space (boolean_algebra.core (complete_distrib_lattice unsigned))) : loc_path_connected_space (boolean_algebra.core (complete_distrib_lattice unsigned)) := sorry --non-trivial
lemma new_lemma_153870 (h0 : list (with_zero (random_gen string_imp))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153871 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_star.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_star.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153872 (h0 : monoid (has_union linarith.comp)) : monoid.fg (has_union linarith.comp) := sorry --non-trivial
lemma new_lemma_153873 (h0 : topological_space (semiring (semiring (semiring (semiring (semiring (semiring empty))))))) : locally_compact_space (semiring (semiring (semiring (semiring (semiring (semiring empty)))))) := sorry --non-trivial
lemma new_lemma_153874 (h0 : topological_space (add_cancel_monoid (has_to_string Type))) : topological_space.separable_space (add_cancel_monoid (has_to_string Type)) := sorry --non-trivial
lemma new_lemma_153875 (h0 : semiring (cancel_monoid unsigned)) : is_noetherian_ring (cancel_monoid unsigned) := sorry --non-trivial
lemma new_lemma_153876 (h0 : ring (mul_zero_class (canonically_ordered_comm_semiring (has_add name)))) : rank_condition (mul_zero_class (canonically_ordered_comm_semiring (has_add name))) := sorry --non-trivial
lemma new_lemma_153877 (h0 : ring (add_group (has_top (has_top congr_arg_kind)))) : is_domain (add_group (has_top (has_top congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_153878 (h0 : functor.add_const (topological_space (complete_distrib_lattice linarith.comp)) (has_nndist pos)) : @t0_space.{0} (complete_distrib_lattice.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} linarith.comp)) (has_nndist.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_153879 (h0 : ring (has_neg (has_to_string pos))) : is_domain (has_neg (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_153880 (h0 : complete_lattice (has_ssubset (random_gen (random_gen linarith.ineq)))) : complete_lattice.is_Sup_finite_compact (has_ssubset (random_gen (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_153881 (h0 : function.extfun Type group) : @normalizer_condition.{0} (simple_graph.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (simple_graph.{0} empty))  := sorry --non-trivial
lemma new_lemma_153882 (h0 : topological_space (has_append (has_nnnorm (comm_ring linarith.comp_source)))) : t0_space (has_append (has_nnnorm (comm_ring linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_153883 (h0 : functor.comp ring has_zero Type) : @strong_rank_condition.{1} (has_zero.{1} Type) (@functor.comp.run.{1 1 1} ring.{1} has_zero.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_153884 (h0 : topological_space (has_nndist (boolean_algebra linarith.comp))) : discrete_topology (has_nndist (boolean_algebra linarith.comp)) := sorry --non-trivial
lemma new_lemma_153885 (h0 : topological_space (boolean_algebra.core congr_arg_kind)) : preirreducible_space (boolean_algebra.core congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153886 (h0 : ring (add_group (metric_space empty))) : is_domain (add_group (metric_space empty)) := sorry --non-trivial
lemma new_lemma_153887 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (monoid_with_zero.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid_with_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_153888 (h0 : ring (has_norm (semiring linarith.comp))) : strong_rank_condition (has_norm (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_153889 (h0 : semiring (boolean_algebra.core (has_add (has_add Type)))) : is_noetherian_ring (boolean_algebra.core (has_add (has_add Type))) := sorry --non-trivial
lemma new_lemma_153890 (h0 : monoid (comm_semigroup (sub_neg_monoid (sub_neg_monoid real)))) : monoid.fg (comm_semigroup (sub_neg_monoid (sub_neg_monoid real))) := sorry --non-trivial
lemma new_lemma_153891 (h0 : not (add_monoid (linear_ordered_semiring num) -> false)) : @add_monoid.fg.{0} (linear_ordered_semiring.{0} num) (@classical.by_contradiction'.{1} (add_monoid.{0} (linear_ordered_semiring.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_153892 (h0 : functor.add_const (ring (add_cancel_monoid unsigned)) unsigned) : @rank_condition.{0} (add_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (add_cancel_monoid.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153893 (h0 : group (cancel_monoid (has_add (boolean_algebra.core Type)))) : is_simple_group (cancel_monoid (has_add (boolean_algebra.core Type))) := sorry --non-trivial
lemma new_lemma_153894 (h0 : complete_lattice (denumerable string_imp)) : is_compactly_generated (denumerable string_imp) := sorry --non-trivial
lemma new_lemma_153895 (h0 : add_group (denumerable (random_gen (random_gen linarith.comp_source)))) : is_add_cyclic (denumerable (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_153896 (h0 : complete_lattice (has_zero (finset linarith.comp))) : is_compactly_generated (has_zero (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_153897 (h0 : functor.add_const (topological_space (boolean_algebra.core Type)) unsigned) : @preirreducible_space.{1} (boolean_algebra.core.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (boolean_algebra.core.{1} Type)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153898 (h0 : not (complete_lattice (has_emptyc linarith.comp_source) -> false)) : @is_atomistic.{0} (has_emptyc.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_emptyc.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_153899 (h0 : group (has_top congr_arg_kind)) : normalizer_condition (has_top congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153900 (h0 : functor.add_const (add_group (ordered_comm_ring pos)) name) : @is_add_cyclic.{0} (ordered_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (add_group.{0} (ordered_comm_ring.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_153901 (h0 : functor.add_const (monoid (linear_ordered_field unsigned)) num) : @monoid.fg.{0} (linear_ordered_field.{0} unsigned) (@functor.add_const.run.{0 0} (monoid.{0} (linear_ordered_field.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_153902 (h0 : list (dlist linarith.comp_source)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_153903 (h4 : ring (semi_normed_comm_ring string_imp)) : is_domain (semi_normed_comm_ring string_imp) := sorry --non-trivial
lemma new_lemma_153904 (h0 : finset (has_neg (option (mul_zero_class (option unsigned))))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_153905 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (complete_distrib_lattice.{0} name) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (complete_distrib_lattice.{0} name))  := sorry --non-trivial
lemma new_lemma_153906 (h0 : cancel_comm_monoid_with_zero (has_sub (semiring empty))) : unique_factorization_monoid (has_sub (semiring empty)) := sorry --non-trivial
lemma new_lemma_153907 (h0 : topological_space (monoid_with_zero pos)) : t1_space (monoid_with_zero pos) := sorry --non-trivial
lemma new_lemma_153908 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @unique_factorization_monoid.{0} (ring.{0} ennreal) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 cancel_comm_monoid_with_zero.{0}) (ring.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_153909 (h0 : uniform_space (denumerable (random_gen linarith.ineq))) : complete_space (denumerable (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_153910 (h0 : preorder enat) (h1 : set enat) : set.is_pwo h1 := sorry --non-trivial
lemma new_lemma_153911 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @has_exists_mul_of_le.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) ordered_comm_monoid.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 ordered_comm_monoid.{1}) (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_153912 (h0 : topological_space (has_nndist (has_add pos))) : preconnected_space (has_nndist (has_add pos)) := sorry --non-trivial
lemma new_lemma_153913 (h0 : not (topological_space (random_gen to_additive.value_type) -> false)) : @path_connected_space.{0} (random_gen.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_153914 (h0 : group (ring (has_Inf linarith.comp))) : is_simple_group (ring (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_153915 (h0 : functor.add_const (ring (mul_zero_class name)) unsigned) : @strong_rank_condition.{0} (mul_zero_class.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (mul_zero_class.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_153916 (h0 : ring (has_one (semiring (semiring empty)))) : rank_condition (has_one (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_153917 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (group_with_zero.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (group_with_zero.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_153918 (h0 : ordered_add_comm_monoid (free_add_monoid unsigned)) : archimedean (free_add_monoid unsigned) := sorry --non-trivial
lemma new_lemma_153919 (h0 : monoid (ordered_comm_monoid (has_nndist linarith.comp))) : monoid.fg (ordered_comm_monoid (has_nndist linarith.comp)) := sorry --non-trivial
lemma new_lemma_153920 (h1 : topological_space (topological_space linarith.ineq)) : totally_disconnected_space (topological_space linarith.ineq) := sorry --non-trivial
lemma new_lemma_153921 (h0 : functor.add_const (list (finset Type)) (ring (has_to_string (has_neg (comm_group Type))))) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153922 (h0 : not (topological_space (simple_graph reducibility_hints) -> false)) : @totally_disconnected_space.{0} (simple_graph.{0} reducibility_hints) (@classical.by_contradiction'.{1} (topological_space.{0} (simple_graph.{0} reducibility_hints)) h0)  := sorry --non-trivial
lemma new_lemma_153923 (h0 : topological_space (has_bot (sub_neg_monoid real))) : path_connected_space (has_bot (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_153924 (h0 : ring (pseudo_metric_space (option (option (option ennreal))))) : is_principal_ideal_ring (pseudo_metric_space (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_153925 (h0 : topological_space (semigroup (finset linarith.comp))) : topological_space.separable_space (semigroup (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_153926 (h0 : cancel_comm_monoid_with_zero (has_sub unsigned)) : unique_factorization_monoid (has_sub unsigned) := sorry --non-trivial
lemma new_lemma_153927 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_153928 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (pseudo_metric_space.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (pseudo_metric_space.{0} pos))  := sorry --non-trivial
lemma new_lemma_153929 (h0 : function.extfun nat fin) : @normalizer_condition.{0} (comm_semigroup.{0} real) (@matrix.vec_empty.{0} (group.{0} (comm_semigroup.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_153930 (h0 : filter (pseudo_metric_space pos)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_153931 (h0 : functor.add_const (ordered_comm_monoid (has_zero linarith.comp)) pos) : @has_exists_mul_of_le.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (has_zero.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_153932 (h0 : topological_space (has_pos_part real)) : topological_space.separable_space (has_pos_part real) := sorry --non-trivial
lemma new_lemma_153933 (h0 h1 : multiset (has_ssubset reducibility_hints)) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_153934 (h0 : functor.add_const (topological_space (ordered_cancel_add_comm_monoid ennreal)) ennreal) : @t1_space.{0} (ordered_cancel_add_comm_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_cancel_add_comm_monoid.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_153935 (h0 : topological_space (ordered_comm_ring (has_neg (has_add real)))) : normal_space (ordered_comm_ring (has_neg (has_add real))) := sorry --non-trivial
lemma new_lemma_153936 (h2 : ring (has_ssubset string.iterator_imp)) : is_domain (has_ssubset string.iterator_imp) := sorry --non-trivial
lemma new_lemma_153937 (h0 : topological_space (has_inner ennreal ennreal)) : normal_space (has_inner ennreal ennreal) := sorry --non-trivial
lemma new_lemma_153938 (h0 : not (function.extfun Type topological_space -> false)) : @locally_compact_space.{0} (linear_ordered_add_comm_group.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (linear_ordered_add_comm_group.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_153939 (h0 : ring (has_emptyc (random_gen (random_gen linarith.ineq)))) : is_domain (has_emptyc (random_gen (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_153940 (h0 : functor.add_const (function.extfun (Type 1) group) (finset environment.implicit_infer_kind)) : @group.fg.{1} Type (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) (finset.{0} environment.implicit_infer_kind) h0) Type)  := sorry --non-trivial
lemma new_lemma_153941 (h0 : not (function.extfun Type topological_space -> false)) : @t0_space.{0} (has_top.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_top.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153942 (h0 : fin has_zero.zero) : matrix.vec_empty (id (matrix.vec_empty h0)) := sorry --non-trivial
lemma new_lemma_153943 (h0 : ring (canonically_ordered_monoid linarith.comp)) : strong_rank_condition (canonically_ordered_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_153944 (h0 : topological_space (complete_distrib_lattice (has_to_string (has_to_string pos)))) : path_connected_space (complete_distrib_lattice (has_to_string (has_to_string pos))) := sorry --non-trivial
lemma new_lemma_153945 (h0 : topological_space (monoid congr_arg_kind)) : path_connected_space (monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153946 (h0 : fin has_zero.zero) : @is_domain.{0} (comm_semigroup.{0} real) (@matrix.vec_empty.{0} (ring.{0} (comm_semigroup.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_153947 (h0 : function.extfun Type topological_space) : @regular_space.{0} (has_zero.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_zero.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_153948 (h0 : functor.add_const (function.extfun Type ring) Type) : @rank_condition.{0} (has_pos_part.{0} real) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type ring.{0}) Type h0) (has_pos_part.{0} real))  := sorry --non-trivial
lemma new_lemma_153949 (h0 : fin has_zero.zero) : @separated_space.{1} (has_bot.{1} Type) (@matrix.vec_empty.{1} (uniform_space.{1} (has_bot.{1} Type)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_153950 (h1 : function.extfun Type topological_space) : @path_connected_space.{0} fun_info (@function.extfun_app.{2 1} Type topological_space.{0} h1 fun_info)  := sorry --non-trivial
lemma new_lemma_153951 (h0 : functor.add_const (list (ordered_cancel_add_comm_monoid unsigned)) unsigned) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153952 (h0 : filter (filter congr_arg_kind)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_153953 (h0 : group (normed_field (normed_field reducibility_hints))) : is_cyclic (normed_field (normed_field reducibility_hints)) := sorry --non-trivial
lemma new_lemma_153954 (h0 : function.extfun Type topological_space) : @regular_space.{0} (boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_153955 (h0 : ordered_comm_monoid (ordered_comm_ring Type)) : has_exists_mul_of_le (ordered_comm_ring Type) := sorry --non-trivial
lemma new_lemma_153956 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @group.fg.{0} (has_inv.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) group.{0}) (has_inv.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_153957 (h0 : functor.add_const (topological_space (pseudo_metric_space pos)) pos) : @discrete_topology.{0} (pseudo_metric_space.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (pseudo_metric_space.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_153958 (h0 : uniform_space (has_add (ring (has_add Type)))) : complete_space (has_add (ring (has_add Type))) := sorry --non-trivial
lemma new_lemma_153959 (h0 : topological_space (normed_comm_ring (comm_group (comm_group (comm_group (comm_group pos)))))) : preconnected_space (normed_comm_ring (comm_group (comm_group (comm_group (comm_group pos))))) := sorry --non-trivial
lemma new_lemma_153960 (h0 : filter (ring (finset linarith.comp))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_153961 (h0 : functor.add_const (prod name name) empty) : id_rel (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_153962 (h0 : topological_space (add_cancel_monoid (has_pos_part Type))) : locally_compact_space (add_cancel_monoid (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_153963 (h0 : functor.add_const (function.extfun Type ordered_add_comm_monoid) linarith.comp) : @archimedean.{0} (add_cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_add_comm_monoid.{0}) linarith.comp h0) (add_cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_153964 (h0 : functor.add_const (complete_lattice (left_cancel_semigroup empty)) (semiring (semiring num))) : @is_compactly_generated.{0} (left_cancel_semigroup.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (left_cancel_semigroup.{0} empty)) (semiring.{0} (semiring.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_153965 (h0 : ring (with_bot congr_arg_kind)) : rank_condition (with_bot congr_arg_kind) := sorry --non-trivial
lemma new_lemma_153966 (h0 : add_group num) : is_add_cyclic num := sorry --non-trivial
lemma new_lemma_153967 (h0 : list (free_add_monoid empty)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_153968 (h0 : ring (finset (has_nndist pos))) : is_domain (finset (has_nndist pos)) := sorry --non-trivial
lemma new_lemma_153969 (h1 : not (topological_space (has_ssubset string_imp) -> false)) : @t0_space.{0} (has_ssubset.{0} string_imp) (@classical.by_contradiction'.{1} (topological_space.{0} (has_ssubset.{0} string_imp)) h1)  := sorry --non-trivial
lemma new_lemma_153970 (h0 : functor.add_const (ordered_comm_monoid (boolean_algebra pos)) linarith.comp) : @has_exists_mul_of_le.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (boolean_algebra.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_153971 (h0 : Prop) : h0 := sorry --non-trivial
lemma new_lemma_153972 (h0 : group (comm_semigroup (comm_semigroup (comm_semigroup (has_bot real))))) : is_simple_group (comm_semigroup (comm_semigroup (comm_semigroup (has_bot real)))) := sorry --non-trivial
lemma new_lemma_153973 (h0 : group znum) : normalizer_condition znum := sorry --non-trivial
lemma new_lemma_153974 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @unique_factorization_monoid.{0} (pseudo_metric_space.{0} ennreal) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 cancel_comm_monoid_with_zero.{0}) (pseudo_metric_space.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_153975 (h1 : ring (complete_semilattice_Sup to_additive.value_type)) : is_domain (complete_semilattice_Sup to_additive.value_type) := sorry --non-trivial
lemma new_lemma_153976 (h0 : ring (mul_zero_class (option (option empty)))) : is_domain (mul_zero_class (option (option empty))) := sorry --non-trivial
lemma new_lemma_153977 (h1 : semiring string.iterator_imp) (h2 : ideal string.iterator_imp) : ideal.is_prime h2 := sorry --non-trivial
lemma new_lemma_153978 (h0 : ring (id (semiring congr_arg_kind))) : is_domain (id (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_153979 (h0 : add_group (has_top (has_norm (semiring fun_info)))) : is_add_cyclic (has_top (has_norm (semiring fun_info))) := sorry --non-trivial
lemma new_lemma_153980 (h0 : topological_space (with_bot (random_gen (random_gen (random_gen (random_gen string_imp)))))) : totally_separated_space (with_bot (random_gen (random_gen (random_gen (random_gen string_imp))))) := sorry --non-trivial
lemma new_lemma_153981 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (has_ssubset.{0} string_imp) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_ssubset.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_153982 (h0 : functor.add_const (function.extfun Type ordered_comm_monoid) pos) : @has_exists_mul_of_le.{0} (finset.{0} name) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) pos h0) (finset.{0} name))  := sorry --non-trivial
lemma new_lemma_153983 (h0 : group (measurable_space linarith.comp)) : group.fg (measurable_space linarith.comp) := sorry --non-trivial
lemma new_lemma_153984 (h0 : not (ring (has_div string_imp) -> false)) : @rank_condition.{0} (has_div.{0} string_imp) (@classical.by_contradiction'.{1} (ring.{0} (has_div.{0} string_imp)) h0)  := sorry --non-trivial
lemma new_lemma_153985 (h0 : complete_lattice (has_one (semiring (has_top linarith.comp)))) : is_atomistic (has_one (semiring (has_top linarith.comp))) := sorry --non-trivial
lemma new_lemma_153986 (h0 : complete_lattice (has_pos_part (has_Inf (has_add Type)))) : is_compactly_generated (has_pos_part (has_Inf (has_add Type))) := sorry --non-trivial
lemma new_lemma_153987 (h0 : functor.add_const (topological_space (measurable_space.dynkin_system num)) num) : @preirreducible_space.{0} (measurable_space.dynkin_system.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (measurable_space.dynkin_system.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_153988 (h0 : uniform_space (with_bot (semiring linarith.comp))) : complete_space (with_bot (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_153989 (h2 : function.extfun Type add_group) : @is_add_cyclic.{0} (has_add.{0} fun_info) (@function.extfun_app.{2 1} Type add_group.{0} h2 (has_add.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_153990 (h0 : topological_space to_additive.value_type) : t0_space to_additive.value_type := sorry --non-trivial
lemma new_lemma_153991 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (semiring.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (semiring.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_153992 (h0 : uniform_space (normed_comm_ring (comm_group (comm_group Type)))) : complete_space (normed_comm_ring (comm_group (comm_group Type))) := sorry --non-trivial
lemma new_lemma_153993 (h0 : function.extfun Type ring) : @is_domain.{0} (ordered_ring.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (ordered_ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_153994 (h0 : topological_space (generalized_boolean_algebra (has_add (has_Inf linarith.comp)))) : t0_space (generalized_boolean_algebra (has_add (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_153995 (h0 : topological_space (normed_comm_ring (normed_comm_ring environment.implicit_infer_kind))) : irreducible_space (normed_comm_ring (normed_comm_ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_153996 (h0 : ordered_comm_monoid (add_cancel_monoid (has_add pos))) : has_exists_mul_of_le (add_cancel_monoid (has_add pos)) := sorry --non-trivial
lemma new_lemma_153997 (h0 : not (function.extfun Type filter -> false)) : filter.ne_bot (function.extfun_app (classical.by_contradiction' h0) (id congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_153998 (h0 : uniform_space (topological_space (denumerable (denumerable (denumerable reducibility_hints))))) : complete_space (topological_space (denumerable (denumerable (denumerable reducibility_hints)))) := sorry --non-trivial
lemma new_lemma_153999 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (boolean_algebra.core.{0} ennreal) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (boolean_algebra.core.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_154000 (h0 : functor.add_const (monoid (has_neg (has_neg linarith.comp))) (comm_group unsigned)) : @monoid.fg.{0} (has_neg.{0} (has_neg.{0} linarith.comp)) (@functor.add_const.run.{0 0} (monoid.{0} (has_neg.{0} (has_neg.{0} linarith.comp))) (comm_group.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_154001 (h0 : ring (has_add (finset pos))) : is_domain (has_add (finset pos)) := sorry --non-trivial
lemma new_lemma_154002 (h0 : not (function.extfun Type topological_space -> false)) : @totally_separated_space.{0} (has_norm.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_norm.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_154003 (h0 : functor.add_const (ring (measurable_space.dynkin_system empty)) empty) : @strong_rank_condition.{0} (measurable_space.dynkin_system.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (measurable_space.dynkin_system.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_154004 (h0 : add_monoid (normed_comm_ring name)) : add_monoid.fg (normed_comm_ring name) := sorry --non-trivial
lemma new_lemma_154005 (h0 : function.extfun Type group) : @is_cyclic.{0} (has_ssubset.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} h0 (has_ssubset.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_154006 (h0 : monoid (ring (has_add pos))) : monoid.fg (ring (has_add pos)) := sorry --non-trivial
lemma new_lemma_154007 (h0 : complete_lattice (has_one linarith.comp)) : is_compactly_generated (has_one linarith.comp) := sorry --non-trivial
lemma new_lemma_154008 (h0 : group (normed_group (semiring (semiring (semiring (semiring unsigned)))))) : normalizer_condition (normed_group (semiring (semiring (semiring (semiring unsigned))))) := sorry --non-trivial
lemma new_lemma_154009 (h0 : functor.add_const (list (boolean_algebra linarith.comp)) name) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_154010 (h0 : group (comm_group (has_nndist linarith.comp))) : group.fg (comm_group (has_nndist linarith.comp)) := sorry --non-trivial
lemma new_lemma_154011 (h0 : functor.add_const (cancel_comm_monoid_with_zero (option unsigned)) unsigned) : @unique_factorization_monoid.{0} (option.{0} unsigned) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (option.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_154012 (h0 : ring (boolean_algebra.core Type)) : strong_rank_condition (boolean_algebra.core Type) := sorry --non-trivial
lemma new_lemma_154013 (h0 : topological_space (has_nnnorm (distrib string.iterator_imp))) : totally_disconnected_space (has_nnnorm (distrib string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_154014 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (group_with_zero.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (group_with_zero.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_154015 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @group.fg.{1} (has_Inf.{1} Type) (@matrix.vec_empty.{1} (group.{1} (has_Inf.{1} Type)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_154016 (h0 : functor.add_const (functor.add_const (uniform_space linarith.comp) linarith.comp) pos) : @separated_space.{0} linarith.comp (@functor.add_const.run.{0 0} (uniform_space.{0} linarith.comp) linarith.comp (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (uniform_space.{0} linarith.comp) linarith.comp) pos h0))  := sorry --non-trivial
lemma new_lemma_154017 (h0 : ring (random_gen to_additive.value_type)) : rank_condition (random_gen to_additive.value_type) := sorry --non-trivial
lemma new_lemma_154018 (h0 : functor.add_const (group (has_zero unsigned)) Type) : @is_cyclic.{0} (has_zero.{0} unsigned) (@functor.add_const.run.{0 1} (group.{0} (has_zero.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_154019 (h0 : topological_space (left_cancel_monoid (semiring num))) : topological_space.separable_space (left_cancel_monoid (semiring num)) := sorry --non-trivial
lemma new_lemma_154020 (h0 : list (boolean_algebra.core (comm_group (comm_group Type)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_154021 (h2 : topological_space (has_compl to_additive.value_type)) : t0_space (has_compl to_additive.value_type) := sorry --non-trivial
lemma new_lemma_154022 (h0 : topological_space (has_to_string (has_add (has_to_string Type)))) : locally_compact_space (has_to_string (has_add (has_to_string Type))) := sorry --non-trivial
lemma new_lemma_154023 (h0 : topological_space (comm_group (mul_zero_class name))) : regular_space (comm_group (mul_zero_class name)) := sorry --non-trivial
lemma new_lemma_154024 (h0 : functor.add_const (topological_space (has_neg_part name)) name) : @totally_separated_space.{0} (has_neg_part.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_154025 (h0 : functor.add_const (topological_space (cancel_monoid pos)) pos) : @regular_space.{0} (cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_154026 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (group_with_zero.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (group_with_zero.{0} num))  := sorry --non-trivial
lemma new_lemma_154027 (h0 : function.extfun Type group) : @is_simple_group.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} h0 (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154028 (h1 : ring (random_gen (has_ssubset fun_info))) : is_domain (random_gen (has_ssubset fun_info)) := sorry --non-trivial
lemma new_lemma_154029 (h0 : uniform_space (comm_ring environment.projection_info)) : complete_space (comm_ring environment.projection_info) := sorry --non-trivial
lemma new_lemma_154030 (h0 : fin has_zero.zero) : @t1_space.{0} (generalized_boolean_algebra.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (generalized_boolean_algebra.{0} real))  := sorry --non-trivial
lemma new_lemma_154031 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_154032 (h1 : function.extfun Type group) : @normalizer_condition.{0} (has_emptyc.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h1 (has_emptyc.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_154033 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (boolean_algebra name)) := sorry --non-trivial
lemma new_lemma_154034 (h0 : functor.add_const (topological_space (ring environment.implicit_infer_kind)) linarith.comp) : @t0_space.{0} (ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154035 (h0 : functor.add_const (ring (canonically_linear_ordered_monoid unsigned)) pos) : @is_principal_ideal_ring.{0} (canonically_linear_ordered_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (canonically_linear_ordered_monoid.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_154036 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (complete_semilattice_Sup.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_semilattice_Sup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154037 (h0 : function.extfun Type (functor.comp list has_neg_part)) : palindrome (functor.comp.run (function.extfun_app h0 name)) := sorry --non-trivial
lemma new_lemma_154038 (h0 : topological_space (ring (has_add environment.implicit_infer_kind))) : irreducible_space (ring (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_154039 (h0 : functor.add_const (function.extfun Type add_group) pos) : @is_add_cyclic.{0} (has_nndist.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type add_group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type add_group.{0}) pos h0) (has_nndist.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_154040 (h0 : topological_space (ordered_comm_ring (has_neg name))) : path_connected_space (ordered_comm_ring (has_neg name)) := sorry --non-trivial
lemma new_lemma_154041 (h0 : not (group (has_compl (comm_ring linarith.comp_source)) -> false)) : @is_cyclic.{0} (has_compl.{0} (comm_ring.{0} linarith.comp_source)) (@classical.by_contradiction'.{1} (group.{0} (has_compl.{0} (comm_ring.{0} linarith.comp_source))) h0)  := sorry --non-trivial
lemma new_lemma_154042 (h0 : group (complete_semilattice_Sup (random_gen (random_gen (random_gen fun_info))))) : group.fg (complete_semilattice_Sup (random_gen (random_gen (random_gen fun_info)))) := sorry --non-trivial
lemma new_lemma_154043 (h0 : topological_space (has_Sup (normed_linear_ordered_group unsigned))) : preirreducible_space (has_Sup (normed_linear_ordered_group unsigned)) := sorry --non-trivial
lemma new_lemma_154044 (h0 : functor.add_const (monoid (cancel_monoid pos)) (comm_group name)) : @monoid.fg.{0} (cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (monoid.{0} (cancel_monoid.{0} pos)) (comm_group.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_154045 (h0 : not (complete_lattice (has_one unsigned) -> false)) : @is_atomistic.{0} (has_one.{0} unsigned) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_one.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_154046 (h0 : fin has_zero.zero) : @discrete_topology.{0} (normed_lattice_add_comm_group.{0} (has_Inf.{0} linarith.comp)) (@matrix.vec_empty.{0} (topological_space.{0} (normed_lattice_add_comm_group.{0} (has_Inf.{0} linarith.comp))) h0)  := sorry --non-trivial
lemma new_lemma_154047 (h0 : ring (ordered_comm_monoid (has_Inf real))) : strong_rank_condition (ordered_comm_monoid (has_Inf real)) := sorry --non-trivial
lemma new_lemma_154048 (h1 : ring (has_nnnorm to_additive.value_type)) : strong_rank_condition (has_nnnorm to_additive.value_type) := sorry --non-trivial
lemma new_lemma_154049 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (pseudo_metric_space.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (pseudo_metric_space.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_154050 (h1 : normed_field std_gen -> normed_field std_gen) (h2 : normed_field std_gen) : function.periodic_pts h1 h2 := sorry --non-trivial
lemma new_lemma_154051 (h0 : list (has_nndist (comm_group name))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_154052 (h0 : topological_space (bin_tree (semiring (semiring (semiring num))))) : preirreducible_space (bin_tree (semiring (semiring (semiring num)))) := sorry --non-trivial
lemma new_lemma_154053 (h0 : complete_lattice (has_nndist num)) : is_compactly_generated (has_nndist num) := sorry --non-trivial
lemma new_lemma_154054 (h0 : add_group (has_norm linarith.comp)) : is_add_cyclic (has_norm linarith.comp) := sorry --non-trivial
lemma new_lemma_154055 (h0 : topological_space (has_ssubset (random_gen linarith.comp_source))) : t0_space (has_ssubset (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_154056 (h0 : topological_space (mul_one_class string_imp)) (h1 : preorder (mul_one_class string_imp)) : order_topology (mul_one_class string_imp) := sorry --non-trivial
lemma new_lemma_154057 (h0 : functor.add_const (topological_space (has_dist congr_arg_kind)) congr_arg_kind) : @preirreducible_space.{0} (has_dist.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_dist.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_154058 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_compl.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_compl.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_154059 (h0 : functor.add_const (topological_space (has_pos_part pos)) (has_neg (has_add name))) : @preconnected_space.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_pos_part.{0} pos)) (has_neg.{0} (has_add.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_154060 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : list.nodup (function.extfun_app (function.extfun_app h0 list) (measurable_space congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_154061 (h0 : not (complete_lattice (random_gen (semiring num)) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (random_gen.{0} (semiring.{0} num)) (@classical.by_contradiction'.{1} (complete_lattice.{0} (random_gen.{0} (semiring.{0} num))) h0)  := sorry --non-trivial
lemma new_lemma_154062 (h0 : topological_space environment.implicit_infer_kind) : irreducible_space environment.implicit_infer_kind := sorry --non-trivial
lemma new_lemma_154063 (h0 : topological_space (has_norm num)) : discrete_topology (has_norm num) := sorry --non-trivial
lemma new_lemma_154064 (h0 : ring (has_add (has_Inf (has_Inf (sub_neg_monoid (has_bot real)))))) : is_domain (has_add (has_Inf (has_Inf (sub_neg_monoid (has_bot real))))) := sorry --non-trivial
lemma new_lemma_154065 (h1 : topological_space (normed_group (random_gen linarith.ineq))) : totally_disconnected_space (normed_group (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_154066 (h0 : functor.add_const (function.extfun (Type 1) topological_space) Type) : @regular_space.{1} (comm_group.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) topological_space.{1}) Type h0) (comm_group.{1} Type))  := sorry --non-trivial
lemma new_lemma_154067 (h0 : not (topological_space (with_one unsigned) -> false)) : @preirreducible_space.{0} (with_one.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (with_one.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_154068 (h1 : has_neg (mul_one_class ereal)) (h2 : measurable_space (mul_one_class ereal)) : has_measurable_neg (mul_one_class ereal) := sorry --non-trivial
lemma new_lemma_154069 (h0 : fin has_zero.zero) : @loc_path_connected_space.{1} (generalized_boolean_algebra.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (generalized_boolean_algebra.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_154070 (h0 : topological_space (has_pos_part (sub_neg_monoid real))) : preconnected_space (has_pos_part (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_154071 (h0 : topological_space (comm_group (has_add (semigroup unsigned)))) : sequential_space (comm_group (has_add (semigroup unsigned))) := sorry --non-trivial
lemma new_lemma_154072 (h0 : ring (has_compl (mul_one_class string.iterator_imp))) : strong_rank_condition (has_compl (mul_one_class string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_154073 (h0 : with_bot (topological_space (metric_space unsigned))) (h1 : function.extfun (eq h0 has_bot.bot) (fun (x : eq h0 has_bot.bot), false)) : @normal_space.{0} (metric_space.{0} unsigned) (@with_bot.unbot.{0} (topological_space.{0} (metric_space.{0} unsigned)) h0 (@function.extfun_app.{0 0} (@eq.{1} (with_bot.{0} (topological_space.{0} (metric_space.{0} unsigned))) h0 (@has_bot.bot.{0} (with_bot.{0} (topological_space.{0} (metric_space.{0} unsigned))) (@with_bot.has_bot.{0} (topological_space.{0} (metric_space.{0} unsigned))))) (λ (x : @eq.{1} (with_bot.{0} (topological_space.{0} (metric_space.{0} unsigned))) h0 (@has_bot.bot.{0} (with_bot.{0} (topological_space.{0} (metric_space.{0} unsigned))) (@with_bot.has_bot.{0} (topological_space.{0} (metric_space.{0} unsigned))))), false) h1))  := sorry --non-trivial
lemma new_lemma_154074 (h3 : add_group (non_unital_non_assoc_semiring string_imp)) : is_add_cyclic (non_unital_non_assoc_semiring string_imp) := sorry --non-trivial
lemma new_lemma_154075 (h0 : complete_lattice (comm_semigroup (sub_neg_monoid real))) : is_atomistic (comm_semigroup (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_154076 (h0 : filter (measurable_space.dynkin_system (semiring empty))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154077 (h1 : function.extfun Type ring) : @rank_condition.{0} (add_left_cancel_monoid.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} h1 (add_left_cancel_monoid.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_154078 (h0 : has_mem.mem (has_emptyc (random_gen fun_info)) has_emptyc.emptyc) : @strong_rank_condition.{0} (has_emptyc.{0} (random_gen.{0} fun_info)) (@finset.pi.empty.{1 0} Type ring.{0} (has_emptyc.{0} (random_gen.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_154079 (h0 : functor.add_const (function.extfun Type finset) (has_neg name)) : finset.nonempty (function.extfun_app (functor.add_const.run h0) (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_154080 (h0 : not (has_mem.mem (normed_group linarith.comp_source) has_emptyc.emptyc -> false)) : @irreducible_space.{0} (normed_group.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type topological_space.{0} (normed_group.{0} linarith.comp_source) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (normed_group.{0} linarith.comp_source) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_154081 (h0 : list (comm_semigroup real)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_154082 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @regular_space.{0} (cancel_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (cancel_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_154083 (h0 : not (topological_space (with_one linarith.ineq) -> false)) : @totally_disconnected_space.{0} (with_one.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (with_one.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_154084 (h0 : functor.add_const (complete_lattice (has_pos_part environment.implicit_infer_kind)) pos) : @is_compactly_generated.{0} (has_pos_part.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_pos_part.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_154085 (h0 : filter (cancel_monoid (comm_group (comm_group (comm_group (comm_group Type)))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154086 (h0 : function.extfun Type (functor.comp topological_space canonically_ordered_comm_semiring)) : @path_connected_space.{0} (canonically_ordered_comm_semiring.{0} ennreal) (@functor.comp.run.{0 0 0} topological_space.{0} canonically_ordered_comm_semiring.{0} ennreal (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} canonically_ordered_comm_semiring.{0}) h0 ennreal))  := sorry --non-trivial
lemma new_lemma_154087 (h0 : linarith.ineq -> linarith.ineq -> linarith.ineq) : commutative h0 := sorry --non-trivial
lemma new_lemma_154088 (h0 : ring (complete_distrib_lattice (comm_group unsigned))) : is_domain (complete_distrib_lattice (comm_group unsigned)) := sorry --non-trivial
lemma new_lemma_154089 (h0 : topological_space (normed_comm_ring (has_to_string num))) : preirreducible_space (normed_comm_ring (has_to_string num)) := sorry --non-trivial
lemma new_lemma_154090 (h0 : functor.add_const (topological_space (has_to_string environment.implicit_infer_kind)) Type) : @preconnected_space.{0} (has_to_string.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (has_to_string.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_154091 (h0 : function.extfun Type (functor.add_const (ring (linear_order empty)))) : @is_domain.{0} (linear_order.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (linear_order.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ring.{0} (linear_order.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_154092 (h0 : functor.add_const (finset (semigroup linarith.comp)) (semigroup (has_neg linarith.comp))) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_154093 (h0 : group (boolean_algebra.core unsigned)) : is_cyclic (boolean_algebra.core unsigned) := sorry --non-trivial
lemma new_lemma_154094 (h0 : group (pseudo_metric_space (has_to_string num))) : is_simple_group (pseudo_metric_space (has_to_string num)) := sorry --non-trivial
lemma new_lemma_154095 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (comm_semigroup.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (comm_semigroup.{0} pos))  := sorry --non-trivial
lemma new_lemma_154096 (h0 : functor.add_const (filter (has_add pos)) environment.implicit_infer_kind) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_154097 (h0 : topological_space (generalized_boolean_algebra (has_add Type))) : preconnected_space (generalized_boolean_algebra (has_add Type)) := sorry --non-trivial
lemma new_lemma_154098 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (is_R_or_C.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type add_group.{0} h0 (is_R_or_C.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_154099 (h0 : topological_space (has_add (option ennreal))) : totally_separated_space (has_add (option ennreal)) := sorry --non-trivial
lemma new_lemma_154100 (h0 : complete_lattice (normed_comm_ring linarith.comp)) : is_compactly_generated (normed_comm_ring linarith.comp) := sorry --non-trivial
lemma new_lemma_154101 (h0 : functor.add_const (group (has_zero ennreal)) unsigned) : @normalizer_condition.{0} (has_zero.{0} ennreal) (@functor.add_const.run.{0 0} (group.{0} (has_zero.{0} ennreal)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_154102 (h0 : functor.add_const (group (semigroup unsigned)) (has_add environment.implicit_infer_kind)) : @is_simple_group.{0} (semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (semigroup.{0} unsigned)) (has_add.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_154103 (h1 : topological_space (with_one linarith.comp_source)) : totally_separated_space (with_one linarith.comp_source) := sorry --non-trivial
lemma new_lemma_154104 (h0 : group (id (semiring linarith.comp))) : is_cyclic (id (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_154105 (h0 : functor.add_const (topological_space (ordered_ring congr_arg_kind)) unsigned) : @t1_space.{0} (ordered_ring.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_ring.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_154106 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (semi_normed_comm_ring.{0} string_imp) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (semi_normed_comm_ring.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_154107 (h1 : set (linear_order std_gen)) : set.finite h1 := sorry --non-trivial
lemma new_lemma_154108 (h2 : ring (uniform_space string_imp)) : is_domain (uniform_space string_imp) := sorry --non-trivial
lemma new_lemma_154109 (h0 : topological_space (has_pos_part (has_add (has_pos_part linarith.comp)))) : loc_path_connected_space (has_pos_part (has_add (has_pos_part linarith.comp))) := sorry --non-trivial
lemma new_lemma_154110 (h0 : ordered_comm_monoid (option ennreal)) : has_exists_mul_of_le (option ennreal) := sorry --non-trivial
lemma new_lemma_154111 (h0 : function.extfun Type topological_space) : @normal_space.{0} (has_edist.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_edist.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154112 (h0 : semiring (boolean_algebra.core (ring (has_neg_part linarith.comp)))) : is_noetherian_ring (boolean_algebra.core (ring (has_neg_part linarith.comp))) := sorry --non-trivial
lemma new_lemma_154113 (h0 : ring (random_gen (distrib (has_nnnorm reducibility_hints)))) : rank_condition (random_gen (distrib (has_nnnorm reducibility_hints))) := sorry --non-trivial
lemma new_lemma_154114 (h0 : set (has_compl (has_nnnorm enat))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_154115 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (normed_linear_ordered_group.{0} empty) (@function.extfun_app.{2 1} Type monoid.{0} h0 (normed_linear_ordered_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_154116 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @totally_separated_space.{0} (ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154117 (h0 : function.extfun (Type 1) topological_space) : @loc_path_connected_space.{1} (cancel_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (cancel_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_154118 (h0 : add_monoid (add_cancel_comm_monoid (option unsigned))) : add_monoid.fg (add_cancel_comm_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_154119 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @path_connected_space.{0} (boolean_algebra.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (boolean_algebra.{0} pos)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_154120 (h0 : filter (distrib_lattice (has_ssubset to_additive.value_type))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154121 (h0 : ring (has_top (random_gen (comm_ring linarith.ineq)))) : rank_condition (has_top (random_gen (comm_ring linarith.ineq))) := sorry --non-trivial
lemma new_lemma_154122 (h1 : function.extfun (finset Type) (has_mem.mem (random_gen congr_arg_kind))) : @totally_separated_space.{0} (random_gen.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type topological_space.{0} (random_gen.{0} congr_arg_kind) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (random_gen.{0} congr_arg_kind)) h1 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_154123 (h0 : function.extfun Type group) : @normalizer_condition.{0} (complete_linear_order.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (complete_linear_order.{0} empty))  := sorry --non-trivial
lemma new_lemma_154124 (h0 : group (has_top (random_gen (random_gen (comm_ring (random_gen to_additive.value_type)))))) : group.fg (has_top (random_gen (random_gen (comm_ring (random_gen to_additive.value_type))))) := sorry --non-trivial
lemma new_lemma_154125 (h0 : finset (has_neg (option (option ennreal)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_154126 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (has_to_string.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_to_string.{0} pos))  := sorry --non-trivial
lemma new_lemma_154127 (h0 : topological_space (has_Inf (has_add (has_Inf (has_pos_part (has_Inf linarith.comp)))))) : preconnected_space (has_Inf (has_add (has_Inf (has_pos_part (has_Inf linarith.comp))))) := sorry --non-trivial
lemma new_lemma_154128 (h0 : functor.add_const (topological_space (comm_group pos)) linarith.comp) : @loc_path_connected_space.{0} (comm_group.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154129 (h0 : complete_lattice (denumerable (random_gen linarith.ineq))) : complete_lattice.is_Sup_finite_compact (denumerable (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_154130 (h0 : semiring (normed_comm_ring environment.implicit_infer_kind)) : is_noetherian_ring (normed_comm_ring environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_154131 (h0 : not (cancel_comm_monoid_with_zero (with_one unsigned) -> false)) : @unique_factorization_monoid.{0} (with_one.{0} unsigned) (@classical.by_contradiction'.{1} (cancel_comm_monoid_with_zero.{0} (with_one.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_154132 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (normed_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154133 (h0 : functor.add_const (ordered_comm_monoid (has_zero linarith.comp)) (has_to_string pos)) : @has_exists_mul_of_le.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (has_zero.{0} linarith.comp)) (has_to_string.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_154134 (h0 : filter (semigroup (comm_group name))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_154135 (h0 : has_mem.mem (linear_ordered_semiring num) has_emptyc.emptyc) : @rank_condition.{0} (linear_ordered_semiring.{0} num) (@finset.pi.empty.{1 0} Type ring.{0} (linear_ordered_semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_154136 (h0 : function.extfun Type ring) : @rank_condition.{0} auto.case_option (@function.extfun_app.{2 1} Type ring.{0} h0 auto.case_option)  := sorry --non-trivial
lemma new_lemma_154137 (h0 : functor.add_const (topological_space (ring name)) name) : @totally_separated_space.{0} (ring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_154138 (h0 : ring (semi_normed_comm_ring (mul_one_class (mul_one_class to_additive.value_type)))) : rank_condition (semi_normed_comm_ring (mul_one_class (mul_one_class to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_154139 (h0 : topological_space (measurable_space num)) : discrete_topology (measurable_space num) := sorry --non-trivial
lemma new_lemma_154140 (h0 : functor.add_const (topological_space (finset ennreal)) num) : @loc_path_connected_space.{0} (finset.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} ennreal)) num h0)  := sorry --non-trivial
lemma new_lemma_154141 (h0 : topological_space (linear_ordered_semiring (semiring unsigned))) : locally_compact_space (linear_ordered_semiring (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_154142 (h0 : uniform_space (canonically_ordered_add_monoid empty)) : separated_space (canonically_ordered_add_monoid empty) := sorry --non-trivial
lemma new_lemma_154143 (h0 : topological_space (has_nnnorm (mul_one_class (mul_one_class (has_lt fun_info))))) : t0_space (has_nnnorm (mul_one_class (mul_one_class (has_lt fun_info)))) := sorry --non-trivial
lemma new_lemma_154144 (h0 : uniform_space (normed_comm_ring (finset (semigroup pos)))) : separated_space (normed_comm_ring (finset (semigroup pos))) := sorry --non-trivial
lemma new_lemma_154145 (h0 : not (topological_space (with_zero linarith.ineq) -> false)) : @totally_disconnected_space.{0} (with_zero.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (with_zero.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_154146 (h0 : ring (set.set_semiring empty)) : is_domain (set.set_semiring empty) := sorry --non-trivial
lemma new_lemma_154147 (h0 : functor.add_const (ring (has_neg_part environment.implicit_infer_kind)) Type) : @is_domain.{0} (has_neg_part.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (ring.{0} (has_neg_part.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_154148 (h0 : complete_lattice (normed_comm_ring (add_comm_monoid name))) : is_atomistic (normed_comm_ring (add_comm_monoid name)) := sorry --non-trivial
lemma new_lemma_154149 (h0 : has_mem.mem (with_bot linarith.comp) has_emptyc.emptyc) : @rank_condition.{0} (with_bot.{0} linarith.comp) (@finset.pi.empty.{1 0} Type ring.{0} (with_bot.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_154150 (h0 : ring (add_left_cancel_monoid (has_nnnorm (has_nnnorm linarith.ineq)))) : rank_condition (add_left_cancel_monoid (has_nnnorm (has_nnnorm linarith.ineq))) := sorry --non-trivial
lemma new_lemma_154151 (h0 : filter (ring (has_neg_part (has_add pos)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_154152 (h0 : ring (bin_tree (semiring (semiring (semiring unsigned))))) : strong_rank_condition (bin_tree (semiring (semiring (semiring unsigned)))) := sorry --non-trivial
lemma new_lemma_154153 (h1 : group (div_inv_monoid char)) : is_cyclic (div_inv_monoid char) := sorry --non-trivial
lemma new_lemma_154154 (h0 : fin has_zero.zero) : loc_path_connected_space real := sorry --non-trivial
lemma new_lemma_154155 (h0 : ring (measure_theory.measure_space congr_arg_kind)) : is_principal_ideal_ring (measure_theory.measure_space congr_arg_kind) := sorry --non-trivial
lemma new_lemma_154156 (h0 : topological_space (linear_ordered_field (option pos))) : regular_space (linear_ordered_field (option pos)) := sorry --non-trivial
lemma new_lemma_154157 (h0 : not (ring (add_cancel_comm_monoid linarith.comp_source) -> false)) : @rank_condition.{0} (add_cancel_comm_monoid.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (ring.{0} (add_cancel_comm_monoid.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_154158 (h0 : functor.add_const (function.extfun Type ordered_add_comm_monoid) name) : @archimedean.{0} (has_neg.{0} pos) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_add_comm_monoid.{0}) name h0) (has_neg.{0} pos))  := sorry --non-trivial
lemma new_lemma_154159 (h1 : set (normed_field (mul_one_class (normed_field linarith.ineq)) -> mul_one_class char)) : set.separates_points h1 := sorry --non-trivial
lemma new_lemma_154160 (h0 : uniform_space (with_one fun_info)) : complete_space (with_one fun_info) := sorry --non-trivial
lemma new_lemma_154161 (h0 : cancel_comm_monoid_with_zero (has_zero (has_neg linarith.comp))) : unique_factorization_monoid (has_zero (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_154162 (h0 : complete_lattice (has_inner unsigned unsigned)) : complete_lattice.is_Sup_finite_compact (has_inner unsigned unsigned) := sorry --non-trivial
lemma new_lemma_154163 (h0 : semiring (has_nndist environment.implicit_infer_kind)) : is_noetherian_ring (has_nndist environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_154164 (h0 : function.extfun Type topological_space) : @regular_space.{0} (canonically_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_154165 (h0 : filter (cancel_monoid (ordered_cancel_add_comm_monoid congr_arg_kind))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154166 (h0 : ring (has_to_string (has_neg (has_neg (has_Inf (has_to_string (has_neg Type))))))) : strong_rank_condition (has_to_string (has_neg (has_neg (has_Inf (has_to_string (has_neg Type)))))) := sorry --non-trivial
lemma new_lemma_154167 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (ring.{0} unsigned) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154168 (h0 : complete_lattice (complete_distrib_lattice (has_add name))) : is_compactly_generated (complete_distrib_lattice (has_add name)) := sorry --non-trivial
lemma new_lemma_154169 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @t1_space.{1} (ordered_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (ordered_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_154170 (h0 : topological_space (has_to_string Type)) : normal_space (has_to_string Type) := sorry --non-trivial
lemma new_lemma_154171 (h0 : filter (complete_semilattice_Sup (has_ssubset (random_gen (comm_ring fun_info))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154172 (h0 : finset (has_pos_part (finset Type))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_154173 (h0 : uniform_space (has_one (semiring (semiring (semiring linarith.comp))))) : complete_space (has_one (semiring (semiring (semiring linarith.comp)))) := sorry --non-trivial
lemma new_lemma_154174 (h0 : functor.add_const (semiring (has_neg pos)) (has_Inf Type)) : @is_noetherian_ring.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 1} (semiring.{0} (has_neg.{0} pos)) (has_Inf.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_154175 (h0 : topological_space (normed_comm_ring pos)) : regular_space (normed_comm_ring pos) := sorry --non-trivial
lemma new_lemma_154176 (h0 : filter (distrib_lattice (random_gen (random_gen (random_gen string_imp))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154177 (h0 : functor.add_const Prop (linear_ordered_field unsigned)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_154178 (h0 : function.extfun Type multiset) : multiset.nodup (function.extfun_app h0 (normed_group fun_info)) := sorry --non-trivial
lemma new_lemma_154179 (h0 : filter (canonically_linear_ordered_monoid (finset real))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_154180 (h0 : complete_lattice (distrib_lattice (has_inv fun_info))) : is_compactly_generated (distrib_lattice (has_inv fun_info)) := sorry --non-trivial
lemma new_lemma_154181 (h0 : topological_space (semigroup (has_nndist Type))) : preirreducible_space (semigroup (has_nndist Type)) := sorry --non-trivial
lemma new_lemma_154182 (h0 : topological_space bool) : totally_disconnected_space bool := sorry --non-trivial
lemma new_lemma_154183 (h3 : nat -> Prop -> Prop) (h4 : nat) (h5 : Prop) : nat.repeat h3 h4 h5 := sorry --non-trivial
lemma new_lemma_154184 (h0 : not (uniform_space (has_top to_additive.value_type) -> false)) : @complete_space.{0} (has_top.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (uniform_space.{0} (has_top.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_154185 (h0 : topological_space (has_add (normed_comm_ring (normed_comm_ring name)))) : path_connected_space (has_add (normed_comm_ring (normed_comm_ring name))) := sorry --non-trivial
lemma new_lemma_154186 (h0 : functor.add_const (add_group (mul_zero_class num)) empty) : @is_add_cyclic.{0} (mul_zero_class.{0} num) (@functor.add_const.run.{0 0} (add_group.{0} (mul_zero_class.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_154187 (h0 : ennreal -> ennreal -> Prop) : total h0 := sorry --non-trivial
lemma new_lemma_154188 (h0 : complete_lattice (has_zero (cancel_monoid (add_cancel_monoid (has_add Type))))) : is_atomistic (has_zero (cancel_monoid (add_cancel_monoid (has_add Type)))) := sorry --non-trivial
lemma new_lemma_154189 (h0 : fin has_zero.zero) : @has_exists_mul_of_le.{0} real (@matrix.vec_empty.{0} (ordered_comm_monoid.{0} real) h0)  := sorry --non-trivial
lemma new_lemma_154190 (h0 : topological_space (boolean_algebra.core pos)) : loc_path_connected_space (boolean_algebra.core pos) := sorry --non-trivial
lemma new_lemma_154191 (h0 : complete_lattice (measurable_space.dynkin_system reducibility_hints)) : complete_lattice.is_Sup_finite_compact (measurable_space.dynkin_system reducibility_hints) := sorry --non-trivial
lemma new_lemma_154192 (h0 : topological_space (cancel_monoid (has_add (has_add name)))) : normal_space (cancel_monoid (has_add (has_add name))) := sorry --non-trivial
lemma new_lemma_154193 (h0 : complete_lattice (linear_ordered_semiring (has_top fun_info))) : is_atomistic (linear_ordered_semiring (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_154194 (h0 : has_neg (semi_normed_comm_ring enat)) (h1 : measurable_space (semi_normed_comm_ring enat)) : has_measurable_neg (semi_normed_comm_ring enat) := sorry --non-trivial
lemma new_lemma_154195 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (semigroup.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (semigroup.{0} name))  := sorry --non-trivial
lemma new_lemma_154196 (h0 : topological_space (distrib_lattice (random_gen (random_gen string_imp)))) : t0_space (distrib_lattice (random_gen (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_154197 (h0 : group (comm_group (has_zero linarith.comp))) : group.fg (comm_group (has_zero linarith.comp)) := sorry --non-trivial
lemma new_lemma_154198 (h0 : fin has_zero.zero) : @monoid.fg.{0} (sub_neg_monoid.{0} name) (@matrix.vec_empty.{0} (monoid.{0} (sub_neg_monoid.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_154199 (h0 : topological_space (canonically_ordered_add_monoid num)) : loc_path_connected_space (canonically_ordered_add_monoid num) := sorry --non-trivial
lemma new_lemma_154200 (h0 : functor.add_const (semiring (ring Type)) linarith.comp) : @is_noetherian_ring.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (semiring.{1} (ring.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154201 (h1 : function.extfun Type topological_space) : @totally_separated_space.{0} (measurable_space.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (measurable_space.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_154202 (h0 : functor.add_const (group (add_comm_monoid name)) (has_pos_part linarith.comp)) : @normalizer_condition.{0} (add_comm_monoid.{0} name) (@functor.add_const.run.{0 0} (group.{0} (add_comm_monoid.{0} name)) (has_pos_part.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_154203 (h1 : complete_lattice (has_ssubset string.iterator_imp)) : is_compactly_generated (has_ssubset string.iterator_imp) := sorry --non-trivial
lemma new_lemma_154204 (h0 : list Prop) : id (list.head (id h0)) := sorry --non-trivial
lemma new_lemma_154205 (h0 : ring (has_pos_part (has_Inf linarith.comp))) : strong_rank_condition (has_pos_part (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_154206 (h0 : ring (nondiscrete_normed_field (add_comm_semigroup string.iterator_imp))) : strong_rank_condition (nondiscrete_normed_field (add_comm_semigroup string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_154207 (h0 : functor.add_const (group (comm_group linarith.comp)) (has_add Type)) : @is_cyclic.{0} (comm_group.{0} linarith.comp) (@functor.add_const.run.{0 1} (group.{0} (comm_group.{0} linarith.comp)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_154208 (h0 : topological_space (ordered_comm_ring (has_Inf (boolean_algebra.core (has_Inf (has_pos_part Type)))))) : regular_space (ordered_comm_ring (has_Inf (boolean_algebra.core (has_Inf (has_pos_part Type))))) := sorry --non-trivial
lemma new_lemma_154209 (h0 : complete_lattice (has_top (has_top (has_top (has_top (has_top fun_info)))))) : is_compactly_generated (has_top (has_top (has_top (has_top (has_top fun_info))))) := sorry --non-trivial
lemma new_lemma_154210 (h0 : topological_space (ring ennreal)) : topological_space.separable_space (ring ennreal) := sorry --non-trivial
lemma new_lemma_154211 (h0 : functor.add_const (ring (boolean_algebra pos)) name) : @strong_rank_condition.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_154212 (h0 : topological_space (has_add (sub_neg_monoid real))) : totally_disconnected_space (has_add (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_154213 (h0 : topological_space (has_add (semigroup environment.implicit_infer_kind))) : sequential_space (has_add (semigroup environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_154214 (h0 : topological_space (has_neg_part (has_neg_part environment.implicit_infer_kind))) : discrete_topology (has_neg_part (has_neg_part environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_154215 (h0 : complete_lattice (comm_group linarith.comp)) : complete_lattice.is_Sup_finite_compact (comm_group linarith.comp) := sorry --non-trivial
lemma new_lemma_154216 (h0 : function.extfun (Type 1) uniform_space) : @complete_space.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) uniform_space.{1} h0 (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_154217 (h3 : topological_space (mul_one_class reducibility_hints)) : totally_disconnected_space (mul_one_class reducibility_hints) := sorry --non-trivial
lemma new_lemma_154218 (h0 : add_monoid (has_add (option pos))) : add_monoid.fg (has_add (option pos)) := sorry --non-trivial
lemma new_lemma_154219 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (has_bot.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_bot.{0} name))  := sorry --non-trivial
lemma new_lemma_154220 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (linear_ordered_comm_group unsigned)) := sorry --non-trivial
lemma new_lemma_154221 (h0 : set (has_compl (mul_one_class linarith.comp_source))) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_154222 (h0 : topological_space (has_append (random_gen char))) : path_connected_space (has_append (random_gen char)) := sorry --non-trivial
lemma new_lemma_154223 (h0 : finset (monoid (option empty))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_154224 (h0 : list (normed_linear_ordered_group (option empty))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_154225 (h0 : topological_space (has_nndist (has_to_string linarith.comp))) : preirreducible_space (has_nndist (has_to_string linarith.comp)) := sorry --non-trivial
lemma new_lemma_154226 (h1 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (complete_semilattice_Sup.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (complete_semilattice_Sup.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_154227 (h0 : topological_space (semi_normed_ring char)) : path_connected_space (semi_normed_ring char) := sorry --non-trivial
lemma new_lemma_154228 (h0 : topological_space (add_cancel_monoid (has_nndist environment.implicit_infer_kind))) : path_connected_space (add_cancel_monoid (has_nndist environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_154229 (h0 : topological_space (has_add (option ennreal))) : irreducible_space (has_add (option ennreal)) := sorry --non-trivial
lemma new_lemma_154230 (h0 : ordered_comm_monoid (has_to_string (has_zero Type))) : has_exists_mul_of_le (has_to_string (has_zero Type)) := sorry --non-trivial
lemma new_lemma_154231 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (linear_ordered_cancel_comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (linear_ordered_cancel_comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_154232 (h0 : functor.add_const (semiring (semigroup name)) linarith.comp) : @is_noetherian_ring.{0} (semigroup.{0} name) (@functor.add_const.run.{0 0} (semiring.{0} (semigroup.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154233 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (monoid.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154234 (h0 : list (normed_comm_ring (option (option num)))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_154235 (h0 : functor.add_const (topological_space (has_Inf pos)) pos) : @sequential_space.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_154236 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_ssubset.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_ssubset.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_154237 (h0 : ring (sub_neg_monoid linarith.comp)) : is_principal_ideal_ring (sub_neg_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_154238 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (complete_distrib_lattice.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_distrib_lattice.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_154239 (h0 : topological_space (ordered_comm_monoid (has_pos_part name))) : irreducible_space (ordered_comm_monoid (has_pos_part name)) := sorry --non-trivial
lemma new_lemma_154240 (h0 : monoid (id (has_top fun_info))) : monoid.fg (id (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_154241 (h0 : group (has_one (semiring linarith.comp))) : is_cyclic (has_one (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_154242 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (complete_linear_order.{0} unsigned) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (complete_linear_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154243 (h0 : topological_space (add_comm_semigroup fun_info)) : t0_space (add_comm_semigroup fun_info) := sorry --non-trivial
lemma new_lemma_154244 (h0 : functor.add_const (functor.add_const (complete_lattice Type) linarith.comp) linarith.comp) : @is_compactly_generated.{1} Type (@functor.add_const.run.{1 0} (complete_lattice.{1} Type) linarith.comp (@functor.add_const.run.{1 0} (functor.add_const.{1 0} (complete_lattice.{1} Type) linarith.comp) linarith.comp h0))  := sorry --non-trivial
lemma new_lemma_154245 (h0 : functor.add_const (topological_space (semigroup (comm_group name))) linarith.comp) : @locally_compact_space.{0} (semigroup.{0} (comm_group.{0} name)) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} (comm_group.{0} name))) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154246 (h0 : topological_space (ordered_comm_ring (has_add (has_pos_part pos)))) : path_connected_space (ordered_comm_ring (has_add (has_pos_part pos))) := sorry --non-trivial
lemma new_lemma_154247 (h0 : add_group (semi_normed_comm_ring string.iterator_imp)) : is_add_cyclic (semi_normed_comm_ring string.iterator_imp) := sorry --non-trivial
lemma new_lemma_154248 (h0 : topological_space (canonically_ordered_comm_semiring unsigned)) : totally_disconnected_space (canonically_ordered_comm_semiring unsigned) := sorry --non-trivial
lemma new_lemma_154249 (h0 : mul_one_class (has_lt (mul_one_class char))) (h1 : set (submonoid (has_lt (mul_one_class char)))) : set.finite h1 := sorry --non-trivial
lemma new_lemma_154250 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (normed_comm_ring name)) := sorry --non-trivial
lemma new_lemma_154251 (h0 : group (with_bot (semiring (semiring (semiring (semiring unsigned)))))) : group.fg (with_bot (semiring (semiring (semiring (semiring unsigned))))) := sorry --non-trivial
lemma new_lemma_154252 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (canonically_ordered_comm_semiring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (canonically_ordered_comm_semiring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_154253 (h0 : not (function.extfun Type uniform_space -> false)) : @complete_space.{0} (measure_theory.measure_space.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (measure_theory.measure_space.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154254 (h0 : function.extfun Type topological_space) : @normal_space.{0} (has_top.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_top.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154255 (h0 : complete_lattice (left_cancel_monoid (option empty))) : is_atomistic (left_cancel_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_154256 (h0 : functor.add_const (complete_lattice (semiring congr_arg_kind)) (option unsigned)) : @is_compactly_generated.{0} (semiring.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (semiring.{0} congr_arg_kind)) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_154257 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (complete_semilattice_Sup.{0} linarith.ineq) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (complete_semilattice_Sup.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_154258 (h0 : complete_lattice (bin_tree (semiring congr_arg_kind))) : is_compactly_generated (bin_tree (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_154259 (h0 : filter (add_cancel_monoid empty)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154260 (h0 : topological_space (random_gen (has_nnnorm string_imp))) : totally_disconnected_space (random_gen (has_nnnorm string_imp)) := sorry --non-trivial
lemma new_lemma_154261 (h0 : not (function.extfun Type add_group -> false)) : @is_add_cyclic.{0} congr_arg_kind (@function.extfun_app.{2 1} Type add_group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_group.{0}) h0) congr_arg_kind)  := sorry --non-trivial
lemma new_lemma_154262 (h0 : monoid (semiring (has_top congr_arg_kind))) : monoid.fg (semiring (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_154263 (h0 : complete_lattice (canonically_ordered_comm_semiring linarith.comp)) : is_compactly_generated (canonically_ordered_comm_semiring linarith.comp) := sorry --non-trivial
lemma new_lemma_154264 (h0 : functor.add_const (topological_space (boolean_algebra.core num)) empty) : @irreducible_space.{0} (boolean_algebra.core.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_154265 (h0 : functor.add_const (topological_space (ring pos)) Type) : @t0_space.{0} (ring.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (ring.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_154266 (h0 : setoid char) (h1 h2 : char) : setoid.rel h0 h1 h2 := sorry --non-trivial
lemma new_lemma_154267 (h0 : quotient (list.is_setoid (measurable_space.dynkin_system unsigned))) : palindrome (quotient.out h0) := sorry --non-trivial
lemma new_lemma_154268 (h0 : measurable_space (normed_group linarith.comp_source)) (h1 : has_mul (normed_group linarith.comp_source)) : has_measurable_mul₂ (normed_group linarith.comp_source) := sorry --non-trivial
lemma new_lemma_154269 (h0 : topological_space (finset num)) : discrete_topology (finset num) := sorry --non-trivial
lemma new_lemma_154270 (h0 : functor.add_const (complete_lattice (has_add pos)) pos) : @is_atomistic.{0} (has_add.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_add.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_154271 (h0 : functor.add_const (complete_lattice (finset environment.implicit_infer_kind)) (has_add (has_add pos))) : @is_atomistic.{0} (finset.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (finset.{0} environment.implicit_infer_kind)) (has_add.{0} (has_add.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_154272 (h0 : cancel_comm_monoid_with_zero (monoid congr_arg_kind)) : unique_factorization_monoid (monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_154273 (h0 : functor.add_const (fin has_zero.zero) Type) : @rank_condition.{1} (sub_neg_monoid.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (sub_neg_monoid.{1} Type)) (@functor.add_const.run.{0 1} (fin (@has_zero.zero.{0} nat nat.has_zero)) Type h0))  := sorry --non-trivial
lemma new_lemma_154274 (h0 : functor.add_const Prop (has_pos_part (has_Inf (ring pos)))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_154275 (h0 : group (has_neg (boolean_algebra (has_neg_part Type)))) : is_cyclic (has_neg (boolean_algebra (has_neg_part Type))) := sorry --non-trivial
lemma new_lemma_154276 (h0 : topological_space environment.projection_info) (h1 : set environment.projection_info) : is_path_connected h1 := sorry --non-trivial
lemma new_lemma_154277 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (has_nndist.{0} linarith.comp) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (has_nndist.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154278 (h0 : topological_space (ring (has_to_string pos))) : t1_space (ring (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_154279 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (canonically_ordered_add_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (canonically_ordered_add_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154280 (h0 : uniform_space (ring (ring linarith.comp))) : separated_space (ring (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_154281 (h0 : functor.add_const (cancel_comm_monoid_with_zero (complete_distrib_lattice pos)) pos) : @unique_factorization_monoid.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (complete_distrib_lattice.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_154282 (h0 : topological_space (has_neg pos)) : preconnected_space (has_neg pos) := sorry --non-trivial
lemma new_lemma_154283 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @has_exists_mul_of_le.{1} (finset.{1} Type) (@function.extfun_app.{3 2} (Type 1) ordered_comm_monoid.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 ordered_comm_monoid.{1}) (finset.{1} Type))  := sorry --non-trivial
lemma new_lemma_154284 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @discrete_topology.{0} (@id.{2} Type empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (@id.{2} Type empty))  := sorry --non-trivial
lemma new_lemma_154285 (h0 : ring (omega_complete_partial_order char)) : strong_rank_condition (omega_complete_partial_order char) := sorry --non-trivial
lemma new_lemma_154286 (h0 : functor.add_const (topological_space (has_nndist pos)) Type) : @preirreducible_space.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (has_nndist.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_154287 (h0 : complete_lattice (linear_ordered_add_comm_group char)) : complete_lattice.is_Sup_finite_compact (linear_ordered_add_comm_group char) := sorry --non-trivial
lemma new_lemma_154288 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (@id.{2} Type num) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (@id.{2} Type num))  := sorry --non-trivial
lemma new_lemma_154289 (h0 : list (boolean_algebra (has_neg (sub_neg_monoid real)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_154290 (h0 : functor.add_const (topological_space (has_neg Type)) (boolean_algebra Type)) : @discrete_topology.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (has_neg.{1} Type)) (boolean_algebra.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_154291 (h0 : topological_space (has_neg (semigroup linarith.comp))) : path_connected_space (has_neg (semigroup linarith.comp)) := sorry --non-trivial
lemma new_lemma_154292 (h0 : topological_space (add_cancel_monoid (has_to_string Type))) : t1_space (add_cancel_monoid (has_to_string Type)) := sorry --non-trivial
lemma new_lemma_154293 (h0 : ordered_add_comm_monoid (has_neg_part (option (option pos)))) : archimedean (has_neg_part (option (option pos))) := sorry --non-trivial
lemma new_lemma_154294 (h0 : set (has_lt (has_compl enat))) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_154295 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (cancel_monoid environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_154296 (h0 : group (has_add (option (option ennreal)))) : group.fg (has_add (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_154297 (h0 : uniform_space (measurable_space (semiring linarith.ineq))) : complete_space (measurable_space (semiring linarith.ineq)) := sorry --non-trivial
lemma new_lemma_154298 (h0 : topological_space (normed_group (has_nnnorm to_additive.value_type))) : locally_compact_space (normed_group (has_nnnorm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_154299 (h0 : topological_space (has_top (has_top fun_info))) : preconnected_space (has_top (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_154300 (h0 : topological_space linarith.comp) : path_connected_space linarith.comp := sorry --non-trivial
lemma new_lemma_154301 (h0 : functor.add_const (topological_space (left_cancel_semigroup num)) (semiring unsigned)) : @totally_disconnected_space.{0} (left_cancel_semigroup.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_semigroup.{0} num)) (semiring.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_154302 (h0 : functor.add_const (topological_space (has_neg linarith.comp)) (has_neg Type)) : @t0_space.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (has_neg.{0} linarith.comp)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_154303 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (with_bot.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (with_bot.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_154304 (h0 : uniform_space (has_nndist (mul_zero_class name))) : separated_space (has_nndist (mul_zero_class name)) := sorry --non-trivial
lemma new_lemma_154305 (h0 : functor.add_const (topological_space (linear_ordered_semiring num)) congr_arg_kind) : @topological_space.separable_space.{0} (linear_ordered_semiring.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (linear_ordered_semiring.{0} num)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_154306 (h0 : functor.add_const (functor.add_const (ring pos) linarith.comp) linarith.comp) : @is_principal_ideal_ring.{0} pos (@functor.add_const.run.{0 0} (ring.{0} pos) linarith.comp (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (ring.{0} pos) linarith.comp) linarith.comp h0))  := sorry --non-trivial
lemma new_lemma_154307 (h0 : ring (has_nndist (comm_group unsigned))) : is_principal_ideal_ring (has_nndist (comm_group unsigned)) := sorry --non-trivial
lemma new_lemma_154308 (h2 : topological_space (has_compl linarith.ineq)) : totally_disconnected_space (has_compl linarith.ineq) := sorry --non-trivial
lemma new_lemma_154309 (h0 : complete_lattice (linear_ordered_semiring (semiring unsigned))) : is_compactly_generated (linear_ordered_semiring (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_154310 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (distrib_lattice.{0} unsigned) (@function.extfun_app.{2 1} Type monoid.{0} h0 (distrib_lattice.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154311 (h0 : group (semigroup (finset (normed_comm_ring (has_add pos))))) : normalizer_condition (semigroup (finset (normed_comm_ring (has_add pos)))) := sorry --non-trivial
lemma new_lemma_154312 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (left_cancel_semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (left_cancel_semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154313 (h0 : complete_lattice (has_nndist (finset (has_neg (finset linarith.comp))))) : is_atomistic (has_nndist (finset (has_neg (finset linarith.comp)))) := sorry --non-trivial
lemma new_lemma_154314 (h0 : ring (has_div (mul_one_class reducibility_hints))) : rank_condition (has_div (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_154315 (h0 : topological_space (boolean_algebra.core (has_add (option pos)))) : totally_separated_space (boolean_algebra.core (has_add (option pos))) := sorry --non-trivial
lemma new_lemma_154316 (h0 : topological_space (has_one (has_norm (has_norm linarith.comp)))) : normal_space (has_one (has_norm (has_norm linarith.comp))) := sorry --non-trivial
lemma new_lemma_154317 (h0 : ring (has_star empty)) : strong_rank_condition (has_star empty) := sorry --non-trivial
lemma new_lemma_154318 (h0 : functor.add_const (function.extfun Type uniform_space) Type) : @separated_space.{0} (boolean_algebra.core.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type uniform_space.{0}) Type h0) (boolean_algebra.core.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154319 (h0 : add_group (semi_normed_ring linarith.comp_source)) : is_add_cyclic (semi_normed_ring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_154320 (h2 : uniform_space (has_append char)) : complete_space (has_append char) := sorry --non-trivial
lemma new_lemma_154321 (h0 : complete_lattice (has_bot (has_Inf (has_add Type)))) : is_atomistic (has_bot (has_Inf (has_add Type))) := sorry --non-trivial
lemma new_lemma_154322 (h1 : ring (has_lt linarith.comp_source)) : is_domain (has_lt linarith.comp_source) := sorry --non-trivial
lemma new_lemma_154323 (h0 : functor.add_const (topological_space (has_to_string Type)) (ring environment.implicit_infer_kind)) : @t1_space.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_to_string.{1} Type)) (ring.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_154324 (h0 : finset (add_semigroup congr_arg_kind)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_154325 (h0 : complete_lattice (has_inv to_additive.value_type)) : is_compactly_generated (has_inv to_additive.value_type) := sorry --non-trivial
lemma new_lemma_154326 (h2 : uniform_space (has_norm num)) : complete_space (has_norm num) := sorry --non-trivial
lemma new_lemma_154327 (h0 : functor.comp topological_space boolean_algebra.core Type) : @path_connected_space.{1} (boolean_algebra.core.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} boolean_algebra.core.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_154328 (h0 : group (boolean_algebra (has_add pos))) : normalizer_condition (boolean_algebra (has_add pos)) := sorry --non-trivial
lemma new_lemma_154329 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : locally_compact_space empty := sorry --non-trivial
lemma new_lemma_154330 (h0 : monoid (linear_ordered_comm_ring unsigned)) : monoid.fg (linear_ordered_comm_ring unsigned) := sorry --non-trivial
lemma new_lemma_154331 (h2 : prod (add_comm_semigroup linarith.ineq) (add_comm_semigroup linarith.ineq)) : set.diagonal (add_comm_semigroup linarith.ineq) h2 := sorry --non-trivial
lemma new_lemma_154332 (h0 : ring (uniform_space linarith.ineq)) : rank_condition (uniform_space linarith.ineq) := sorry --non-trivial
lemma new_lemma_154333 (h0 : has_lt (has_ssubset (bin_tree linarith.ineq))) : no_max_order (has_ssubset (bin_tree linarith.ineq)) := sorry --non-trivial
lemma new_lemma_154334 (h0 : functor.add_const (topological_space (boolean_algebra.core unsigned)) congr_arg_kind) : @locally_compact_space.{0} (boolean_algebra.core.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_154335 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (with_one unsigned)) := sorry --non-trivial
lemma new_lemma_154336 (h3 : complete_lattice (topological_space linarith.ineq)) : is_compactly_generated (topological_space linarith.ineq) := sorry --non-trivial
lemma new_lemma_154337 (h0 : complete_lattice (topological_space (denumerable char))) : is_compactly_generated (topological_space (denumerable char)) := sorry --non-trivial
lemma new_lemma_154338 (h0 : cancel_comm_monoid_with_zero (has_pos_part (has_Inf pos))) : unique_factorization_monoid (has_pos_part (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_154339 (h0 : topological_space (simple_graph ereal)) : totally_disconnected_space (simple_graph ereal) := sorry --non-trivial
lemma new_lemma_154340 (h1 : ring (has_emptyc fun_info)) : strong_rank_condition (has_emptyc fun_info) := sorry --non-trivial
lemma new_lemma_154341 (h0 : uniform_space (linear_ordered_field (option (option (option (option unsigned)))))) : complete_space (linear_ordered_field (option (option (option (option unsigned))))) := sorry --non-trivial
lemma new_lemma_154342 (h0 : topological_space (simple_graph char)) (h1 : add_group (simple_graph char)) : topological_add_group (simple_graph char) := sorry --non-trivial
lemma new_lemma_154343 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : palindrome (function.extfun_app (function.extfun_app h0 list) (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_154344 (h0 : functor.add_const (complete_lattice (non_assoc_semiring congr_arg_kind)) congr_arg_kind) : @is_atomistic.{0} (non_assoc_semiring.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (non_assoc_semiring.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_154345 (h0 : functor.add_const (add_group (bin_tree unsigned)) unsigned) : @is_add_cyclic.{0} (bin_tree.{0} unsigned) (@functor.add_const.run.{0 0} (add_group.{0} (bin_tree.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_154346 (h0 : functor.add_const (ring (has_neg pos)) name) : @strong_rank_condition.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (has_neg.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_154347 (h0 : uniform_space (add_cancel_comm_monoid empty)) : separated_space (add_cancel_comm_monoid empty) := sorry --non-trivial
lemma new_lemma_154348 (h0 : topological_space (semi_normed_ring (has_nnnorm char))) : path_connected_space (semi_normed_ring (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_154349 (h0 : complete_lattice (has_norm num)) : is_atomistic (has_norm num) := sorry --non-trivial
lemma new_lemma_154350 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (boolean_algebra.core congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_154351 (h0 : topological_space (add_group congr_arg_kind)) : loc_path_connected_space (add_group congr_arg_kind) := sorry --non-trivial
lemma new_lemma_154352 (h0 : filter (linear_ordered_semiring congr_arg_kind)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154353 (h0 : measure_theory.outer_measure (random_gen fun_info)) (h1 : set (random_gen fun_info)) : measure_theory.outer_measure.is_caratheodory h0 h1 := sorry --non-trivial
lemma new_lemma_154354 (h0 : monoid (distrib_lattice (random_gen (random_gen (random_gen string_imp))))) : monoid.fg (distrib_lattice (random_gen (random_gen (random_gen string_imp)))) := sorry --non-trivial
lemma new_lemma_154355 (h0 : topological_space (cancel_monoid Type)) : discrete_topology (cancel_monoid Type) := sorry --non-trivial
lemma new_lemma_154356 (h0 : group (has_nndist (has_neg_part linarith.comp))) : normalizer_condition (has_nndist (has_neg_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_154357 (h0 : finset (canonically_linear_ordered_monoid num)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_154358 (h0 : functor.add_const (semiring (partial_order empty)) (option (semiring unsigned))) : @is_noetherian_ring.{0} (partial_order.{0} empty) (@functor.add_const.run.{0 0} (semiring.{0} (partial_order.{0} empty)) (option.{0} (semiring.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_154359 (h0 : ring (generalized_boolean_algebra (generalized_boolean_algebra pos))) : is_domain (generalized_boolean_algebra (generalized_boolean_algebra pos)) := sorry --non-trivial
lemma new_lemma_154360 (h0 : function.extfun Type ring) : @is_domain.{0} (has_norm.{0} linarith.ineq) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_norm.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_154361 (h0 : functor.comp topological_space has_nndist ennreal) : @locally_compact_space.{0} (has_nndist.{0} ennreal) (@functor.comp.run.{0 0 0} topological_space.{0} has_nndist.{0} ennreal h0)  := sorry --non-trivial
lemma new_lemma_154362 (h0 : not (topological_space (complete_semilattice_Sup linarith.comp) -> false)) : @totally_separated_space.{0} (complete_semilattice_Sup.{0} linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (complete_semilattice_Sup.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_154363 (h0 : not (function.extfun Type topological_space -> false)) : @irreducible_space.{0} (has_emptyc.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_emptyc.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154364 (h0 : ring (mul_one_class (mul_one_class (add_comm_semigroup (normed_field ereal))))) : strong_rank_condition (mul_one_class (mul_one_class (add_comm_semigroup (normed_field ereal)))) := sorry --non-trivial
lemma new_lemma_154365 (h0 : functor.add_const (cancel_comm_monoid_with_zero (finset ennreal)) (option unsigned)) : @unique_factorization_monoid.{0} (finset.{0} ennreal) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (finset.{0} ennreal)) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_154366 (h0 : functor.add_const (topological_space (has_to_string unsigned)) (mul_one_class pos)) : @discrete_topology.{0} (has_to_string.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} unsigned)) (mul_one_class.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_154367 (h0 : uniform_space (complete_semilattice_Sup (boolean_algebra.core (has_inv fun_info)))) : complete_space (complete_semilattice_Sup (boolean_algebra.core (has_inv fun_info))) := sorry --non-trivial
lemma new_lemma_154368 (h0 : set (non_unital_non_assoc_semiring string_imp)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_154369 (h0 : ring (has_to_string (option (option (option (option ennreal)))))) : rank_condition (has_to_string (option (option (option (option ennreal))))) := sorry --non-trivial
lemma new_lemma_154370 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (linear_ordered_semiring.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_154371 (h1 : ring (fintype linarith.comp_source)) : rank_condition (fintype linarith.comp_source) := sorry --non-trivial
lemma new_lemma_154372 (h0 : add_group (nondiscrete_normed_field complex)) : is_add_cyclic (nondiscrete_normed_field complex) := sorry --non-trivial
lemma new_lemma_154373 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (has_dist.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_dist.{0} empty))  := sorry --non-trivial
lemma new_lemma_154374 (h0 : not (ring (simple_graph (mul_one_class (mul_one_class enat))) -> false)) : @is_domain.{0} (simple_graph.{0} (mul_one_class.{0} (mul_one_class.{0} enat))) (@classical.by_contradiction'.{1} (ring.{0} (simple_graph.{0} (mul_one_class.{0} (mul_one_class.{0} enat)))) h0)  := sorry --non-trivial
lemma new_lemma_154375 (h0 : group (has_ssubset to_additive.value_type)) : is_cyclic (has_ssubset to_additive.value_type) := sorry --non-trivial
lemma new_lemma_154376 (h0 : cancel_comm_monoid_with_zero (linear_ordered_semiring (has_top empty))) : unique_factorization_monoid (linear_ordered_semiring (has_top empty)) := sorry --non-trivial
lemma new_lemma_154377 (h0 : functor.add_const (topological_space (ring pos)) (has_to_string pos)) : @totally_disconnected_space.{0} (ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} pos)) (has_to_string.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_154378 (h0 : ring (add_cancel_monoid (semigroup Type))) : rank_condition (add_cancel_monoid (semigroup Type)) := sorry --non-trivial
lemma new_lemma_154379 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (linear_ordered_comm_monoid_with_zero.{0} empty) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (linear_ordered_comm_monoid_with_zero.{0} empty))  := sorry --non-trivial
lemma new_lemma_154380 (h0 : functor.add_const (ring (has_to_string Type)) Type) : @rank_condition.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 1} (ring.{1} (has_to_string.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_154381 (h0 : functor.add_const (ordered_comm_monoid (semigroup Type)) (has_add Type)) : @has_exists_mul_of_le.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 1} (ordered_comm_monoid.{1} (semigroup.{1} Type)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_154382 (h1 : ring (distrib to_additive.value_type)) : strong_rank_condition (distrib to_additive.value_type) := sorry --non-trivial
lemma new_lemma_154383 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_noetherian_ring.{0} (normed_lattice_add_comm_group.{0} real) (@function.extfun_app.{2 1} Type semiring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 semiring.{0}) (normed_lattice_add_comm_group.{0} real))  := sorry --non-trivial
lemma new_lemma_154384 (h0 : set (add_comm_semigroup (add_comm_semigroup (mul_one_class linarith.ineq)))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_154385 (h0 : group (semigroup environment.implicit_infer_kind)) : is_cyclic (semigroup environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_154386 (h0 : topological_space (has_star num)) : irreducible_space (has_star num) := sorry --non-trivial
lemma new_lemma_154387 (h0 : topological_space (has_nnnorm (comm_ring (comm_ring char)))) : t0_space (has_nnnorm (comm_ring (comm_ring char))) := sorry --non-trivial
lemma new_lemma_154388 (h0 : filter (has_sub (semiring (semiring (semiring empty))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154389 (h0 : function.extfun Type topological_space) : @normal_space.{0} (preorder.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (preorder.{0} empty))  := sorry --non-trivial
lemma new_lemma_154390 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : add_monoid.fg nnreal := sorry --non-trivial
lemma new_lemma_154391 (h0 : group (ordered_ring (option (option (option empty))))) : is_cyclic (ordered_ring (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_154392 (h0 : set (mul_one_class std_gen -> fun_info)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_154393 (h0 : ring (metric_space congr_arg_kind)) : is_domain (metric_space congr_arg_kind) := sorry --non-trivial
lemma new_lemma_154394 (h0 : group (boolean_algebra.core (option num))) : group.fg (boolean_algebra.core (option num)) := sorry --non-trivial
lemma new_lemma_154395 (h0 : function.extfun Type topological_space) : @normal_space.{0} (linear_ordered_comm_group.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_154396 (h0 : group (has_add ennreal)) : is_cyclic (has_add ennreal) := sorry --non-trivial
lemma new_lemma_154397 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_inter.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_inter.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_154398 (h0 : functor.add_const (function.extfun Type ordered_comm_monoid) (boolean_algebra pos)) : @has_exists_mul_of_le.{0} (has_add.{0} linarith.comp) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) (boolean_algebra.{0} pos) h0) (has_add.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154399 (h0 : functor.add_const (uniform_space (has_Inf name)) name) : @complete_space.{0} (has_Inf.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_Inf.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_154400 (h0 : functor.add_const (function.extfun (Type 1) topological_space) linarith.comp) : @totally_disconnected_space.{1} (has_Inf.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) linarith.comp h0) (has_Inf.{1} Type))  := sorry --non-trivial
lemma new_lemma_154401 (h0 : function.extfun Type (prod (has_bot unsigned))) : id_rel (function.extfun_app h0 (has_bot unsigned)) := sorry --non-trivial
lemma new_lemma_154402 (h0 : functor.add_const (topological_space (boolean_algebra.core pos)) name) : @totally_disconnected_space.{0} (boolean_algebra.core.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_154403 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (mul_zero_class.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (mul_zero_class.{0} empty))  := sorry --non-trivial
lemma new_lemma_154404 (h0 : functor.add_const (function.extfun Type topological_space) (ring name)) : @preirreducible_space.{0} (has_neg.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) (ring.{0} name) h0) (has_neg.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154405 (h0 : topological_space (normed_comm_ring (has_add Type))) : sequential_space (normed_comm_ring (has_add Type)) := sorry --non-trivial
lemma new_lemma_154406 (h0 : fin has_zero.zero) : @is_cyclic.{0} (canonically_ordered_monoid.{0} pos) (@matrix.vec_empty.{0} (group.{0} (canonically_ordered_monoid.{0} pos)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)))  := sorry --non-trivial
lemma new_lemma_154407 (h0 : topological_space (ring (has_add Type))) : preconnected_space (ring (has_add Type)) := sorry --non-trivial
lemma new_lemma_154408 (h0 : fin has_zero.zero) : @discrete_topology.{0} (has_Inf.{0} (has_add.{0} pos)) (@matrix.vec_empty.{0} (topological_space.{0} (has_Inf.{0} (has_add.{0} pos))) h0)  := sorry --non-trivial
lemma new_lemma_154409 (h0 : topological_space (has_star (option empty))) : totally_disconnected_space (has_star (option empty)) := sorry --non-trivial
lemma new_lemma_154410 (h0 : has_coe (nondiscrete_normed_field string.iterator_imp) Prop) (h1 : nondiscrete_normed_field string.iterator_imp) : @coe_b.{1 1} (nondiscrete_normed_field.{0} string.iterator_imp) Prop h0 h1  := sorry --non-trivial
lemma new_lemma_154411 (h0 : function.extfun Type topological_space) : @t0_space.{0} (has_pos_part.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_pos_part.{0} pos))  := sorry --non-trivial
lemma new_lemma_154412 (h0 : Prop -> Prop) (h1 : nat) (h2 : Prop) : nat.iterate h0 h1 h2 := sorry --non-trivial
lemma new_lemma_154413 (h1 : set (has_nnnorm enat)) : set.finite h1 := sorry --non-trivial
lemma new_lemma_154414 (h0 : group (has_bot (option unsigned))) : normalizer_condition (has_bot (option unsigned)) := sorry --non-trivial
lemma new_lemma_154415 (h1 : has_mem.mem linarith.comp_source has_emptyc.emptyc) : @is_atomistic.{0} linarith.comp_source (@finset.pi.empty.{1 0} Type complete_lattice.{0} linarith.comp_source h1)  := sorry --non-trivial
lemma new_lemma_154416 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (ordered_comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154417 (h0 : topological_space (id (semiring unsigned))) : t1_space (id (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_154418 (h0 : topological_space (normed_group unsigned)) : path_connected_space (normed_group unsigned) := sorry --non-trivial
lemma new_lemma_154419 (h0 : ordered_comm_monoid (boolean_algebra (ring (has_neg_part environment.implicit_infer_kind)))) : has_exists_mul_of_le (boolean_algebra (ring (has_neg_part environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_154420 (h0 : ring (with_one enat)) : rank_condition (with_one enat) := sorry --non-trivial
lemma new_lemma_154421 (h0 : topological_space (has_neg (finset (finset linarith.comp)))) : discrete_topology (has_neg (finset (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_154422 (h0 : complete_lattice (has_top (random_gen empty))) : complete_lattice.is_Sup_finite_compact (has_top (random_gen empty)) := sorry --non-trivial
lemma new_lemma_154423 (h3 : topological_space (has_append linarith.ineq)) : path_connected_space (has_append linarith.ineq) := sorry --non-trivial
lemma new_lemma_154424 (h0 : ring (normed_comm_ring (has_neg ennreal))) : rank_condition (normed_comm_ring (has_neg ennreal)) := sorry --non-trivial
lemma new_lemma_154425 (h0 : not (topological_space (has_one congr_arg_kind) -> false)) : @t0_space.{0} (has_one.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (has_one.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_154426 (h0 : functor.add_const (topological_space (has_to_string name)) Type) : @loc_path_connected_space.{0} (has_to_string.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (has_to_string.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_154427 (h0 : list (boolean_algebra.core (finset linarith.comp))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_154428 (h1 : not (ring (non_unital_non_assoc_semiring string.iterator_imp) -> false)) : @strong_rank_condition.{0} (non_unital_non_assoc_semiring.{0} string.iterator_imp) (@classical.by_contradiction'.{1} (ring.{0} (non_unital_non_assoc_semiring.{0} string.iterator_imp)) h1)  := sorry --non-trivial
lemma new_lemma_154429 (h0 : add_monoid (simple_graph (finset (finset pos)))) : add_monoid.fg (simple_graph (finset (finset pos))) := sorry --non-trivial
lemma new_lemma_154430 (h0 : topological_space (has_to_string (has_add linarith.comp))) : sequential_space (has_to_string (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_154431 (h0 : topological_space (option (option (option ennreal)))) : t0_space (option (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_154432 (h0 : finset (has_nndist ennreal)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_154433 (h0 : topological_space (has_zero (has_to_string unsigned))) : regular_space (has_zero (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_154434 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (has_neg.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_neg.{0} name))  := sorry --non-trivial
lemma new_lemma_154435 (h1 : set (add_comm_semigroup enat)) : set.finite h1 := sorry --non-trivial
lemma new_lemma_154436 (h0 : functor.add_const (ring (has_zero Type)) (ring environment.implicit_infer_kind)) : @strong_rank_condition.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_zero.{1} Type)) (ring.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_154437 (h8 : not (add_group (semi_normed_comm_ring (has_nnnorm (has_nnnorm (has_nnnorm (normed_field char))))) -> false)) : @is_add_cyclic.{0} (semi_normed_comm_ring.{0} (has_nnnorm.{0} (has_nnnorm.{0} (has_nnnorm.{0} (normed_field.{0} char))))) (@classical.by_contradiction'.{1} (add_group.{0} (semi_normed_comm_ring.{0} (has_nnnorm.{0} (has_nnnorm.{0} (has_nnnorm.{0} (normed_field.{0} char)))))) h8)  := sorry --non-trivial
lemma new_lemma_154438 (h0 : ordered_add_comm_monoid (finset (has_to_string Type))) : archimedean (finset (has_to_string Type)) := sorry --non-trivial
lemma new_lemma_154439 (h0 : topological_space (normed_lattice_add_comm_group (comm_semigroup pos))) : loc_path_connected_space (normed_lattice_add_comm_group (comm_semigroup pos)) := sorry --non-trivial
lemma new_lemma_154440 (h0 : uniform_space (right_cancel_semigroup fun_info)) : complete_space (right_cancel_semigroup fun_info) := sorry --non-trivial
lemma new_lemma_154441 (h0 : functor.add_const (topological_space (add_cancel_monoid environment.implicit_infer_kind)) Type) : @preirreducible_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_154442 (h0 : not (ring (has_div string_imp) -> false)) : @strong_rank_condition.{0} (has_div.{0} string_imp) (@classical.by_contradiction'.{1} (ring.{0} (has_div.{0} string_imp)) h0)  := sorry --non-trivial
lemma new_lemma_154443 (h1 : set (distrib to_additive.value_type)) : set.finite h1 := sorry --non-trivial
lemma new_lemma_154444 (h0 : topological_space (has_norm (random_gen (random_gen linarith.ineq)))) : irreducible_space (has_norm (random_gen (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_154445 (h0 : function.extfun Type group) : @is_cyclic.{0} (measure_theory.measure_space.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (measure_theory.measure_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_154446 (h0 : function.extfun Type ring) : @rank_condition.{0} (add_cancel_comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (add_cancel_comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_154447 (h0 : topological_space (fintype (option (option ennreal)))) : loc_path_connected_space (fintype (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_154448 (h2 : set (ereal -> mul_one_class environment.implicit_infer_kind)) : set.separates_points h2 := sorry --non-trivial
lemma new_lemma_154449 (h0 : ordered_comm_monoid (ring (has_neg_part pos))) : has_exists_mul_of_le (ring (has_neg_part pos)) := sorry --non-trivial
lemma new_lemma_154450 (h0 : not (filter (plift num) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_154451 (h1 : not (function.extfun Type monoid -> false)) : @monoid.fg.{0} num (@function.extfun_app.{2 1} Type monoid.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type monoid.{0}) h1) num)  := sorry --non-trivial
lemma new_lemma_154452 (h0 : function.extfun Type ring) : @rank_condition.{0} (option.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (option.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154453 (h0 : function.extfun Type (functor.add_const (ring (option empty)))) : @rank_condition.{0} (option.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (option.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ring.{0} (option.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_154454 (h0 : functor.add_const (function.extfun Type cancel_comm_monoid_with_zero) linarith.comp) : @unique_factorization_monoid.{0} (ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type cancel_comm_monoid_with_zero.{0}) linarith.comp h0) (ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154455 (h0 : group (has_Inf (has_pos_part linarith.comp))) : is_cyclic (has_Inf (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_154456 (h0 : functor.add_const (function.extfun (Type 1) topological_space) linarith.comp) : @locally_compact_space.{1} (comm_group.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) linarith.comp h0) (comm_group.{1} Type))  := sorry --non-trivial
lemma new_lemma_154457 (h0 : functor.add_const (monoid (ring num)) unsigned) : @monoid.fg.{0} (ring.{0} num) (@functor.add_const.run.{0 0} (monoid.{0} (ring.{0} num)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_154458 (h0 : ring (denumerable (has_nnnorm (has_subset to_additive.value_type)))) : is_domain (denumerable (has_nnnorm (has_subset to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_154459 (h0 : cancel_comm_monoid_with_zero (ordered_comm_ring (ordered_comm_monoid (has_add Type)))) : unique_factorization_monoid (ordered_comm_ring (ordered_comm_monoid (has_add Type))) := sorry --non-trivial
lemma new_lemma_154460 (h0 : functor.add_const (list (complete_distrib_lattice pos)) pos) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_154461 (h0 : add_group (generalized_boolean_algebra (has_add linarith.comp))) : is_add_cyclic (generalized_boolean_algebra (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_154462 (h0 : topological_space (has_bot (has_add (sub_neg_monoid real)))) : irreducible_space (has_bot (has_add (sub_neg_monoid real))) := sorry --non-trivial
lemma new_lemma_154463 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (semigroup.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semigroup.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_154464 (h0 h1 : ulower pnat) : pnat.coprime (id (ulower.up h0)) (ulower.up h1) := sorry --non-trivial
lemma new_lemma_154465 (h0 : functor.add_const (topological_space (has_nndist Type)) linarith.comp) : @preconnected_space.{1} (has_nndist.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_nndist.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154466 (h0 : functor.add_const (add_monoid (free_add_monoid empty)) unsigned) : add_monoid.fg (free_add_monoid empty) := sorry --non-trivial
lemma new_lemma_154467 (h0 : topological_space (normed_group (has_top (random_gen linarith.ineq)))) : t0_space (normed_group (has_top (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_154468 (h0 : topological_space (denumerable (comm_ring linarith.comp_source))) : irreducible_space (denumerable (comm_ring linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_154469 (h0 : functor.add_const (ordered_comm_monoid (cancel_monoid ennreal)) Type) : @has_exists_mul_of_le.{0} (cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (cancel_monoid.{0} ennreal)) Type h0)  := sorry --non-trivial
lemma new_lemma_154470 (h0 : topological_space (has_neg (finset (finset pos)))) : path_connected_space (has_neg (finset (finset pos))) := sorry --non-trivial
lemma new_lemma_154471 (h0 : functor.add_const (ring (finset environment.implicit_infer_kind)) (finset pos)) : @is_principal_ideal_ring.{0} (finset.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (finset.{0} environment.implicit_infer_kind)) (finset.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_154472 (h0 : ring (add_cancel_comm_monoid to_additive.value_type)) : strong_rank_condition (add_cancel_comm_monoid to_additive.value_type) := sorry --non-trivial
lemma new_lemma_154473 (h1 : complete_lattice (with_one string_imp)) : is_compactly_generated (with_one string_imp) := sorry --non-trivial
lemma new_lemma_154474 (h0 : topological_space (has_to_string (option ennreal))) : t0_space (has_to_string (option ennreal)) := sorry --non-trivial
lemma new_lemma_154475 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_one.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_one.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_154476 (h0 : fin has_zero.zero) : @is_simple_group.{1} (ordered_comm_ring.{1} Type) (@matrix.vec_empty.{1} (group.{1} (ordered_comm_ring.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_154477 (h0 : functor.add_const (ring (comm_group linarith.comp)) environment.implicit_infer_kind) : @is_domain.{0} (comm_group.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (comm_group.{0} linarith.comp)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_154478 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (add_comm_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_comm_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154479 (h0 : topological_space (has_neg (cancel_monoid (add_comm_monoid pos)))) : normal_space (has_neg (cancel_monoid (add_comm_monoid pos))) := sorry --non-trivial
lemma new_lemma_154480 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (finset.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (finset.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154481 (h0 : functor.add_const (monoid (has_edist unsigned)) (semiring empty)) : @monoid.fg.{0} (has_edist.{0} unsigned) (@functor.add_const.run.{0 0} (monoid.{0} (has_edist.{0} unsigned)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_154482 (h0 : function.extfun Type ring) : @rank_condition.{0} (boolean_algebra.core.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (boolean_algebra.core.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_154483 (h1 : set (has_div linarith.comp_source)) : set.finite h1 := sorry --non-trivial
lemma new_lemma_154484 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (boolean_algebra.core.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (boolean_algebra.core.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154485 (h0 : ring (has_compl (has_nnnorm fun_info))) : is_domain (has_compl (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_154486 (h0 : topological_space (has_pos_part (has_neg name))) : sequential_space (has_pos_part (has_neg name)) := sorry --non-trivial
lemma new_lemma_154487 (h0 : complete_lattice (has_top (random_gen (random_gen (random_gen fun_info))))) : is_compactly_generated (has_top (random_gen (random_gen (random_gen fun_info)))) := sorry --non-trivial
lemma new_lemma_154488 (h0 : functor.add_const (topological_space (has_nndist unsigned)) unsigned) : @sequential_space.{0} (has_nndist.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_154489 (h0 : function.extfun Type (functor.add_const (ring (has_Sup empty)))) : @is_principal_ideal_ring.{0} (has_Sup.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (has_Sup.{0} empty)) num (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ring.{0} (has_Sup.{0} empty))) h0 num))  := sorry --non-trivial
lemma new_lemma_154490 (h0 : ring (with_bot (has_norm (has_norm to_additive.value_type)))) : rank_condition (with_bot (has_norm (has_norm to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_154491 (h0 : functor.add_const (ring (sub_neg_monoid linarith.comp)) name) : @is_domain.{0} (sub_neg_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (sub_neg_monoid.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_154492 (h0 : complete_lattice (has_add (option name))) : is_compactly_generated (has_add (option name)) := sorry --non-trivial
lemma new_lemma_154493 (h0 : topological_space (topological_space linarith.comp_source)) : t0_space (topological_space linarith.comp_source) := sorry --non-trivial
lemma new_lemma_154494 (h0 : topological_space (left_cancel_monoid num)) : irreducible_space (left_cancel_monoid num) := sorry --non-trivial
lemma new_lemma_154495 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (random_gen.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (random_gen.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_154496 (h0 : topological_space (ring (option (option (option (option (option (option unsigned)))))))) : totally_disconnected_space (ring (option (option (option (option (option (option unsigned))))))) := sorry --non-trivial
lemma new_lemma_154497 (h0 : topological_space (finset Type)) : discrete_topology (finset Type) := sorry --non-trivial
lemma new_lemma_154498 (h0 : uniform_space (uniform_space string_imp)) : complete_space (uniform_space string_imp) := sorry --non-trivial
lemma new_lemma_154499 (h0 : has_mem.mem monoid has_emptyc.emptyc) : @monoid.fg.{0} fun_info (@function.extfun_app.{2 1} Type monoid.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) monoid.{0} h0) fun_info)  := sorry --non-trivial
lemma new_lemma_154500 (h0 : functor.add_const (ring (semigroup name)) pos) : @is_principal_ideal_ring.{0} (semigroup.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (semigroup.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_154501 (h0 : functor.add_const (topological_space (add_comm_monoid unsigned)) Type) : @normal_space.{0} (add_comm_monoid.{0} unsigned) (@functor.add_const.run.{0 1} (topological_space.{0} (add_comm_monoid.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_154502 (h0 : topological_space (has_nndist Type)) : sequential_space (has_nndist Type) := sorry --non-trivial
lemma new_lemma_154503 (h0 : not (monoid (preorder unsigned) -> false)) : @monoid.fg.{0} (preorder.{0} unsigned) (@classical.by_contradiction'.{1} (monoid.{0} (preorder.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_154504 (h2 : ring (div_inv_monoid fun_info)) : is_domain (div_inv_monoid fun_info) := sorry --non-trivial
lemma new_lemma_154505 (h0 : group (has_pos_part (has_neg (has_pos_part (has_pos_part pos))))) : group.fg (has_pos_part (has_neg (has_pos_part (has_pos_part pos)))) := sorry --non-trivial
lemma new_lemma_154506 (h0 : functor.add_const (topological_space (option num)) congr_arg_kind) : @preirreducible_space.{0} (option.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (option.{0} num)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_154507 (h0 : topological_space (div_inv_monoid char)) : totally_disconnected_space (div_inv_monoid char) := sorry --non-trivial
lemma new_lemma_154508 (h0 : group (has_top (normed_group (semiring unsigned)))) : is_cyclic (has_top (normed_group (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_154509 (h1 : complete_lattice (distrib_lattice (has_nnnorm fun_info))) : is_compactly_generated (distrib_lattice (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_154510 (h1 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h1 (semiring to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_154511 (h0 : functor.add_const Prop (has_to_string (finset Type))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_154512 (h1 : topological_space (has_one (has_norm congr_arg_kind))) : normal_space (has_one (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_154513 (h0 : function.extfun Type topological_space) : @t0_space.{0} (normed_group.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_group.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_154514 (h0 : not (ring (linear_ordered_field char) -> false)) : @strong_rank_condition.{0} (linear_ordered_field.{0} char) (@classical.by_contradiction'.{1} (ring.{0} (linear_ordered_field.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_154515 (h0 : list (normed_comm_ring (has_to_string unsigned))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_154516 (h0 : functor.add_const (functor.add_const (complete_lattice pos) pos) (finset pos)) : @is_compactly_generated.{0} pos (@functor.add_const.run.{0 0} (complete_lattice.{0} pos) pos (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (complete_lattice.{0} pos) pos) (finset.{0} pos) h0))  := sorry --non-trivial
lemma new_lemma_154517 (h0 : filter (boolean_algebra (has_pos_part (ring environment.implicit_infer_kind)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154518 (h0 : functor.add_const (function.extfun Type topological_space) num) : @topological_space.separable_space.{0} (has_to_string.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) num h0) (has_to_string.{0} empty))  := sorry --non-trivial
lemma new_lemma_154519 (h0 : topological_space (has_nndist (boolean_algebra.core name))) : path_connected_space (has_nndist (boolean_algebra.core name)) := sorry --non-trivial
lemma new_lemma_154520 (h0 : group (has_nnnorm (random_gen string_imp))) : is_cyclic (has_nnnorm (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_154521 (h0 : not (ring (topological_space linarith.ineq) -> false)) : @strong_rank_condition.{0} (topological_space.{0} linarith.ineq) (@classical.by_contradiction'.{1} (ring.{0} (topological_space.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_154522 (h0 : ordered_comm_monoid (cancel_monoid pos)) : has_exists_mul_of_le (cancel_monoid pos) := sorry --non-trivial
lemma new_lemma_154523 (h0 : functor.add_const (topological_space (linear_ordered_field ennreal)) ennreal) : @t0_space.{0} (linear_ordered_field.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (linear_ordered_field.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_154524 (h0 : ring (normed_lattice_add_comm_group unsigned)) : rank_condition (normed_lattice_add_comm_group unsigned) := sorry --non-trivial
lemma new_lemma_154525 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (with_one.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_one.{0} empty))  := sorry --non-trivial
lemma new_lemma_154526 (h0 : complete_lattice (semigroup (has_neg (has_neg name)))) : complete_lattice.is_Sup_finite_compact (semigroup (has_neg (has_neg name))) := sorry --non-trivial
lemma new_lemma_154527 (h0 : topological_space (has_inv (has_norm (with_bot (has_norm to_additive.value_type))))) : irreducible_space (has_inv (has_norm (with_bot (has_norm to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_154528 (h0 : not (add_group (has_sub num) -> false)) : @add_group.fg.{0} (has_sub.{0} num) (@classical.by_contradiction'.{1} (add_group.{0} (has_sub.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_154529 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} linarith.comp (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 linarith.comp)  := sorry --non-trivial
lemma new_lemma_154530 (h0 : topological_space (canonically_linear_ordered_monoid (has_Inf pos))) : totally_separated_space (canonically_linear_ordered_monoid (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_154531 (h0 : uniform_space (add_group (has_norm num))) : separated_space (add_group (has_norm num)) := sorry --non-trivial
lemma new_lemma_154532 (h0 : functor.add_const (topological_space (add_comm_monoid unsigned)) linarith.comp) : @discrete_topology.{0} (add_comm_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (add_comm_monoid.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154533 (h0 : topological_space (has_zero (normed_comm_ring Type))) : irreducible_space (has_zero (normed_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_154534 (h0 : functor.add_const (ring (add_cancel_monoid name)) linarith.comp) : @strong_rank_condition.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (add_cancel_monoid.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154535 (h0 : topological_space (normed_field (has_nnnorm to_additive.value_type))) : path_connected_space (normed_field (has_nnnorm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_154536 (h2 : uniform_space (topological_space (random_gen char))) : complete_space (topological_space (random_gen char)) := sorry --non-trivial
lemma new_lemma_154537 (h0 : functor.add_const (ring (add_comm_monoid Type)) Type) : @strong_rank_condition.{1} (add_comm_monoid.{1} Type) (@functor.add_const.run.{1 1} (ring.{1} (add_comm_monoid.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_154538 (h0 : ring (boolean_algebra.core (normed_comm_ring Type))) : rank_condition (boolean_algebra.core (normed_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_154539 (h0 : functor.add_const (uniform_space (ring pos)) (ring (ring (has_neg linarith.comp)))) : @complete_space.{0} (ring.{0} pos) (@functor.add_const.run.{0 0} (uniform_space.{0} (ring.{0} pos)) (ring.{0} (ring.{0} (has_neg.{0} linarith.comp))) h0)  := sorry --non-trivial
lemma new_lemma_154540 (h0 : uniform_space (with_zero to_additive.value_type)) : complete_space (with_zero to_additive.value_type) := sorry --non-trivial
lemma new_lemma_154541 (h0 : topological_space (metric_space (has_norm (has_norm congr_arg_kind)))) : preirreducible_space (metric_space (has_norm (has_norm congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_154542 (h0 : function.extfun Type topological_space) : @t0_space.{0} (add_comm_monoid.{0} (has_add.{0} name)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_comm_monoid.{0} (has_add.{0} name)))  := sorry --non-trivial
lemma new_lemma_154543 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (has_top.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type monoid.{0} h0 (has_top.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_154544 (h0 : not (cancel_comm_monoid_with_zero (plift empty) -> false)) : @unique_factorization_monoid.{1} (plift.{1} empty) (@classical.by_contradiction'.{2} (cancel_comm_monoid_with_zero.{1} (plift.{1} empty)) h0)  := sorry --non-trivial
lemma new_lemma_154545 (h0 : add_monoid (has_sub empty)) : add_monoid.fg (has_sub empty) := sorry --non-trivial
lemma new_lemma_154546 (h0 : list (normed_linear_ordered_group empty)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_154547 (h0 : functor.add_const (topological_space (has_nndist empty)) empty) : @preirreducible_space.{0} (has_nndist.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_154548 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (measurable_space.{0} (with_bot.{0} string_imp)) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (measurable_space.{0} (with_bot.{0} string_imp)))  := sorry --non-trivial
lemma new_lemma_154549 (h1 : set (enat -> std_gen)) : set.separates_points h1 := sorry --non-trivial
lemma new_lemma_154550 (h0 : ring (simple_graph (mul_one_class (mul_one_class (mul_one_class string.iterator_imp))))) : is_domain (simple_graph (mul_one_class (mul_one_class (mul_one_class string.iterator_imp)))) := sorry --non-trivial
lemma new_lemma_154551 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (boolean_algebra.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (boolean_algebra.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154552 (h0 : topological_space (add_cancel_comm_monoid (semiring (semiring empty)))) : discrete_topology (add_cancel_comm_monoid (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_154553 (h0 : topological_space (mul_zero_class (has_zero (cancel_monoid (has_nndist pos))))) : normal_space (mul_zero_class (has_zero (cancel_monoid (has_nndist pos)))) := sorry --non-trivial
lemma new_lemma_154554 (h0 : not (ring (normed_group to_additive.value_type) -> false)) : @rank_condition.{0} (normed_group.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (normed_group.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_154555 (h0 : functor.add_const (group (partial_order empty)) num) : @normalizer_condition.{0} (partial_order.{0} empty) (@functor.add_const.run.{0 0} (group.{0} (partial_order.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_154556 (h0 : filter (comm_group (has_add pos))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_154557 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (filter.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (filter.{0} empty))  := sorry --non-trivial
lemma new_lemma_154558 (h0 : group (has_to_string (has_nndist (has_nndist pos)))) : is_cyclic (has_to_string (has_nndist (has_nndist pos))) := sorry --non-trivial
lemma new_lemma_154559 (h0 : group (ordered_comm_monoid (ring (has_neg pos)))) : group.fg (ordered_comm_monoid (ring (has_neg pos))) := sorry --non-trivial
lemma new_lemma_154560 (h0 : topological_space (has_inter unsigned)) : discrete_topology (has_inter unsigned) := sorry --non-trivial
lemma new_lemma_154561 (h0 : topological_space (normed_field (has_nnnorm reducibility_hints))) : t0_space (normed_field (has_nnnorm reducibility_hints)) := sorry --non-trivial
lemma new_lemma_154562 (h0 : functor.add_const (topological_space (has_nndist unsigned)) pos) : @t1_space.{0} (has_nndist.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_154563 (h0 : functor.add_const (complete_lattice (semigroup Type)) linarith.comp) : @is_atomistic.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (complete_lattice.{1} (semigroup.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154564 (h0 : topological_space (has_bot (has_add Type))) : sequential_space (has_bot (has_add Type)) := sorry --non-trivial
lemma new_lemma_154565 (h0 : list (linear_ordered_comm_group (has_inter (has_dist unsigned)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_154566 (h0 : functor.comp complete_lattice has_zero name) : @is_atomistic.{0} (has_zero.{0} name) (@functor.comp.run.{0 0 0} complete_lattice.{0} has_zero.{0} name h0)  := sorry --non-trivial
lemma new_lemma_154567 (h0 : cancel_comm_monoid_with_zero (has_add (option ennreal))) : unique_factorization_monoid (has_add (option ennreal)) := sorry --non-trivial
lemma new_lemma_154568 (h0 : topological_space (has_bot (has_add (has_add (ordered_comm_monoid (has_Inf (has_add Type))))))) : discrete_topology (has_bot (has_add (has_add (ordered_comm_monoid (has_Inf (has_add Type)))))) := sorry --non-trivial
lemma new_lemma_154569 (h0 : filter (with_bot (has_top (has_top fun_info)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154570 (h0 : add_group (has_compl (has_compl linarith.ineq))) : is_add_cyclic (has_compl (has_compl linarith.ineq)) := sorry --non-trivial
lemma new_lemma_154571 (h0 : function.extfun nat fin) : @path_connected_space.{1} (simple_graph.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (simple_graph.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_154572 (h0 : topological_space (partial_order (option empty))) : loc_path_connected_space (partial_order (option empty)) := sorry --non-trivial
lemma new_lemma_154573 (h0 : add_monoid (add_cancel_monoid (option (option (option empty))))) : add_monoid.fg (add_cancel_monoid (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_154574 (h0 : topological_space (has_zero pos)) : path_connected_space (has_zero pos) := sorry --non-trivial
lemma new_lemma_154575 (h0 : set (semi_normed_comm_ring ereal)) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_154576 (h0 : topological_space (boolean_algebra.core (has_add Type))) : sequential_space (boolean_algebra.core (has_add Type)) := sorry --non-trivial
lemma new_lemma_154577 (h0 : functor.add_const (complete_lattice (has_add environment.implicit_infer_kind)) linarith.comp) : @complete_lattice.is_Sup_finite_compact.{0} (has_add.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_add.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154578 (h0 : functor.add_const (group (cancel_monoid ennreal)) ennreal) : @is_simple_group.{0} (cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (group.{0} (cancel_monoid.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_154579 (h0 : topological_space (pseudo_metric_space Type)) : path_connected_space (pseudo_metric_space Type) := sorry --non-trivial
lemma new_lemma_154580 (h0 : functor.add_const (topological_space (has_to_string unsigned)) environment.implicit_infer_kind) : @preconnected_space.{0} (has_to_string.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} unsigned)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_154581 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (complete_distrib_lattice.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (complete_distrib_lattice.{0} num))  := sorry --non-trivial
lemma new_lemma_154582 (h0 : group (bin_tree (semiring (semiring empty)))) : normalizer_condition (bin_tree (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_154583 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (has_bot unsigned)) := sorry --non-trivial
lemma new_lemma_154584 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (mul_zero_class.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (mul_zero_class.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154585 (h0 : add_group (has_ssubset reducibility_hints)) : is_add_cyclic (has_ssubset reducibility_hints) := sorry --non-trivial
lemma new_lemma_154586 (h0 : topological_space (normed_comm_ring environment.implicit_infer_kind)) : locally_compact_space (normed_comm_ring environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_154587 (h0 : topological_space (has_top (semiring linarith.comp))) : irreducible_space (has_top (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_154588 (h0 : not (filter (linear_ordered_semiring linarith.comp) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_154589 (h0 : functor.add_const (complete_lattice (plift unsigned)) congr_arg_kind) : @is_atomistic.{1} (plift.{1} unsigned) (@functor.add_const.run.{1 0} (complete_lattice.{1} (plift.{1} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_154590 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (measurable_space.dynkin_system.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (measurable_space.dynkin_system.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154591 (h0 : functor.add_const (complete_lattice (linear_ordered_field ennreal)) ennreal) : @is_atomistic.{0} (linear_ordered_field.{0} ennreal) (@functor.add_const.run.{0 0} (complete_lattice.{0} (linear_ordered_field.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_154592 (h0 : has_mem.mem (has_one num) has_emptyc.emptyc) : @discrete_topology.{0} (has_one.{0} num) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_one.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_154593 (h0 : fin has_zero.zero) : @t1_space.{0} (ordered_comm_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (ordered_comm_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154594 (h0 : list (cancel_monoid (semigroup (add_comm_monoid environment.implicit_infer_kind)))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_154595 (h0 : function.extfun Type (functor.add_const (list (generalized_boolean_algebra pos)))) : list.nodup (functor.add_const.run (function.extfun_app h0 pos)) := sorry --non-trivial
lemma new_lemma_154596 (h0 : monoid (has_star empty)) : monoid.fg (has_star empty) := sorry --non-trivial
lemma new_lemma_154597 (h0 : not (complete_lattice (non_unital_non_assoc_semiring char) -> false)) : @is_compactly_generated.{0} (non_unital_non_assoc_semiring.{0} char) (@classical.by_contradiction'.{1} (complete_lattice.{0} (non_unital_non_assoc_semiring.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_154598 (h0 : topological_space (simple_graph (has_neg pos))) : t0_space (simple_graph (has_neg pos)) := sorry --non-trivial
lemma new_lemma_154599 (h0 : has_lt (nondiscrete_normed_field (mul_one_class (lattice (mul_one_class enat))))) : no_max_order (nondiscrete_normed_field (mul_one_class (lattice (mul_one_class enat)))) := sorry --non-trivial
lemma new_lemma_154600 (h0 : functor.add_const (ordered_add_comm_monoid (ordered_comm_ring pos)) name) : @archimedean.{0} (ordered_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (ordered_comm_ring.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_154601 (h0 : topological_space (boolean_algebra.core (has_pos_part (has_Inf (has_add Type))))) : regular_space (boolean_algebra.core (has_pos_part (has_Inf (has_add Type)))) := sorry --non-trivial
lemma new_lemma_154602 (h0 : functor.add_const (function.extfun Type list) pos) : list.nodup (function.extfun_app (functor.add_const.run h0) (ring pos)) := sorry --non-trivial
lemma new_lemma_154603 (h0 : ordered_comm_monoid (complete_distrib_lattice (has_add (has_add (sub_neg_monoid (has_add real)))))) : has_exists_mul_of_le (complete_distrib_lattice (has_add (has_add (sub_neg_monoid (has_add real))))) := sorry --non-trivial
lemma new_lemma_154604 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (partial_order.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (partial_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154605 (h2 : ring (random_gen char)) : is_domain (random_gen char) := sorry --non-trivial
lemma new_lemma_154606 (h0 : cancel_comm_monoid_with_zero (add_cancel_monoid (comm_group name))) : unique_factorization_monoid (add_cancel_monoid (comm_group name)) := sorry --non-trivial
lemma new_lemma_154607 (h0 : functor.comp topological_space pseudo_metric_space pos) : @t1_space.{0} (pseudo_metric_space.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} pseudo_metric_space.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_154608 (h0 : ring (normed_group (has_inv (with_zero fun_info)))) : is_domain (normed_group (has_inv (with_zero fun_info))) := sorry --non-trivial
lemma new_lemma_154609 (h0 : fin has_zero.zero) : @has_exists_mul_of_le.{0} (has_bot.{0} name) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) h0) (has_bot.{0} name))  := sorry --non-trivial
lemma new_lemma_154610 (h0 : uniform_space (comm_group (boolean_algebra (finset (has_to_string Type))))) : separated_space (comm_group (boolean_algebra (finset (has_to_string Type)))) := sorry --non-trivial
lemma new_lemma_154611 (h0 : functor.add_const (function.extfun Type group) Type) : @normalizer_condition.{0} (finset.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type group.{0}) Type h0) (finset.{0} pos))  := sorry --non-trivial
lemma new_lemma_154612 (h0 : functor.comp complete_lattice comm_group (semigroup environment.implicit_infer_kind)) : @complete_lattice.is_Sup_finite_compact.{0} (comm_group.{0} (semigroup.{0} environment.implicit_infer_kind)) (@functor.comp.run.{0 0 0} complete_lattice.{0} comm_group.{0} (semigroup.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_154613 (h0 : group (semigroup name)) : is_simple_group (semigroup name) := sorry --non-trivial
lemma new_lemma_154614 (h0 : functor.add_const (topological_space (normed_comm_ring name)) linarith.comp) : @t0_space.{0} (normed_comm_ring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154615 (h0 : functor.add_const (function.extfun Type group) (has_neg environment.implicit_infer_kind)) : @group.fg.{0} (boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) (has_neg.{0} environment.implicit_infer_kind) h0) (boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154616 (h0 : function.extfun Type (functor.comp list mul_zero_class)) : palindrome (functor.comp.run (function.extfun_app h0 name)) := sorry --non-trivial
lemma new_lemma_154617 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (has_neg.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_neg.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154618 (h0 : monoid (distrib_lattice (has_inv (random_gen fun_info)))) (h1 : topological_space (star_monoid (distrib_lattice (has_inv (random_gen fun_info))))) : path_connected_space (star_monoid (distrib_lattice (has_inv (random_gen fun_info)))) := sorry --non-trivial
lemma new_lemma_154619 (h0 : functor.add_const (add_group (generalized_boolean_algebra linarith.comp)) (ring pos)) : @is_add_cyclic.{0} (generalized_boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_group.{0} (generalized_boolean_algebra.{0} linarith.comp)) (ring.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_154620 (h1 : filter (linear_ordered_add_comm_group char)) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_154621 (h0 : complete_lattice (add_monoid to_additive.value_type)) : complete_lattice.is_Sup_finite_compact (add_monoid to_additive.value_type) := sorry --non-trivial
lemma new_lemma_154622 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (partial_order empty)) := sorry --non-trivial
lemma new_lemma_154623 (h0 : has_mem.mem (measurable_space fun_info) has_emptyc.emptyc) : @separated_space.{0} (measurable_space.{0} fun_info) (@finset.pi.empty.{1 0} Type uniform_space.{0} (measurable_space.{0} fun_info) h0)  := sorry --non-trivial
lemma new_lemma_154624 (h0 : filter (topological_space (add_comm_semigroup string.iterator_imp))) : @totally_disconnected_space.{0} (add_comm_semigroup.{0} string.iterator_imp) (@filter.Limsup.{0} (topological_space.{0} (add_comm_semigroup.{0} string.iterator_imp)) (@complete_lattice.to_conditionally_complete_lattice.{0} (topological_space.{0} (add_comm_semigroup.{0} string.iterator_imp)) (@topological_space.complete_lattice.{0} (add_comm_semigroup.{0} string.iterator_imp))) h0)  := sorry --non-trivial
lemma new_lemma_154625 (h0 : functor.comp topological_space mul_zero_class unsigned) : @preirreducible_space.{0} (mul_zero_class.{0} unsigned) (@functor.comp.run.{0 0 0} topological_space.{0} mul_zero_class.{0} unsigned h0)  := sorry --non-trivial
lemma new_lemma_154626 (h0 : uniform_space (complete_distrib_lattice (option (option pos)))) : complete_space (complete_distrib_lattice (option (option pos))) := sorry --non-trivial
lemma new_lemma_154627 (h0 : functor.add_const (topological_space (has_neg_part pos)) pos) : @t0_space.{0} (has_neg_part.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_154628 (h0 : functor.add_const (complete_lattice (has_add pos)) unsigned) : @is_atomistic.{0} (has_add.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_add.{0} pos)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_154629 (h0 : function.extfun Type ring) : @is_domain.{0} (complete_distrib_lattice.{0} (option.{0} unsigned)) (@function.extfun_app.{2 1} Type ring.{0} h0 (complete_distrib_lattice.{0} (option.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_154630 (h0 : functor.add_const (ring (has_neg_part Type)) Type) : @is_principal_ideal_ring.{1} (has_neg_part.{1} Type) (@functor.add_const.run.{1 1} (ring.{1} (has_neg_part.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_154631 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (finset.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (finset.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_154632 (h0 : add_monoid (option (semiring (semiring (semiring (semiring (semiring empty))))))) : add_monoid.fg (option (semiring (semiring (semiring (semiring (semiring empty)))))) := sorry --non-trivial
lemma new_lemma_154633 (h0 : prod (has_neg_part (mul_zero_class unsigned)) (has_neg_part (mul_zero_class unsigned))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_154634 (h0 : functor.add_const (topological_space (has_to_string pos)) (has_add Type)) : @t1_space.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (has_to_string.{0} pos)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_154635 (h1 : function.extfun Type topological_space) : @path_connected_space.{0} (complete_semilattice_Sup.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (complete_semilattice_Sup.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_154636 (h1 h2 : multiset (mul_one_class enat)) : multiset.disjoint h1 h2 := sorry --non-trivial
lemma new_lemma_154637 (h0 : function.extfun Type topological_space) : @normal_space.{0} (has_dist.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_dist.{0} num))  := sorry --non-trivial
lemma new_lemma_154638 (h0 : not (semiring (left_cancel_semigroup congr_arg_kind) -> false)) : @is_noetherian_ring.{0} (left_cancel_semigroup.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (semiring.{0} (left_cancel_semigroup.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_154639 (h0 : complete_lattice (mul_zero_class congr_arg_kind)) : is_compactly_generated (mul_zero_class congr_arg_kind) := sorry --non-trivial
lemma new_lemma_154640 (h0 : complete_lattice (has_neg (add_comm_monoid (add_comm_monoid environment.implicit_infer_kind)))) : is_compactly_generated (has_neg (add_comm_monoid (add_comm_monoid environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_154641 (h0 : not (add_group (linear_ordered_semiring to_additive.value_type) -> false)) : @is_add_cyclic.{0} (linear_ordered_semiring.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (add_group.{0} (linear_ordered_semiring.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_154642 (h0 : to_additive.value_type -> to_additive.value_type -> to_additive.value_type) : commutative h0 := sorry --non-trivial
lemma new_lemma_154643 (h0 : topological_space (ordered_comm_ring (ordered_comm_ring Type))) : sequential_space (ordered_comm_ring (ordered_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_154644 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (has_emptyc.{0} fun_info) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (has_emptyc.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_154645 (h0 : monoid (has_nndist name)) : monoid.fg (has_nndist name) := sorry --non-trivial
lemma new_lemma_154646 (h0 : functor.add_const (ring (cancel_monoid Type)) linarith.comp) : @strong_rank_condition.{1} (cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (cancel_monoid.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154647 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (has_norm.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_norm.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_154648 (h0 : function.extfun Type ring) : @is_domain.{0} (@id.{2} Type linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} h0 (@id.{2} Type linarith.comp))  := sorry --non-trivial
lemma new_lemma_154649 (h0 : semiring (sub_neg_monoid (has_add pos))) : is_noetherian_ring (sub_neg_monoid (has_add pos)) := sorry --non-trivial
lemma new_lemma_154650 (h0 : topological_space (ordered_comm_monoid (ordered_comm_ring Type))) : discrete_topology (ordered_comm_monoid (ordered_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_154651 (h3 : set (has_div ereal)) : set.finite h3 := sorry --non-trivial
lemma new_lemma_154652 (h0 : fin has_zero.zero) : @add_monoid.fg.{0} (add_comm_monoid.{0} pos) (@matrix.vec_empty.{0} (add_monoid.{0} (add_comm_monoid.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_154653 (h0 : finset (has_dist empty)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_154654 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (denumerable.{0} char) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (denumerable.{0} char))  := sorry --non-trivial
lemma new_lemma_154655 (h0 : ring (canonically_ordered_comm_semiring unsigned)) : is_domain (canonically_ordered_comm_semiring unsigned) := sorry --non-trivial
lemma new_lemma_154656 (h0 : functor.add_const (function.extfun Type topological_space) environment.implicit_infer_kind) : @topological_space.separable_space.{0} (finset.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) environment.implicit_infer_kind h0) (finset.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_154657 (h0 : group (comm_group (ring ennreal))) : is_simple_group (comm_group (ring ennreal)) := sorry --non-trivial
lemma new_lemma_154658 (h0 : fin has_zero.zero) : @loc_path_connected_space.{0} (sub_neg_monoid.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (sub_neg_monoid.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin (@matrix.vec_empty.{0} (function.extfun.{1 1} nat fin) h0) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_154659 (h0 : ring (has_add (has_add (has_nndist linarith.comp)))) : strong_rank_condition (has_add (has_add (has_nndist linarith.comp))) := sorry --non-trivial
lemma new_lemma_154660 (h0 : not (uniform_space (complete_semilattice_Sup congr_arg_kind) -> false)) : @complete_space.{0} (complete_semilattice_Sup.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (uniform_space.{0} (complete_semilattice_Sup.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_154661 (h0 : topological_space (with_bot (has_inv (has_inv to_additive.value_type)))) : totally_separated_space (with_bot (has_inv (has_inv to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_154662 (h0 : topological_space (simple_graph (ring linarith.comp))) : topological_space.separable_space (simple_graph (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_154663 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (has_edist.{0} unsigned) (@function.extfun_app.{2 1} Type semiring.{0} h0 (has_edist.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154664 (h0 : topological_space (has_nndist (has_neg_part name))) : locally_compact_space (has_nndist (has_neg_part name)) := sorry --non-trivial
lemma new_lemma_154665 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (add_cancel_monoid congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_154666 (h0 : not (has_mem.mem (has_top linarith.comp) has_emptyc.emptyc -> false)) : @totally_disconnected_space.{0} (has_top.{0} linarith.comp) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_top.{0} linarith.comp) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_top.{0} linarith.comp) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_154667 (h0 : not (ring (random_gen to_additive.value_type) -> false)) : @is_domain.{0} (random_gen.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (random_gen.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_154668 (h0 : group (has_neg (has_add pos))) : group.fg (has_neg (has_add pos)) := sorry --non-trivial
lemma new_lemma_154669 (h0 : topological_space (has_pos_part (has_add real))) : sequential_space (has_pos_part (has_add real)) := sorry --non-trivial
lemma new_lemma_154670 (h0 : functor.add_const (topological_space (has_neg_part pos)) pos) : @loc_path_connected_space.{0} (has_neg_part.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_154671 (h0 : functor.add_const (filter (comm_group pos)) environment.implicit_infer_kind) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_154672 (h0 : list (has_add (has_neg (add_cancel_monoid Type)))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_154673 (h0 : functor.comp group finset name) : @is_cyclic.{0} (finset.{0} name) (@functor.comp.run.{0 0 0} group.{0} finset.{0} name h0)  := sorry --non-trivial
lemma new_lemma_154674 (h0 : functor.comp complete_lattice finset unsigned) : @complete_lattice.is_Sup_finite_compact.{0} (finset.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (finset.{0} unsigned)) pos (@functor.comp.run.{0 0 0} complete_lattice.{0} finset.{0} unsigned (@functor.add_const.run.{0 0} (functor.comp.{0 0 0} complete_lattice.{0} finset.{0} unsigned) name (@functor.comp.run.{0 0 0} complete_lattice.{0} finset.{0} unsigned (@functor.add_const.run.{0 0} (functor.comp.{0 0 0} complete_lattice.{0} finset.{0} unsigned) name (@functor.comp.run.{0 0 0} complete_lattice.{0} finset.{0} unsigned (@functor.add_const.run.{0 1} (functor.comp.{0 0 0} complete_lattice.{0} finset.{0} unsigned) Type (@functor.comp.run.{0 0 0} complete_lattice.{0} finset.{0} unsigned (@functor.add_const.run.{0 0} (functor.comp.{0 0 0} complete_lattice.{0} finset.{0} unsigned) name (@functor.comp.run.{0 0 0} complete_lattice.{0} finset.{0} unsigned (@functor.add_const.run.{0 1} (functor.comp.{0 0 0} complete_lattice.{0} finset.{0} unsigned) Type (@functor.comp.run.{0 0 0} complete_lattice.{0} finset.{0} unsigned (@functor.add_const.run.{0 1} (functor.comp.{0 0 0} complete_lattice.{0} finset.{0} unsigned) Type (@functor.comp.run.{0 0 0} complete_lattice.{0} finset.{0} unsigned (@functor.add_const.run.{0 1} (functor.comp.{0 0 0} complete_lattice.{0} finset.{0} unsigned) Type (@functor.comp.run.{0 0 0} complete_lattice.{0} finset.{0} unsigned (@functor.add_const.run.{0 0} (functor.comp.{0 0 0} complete_lattice.{0} finset.{0} unsigned) name (@functor.comp.run.{0 0 0} complete_lattice.{0} finset.{0} unsigned h0))))))))))))))))))  := sorry --non-trivial
lemma new_lemma_154675 (h0 : ring (complete_semilattice_Sup (has_norm (pseudo_emetric_space linarith.ineq)))) : rank_condition (complete_semilattice_Sup (has_norm (pseudo_emetric_space linarith.ineq))) := sorry --non-trivial
lemma new_lemma_154676 (h0 : topological_space (normed_comm_ring (boolean_algebra.core Type))) : path_connected_space (normed_comm_ring (boolean_algebra.core Type)) := sorry --non-trivial
lemma new_lemma_154677 (h0 : topological_space (comm_ring (has_ssubset to_additive.value_type))) : totally_disconnected_space (comm_ring (has_ssubset to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_154678 (h0 : topological_space (add_comm_monoid (has_top (has_top congr_arg_kind)))) : path_connected_space (add_comm_monoid (has_top (has_top congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_154679 (h0 : complete_lattice (has_div reducibility_hints)) : complete_lattice.is_Sup_finite_compact (has_div reducibility_hints) := sorry --non-trivial
lemma new_lemma_154680 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @preirreducible_space.{0} (canonically_ordered_add_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) topological_space.{0}) (canonically_ordered_add_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_154681 (h0 : add_group (has_emptyc (has_norm (semiring (has_top to_additive.value_type))))) : is_add_cyclic (has_emptyc (has_norm (semiring (has_top to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_154682 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (generalized_boolean_algebra.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (generalized_boolean_algebra.{0} name))  := sorry --non-trivial
lemma new_lemma_154683 (h0 : functor.add_const (group (cancel_monoid ennreal)) name) : @normalizer_condition.{0} (cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (group.{0} (cancel_monoid.{0} ennreal)) name h0)  := sorry --non-trivial
lemma new_lemma_154684 (h0 : ring (has_pos_part (has_neg (has_neg (has_Inf (has_neg pos)))))) : is_domain (has_pos_part (has_neg (has_neg (has_Inf (has_neg pos))))) := sorry --non-trivial
lemma new_lemma_154685 (h0 : monoid (linear_ordered_add_comm_group (has_top num))) : monoid.fg (linear_ordered_add_comm_group (has_top num)) := sorry --non-trivial
lemma new_lemma_154686 (h0 : not (complete_lattice (topological_space linarith.comp_source) -> false)) : complete_lattice.is_Sup_finite_compact (topological_space linarith.comp_source) := sorry --non-trivial
lemma new_lemma_154687 (h0 : list Type) (h1 : list (parser (list.head h0))) : list.nodup h1 := sorry --non-trivial
lemma new_lemma_154688 (h0 : functor.add_const (function.extfun Type complete_lattice) linarith.comp) : @is_compactly_generated.{0} (has_zero.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) linarith.comp h0) (has_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_154689 (h0 : topological_space (distrib_lattice (has_ssubset linarith.ineq))) : t0_space (distrib_lattice (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_154690 (h0 : functor.add_const (topological_space pos) unsigned) : @preirreducible_space.{0} pos (@functor.add_const.run.{0 0} (topological_space.{0} pos) unsigned h0)  := sorry --non-trivial
lemma new_lemma_154691 (h0 : fin has_zero.zero) : @regular_space.{0} (ordered_comm_ring.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (ordered_comm_ring.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_154692 (h0 : list (has_neg (has_pos_part (has_pos_part pos)))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_154693 (h0 : function.extfun Type (functor.add_const (ordered_add_comm_monoid (has_pos_part pos)))) : @archimedean.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (has_pos_part.{0} pos)) linarith.comp (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ordered_add_comm_monoid.{0} (has_pos_part.{0} pos))) h0 linarith.comp))  := sorry --non-trivial
lemma new_lemma_154694 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} name (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) name)  := sorry --non-trivial
lemma new_lemma_154695 (h0 : add_group (linear_ordered_semiring (semiring (semiring unsigned)))) : is_add_cyclic (linear_ordered_semiring (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_154696 (h0 : ring (add_semigroup unsigned)) : is_domain (add_semigroup unsigned) := sorry --non-trivial
lemma new_lemma_154697 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (generalized_boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (generalized_boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_154698 (h0 : topological_space (pseudo_emetric_space num)) : irreducible_space (pseudo_emetric_space num) := sorry --non-trivial
lemma new_lemma_154699 (h0 : not (topological_space (linear_ordered_comm_ring congr_arg_kind) -> false)) : @totally_separated_space.{0} (linear_ordered_comm_ring.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (linear_ordered_comm_ring.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_154700 (h0 : functor.add_const (topological_space (semigroup name)) Type) : @t1_space.{0} (semigroup.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (semigroup.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_154701 (h0 : topological_space (with_one (random_gen linarith.comp_source))) : locally_compact_space (with_one (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_154702 (h0 : filter (has_edist congr_arg_kind)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154703 (h0 : functor.add_const (topological_space (ordered_comm_ring pos)) linarith.comp) : @normal_space.{0} (ordered_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_ring.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154704 (h0 : function.extfun nat fin) : @is_compactly_generated.{0} (ordered_comm_ring.{0} pos) (@matrix.vec_empty.{0} (complete_lattice.{0} (ordered_comm_ring.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_154705 (h0 : topological_space (has_to_string (option (option ennreal)))) : totally_separated_space (has_to_string (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_154706 (h1 : topological_space (has_ssubset (lex reducibility_hints))) : totally_disconnected_space (has_ssubset (lex reducibility_hints)) := sorry --non-trivial
lemma new_lemma_154707 (h0 : functor.add_const (semiring (comm_group Type)) pos) : @is_noetherian_ring.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 0} (semiring.{1} (comm_group.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_154708 (h0 : group (has_union (has_norm unsigned))) : group.fg (has_union (has_norm unsigned)) := sorry --non-trivial
lemma new_lemma_154709 (h0 : topological_space (ordered_ring unsigned)) : totally_disconnected_space (ordered_ring unsigned) := sorry --non-trivial
lemma new_lemma_154710 (h0 : has_lt (mul_one_class (mul_one_class fun_info))) : no_max_order (mul_one_class (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_154711 (h0 : topological_space (normed_field environment.projection_info)) (h1 : add_group (normed_field environment.projection_info)) : topological_add_group (normed_field environment.projection_info) := sorry --non-trivial
lemma new_lemma_154712 (h0 : add_monoid empty) : add_monoid.fg empty := sorry --non-trivial
lemma new_lemma_154713 (h0 : not (function.extfun Type uniform_space -> false)) : @separated_space.{0} (has_top.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (has_top.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_154714 (h0 : group (normed_group (random_gen linarith.comp_source))) : group.fg (normed_group (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_154715 (h0 : functor.add_const (complete_lattice (normed_linear_ordered_group empty)) (semiring (semiring unsigned))) : @complete_lattice.is_Sup_finite_compact.{0} (normed_linear_ordered_group.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (normed_linear_ordered_group.{0} empty)) (semiring.{0} (semiring.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_154716 (h0 : group (fintype (has_inv linarith.ineq))) : normalizer_condition (fintype (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_154717 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (group_with_zero.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (group_with_zero.{0} empty))  := sorry --non-trivial
lemma new_lemma_154718 (h0 : cancel_comm_monoid_with_zero (ring (ring name))) : unique_factorization_monoid (ring (ring name)) := sorry --non-trivial
lemma new_lemma_154719 (h0 : functor.add_const (semiring (boolean_algebra.core ennreal)) num) : @is_noetherian_ring.{0} (boolean_algebra.core.{0} ennreal) (@functor.add_const.run.{0 0} (semiring.{0} (boolean_algebra.core.{0} ennreal)) num h0)  := sorry --non-trivial
lemma new_lemma_154720 (h0 : functor.add_const (cancel_comm_monoid_with_zero (complete_linear_order empty)) empty) : @unique_factorization_monoid.{0} (complete_linear_order.{0} empty) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (complete_linear_order.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_154721 (h0 : functor.add_const (group (semigroup Type)) linarith.comp) : @normalizer_condition.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (semigroup.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154722 (h0 : list (has_ssubset (comm_ring (random_gen linarith.ineq)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_154723 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (add_right_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type semiring.{0} h0 (add_right_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_154724 (h0 : not (function.extfun Type complete_lattice -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (semiring.{0} linarith.ineq) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (semiring.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_154725 (h1 : complete_lattice (mul_one_class (division_ring std_gen))) : complete_lattice.is_Sup_finite_compact (mul_one_class (division_ring std_gen)) := sorry --non-trivial
lemma new_lemma_154726 (h0 : group (has_Inf (ring pos))) : is_cyclic (has_Inf (ring pos)) := sorry --non-trivial
lemma new_lemma_154727 (h0 : fin has_zero.zero) : @totally_separated_space.{1} (has_bot.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (has_bot.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_154728 (h0 : ordered_add_comm_monoid (linear_ordered_cancel_comm_monoid (option unsigned))) : archimedean (linear_ordered_cancel_comm_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_154729 (h0 : ordered_add_comm_monoid (ordered_comm_monoid (has_add real))) : archimedean (ordered_comm_monoid (has_add real)) := sorry --non-trivial
lemma new_lemma_154730 (h0 : functor.add_const (topological_space (measurable_space.dynkin_system num)) (semiring congr_arg_kind)) : @totally_separated_space.{0} (measurable_space.dynkin_system.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (measurable_space.dynkin_system.{0} num)) (semiring.{0} congr_arg_kind) h0)  := sorry --non-trivial
lemma new_lemma_154731 (h0 : topological_space (has_nndist Type)) : discrete_topology (has_nndist Type) := sorry --non-trivial
lemma new_lemma_154732 (h0 : not (topological_space (add_monoid linarith.comp_source) -> false)) : @t0_space.{0} (add_monoid.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (add_monoid.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_154733 (h0 : functor.add_const (filter (semigroup linarith.comp)) pos) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_154734 (h0 : functor.add_const (topological_space (has_add Type)) pos) : @preconnected_space.{1} (has_add.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_add.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_154735 (h0 : finset (has_zero (finset (finset linarith.comp)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_154736 (h0 : group (add_left_cancel_semigroup (option (option (option unsigned))))) : group.fg (add_left_cancel_semigroup (option (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_154737 (h0 : filter (normed_comm_ring congr_arg_kind)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154738 (h1 : set (std_gen -> linarith.ineq)) : set.separates_points h1 := sorry --non-trivial
lemma new_lemma_154739 (h0 : ring (add_group (has_norm empty))) : strong_rank_condition (add_group (has_norm empty)) := sorry --non-trivial
lemma new_lemma_154740 (h0 : functor.add_const (list (generalized_boolean_algebra Type)) pos) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_154741 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (has_zero.{0} ennreal) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (has_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_154742 (h0 : ring (ordered_comm_ring (has_neg (has_neg (has_neg pos))))) : is_domain (ordered_comm_ring (has_neg (has_neg (has_neg pos)))) := sorry --non-trivial
lemma new_lemma_154743 (h0 : complete_lattice (simple_graph (option num))) : is_compactly_generated (simple_graph (option num)) := sorry --non-trivial
lemma new_lemma_154744 (h0 : nat) (h1 : fin (nat.succ h0) -> filter Prop) (h2 : fin h0) : @Lim.{0} Prop sierpinski_space (@nonempty_of_inhabited.{1} Prop sort.inhabited.{0}) (@matrix.vec_tail.{0} (filter.{0} Prop) h0 h1 h2)  := sorry --non-trivial
lemma new_lemma_154745 (h0 : group (has_pos_part pos)) : is_cyclic (has_pos_part pos) := sorry --non-trivial
lemma new_lemma_154746 (h0 : set (nondiscrete_normed_field linarith.ineq -> enat)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_154747 (h0 : topological_space (has_to_string (has_to_string linarith.comp))) : discrete_topology (has_to_string (has_to_string linarith.comp)) := sorry --non-trivial
lemma new_lemma_154748 (h0 : topological_space (normed_group (has_top (has_top (has_top linarith.comp_source))))) : irreducible_space (normed_group (has_top (has_top (has_top linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_154749 (h0 : ring (linear_ordered_comm_group_with_zero linarith.comp_source)) : rank_condition (linear_ordered_comm_group_with_zero linarith.comp_source) := sorry --non-trivial
lemma new_lemma_154750 (h0 : function.extfun Type (functor.add_const (topological_space (measurable_space.dynkin_system congr_arg_kind)))) : @totally_separated_space.{0} (measurable_space.dynkin_system.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (measurable_space.dynkin_system.{0} congr_arg_kind)) num (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (measurable_space.dynkin_system.{0} congr_arg_kind))) h0 num))  := sorry --non-trivial
lemma new_lemma_154751 (h0 : not (ring (uniform_space linarith.comp_source) -> false)) : @strong_rank_condition.{0} (uniform_space.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (ring.{0} (uniform_space.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_154752 (h0 : topological_space (has_top num)) : totally_separated_space (has_top num) := sorry --non-trivial
lemma new_lemma_154753 (h0 : complete_lattice (semiring (has_norm linarith.comp))) : is_compactly_generated (semiring (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_154754 (h0 : complete_lattice empty) : is_compactly_generated empty := sorry --non-trivial
lemma new_lemma_154755 (h0 : functor.add_const (group (has_to_string Type)) linarith.comp) : @normalizer_condition.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (has_to_string.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154756 (h0 : complete_lattice (free_add_monoid empty)) : is_atomistic (free_add_monoid empty) := sorry --non-trivial
lemma new_lemma_154757 (h0 : functor.add_const (add_monoid (has_nndist pos)) (has_add pos)) : @add_monoid.fg.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 0} (add_monoid.{0} (has_nndist.{0} pos)) (has_add.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_154758 (h0 : functor.add_const (topological_space (mul_zero_class congr_arg_kind)) congr_arg_kind) : @normal_space.{0} (mul_zero_class.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (mul_zero_class.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_154759 (h0 : functor.add_const (ordered_comm_monoid (normed_comm_ring unsigned)) (has_to_string (ring name))) : @has_exists_mul_of_le.{0} (normed_comm_ring.{0} unsigned) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (normed_comm_ring.{0} unsigned)) (has_to_string.{0} (ring.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_154760 (h0 : uniform_space (sub_neg_monoid (has_Inf (has_Inf (has_Inf (has_Inf linarith.comp)))))) : separated_space (sub_neg_monoid (has_Inf (has_Inf (has_Inf (has_Inf linarith.comp))))) := sorry --non-trivial
lemma new_lemma_154761 (h0 : ring (add_left_cancel_semigroup congr_arg_kind)) : strong_rank_condition (add_left_cancel_semigroup congr_arg_kind) := sorry --non-trivial
lemma new_lemma_154762 (h0 : topological_space (comm_ring (metric_space (mul_one_class fun_info)))) : t0_space (comm_ring (metric_space (mul_one_class fun_info))) := sorry --non-trivial
lemma new_lemma_154763 (h0 : ring (boolean_algebra.core (has_add (has_neg_part name)))) : rank_condition (boolean_algebra.core (has_add (has_neg_part name))) := sorry --non-trivial
lemma new_lemma_154764 (h0 : functor.add_const (topological_space (has_neg name)) name) : @locally_compact_space.{0} (has_neg.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_154765 (h0 : filter (linear_ordered_comm_ring (semiring (semiring (semiring congr_arg_kind))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154766 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (sub_neg_monoid.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (sub_neg_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_154767 (h0 : not (ring (non_unital_non_assoc_semiring reducibility_hints) -> false)) : @strong_rank_condition.{0} (non_unital_non_assoc_semiring.{0} reducibility_hints) (@classical.by_contradiction'.{1} (ring.{0} (non_unital_non_assoc_semiring.{0} reducibility_hints)) h0)  := sorry --non-trivial
lemma new_lemma_154768 (h0 : function.extfun Type topological_space) : @t1_space.{0} (comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_154769 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_add.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_add.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_154770 (h0 : topological_space (has_nndist (has_neg_part (finset ennreal)))) : preconnected_space (has_nndist (has_neg_part (finset ennreal))) := sorry --non-trivial
lemma new_lemma_154771 (h0 : ring (partial_order num)) : rank_condition (partial_order num) := sorry --non-trivial
lemma new_lemma_154772 (h0 : ring (distrib (has_compl fun_info))) : is_domain (distrib (has_compl fun_info)) := sorry --non-trivial
lemma new_lemma_154773 (h0 : functor.add_const (ring (boolean_algebra linarith.comp)) Type) : @rank_condition.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 1} (ring.{0} (boolean_algebra.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_154774 (h0 : topological_space (add_cancel_monoid (ring linarith.comp))) : regular_space (add_cancel_monoid (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_154775 (h0 : ring (has_to_string (has_to_string pos))) : rank_condition (has_to_string (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_154776 (h0 : functor.add_const (function.extfun Type ring) linarith.comp) : @is_domain.{0} (boolean_algebra.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) linarith.comp h0) (boolean_algebra.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_154777 (h0 : topological_space (cancel_monoid (add_cancel_monoid environment.implicit_infer_kind))) : preirreducible_space (cancel_monoid (add_cancel_monoid environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_154778 (h0 : topological_space (has_to_string (add_cancel_monoid Type))) : loc_path_connected_space (has_to_string (add_cancel_monoid Type)) := sorry --non-trivial
lemma new_lemma_154779 (h0 : has_lt (has_lt (mul_one_class string_imp))) : no_max_order (has_lt (mul_one_class string_imp)) := sorry --non-trivial
lemma new_lemma_154780 (h0 : fin has_zero.zero) : @t1_space.{0} (has_add.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (has_add.{0} real)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))))  := sorry --non-trivial
lemma new_lemma_154781 (h0 : measurable_space (non_unital_non_assoc_semiring std_gen)) (h1 : filter (non_unital_non_assoc_semiring std_gen)) : filter.is_measurably_generated h1 := sorry --non-trivial
lemma new_lemma_154782 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (has_neg.{0} name) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_neg.{0} name))  := sorry --non-trivial
lemma new_lemma_154783 (h0 : topological_space (denumerable (has_nnnorm (has_nnnorm fun_info)))) : t0_space (denumerable (has_nnnorm (has_nnnorm fun_info))) := sorry --non-trivial
lemma new_lemma_154784 (h0 : topological_space (has_one (has_norm congr_arg_kind))) : preirreducible_space (has_one (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_154785 (h0 : functor.add_const (function.extfun (Type 1) add_monoid) pos) : @add_monoid.fg.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_monoid.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) add_monoid.{1}) pos h0) (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_154786 (h0 : topological_space (metric_space (semiring empty))) : path_connected_space (metric_space (semiring empty)) := sorry --non-trivial
lemma new_lemma_154787 (h0 : filter (has_bot (option empty))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154788 (h0 : topological_space (measurable_space.dynkin_system linarith.comp)) : t0_space (measurable_space.dynkin_system linarith.comp) := sorry --non-trivial
lemma new_lemma_154789 (h0 : topological_space (has_append (semi_normed_ring fun_info))) : t0_space (has_append (semi_normed_ring fun_info)) := sorry --non-trivial
lemma new_lemma_154790 (h1 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (with_bot.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type complete_lattice.{0} h1 (with_bot.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_154791 (h0 : topological_space (has_nnnorm char)) : path_connected_space (has_nnnorm char) := sorry --non-trivial
lemma new_lemma_154792 (h0 : ring (normed_group (comm_ring (comm_ring (random_gen fun_info))))) : rank_condition (normed_group (comm_ring (comm_ring (random_gen fun_info)))) := sorry --non-trivial
lemma new_lemma_154793 (h0 : set (simple_graph (mul_one_class linarith.comp_source))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_154794 (h0 : not (group (has_top char) -> false)) : @is_cyclic.{0} (has_top.{0} char) (@classical.by_contradiction'.{1} (group.{0} (has_top.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_154795 (h0 : add_monoid (has_star (partial_order unsigned))) : add_monoid.fg (has_star (partial_order unsigned)) := sorry --non-trivial
lemma new_lemma_154796 (h1 : ring (has_add to_additive.value_type)) : strong_rank_condition (has_add to_additive.value_type) := sorry --non-trivial
lemma new_lemma_154797 (h0 : not (complete_lattice (has_inv linarith.comp_source) -> false)) : @is_compactly_generated.{0} (has_inv.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_inv.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_154798 (h1 : set (linarith.ineq -> add_comm_semigroup linarith.ineq)) : set.separates_points h1 := sorry --non-trivial
lemma new_lemma_154799 (h0 : topological_space (canonically_ordered_monoid real)) : sequential_space (canonically_ordered_monoid real) := sorry --non-trivial
lemma new_lemma_154800 (h0 : not (function.extfun Type topological_space -> false)) : @totally_separated_space.{0} linarith.comp (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) linarith.comp)  := sorry --non-trivial
lemma new_lemma_154801 (h0 : complete_lattice (ring (has_add Type))) : is_compactly_generated (ring (has_add Type)) := sorry --non-trivial
lemma new_lemma_154802 (h1 : not (topological_space (denumerable char) -> false)) : @t0_space.{0} (denumerable.{0} char) (@classical.by_contradiction'.{1} (topological_space.{0} (denumerable.{0} char)) h1)  := sorry --non-trivial
lemma new_lemma_154803 (h0 : functor.add_const (ring (has_Sup unsigned)) unsigned) : @strong_rank_condition.{0} (has_Sup.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (has_Sup.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_154804 (h0 : topological_space (canonically_ordered_monoid (ordered_comm_monoid linarith.comp))) : loc_path_connected_space (canonically_ordered_monoid (ordered_comm_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_154805 (h0 : semiring (canonically_ordered_comm_semiring ennreal)) : is_noetherian_ring (canonically_ordered_comm_semiring ennreal) := sorry --non-trivial
lemma new_lemma_154806 (h0 : ring (has_to_string (comm_group (option (option unsigned))))) : is_domain (has_to_string (comm_group (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_154807 (h0 : topological_space (ordered_cancel_add_comm_monoid (option empty))) : topological_space.separable_space (ordered_cancel_add_comm_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_154808 (h0 : not (monoid (linear_ordered_comm_ring num) -> false)) : @monoid.fg.{0} (linear_ordered_comm_ring.{0} num) (@classical.by_contradiction'.{1} (monoid.{0} (linear_ordered_comm_ring.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_154809 (h0 : topological_space (sub_neg_monoid real)) : locally_compact_space (sub_neg_monoid real) := sorry --non-trivial
lemma new_lemma_154810 (h0 : ring (non_assoc_semiring (semiring unsigned))) : strong_rank_condition (non_assoc_semiring (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_154811 (h0 : filter (ring (has_neg pos))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_154812 (h0 : not (uniform_space (semiring unsigned) -> false)) : @complete_space.{0} (semiring.{0} unsigned) (@classical.by_contradiction'.{1} (uniform_space.{0} (semiring.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_154813 (h0 : topological_space (boolean_algebra (has_neg (has_neg (has_Inf name))))) : totally_separated_space (boolean_algebra (has_neg (has_neg (has_Inf name)))) := sorry --non-trivial
lemma new_lemma_154814 (h0 : topological_space (non_assoc_semiring (semiring (semiring num)))) : irreducible_space (non_assoc_semiring (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_154815 (h0 : functor.add_const (uniform_space (add_comm_monoid linarith.comp)) (boolean_algebra (finset Type))) : @separated_space.{0} (add_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 1} (uniform_space.{0} (add_comm_monoid.{0} linarith.comp)) (boolean_algebra.{1} (finset.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_154816 (h0 : topological_space (has_Inf (ordered_comm_monoid real))) : preirreducible_space (has_Inf (ordered_comm_monoid real)) := sorry --non-trivial
lemma new_lemma_154817 (h0 : functor.add_const (topological_space (add_cancel_monoid empty)) ennreal) : @path_connected_space.{0} (add_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} empty)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_154818 (h0 : function.extfun Type (functor.comp topological_space mul_zero_class)) : @topological_space.separable_space.{0} (mul_zero_class.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} mul_zero_class.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} mul_zero_class.{0}) h0 name))  := sorry --non-trivial
lemma new_lemma_154819 (h0 : not (ring (uniform_space string_imp) -> false)) : @strong_rank_condition.{0} (uniform_space.{0} string_imp) (@classical.by_contradiction'.{1} (ring.{0} (uniform_space.{0} string_imp)) h0)  := sorry --non-trivial
lemma new_lemma_154820 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (with_bot.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_bot.{0} empty))  := sorry --non-trivial
lemma new_lemma_154821 (h0 : functor.add_const (topological_space (ring linarith.comp)) linarith.comp) : @irreducible_space.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154822 (h0 : topological_space (comm_group (has_neg pos))) : normal_space (comm_group (has_neg pos)) := sorry --non-trivial
lemma new_lemma_154823 (h0 : add_group (mul_one_class (mul_one_class fun_info))) : is_add_cyclic (mul_one_class (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_154824 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @path_connected_space.{0} (linear_ordered_semiring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (linear_ordered_semiring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_154825 (h0 : ring (with_bot linarith.comp_source)) : is_domain (with_bot linarith.comp_source) := sorry --non-trivial
lemma new_lemma_154826 (h0 : functor.add_const (topological_space (complete_distrib_lattice environment.implicit_infer_kind)) Type) : @t1_space.{0} (complete_distrib_lattice.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (complete_distrib_lattice.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_154827 (h0 : functor.add_const (complete_lattice (has_zero Type)) Type) : @is_compactly_generated.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 1} (complete_lattice.{1} (has_zero.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_154828 (h0 : topological_space (has_top (has_norm linarith.comp_source))) : discrete_topology (has_top (has_norm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_154829 (h0 : topological_space (normed_lattice_add_comm_group (has_pos_part (has_Inf (has_add real))))) : totally_disconnected_space (normed_lattice_add_comm_group (has_pos_part (has_Inf (has_add real)))) := sorry --non-trivial
lemma new_lemma_154830 (h0 : ring (add_cancel_monoid (has_add Type))) : is_principal_ideal_ring (add_cancel_monoid (has_add Type)) := sorry --non-trivial
lemma new_lemma_154831 (h0 : uniform_space (linear_ordered_comm_group (option num))) : separated_space (linear_ordered_comm_group (option num)) := sorry --non-trivial
lemma new_lemma_154832 (h0 : topological_space (id (has_norm linarith.comp))) : locally_compact_space (id (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_154833 (h1 : topological_space (semi_normed_ring std_gen)) (h2 : preorder (semi_normed_ring std_gen)) : order_topology (semi_normed_ring std_gen) := sorry --non-trivial
lemma new_lemma_154834 (h0 : uniform_space (has_to_string Type)) : separated_space (has_to_string Type) := sorry --non-trivial
lemma new_lemma_154835 (h0 : topological_space (has_pos_part Type)) : irreducible_space (has_pos_part Type) := sorry --non-trivial
lemma new_lemma_154836 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (add_cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_154837 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (has_neg.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_neg.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_154838 (h0 : topological_space (has_zero environment.implicit_infer_kind)) : irreducible_space (has_zero environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_154839 (h0 : monoid (random_gen to_additive.value_type)) (h1 : not (random_gen to_additive.value_type -> false)) : squarefree (classical.by_contradiction' h1) := sorry --non-trivial
lemma new_lemma_154840 (h0 : finset (ordered_comm_monoid name)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_154841 (h0 : functor.add_const (filter (has_zero Type)) pos) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_154842 (h0 : ring (linear_ordered_comm_group_with_zero string.iterator_imp)) : strong_rank_condition (linear_ordered_comm_group_with_zero string.iterator_imp) := sorry --non-trivial
lemma new_lemma_154843 (h0 : not (function.extfun Type complete_lattice -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (has_top.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (has_top.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_154844 (h0 : ring (fintype char)) : rank_condition (fintype char) := sorry --non-trivial
lemma new_lemma_154845 (h1 : topological_space (has_ssubset string_imp)) : locally_compact_space (has_ssubset string_imp) := sorry --non-trivial
lemma new_lemma_154846 (h0 : topological_space (comm_group (has_neg (has_neg (normed_comm_ring linarith.comp))))) : regular_space (comm_group (has_neg (has_neg (normed_comm_ring linarith.comp)))) := sorry --non-trivial
lemma new_lemma_154847 (h0 : topological_space (has_inner empty num)) : loc_path_connected_space (has_inner empty num) := sorry --non-trivial
lemma new_lemma_154848 (h0 : monoid (has_bot (has_add real))) : monoid.fg (has_bot (has_add real)) := sorry --non-trivial
lemma new_lemma_154849 (h0 : not (has_mem.mem (normed_group num) has_emptyc.emptyc -> false)) : @is_domain.{0} (normed_group.{0} num) (@finset.pi.empty.{1 0} Type ring.{0} (normed_group.{0} num) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (normed_group.{0} num) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_154850 (h0 : topological_space (has_compl (metric_space linarith.comp_source))) : path_connected_space (has_compl (metric_space linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_154851 (h0 : functor.add_const (group (has_zero Type)) (finset environment.implicit_infer_kind)) : @is_simple_group.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (has_zero.{1} Type)) (finset.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_154852 (h0 : topological_space (simple_graph reducibility_hints)) (h1 : preorder (simple_graph reducibility_hints)) : order_topology (simple_graph reducibility_hints) := sorry --non-trivial
lemma new_lemma_154853 (h0 : functor.add_const (ordered_add_comm_monoid (complete_distrib_lattice linarith.comp)) unsigned) : @archimedean.{0} (complete_distrib_lattice.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (complete_distrib_lattice.{0} linarith.comp)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_154854 (h0 : functor.add_const (topological_space (linear_ordered_cancel_comm_monoid empty)) empty) : @discrete_topology.{0} (linear_ordered_cancel_comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (linear_ordered_cancel_comm_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_154855 (h0 : not (group (semiring linarith.comp) -> false)) : @normalizer_condition.{0} (semiring.{0} linarith.comp) (@classical.by_contradiction'.{1} (group.{0} (semiring.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_154856 (h0 : functor.comp topological_space has_neg_part name) : @loc_path_connected_space.{0} (has_neg_part.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_neg_part.{0} name h0)  := sorry --non-trivial
lemma new_lemma_154857 (h0 : ring (complete_distrib_lattice (option (option (option empty))))) : rank_condition (complete_distrib_lattice (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_154858 (h0 : functor.add_const (complete_lattice (comm_group Type)) name) : @is_atomistic.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 0} (complete_lattice.{1} (comm_group.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_154859 (h0 : has_mem.mem string_imp has_emptyc.emptyc) : @strong_rank_condition.{0} string_imp (@finset.pi.empty.{1 0} Type ring.{0} string_imp h0)  := sorry --non-trivial
lemma new_lemma_154860 (h0 : ring (has_neg (mul_zero_class Type))) : is_principal_ideal_ring (has_neg (mul_zero_class Type)) := sorry --non-trivial
lemma new_lemma_154861 (h0 : functor.add_const (complete_lattice (sub_neg_monoid name)) linarith.comp) : @is_atomistic.{0} (sub_neg_monoid.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (sub_neg_monoid.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_154862 (h0 : ring (has_top (has_norm (random_gen to_additive.value_type)))) : strong_rank_condition (has_top (has_norm (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_154863 (h0 : filter (ring (ring (has_pos_part Type)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154864 (h0 : group (has_Inf (has_neg pos))) : group.fg (has_Inf (has_neg pos)) := sorry --non-trivial
lemma new_lemma_154865 (h0 : group (has_zero (ring (has_add linarith.comp)))) : group.fg (has_zero (ring (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_154866 (h0 : topological_space (has_emptyc to_additive.value_type)) : discrete_topology (has_emptyc to_additive.value_type) := sorry --non-trivial
lemma new_lemma_154867 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (has_nndist.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_nndist.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_154868 (h0 : functor.add_const Prop (is_R_or_C (option (option (option empty))))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_154869 (h0 : topological_space (has_bot (has_Inf linarith.comp))) : sequential_space (has_bot (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_154870 (h0 : group (id num)) : is_cyclic (id num) := sorry --non-trivial
lemma new_lemma_154871 (h1 : not (function.extfun Type topological_space -> false)) : @path_connected_space.{0} (has_norm.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h1) (has_norm.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_154872 (h0 : topological_space (comm_semigroup name)) : preconnected_space (comm_semigroup name) := sorry --non-trivial
lemma new_lemma_154873 (h0 : add_group (has_Inf (has_add real))) : is_add_cyclic (has_Inf (has_add real)) := sorry --non-trivial
lemma new_lemma_154874 (h0 : functor.add_const (monoid (comm_group linarith.comp)) unsigned) : @monoid.fg.{0} (comm_group.{0} linarith.comp) (@functor.add_const.run.{0 0} (monoid.{0} (comm_group.{0} linarith.comp)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_154875 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (has_to_string.{0} ennreal) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_to_string.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_154876 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (group_with_zero.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (group_with_zero.{0} num))  := sorry --non-trivial
lemma new_lemma_154877 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (has_star empty)) := sorry --non-trivial
lemma new_lemma_154878 (h0 : group (has_nndist (has_nndist name))) : is_cyclic (has_nndist (has_nndist name)) := sorry --non-trivial
lemma new_lemma_154879 (h0 : function.extfun (finset Type) (has_mem.mem (has_norm empty))) : @totally_separated_space.{0} (has_norm.{0} empty) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_norm.{0} empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_norm.{0} empty)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_154880 (h0 : topological_space (boolean_algebra.core (has_Inf (boolean_algebra.core linarith.comp)))) : preirreducible_space (boolean_algebra.core (has_Inf (boolean_algebra.core linarith.comp))) := sorry --non-trivial
lemma new_lemma_154881 (h0 : functor.add_const (topological_space (comm_group Type)) Type) : @sequential_space.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (comm_group.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_154882 (h0 : topological_space (normed_field (mul_one_class (mul_one_class fun_info)))) : totally_disconnected_space (normed_field (mul_one_class (mul_one_class fun_info))) := sorry --non-trivial
lemma new_lemma_154883 (h0 : ring (has_compl (uniform_space (mul_one_class linarith.ineq)))) : strong_rank_condition (has_compl (uniform_space (mul_one_class linarith.ineq))) := sorry --non-trivial
lemma new_lemma_154884 (h0 : finset (ordered_cancel_add_comm_monoid num)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_154885 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} string_imp (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) string_imp)  := sorry --non-trivial
lemma new_lemma_154886 (h2 : add_group (has_nnnorm to_additive.value_type)) : is_add_cyclic (has_nnnorm to_additive.value_type) := sorry --non-trivial
lemma new_lemma_154887 (h0 : topological_space (normed_comm_ring (add_cancel_monoid unsigned))) : preirreducible_space (normed_comm_ring (add_cancel_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_154888 (h3 : topological_space (has_append (has_nnnorm (has_nnnorm fun_info)))) : path_connected_space (has_append (has_nnnorm (has_nnnorm fun_info))) := sorry --non-trivial
lemma new_lemma_154889 (h2 : ring (has_norm (complete_semilattice_Sup linarith.comp))) : strong_rank_condition (has_norm (complete_semilattice_Sup linarith.comp)) := sorry --non-trivial
lemma new_lemma_154890 (h1 : topological_space environment.projection_info) (h2 : set environment.projection_info) : is_path_connected h2 := sorry --non-trivial
lemma new_lemma_154891 (h0 : functor.add_const (topological_space (ring pos)) pos) : @sequential_space.{0} (ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_154892 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (complete_distrib_lattice.{0} name) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (complete_distrib_lattice.{0} name))  := sorry --non-trivial
lemma new_lemma_154893 (h0 : ring (has_inv (random_gen linarith.ineq))) : rank_condition (has_inv (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_154894 (h0 : semiring (partial_order empty)) : is_noetherian_ring (partial_order empty) := sorry --non-trivial
lemma new_lemma_154895 (h0 : functor.add_const (filter (comm_group Type)) linarith.comp) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_154896 (h0 : add_group (has_nnnorm (mul_one_class (mul_one_class char)))) : is_add_cyclic (has_nnnorm (mul_one_class (mul_one_class char))) := sorry --non-trivial
lemma new_lemma_154897 (h0 : topological_space (has_nndist ennreal)) : irreducible_space (has_nndist ennreal) := sorry --non-trivial
lemma new_lemma_154898 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (has_add.{0} name) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (has_add.{0} name))  := sorry --non-trivial
lemma new_lemma_154899 (h1 : not (function.extfun Type topological_space -> false)) : @irreducible_space.{0} (semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h1) (semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_154900 (h0 : functor.add_const (topological_space (has_nndist name)) unsigned) : @preconnected_space.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_154901 (h0 : list (has_to_string (option (option (option (option (option unsigned))))))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_154902 (h0 : ring (has_bot (has_Inf pos))) : is_domain (has_bot (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_154903 (h0 : functor.add_const (group (canonically_ordered_comm_semiring Type)) name) : @normalizer_condition.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (canonically_ordered_comm_semiring.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_154904 (h0 : list (has_neg (has_add Type))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_154905 (h0 : topological_space (random_gen (has_inv to_additive.value_type))) : path_connected_space (random_gen (has_inv to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_154906 (h0 : topological_space (semigroup (option (ring pos)))) : sequential_space (semigroup (option (ring pos))) := sorry --non-trivial
lemma new_lemma_154907 (h0 : semiring (has_add (finset (has_add name)))) : is_noetherian_ring (has_add (finset (has_add name))) := sorry --non-trivial
lemma new_lemma_154908 (h2 : add_group (has_ssubset enat)) : is_add_cyclic (has_ssubset enat) := sorry --non-trivial
lemma new_lemma_154909 (h0 : functor.add_const (uniform_space (has_inter unsigned)) num) : @separated_space.{0} (has_inter.{0} unsigned) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_inter.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_154910 (h0 : functor.add_const (complete_lattice nnreal) (option (option unsigned))) : @is_atomistic.{0} nnreal (@functor.add_const.run.{0 0} (complete_lattice.{0} nnreal) (option.{0} (option.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_154911 (h0 : topological_space (has_neg (finset linarith.comp))) : totally_disconnected_space (has_neg (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_154912 (h0 : complete_lattice (has_inv (random_gen to_additive.value_type))) : is_atomistic (has_inv (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_154913 (h0 : not (complete_lattice (has_append (metric_space (random_gen (random_gen char)))) -> false)) : @is_compactly_generated.{0} (has_append.{0} (metric_space.{0} (random_gen.{0} (random_gen.{0} char)))) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_append.{0} (metric_space.{0} (random_gen.{0} (random_gen.{0} char))))) h0)  := sorry --non-trivial
lemma new_lemma_154914 (h0 : add_group (complete_distrib_lattice (finset ennreal))) : is_add_cyclic (complete_distrib_lattice (finset ennreal)) := sorry --non-trivial
lemma new_lemma_154915 (h0 : ordered_add_comm_monoid (has_nndist (has_to_string ennreal))) : archimedean (has_nndist (has_to_string ennreal)) := sorry --non-trivial
lemma new_lemma_154916 (h0 : functor.add_const (topological_space (has_dist unsigned)) (option empty)) : @totally_separated_space.{0} (has_dist.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_dist.{0} unsigned)) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_154917 (h0 : group (complete_semilattice_Sup (has_inv (has_ssubset linarith.ineq)))) : group.fg (complete_semilattice_Sup (has_inv (has_ssubset linarith.ineq))) := sorry --non-trivial
lemma new_lemma_154918 (h0 : topological_space (normed_comm_ring unsigned)) : preconnected_space (normed_comm_ring unsigned) := sorry --non-trivial
lemma new_lemma_154919 (h0 : functor.add_const (topological_space (has_nndist name)) unsigned) : @totally_disconnected_space.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_154920 (h0 : topological_space (ring (ring pos))) : preconnected_space (ring (ring pos)) := sorry --non-trivial
lemma new_lemma_154921 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (pseudo_metric_space.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (pseudo_metric_space.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_154922 (h0 : functor.add_const (complete_lattice (has_to_string pos)) (option (option pos))) : @is_compactly_generated.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_to_string.{0} pos)) (option.{0} (option.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_154923 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (normed_group.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_group.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_154924 (h0 : add_monoid (comm_group (add_cancel_monoid (comm_group Type)))) : add_monoid.fg (comm_group (add_cancel_monoid (comm_group Type))) := sorry --non-trivial
lemma new_lemma_154925 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (has_neg_part.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_neg_part.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_154926 (h0 : not (add_group (has_add linarith.comp_source) -> false)) : @is_add_cyclic.{0} (has_add.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (add_group.{0} (has_add.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_154927 (h0 : Type) (h1 : h0) (h2 : h0 -> id Prop) : id_bind h1 h2 := sorry --non-trivial
lemma new_lemma_154928 (h0 : function.extfun (Type 1) semiring) : @is_noetherian_ring.{1} (has_neg_part.{1} Type) (@function.extfun_app.{3 2} (Type 1) semiring.{1} h0 (has_neg_part.{1} Type))  := sorry --non-trivial
lemma new_lemma_154929 (h0 : group (linear_ordered_add_comm_group (random_gen to_additive.value_type))) : is_cyclic (linear_ordered_add_comm_group (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_154930 (h0 : add_monoid (has_one (has_norm num))) : add_monoid.fg (has_one (has_norm num)) := sorry --non-trivial
lemma new_lemma_154931 (h0 : topological_space (dlist (random_gen linarith.comp_source))) : locally_compact_space (dlist (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_154932 (h0 : group (distrib_lattice (has_inv linarith.comp_source))) : is_cyclic (distrib_lattice (has_inv linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_154933 (h0 : group (topological_space string_imp)) : group.fg (topological_space string_imp) := sorry --non-trivial
lemma new_lemma_154934 (h0 : not (ring (has_norm fun_info) -> false)) : @is_domain.{0} (has_norm.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (has_norm.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_154935 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (generalized_boolean_algebra.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (generalized_boolean_algebra.{0} real))  := sorry --non-trivial
lemma new_lemma_154936 (h0 : topological_space (measurable_space (has_norm linarith.comp))) : totally_disconnected_space (measurable_space (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_154937 (h0 : functor.add_const (topological_space (normed_comm_ring unsigned)) environment.implicit_infer_kind) : @sequential_space.{0} (normed_comm_ring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} unsigned)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_154938 (h0 : filter (has_zero (finset pos))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154939 (h0 : functor.add_const (topological_space (has_nndist linarith.comp)) (has_add (finset (has_add linarith.comp)))) : @locally_compact_space.{0} (has_nndist.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} linarith.comp)) (has_add.{0} (finset.{0} (has_add.{0} linarith.comp))) h0)  := sorry --non-trivial
lemma new_lemma_154940 (h0 h1 : multiset (add_comm_semigroup (add_comm_semigroup ereal))) : multiset.le h0 h1 := sorry --non-trivial
lemma new_lemma_154941 (h0 : topological_space (boolean_algebra (finset (finset (finset (finset linarith.comp)))))) : normal_space (boolean_algebra (finset (finset (finset (finset linarith.comp))))) := sorry --non-trivial
lemma new_lemma_154942 (h0 : group (has_neg (option unsigned))) : is_simple_group (has_neg (option unsigned)) := sorry --non-trivial
lemma new_lemma_154943 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @sequential_space.{1} (mul_zero_class.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (mul_zero_class.{1} Type))  := sorry --non-trivial
lemma new_lemma_154944 (h1 : topological_space (add_left_cancel_monoid fun_info)) : totally_disconnected_space (add_left_cancel_monoid fun_info) := sorry --non-trivial
lemma new_lemma_154945 (h0 : functor.add_const (complete_lattice (has_to_string pos)) environment.implicit_infer_kind) : @is_atomistic.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_to_string.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_154946 (h0 : uniform_space (add_left_cancel_monoid to_additive.value_type)) : complete_space (add_left_cancel_monoid to_additive.value_type) := sorry --non-trivial
lemma new_lemma_154947 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_154948 (h0 : add_group (has_to_string (has_neg pos))) : is_add_cyclic (has_to_string (has_neg pos)) := sorry --non-trivial
lemma new_lemma_154949 (h0 : monoid (semiring empty)) : monoid.fg (semiring empty) := sorry --non-trivial
lemma new_lemma_154950 (h0 : set (normed_field (semi_normed_ring reducibility_hints))) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_154951 (h0 : ring (has_bot Type)) : rank_condition (has_bot Type) := sorry --non-trivial
lemma new_lemma_154952 (h0 : function.extfun (finset Type) (has_mem.mem (random_gen linarith.comp_source))) : @is_domain.{0} (random_gen.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type ring.{0} (random_gen.{0} linarith.comp_source) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (random_gen.{0} linarith.comp_source)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_154953 (h0 : add_monoid (measure_theory.measure_space (has_top empty))) : add_monoid.fg (measure_theory.measure_space (has_top empty)) := sorry --non-trivial
lemma new_lemma_154954 (h0 : topological_space (semiring linarith.comp_source)) : totally_separated_space (semiring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_154955 (h0 : functor.add_const (complete_lattice (pseudo_metric_space unsigned)) congr_arg_kind) : @is_atomistic.{0} (pseudo_metric_space.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (pseudo_metric_space.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_154956 (h0 : add_monoid (linear_ordered_comm_ring empty)) : add_monoid.fg (linear_ordered_comm_ring empty) := sorry --non-trivial
lemma new_lemma_154957 (h1 : group (add_monoid (has_nnnorm char))) : is_cyclic (add_monoid (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_154958 (h0 : semiring (id (semiring (semiring congr_arg_kind)))) : is_noetherian_ring (id (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_154959 (h0 : topological_space (left_cancel_monoid (option (option unsigned)))) : path_connected_space (left_cancel_monoid (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_154960 (h0 : topological_space (has_nnnorm (has_lt linarith.ineq))) : t0_space (has_nnnorm (has_lt linarith.ineq)) := sorry --non-trivial
lemma new_lemma_154961 (h0 : has_lt (has_le fun_info)) : no_max_order (has_le fun_info) := sorry --non-trivial
lemma new_lemma_154962 (h0 : functor.add_const (topological_space (add_group congr_arg_kind)) num) : @normal_space.{0} (add_group.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (add_group.{0} congr_arg_kind)) num h0)  := sorry --non-trivial
lemma new_lemma_154963 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (free_add_monoid num)) := sorry --non-trivial
lemma new_lemma_154964 (h0 : ring (linear_ordered_add_comm_group (random_gen char))) : strong_rank_condition (linear_ordered_add_comm_group (random_gen char)) := sorry --non-trivial
lemma new_lemma_154965 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} auto.case_option (@function.extfun_app.{2 1} Type add_group.{0} h0 auto.case_option)  := sorry --non-trivial
lemma new_lemma_154966 (h0 : topological_space (cancel_monoid (has_add name))) : irreducible_space (cancel_monoid (has_add name)) := sorry --non-trivial
lemma new_lemma_154967 (h0 : filter (comm_group (has_to_string (has_to_string Type)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154968 (h0 : ring (has_div (mul_one_class (mul_one_class (mul_one_class char))))) : is_domain (has_div (mul_one_class (mul_one_class (mul_one_class char)))) := sorry --non-trivial
lemma new_lemma_154969 (h0 : functor.add_const (topological_space (add_cancel_monoid ennreal)) num) : @locally_compact_space.{0} (add_cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} ennreal)) num h0)  := sorry --non-trivial
lemma new_lemma_154970 (h0 : semiring (add_comm_monoid (has_to_string linarith.comp))) : is_noetherian_ring (add_comm_monoid (has_to_string linarith.comp)) := sorry --non-trivial
lemma new_lemma_154971 (h2 : ring (with_one linarith.comp_source)) : rank_condition (with_one linarith.comp_source) := sorry --non-trivial
lemma new_lemma_154972 (h0 : topological_space (with_one (has_emptyc (has_emptyc linarith.comp_source)))) : t0_space (with_one (has_emptyc (has_emptyc linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_154973 (h1 : topological_space (semiring empty)) : path_connected_space (semiring empty) := sorry --non-trivial
lemma new_lemma_154974 (h0 : topological_space (semiring num)) : t0_space (semiring num) := sorry --non-trivial
lemma new_lemma_154975 (h0 : functor.add_const (topological_space pos) pos) : @preconnected_space.{0} pos (@functor.add_const.run.{0 0} (topological_space.{0} pos) pos h0)  := sorry --non-trivial
lemma new_lemma_154976 (h0 : topological_space (left_cancel_semigroup (semiring empty))) : path_connected_space (left_cancel_semigroup (semiring empty)) := sorry --non-trivial
lemma new_lemma_154977 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem complete_lattice)) : @is_atomistic.{0} (normed_group.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) complete_lattice.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) complete_lattice.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (normed_group.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_154978 (h0 : uniform_space (linear_ordered_comm_group (option unsigned))) : complete_space (linear_ordered_comm_group (option unsigned)) := sorry --non-trivial
lemma new_lemma_154979 (h0 : filter (ring (normed_comm_ring name))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_154980 (h0 : filter (has_neg_part pos)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_154981 (h1 : topological_space (ordered_comm_ring char)) : path_connected_space (ordered_comm_ring char) := sorry --non-trivial
lemma new_lemma_154982 (h0 : topological_space (simple_graph (has_Inf (ordered_comm_monoid Type)))) : t1_space (simple_graph (has_Inf (ordered_comm_monoid Type))) := sorry --non-trivial
lemma new_lemma_154983 (h0 : topological_space (add_comm_monoid (has_to_string unsigned))) : totally_separated_space (add_comm_monoid (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_154984 (h0 : functor.add_const (topological_space (has_Inf Type)) Type) : @topological_space.separable_space.{1} (has_Inf.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (has_Inf.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_154985 (h0 : ring (boolean_algebra (add_comm_monoid name))) : rank_condition (boolean_algebra (add_comm_monoid name)) := sorry --non-trivial
lemma new_lemma_154986 (h0 : finset (has_pos_part (ring (has_add (has_neg linarith.comp))))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_154987 (h0 : group (has_nnnorm (linear_ordered_add_comm_group string_imp))) : is_cyclic (has_nnnorm (linear_ordered_add_comm_group string_imp)) := sorry --non-trivial
lemma new_lemma_154988 (h0 : complete_lattice (normed_comm_ring empty)) : complete_lattice.is_Sup_finite_compact (normed_comm_ring empty) := sorry --non-trivial
lemma new_lemma_154989 (h0 : ring (has_ssubset (has_ssubset string_imp))) : strong_rank_condition (has_ssubset (has_ssubset string_imp)) := sorry --non-trivial
lemma new_lemma_154990 (h0 : ring (semi_normed_comm_ring (mul_one_class fun_info))) : strong_rank_condition (semi_normed_comm_ring (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_154991 (h0 : group (has_add (boolean_algebra (normed_comm_ring name)))) : is_cyclic (has_add (boolean_algebra (normed_comm_ring name))) := sorry --non-trivial
lemma new_lemma_154992 (h0 : topological_space (group_with_zero (option (option empty)))) : t0_space (group_with_zero (option (option empty))) := sorry --non-trivial
lemma new_lemma_154993 (h0 : topological_space (complete_distrib_lattice environment.implicit_infer_kind)) : path_connected_space (complete_distrib_lattice environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_154994 (h0 : group (has_compl (random_gen char))) : is_cyclic (has_compl (random_gen char)) := sorry --non-trivial
lemma new_lemma_154995 (h0 : not (add_group (mul_zero_class unsigned) -> false)) : @is_add_cyclic.{0} (mul_zero_class.{0} unsigned) (@classical.by_contradiction'.{1} (add_group.{0} (mul_zero_class.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_154996 (h4 : add_group (has_compl char)) : is_add_cyclic (has_compl char) := sorry --non-trivial
lemma new_lemma_154997 (h2 : ring char) : strong_rank_condition char := sorry --non-trivial
lemma new_lemma_154998 (h0 : add_group (finset (has_add (ring name)))) : is_add_cyclic (finset (has_add (ring name))) := sorry --non-trivial
lemma new_lemma_154999 (h0 : not (add_monoid (random_gen linarith.comp) -> false)) : @add_monoid.fg.{0} (random_gen.{0} linarith.comp) (@classical.by_contradiction'.{1} (add_monoid.{0} (random_gen.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_155000 (h0 : functor.add_const (ordered_add_comm_monoid (has_neg_part pos)) name) : @archimedean.{0} (has_neg_part.{0} pos) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (has_neg_part.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_155001 (h0 : functor.add_const (complete_lattice (has_neg name)) pos) : @complete_lattice.is_Sup_finite_compact.{0} (has_neg.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_neg.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_155002 (h1 : ring (has_nnnorm linarith.comp_source)) : is_domain (has_nnnorm linarith.comp_source) := sorry --non-trivial
lemma new_lemma_155003 (h0 : not (uniform_space (has_top congr_arg_kind) -> false)) : @separated_space.{0} (has_top.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (uniform_space.{0} (has_top.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_155004 (h0 : rel linarith.comp_source linarith.comp_source) (h1 : linarith.comp_source) : rel.dom h0 h1 := sorry --non-trivial
lemma new_lemma_155005 (h0 : ring (canonically_linear_ordered_monoid (has_neg pos))) : strong_rank_condition (canonically_linear_ordered_monoid (has_neg pos)) := sorry --non-trivial
lemma new_lemma_155006 (h0 : topological_space (has_ssubset (has_ssubset char))) : totally_disconnected_space (has_ssubset (has_ssubset char)) := sorry --non-trivial
lemma new_lemma_155007 (h0 : function.extfun Type group) : @group.fg.{0} (comm_semigroup.{0} real) (@function.extfun_app.{2 1} Type group.{0} h0 (comm_semigroup.{0} real))  := sorry --non-trivial
lemma new_lemma_155008 (h0 : group (cancel_monoid (has_add name))) : normalizer_condition (cancel_monoid (has_add name)) := sorry --non-trivial
lemma new_lemma_155009 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (has_inter.{0} ennreal) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (has_inter.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_155010 (h0 : complete_lattice (has_union unsigned)) : complete_lattice.is_Sup_finite_compact (has_union unsigned) := sorry --non-trivial
lemma new_lemma_155011 (h0 : topological_space (semigroup (ring (has_add pos)))) : totally_separated_space (semigroup (ring (has_add pos))) := sorry --non-trivial
lemma new_lemma_155012 (h0 : not (group (bin_tree empty) -> false)) : @is_cyclic.{0} (bin_tree.{0} empty) (@classical.by_contradiction'.{1} (group.{0} (bin_tree.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_155013 (h0 : topological_space (sub_neg_monoid (has_Inf (ring pos)))) : regular_space (sub_neg_monoid (has_Inf (ring pos))) := sorry --non-trivial
lemma new_lemma_155014 (h0 : monoid (has_emptyc string_imp)) : monoid.fg (has_emptyc string_imp) := sorry --non-trivial
lemma new_lemma_155015 (h0 : complete_lattice (metric_space (semiring (semiring unsigned)))) : is_compactly_generated (metric_space (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_155016 (h0 : semiring (ring (has_Inf linarith.comp))) : is_noetherian_ring (ring (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_155017 (h0 : functor.add_const (topological_space (canonically_ordered_monoid real)) linarith.comp) : @t1_space.{0} (canonically_ordered_monoid.{0} real) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_monoid.{0} real)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_155018 (h0 : topological_space (has_nndist (finset (has_to_string pos)))) : loc_path_connected_space (has_nndist (finset (has_to_string pos))) := sorry --non-trivial
lemma new_lemma_155019 (h1 : topological_space (comm_ring linarith.comp_source)) : totally_disconnected_space (comm_ring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_155020 (h0 : has_lt (has_compl char)) : no_max_order (has_compl char) := sorry --non-trivial
lemma new_lemma_155021 (h1 : ring (denumerable linarith.ineq)) : is_domain (denumerable linarith.ineq) := sorry --non-trivial
lemma new_lemma_155022 (h0 : topological_space (has_Inf (has_pos_part linarith.comp))) : locally_compact_space (has_Inf (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_155023 (h0 : functor.add_const (function.extfun Type ordered_comm_monoid) linarith.comp) : @has_exists_mul_of_le.{0} (semigroup.{0} name) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) linarith.comp h0) (semigroup.{0} name))  := sorry --non-trivial
lemma new_lemma_155024 (h0 : topological_space (has_neg (has_add (has_add (has_add pos))))) : irreducible_space (has_neg (has_add (has_add (has_add pos)))) := sorry --non-trivial
lemma new_lemma_155025 (h0 : topological_space (has_emptyc string_imp)) : t0_space (has_emptyc string_imp) := sorry --non-trivial
lemma new_lemma_155026 (h0 : pseudo_metric_space (complete_semilattice_Sup linarith.ineq)) (h1 : add_monoid (complete_semilattice_Sup linarith.ineq)) : has_lipschitz_add (complete_semilattice_Sup linarith.ineq) := sorry --non-trivial
lemma new_lemma_155027 (h0 : uniform_space (normed_group (has_top (has_top linarith.comp)))) : separated_space (normed_group (has_top (has_top linarith.comp))) := sorry --non-trivial
lemma new_lemma_155028 (h1 : set (has_div std_gen)) : set.finite h1 := sorry --non-trivial
lemma new_lemma_155029 (h0 : add_monoid (has_Inf Type)) : add_monoid.fg (has_Inf Type) := sorry --non-trivial
lemma new_lemma_155030 (h0 : topological_space (generalized_boolean_algebra (finset (has_add pos)))) : t1_space (generalized_boolean_algebra (finset (has_add pos))) := sorry --non-trivial
lemma new_lemma_155031 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} (has_zero.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_155032 (h0 : functor.add_const (functor.add_const (option Prop) environment.implicit_infer_kind) linarith.comp) (h1 : Prop) : option.get_or_else (functor.add_const.run (functor.add_const.run h0)) h1 := sorry --non-trivial
lemma new_lemma_155033 (h0 : functor.add_const (topological_space (ordered_comm_group unsigned)) congr_arg_kind) : @preirreducible_space.{0} (ordered_comm_group.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_group.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_155034 (h0 : ring (fintype fun_info)) : strong_rank_condition (fintype fun_info) := sorry --non-trivial
lemma new_lemma_155035 (h0 : ring (linear_ordered_add_comm_group (has_inv linarith.ineq))) : rank_condition (linear_ordered_add_comm_group (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_155036 (h0 : functor.add_const (topological_space (finset unsigned)) environment.implicit_infer_kind) : @t0_space.{0} (finset.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} unsigned)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_155037 (h0 : add_monoid (has_add num)) : add_monoid.fg (has_add num) := sorry --non-trivial
lemma new_lemma_155038 (h0 : topological_space (normed_field environment.projection_info)) (h1 : preorder (normed_field environment.projection_info)) : order_closed_topology (normed_field environment.projection_info) := sorry --non-trivial
lemma new_lemma_155039 (h0 : topological_space (plift (option (option unsigned)))) : t1_space (plift (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_155040 (h0 : topological_space (has_add (has_add (has_add (has_neg pos))))) : sequential_space (has_add (has_add (has_add (has_neg pos)))) := sorry --non-trivial
lemma new_lemma_155041 (h0 : ring (with_one (has_nnnorm fun_info))) : is_domain (with_one (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_155042 (h0 : function.extfun Type ring) : @is_domain.{0} (add_group.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (add_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_155043 (h0 : uniform_space auto.case_option) : complete_space auto.case_option := sorry --non-trivial
lemma new_lemma_155044 (h0 : complete_lattice (has_nndist congr_arg_kind)) : is_compactly_generated (has_nndist congr_arg_kind) := sorry --non-trivial
lemma new_lemma_155045 (h0 : ring (has_top (semiring unsigned))) : is_principal_ideal_ring (has_top (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_155046 (h2 : complete_lattice (fintype fun_info)) : is_compactly_generated (fintype fun_info) := sorry --non-trivial
lemma new_lemma_155047 (h0 : topological_space (complete_distrib_lattice (has_add ennreal))) : totally_separated_space (complete_distrib_lattice (has_add ennreal)) := sorry --non-trivial
lemma new_lemma_155048 (h0 : complete_lattice (has_add (finset environment.implicit_infer_kind))) : is_compactly_generated (has_add (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_155049 (h0 : filter (add_group (has_top num))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_155050 (h0 : function.extfun Type (functor.comp topological_space complete_distrib_lattice)) : @preconnected_space.{0} (complete_distrib_lattice.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} complete_distrib_lattice.{0} pos (@functor.comp.run.{0 0 0} topological_space.{0} complete_distrib_lattice.{0} pos (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} complete_distrib_lattice.{0}) h0 pos)))  := sorry --non-trivial
lemma new_lemma_155051 (h0 : function.extfun nat fin) : @is_atomistic.{0} (normed_lattice_add_comm_group.{0} real) (@matrix.vec_empty.{0} (complete_lattice.{0} (normed_lattice_add_comm_group.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_155052 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (@id.{2} Type linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (@id.{2} Type linarith.comp))  := sorry --non-trivial
lemma new_lemma_155053 (h0 : topological_space (normed_comm_ring (ring environment.implicit_infer_kind))) : sequential_space (normed_comm_ring (ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_155054 (h0 : uniform_space (is_R_or_C (option congr_arg_kind))) : separated_space (is_R_or_C (option congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_155055 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (semiring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semiring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155056 (h0 : complete_lattice (has_add pos)) : is_compactly_generated (has_add pos) := sorry --non-trivial
lemma new_lemma_155057 (h0 : filter (ring linarith.comp)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_155058 (h0 : complete_lattice (has_append to_additive.value_type)) : is_compactly_generated (has_append to_additive.value_type) := sorry --non-trivial
lemma new_lemma_155059 (h1 : add_group (id congr_arg_kind)) : is_add_cyclic (id congr_arg_kind) := sorry --non-trivial
lemma new_lemma_155060 (h0 : topological_space (ordered_comm_ring (has_Inf (has_add real)))) : totally_separated_space (ordered_comm_ring (has_Inf (has_add real))) := sorry --non-trivial
lemma new_lemma_155061 (h0 : topological_space (has_norm fun_info)) (h1 : set (has_norm fun_info)) : is_seq_closed h1 := sorry --non-trivial
lemma new_lemma_155062 (h0 : add_group (cancel_monoid Type)) : is_add_cyclic (cancel_monoid Type) := sorry --non-trivial
lemma new_lemma_155063 (h0 : ring (add_group linarith.comp)) : rank_condition (add_group linarith.comp) := sorry --non-trivial
lemma new_lemma_155064 (h0 : topological_space (canonically_ordered_comm_semiring (add_comm_monoid name))) : loc_path_connected_space (canonically_ordered_comm_semiring (add_comm_monoid name)) := sorry --non-trivial
lemma new_lemma_155065 (h0 : monoid (normed_comm_ring (finset Type))) : monoid.fg (normed_comm_ring (finset Type)) := sorry --non-trivial
lemma new_lemma_155066 (h0 : complete_lattice (left_cancel_semigroup (option empty))) : complete_lattice.is_Sup_finite_compact (left_cancel_semigroup (option empty)) := sorry --non-trivial
lemma new_lemma_155067 (h0 : function.extfun Type (functor.comp topological_space canonically_linear_ordered_monoid)) : @locally_compact_space.{0} (canonically_linear_ordered_monoid.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} canonically_linear_ordered_monoid.{0} pos (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} canonically_linear_ordered_monoid.{0}) h0 pos))  := sorry --non-trivial
lemma new_lemma_155068 (h0 : group (has_norm (semiring linarith.comp))) : normalizer_condition (has_norm (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_155069 (h0 : topological_space (has_sub num)) : discrete_topology (has_sub num) := sorry --non-trivial
lemma new_lemma_155070 (h0 : functor.add_const (topological_space (mul_zero_class empty)) empty) : @t0_space.{0} (mul_zero_class.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (mul_zero_class.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_155071 (h0 : topological_space (normed_comm_ring (comm_group unsigned))) : totally_disconnected_space (normed_comm_ring (comm_group unsigned)) := sorry --non-trivial
lemma new_lemma_155072 (h0 : ring (add_cancel_monoid (finset (has_Inf (has_Inf (has_nndist Type)))))) : strong_rank_condition (add_cancel_monoid (finset (has_Inf (has_Inf (has_nndist Type))))) := sorry --non-trivial
lemma new_lemma_155073 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (left_cancel_monoid.{0} (semiring.{0} unsigned)) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (left_cancel_monoid.{0} (semiring.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_155074 (h0 : topological_space (sub_neg_monoid (has_add (finset linarith.comp)))) : regular_space (sub_neg_monoid (has_add (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_155075 (h0 : not (function.extfun Type topological_space -> false)) : @totally_disconnected_space.{0} (has_union.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_union.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_155076 (h0 : filter (plift (semiring (semiring (semiring congr_arg_kind))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_155077 (h0 : topological_space (has_norm (semiring unsigned))) : path_connected_space (has_norm (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_155078 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_Inf name)) name) : @unique_factorization_monoid.{0} (has_Inf.{0} name) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (has_Inf.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_155079 (h0 : complete_lattice (option (option (option ennreal)))) : is_atomistic (option (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_155080 (h0 : functor.add_const (function.extfun (Type 1) group) name) : @group.fg.{1} Type (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) name h0) Type)  := sorry --non-trivial
lemma new_lemma_155081 (h0 : complete_lattice (has_norm (comm_semigroup linarith.ineq))) : complete_lattice.is_Sup_finite_compact (has_norm (comm_semigroup linarith.ineq)) := sorry --non-trivial
lemma new_lemma_155082 (h1 : set (has_div linarith.comp_source)) : set.subsingleton h1 := sorry --non-trivial
lemma new_lemma_155083 (h0 : functor.add_const (function.extfun Type group) linarith.comp) : @normalizer_condition.{0} (has_add.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) linarith.comp h0) (has_add.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155084 (h0 : ring (has_compl (semi_normed_ring (mul_one_class (mul_one_class reducibility_hints))))) : is_domain (has_compl (semi_normed_ring (mul_one_class (mul_one_class reducibility_hints)))) := sorry --non-trivial
lemma new_lemma_155085 (h0 : functor.add_const (ring pos) (has_neg pos)) : @strong_rank_condition.{0} pos (@functor.add_const.run.{0 0} (ring.{0} pos) (has_neg.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_155086 (h0 : fin has_zero.zero) : @complete_space.{1} (boolean_algebra.{1} Type) (@matrix.vec_empty.{1} (uniform_space.{1} (boolean_algebra.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_155087 (h0 : function.extfun (Type 1) (functor.comp topological_space canonically_ordered_comm_semiring)) : @discrete_topology.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} canonically_ordered_comm_semiring.{1} Type (@function.extfun_app.{3 2} (Type 1) (functor.comp.{1 1 1} topological_space.{1} canonically_ordered_comm_semiring.{1}) h0 Type))  := sorry --non-trivial
lemma new_lemma_155088 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} complex (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 complex)  := sorry --non-trivial
lemma new_lemma_155089 (h0 : functor.add_const (topological_space (add_group num)) num) : @totally_separated_space.{0} (add_group.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (add_group.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_155090 (h0 : option (function.extfun (Type -> Type) (function.extfun Type))) (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @sequential_space.{0} (has_pos_part.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@option.get_or_else.{1} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0 h1) topological_space.{0}) (has_pos_part.{0} pos))  := sorry --non-trivial
lemma new_lemma_155091 (h0 : topological_space (canonically_linear_ordered_monoid name)) : sequential_space (canonically_linear_ordered_monoid name) := sorry --non-trivial
lemma new_lemma_155092 (h0 : functor.comp topological_space finset name) : @totally_separated_space.{0} (finset.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} finset.{0} name h0)  := sorry --non-trivial
lemma new_lemma_155093 (h0 : complete_lattice (semigroup num)) : is_atomistic (semigroup num) := sorry --non-trivial
lemma new_lemma_155094 (h0 : functor.add_const (complete_lattice (has_to_string linarith.comp)) (ring linarith.comp)) : @is_compactly_generated.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_to_string.{0} linarith.comp)) (ring.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_155095 (h0 : ring (has_ssubset (with_one string_imp))) : rank_condition (has_ssubset (with_one string_imp)) := sorry --non-trivial
lemma new_lemma_155096 (h0 : ring (has_neg_part (has_neg_part Type))) : is_principal_ideal_ring (has_neg_part (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_155097 (h0 : functor.add_const (topological_space nnreal) congr_arg_kind) : topological_space.separable_space nnreal := sorry --non-trivial
lemma new_lemma_155098 (h0 : ring (canonically_ordered_comm_semiring (has_nndist name))) : strong_rank_condition (canonically_ordered_comm_semiring (has_nndist name)) := sorry --non-trivial
lemma new_lemma_155099 (h0 : has_coe (add_comm_semigroup (mul_one_class fun_info)) Prop) (h1 : add_comm_semigroup (mul_one_class fun_info)) : @coe_b.{1 1} (add_comm_semigroup.{0} (mul_one_class.{0} fun_info)) Prop h0 h1  := sorry --non-trivial
lemma new_lemma_155100 (h0 : fin has_zero.zero) : @unique_factorization_monoid.{0} (canonically_ordered_comm_semiring.{0} name) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type cancel_comm_monoid_with_zero.{0}) h0) (canonically_ordered_comm_semiring.{0} name))  := sorry --non-trivial
lemma new_lemma_155101 (h0 : has_mem.mem (id congr_arg_kind) has_emptyc.emptyc) : @normalizer_condition.{0} (@id.{2} Type congr_arg_kind) (@finset.pi.empty.{1 0} Type group.{0} (@id.{2} Type congr_arg_kind) h0)  := sorry --non-trivial
lemma new_lemma_155102 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (distrib_lattice.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (distrib_lattice.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_155103 (h0 : group (finset empty)) : group.fg (finset empty) := sorry --non-trivial
lemma new_lemma_155104 (h0 : topological_space (boolean_algebra (boolean_algebra (has_add (has_add Type))))) : preirreducible_space (boolean_algebra (boolean_algebra (has_add (has_add Type)))) := sorry --non-trivial
lemma new_lemma_155105 (h0 : has_lt (linear_ordered_comm_group_with_zero linarith.comp_source)) : no_max_order (linear_ordered_comm_group_with_zero linarith.comp_source) := sorry --non-trivial
lemma new_lemma_155106 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (with_one.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_one.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_155107 (h0 : topological_space (monoid_with_zero empty)) : normal_space (monoid_with_zero empty) := sorry --non-trivial
lemma new_lemma_155108 (h0 : ring (with_zero (has_ssubset to_additive.value_type))) : strong_rank_condition (with_zero (has_ssubset to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_155109 (h0 : not (topological_space (add_right_cancel_monoid empty) -> false)) : @preirreducible_space.{0} (add_right_cancel_monoid.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (add_right_cancel_monoid.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_155110 (h0 : linear_ordered_ring (has_top (with_bot string_imp))) (h1 : group (floor_ring (has_top (with_bot string_imp)))) : normalizer_condition (floor_ring (has_top (with_bot string_imp))) := sorry --non-trivial
lemma new_lemma_155111 (h0 : measurable_space enat) (h1 : has_inf enat) : has_measurable_inf enat := sorry --non-trivial
lemma new_lemma_155112 (h0 : topological_space (pseudo_metric_space (option (option ennreal)))) : normal_space (pseudo_metric_space (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_155113 (h0 : ring (has_union (has_sub unsigned))) : is_domain (has_union (has_sub unsigned)) := sorry --non-trivial
lemma new_lemma_155114 (h0 : ring (has_div char)) : is_domain (has_div char) := sorry --non-trivial
lemma new_lemma_155115 (h0 : functor.add_const (ordered_add_comm_monoid (ring environment.implicit_infer_kind)) name) : @archimedean.{0} (ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (ring.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_155116 (h0 : functor.add_const (semiring (normed_comm_ring unsigned)) (option unsigned)) : @is_noetherian_ring.{0} (normed_comm_ring.{0} unsigned) (@functor.add_const.run.{0 0} (semiring.{0} (normed_comm_ring.{0} unsigned)) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_155117 (h0 : monoid (complete_semilattice_Sup (denumerable (random_gen (random_gen linarith.ineq))))) : monoid.fg (complete_semilattice_Sup (denumerable (random_gen (random_gen linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_155118 (h0 : has_coe char Prop) (h3 : char) : @coe_b.{1 1} char Prop h0 h3  := sorry --non-trivial
lemma new_lemma_155119 (h0 : has_mem.mem uniform_space has_emptyc.emptyc) : @complete_space.{0} (random_gen.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type uniform_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) uniform_space.{0} h0) (random_gen.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_155120 (h0 : function.extfun Type topological_space) : @normal_space.{0} num (@function.extfun_app.{2 1} Type topological_space.{0} h0 num)  := sorry --non-trivial
lemma new_lemma_155121 (h0 : functor.add_const (uniform_space (has_neg pos)) linarith.comp) : @separated_space.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_neg.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_155122 (h0 : topological_space (has_inner (option empty) empty)) : normal_space (has_inner (option empty) empty) := sorry --non-trivial
lemma new_lemma_155123 (h0 : ring (has_lt fun_info)) : rank_condition (has_lt fun_info) := sorry --non-trivial
lemma new_lemma_155124 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_simple_group.{0} (has_neg.{0} name) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_neg.{0} name))  := sorry --non-trivial
lemma new_lemma_155125 (h0 : not (topological_space (random_gen congr_arg_kind) -> false)) : @path_connected_space.{0} (random_gen.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_155126 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (has_add.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_add.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_155127 (h0 : not (ring (measurable_space congr_arg_kind) -> false)) : @is_domain.{0} (measurable_space.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (ring.{0} (measurable_space.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_155128 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (complete_distrib_lattice.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (complete_distrib_lattice.{0} empty))  := sorry --non-trivial
lemma new_lemma_155129 (h0 : function.extfun Type topological_space) : @t1_space.{0} (monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_155130 (h0 : not (add_group (plift empty) -> false)) : @is_add_cyclic.{1} (plift.{1} empty) (@classical.by_contradiction'.{2} (add_group.{1} (plift.{1} empty)) h0)  := sorry --non-trivial
lemma new_lemma_155131 (h1 : add_group linarith.comp) : is_add_cyclic linarith.comp := sorry --non-trivial
lemma new_lemma_155132 (h0 : functor.add_const (ring (add_cancel_monoid Type)) pos) : @is_domain.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (add_cancel_monoid.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_155133 (h0 : not (topological_space (has_one empty) -> false)) : @totally_separated_space.{0} (has_one.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (has_one.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_155134 (h0 : not (ring (has_top empty) -> false)) : @strong_rank_condition.{0} (has_top.{0} empty) (@classical.by_contradiction'.{1} (ring.{0} (has_top.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_155135 (h0 : topological_space (plift (option empty))) : irreducible_space (plift (option empty)) := sorry --non-trivial
lemma new_lemma_155136 (h0 : group (cancel_monoid name)) : is_cyclic (cancel_monoid name) := sorry --non-trivial
lemma new_lemma_155137 (h0 : add_group (random_gen (random_gen num))) : is_add_cyclic (random_gen (random_gen num)) := sorry --non-trivial
lemma new_lemma_155138 (h0 : functor.add_const (cancel_comm_monoid_with_zero (preorder empty)) num) : @unique_factorization_monoid.{0} (preorder.{0} empty) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (preorder.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_155139 (h0 : function.extfun Type (prod (linear_ordered_semiring unsigned))) : id_rel (function.extfun_app h0 (linear_ordered_semiring unsigned)) := sorry --non-trivial
lemma new_lemma_155140 (h0 : option Type) (h1 : function.extfun Type ring) : @rank_condition.{0} (bin_tree.{0} (@option.lhoare.{1} Type num h0)) (@function.extfun_app.{2 1} Type ring.{0} h1 (bin_tree.{0} (@option.lhoare.{1} Type num h0)))  := sorry --non-trivial
lemma new_lemma_155141 (h0 : not (function.extfun (Type 1 -> Type 1) (function.extfun (Type 1)) -> false)) : @topological_space.separable_space.{1} (plift.{1} congr_arg_kind) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) (@classical.by_contradiction'.{3} (function.extfun.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1))) h0) topological_space.{1}) (plift.{1} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_155142 (h0 : filter (has_neg (has_add unsigned))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_155143 (h0 : ring (has_compl (random_gen (random_gen to_additive.value_type)))) : is_domain (has_compl (random_gen (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_155144 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (comm_group name)) := sorry --non-trivial
lemma new_lemma_155145 (h0 : list (add_group empty)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155146 (h0 : topological_space (denumerable (random_gen (random_gen char)))) : totally_disconnected_space (denumerable (random_gen (random_gen char))) := sorry --non-trivial
lemma new_lemma_155147 (h0 : topological_space (monoid (finset (has_add Type)))) : normal_space (monoid (finset (has_add Type))) := sorry --non-trivial
lemma new_lemma_155148 (h0 : functor.add_const (topological_space Type) Type) : @preirreducible_space.{1} Type (@functor.add_const.run.{1 1} (topological_space.{1} Type) Type h0)  := sorry --non-trivial
lemma new_lemma_155149 (h0 : not (complete_lattice (uniform_space linarith.comp_source) -> false)) : is_compactly_generated (uniform_space linarith.comp_source) := sorry --non-trivial
lemma new_lemma_155150 (h1 : not (ring (distrib linarith.comp_source) -> false)) : @rank_condition.{0} (distrib.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (ring.{0} (distrib.{0} linarith.comp_source)) h1)  := sorry --non-trivial
lemma new_lemma_155151 (h0 : uniform_space (random_gen (has_inv (random_gen (has_inv linarith.ineq))))) : complete_space (random_gen (has_inv (random_gen (has_inv linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_155152 : set.countable (set.add_center pnat) := sorry --non-trivial
lemma new_lemma_155153 (h0 : functor.add_const (topological_space (semigroup Type)) environment.implicit_infer_kind) : @locally_compact_space.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (semigroup.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_155154 (h0 : ordered_comm_monoid (boolean_algebra.core (has_add (has_Inf name)))) : has_exists_mul_of_le (boolean_algebra.core (has_add (has_Inf name))) := sorry --non-trivial
lemma new_lemma_155155 (h0 : monoid (metric_space (has_norm (semiring empty)))) : monoid.fg (metric_space (has_norm (semiring empty))) := sorry --non-trivial
lemma new_lemma_155156 (h0 : ring (normed_field (uniform_space (mul_one_class to_additive.value_type)))) : strong_rank_condition (normed_field (uniform_space (mul_one_class to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_155157 (h0 : topological_space (cancel_monoid (has_add environment.implicit_infer_kind))) : sequential_space (cancel_monoid (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_155158 (h0 : group (with_bot (semiring empty))) : normalizer_condition (with_bot (semiring empty)) := sorry --non-trivial
lemma new_lemma_155159 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (linear_ordered_field ennreal)) := sorry --non-trivial
lemma new_lemma_155160 (h0 : ring (has_top (has_top (has_norm fun_info)))) : is_domain (has_top (has_top (has_norm fun_info))) := sorry --non-trivial
lemma new_lemma_155161 (h0 : functor.add_const (topological_space (add_cancel_monoid name)) environment.implicit_infer_kind) : @sequential_space.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_155162 (h0 : functor.add_const (topological_space (comm_group unsigned)) pos) : @t1_space.{0} (comm_group.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_155163 (h0 : cancel_comm_monoid_with_zero (has_sub empty)) (h1 : ring (gcd_monoid (has_sub empty))) : is_domain (gcd_monoid (has_sub empty)) := sorry --non-trivial
lemma new_lemma_155164 (h0 : list (canonically_ordered_comm_semiring (ordered_comm_ring Type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155165 (h0 : not (complete_lattice (plift num) -> false)) : @is_compactly_generated.{1} (plift.{1} num) (@classical.by_contradiction'.{2} (complete_lattice.{1} (plift.{1} num)) h0)  := sorry --non-trivial
lemma new_lemma_155166 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (comm_group.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (comm_group.{0} name))  := sorry --non-trivial
lemma new_lemma_155167 (h0 : topological_space (monoid (option ennreal))) : loc_path_connected_space (monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_155168 (h0 : add_group (measurable_space (random_gen num))) : is_add_cyclic (measurable_space (random_gen num)) := sorry --non-trivial
lemma new_lemma_155169 (h0 : complete_lattice (has_add (finset (ring (ring (finset name)))))) : is_compactly_generated (has_add (finset (ring (ring (finset name))))) := sorry --non-trivial
lemma new_lemma_155170 (h0 : functor.add_const (function.extfun Type add_group) pos) : @is_add_cyclic.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type add_group.{0}) pos h0) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155171 (h0 : cancel_comm_monoid_with_zero (partial_order (semiring congr_arg_kind))) : unique_factorization_monoid (partial_order (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_155172 (h1 : list (encodable string_imp)) : list.nodup h1 := sorry --non-trivial
lemma new_lemma_155173 (h0 : ring (has_neg_part environment.implicit_infer_kind)) : is_principal_ideal_ring (has_neg_part environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_155174 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (complete_distrib_lattice.{0} unsigned) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (complete_distrib_lattice.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_155175 (h0 : filter (has_dist unsigned)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_155176 (h1 : preorder ereal) (h2 : set ereal) : set.is_pwo h2 := sorry --non-trivial
lemma new_lemma_155177 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (has_edist unsigned)) := sorry --non-trivial
lemma new_lemma_155178 (h0 : ring (has_nndist (option (option ennreal)))) : rank_condition (has_nndist (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_155179 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (canonically_linear_ordered_monoid.{0} name) (@function.extfun_app.{2 1} Type ring.{0} h0 (canonically_linear_ordered_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_155180 (h0 : function.extfun Type group) : @is_simple_group.{0} (boolean_algebra.core.{0} pos) (@function.extfun_app.{2 1} Type group.{0} h0 (boolean_algebra.core.{0} pos))  := sorry --non-trivial
lemma new_lemma_155181 (h0 : add_monoid (add_cancel_monoid (option (option ennreal)))) : add_monoid.fg (add_cancel_monoid (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_155182 (h0 : ring (linear_ordered_add_comm_group (has_inv to_additive.value_type))) : is_domain (linear_ordered_add_comm_group (has_inv to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_155183 (h0 h2 : multiset (add_comm_semigroup enat)) : multiset.le h0 h2 := sorry --non-trivial
lemma new_lemma_155184 (h0 : add_group (generalized_boolean_algebra (has_add pos))) : is_add_cyclic (generalized_boolean_algebra (has_add pos)) := sorry --non-trivial
lemma new_lemma_155185 (h0 : functor.add_const (topological_space (has_neg Type)) name) : @totally_disconnected_space.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_neg.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_155186 (h0 : topological_space (boolean_algebra (has_add name))) : t1_space (boolean_algebra (has_add name)) := sorry --non-trivial
lemma new_lemma_155187 (h1 : topological_space (has_norm linarith.comp)) : t0_space (has_norm linarith.comp) := sorry --non-trivial
lemma new_lemma_155188 (h0 : group (with_one (has_norm (random_gen (complete_semilattice_Sup linarith.comp))))) : normalizer_condition (with_one (has_norm (random_gen (complete_semilattice_Sup linarith.comp)))) := sorry --non-trivial
lemma new_lemma_155189 (h0 : not (topological_space (has_star congr_arg_kind) -> false)) : @totally_separated_space.{0} (has_star.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (has_star.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_155190 (h0 : group (generalized_boolean_algebra (has_Inf (has_Inf (has_Inf real))))) : is_simple_group (generalized_boolean_algebra (has_Inf (has_Inf (has_Inf real)))) := sorry --non-trivial
lemma new_lemma_155191 (h0 : topological_space (has_neg_part (has_add (has_add pos)))) : loc_path_connected_space (has_neg_part (has_add (has_add pos))) := sorry --non-trivial
lemma new_lemma_155192 (h0 : functor.add_const (ring (add_comm_monoid name)) environment.implicit_infer_kind) : @is_domain.{0} (add_comm_monoid.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (add_comm_monoid.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_155193 (h0 : complete_lattice (plift (add_left_cancel_semigroup unsigned))) : is_compactly_generated (plift (add_left_cancel_semigroup unsigned)) := sorry --non-trivial
lemma new_lemma_155194 (h0 : topological_space (has_Inf (ordered_comm_monoid linarith.comp))) : path_connected_space (has_Inf (ordered_comm_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_155195 (h0 : functor.add_const (topological_space (comm_group ennreal)) pos) : @loc_path_connected_space.{0} (comm_group.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} ennreal)) pos h0)  := sorry --non-trivial
lemma new_lemma_155196 (h0 : ring (with_bot (has_top linarith.comp_source))) : is_domain (with_bot (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_155197 (h0 : uniform_space (lex ereal)) : complete_space (lex ereal) := sorry --non-trivial
lemma new_lemma_155198 (h0 : functor.add_const (add_group (comm_group unsigned)) (has_neg_part Type)) : @is_add_cyclic.{0} (comm_group.{0} unsigned) (@functor.add_const.run.{0 1} (add_group.{0} (comm_group.{0} unsigned)) (has_neg_part.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_155199 (h0 : monoid (boolean_algebra (mul_zero_class (cancel_monoid pos)))) : monoid.fg (boolean_algebra (mul_zero_class (cancel_monoid pos))) := sorry --non-trivial
lemma new_lemma_155200 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (ordered_comm_monoid.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_155201 (h0 : uniform_space (measurable_space.dynkin_system unsigned)) : complete_space (measurable_space.dynkin_system unsigned) := sorry --non-trivial
lemma new_lemma_155202 (h0 : topological_space (comm_semigroup Type)) : totally_disconnected_space (comm_semigroup Type) := sorry --non-trivial
lemma new_lemma_155203 (h0 : group (fintype string_imp)) : group.fg (fintype string_imp) := sorry --non-trivial
lemma new_lemma_155204 (h0 : not (ring (linear_ordered_semiring to_additive.value_type) -> false)) : @is_domain.{0} (linear_ordered_semiring.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (linear_ordered_semiring.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_155205 (h0 : ring (normed_comm_ring (has_to_string (has_to_string (ring pos))))) : rank_condition (normed_comm_ring (has_to_string (has_to_string (ring pos)))) := sorry --non-trivial
lemma new_lemma_155206 (h0 : complete_lattice (uniform_space (random_gen string_imp))) : is_compactly_generated (uniform_space (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_155207 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (left_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (left_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_155208 (h0 : topological_space (measure_theory.measure_space (has_norm (semiring empty)))) : normal_space (measure_theory.measure_space (has_norm (semiring empty))) := sorry --non-trivial
lemma new_lemma_155209 (h0 : functor.add_const (topological_space (semigroup unsigned)) Type) : @totally_disconnected_space.{0} (semigroup.{0} unsigned) (@functor.add_const.run.{0 1} (topological_space.{0} (semigroup.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_155210 (h0 : add_group (has_top (has_top (has_norm (random_gen fun_info))))) : is_add_cyclic (has_top (has_top (has_norm (random_gen fun_info)))) := sorry --non-trivial
lemma new_lemma_155211 (h0 : ring (comm_ring (has_ssubset fun_info))) : is_domain (comm_ring (has_ssubset fun_info)) := sorry --non-trivial
lemma new_lemma_155212 (h0 : add_monoid (id (has_one unsigned))) : add_monoid.fg (id (has_one unsigned)) := sorry --non-trivial
lemma new_lemma_155213 (h0 : topological_space (distrib_lattice to_additive.value_type)) : t0_space (distrib_lattice to_additive.value_type) := sorry --non-trivial
lemma new_lemma_155214 (h0 : group (measurable_space empty)) : normalizer_condition (measurable_space empty) := sorry --non-trivial
lemma new_lemma_155215 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @locally_compact_space.{0} real.angle (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) real.angle)  := sorry --non-trivial
lemma new_lemma_155216 (h0 : functor.comp group has_add name) : @is_simple_group.{0} (has_add.{0} name) (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name (@functor.comp.run.{0 0 0} group.{0} has_add.{0} name h0)))))))))))))))))))))))))))))))))))))))))))))))  := sorry --non-trivial
lemma new_lemma_155217 (h0 : filter (semiring (random_gen (random_gen to_additive.value_type)))) (h1 : semiring (random_gen (random_gen to_additive.value_type)) -> Prop) : @filter.limsup.{0 0} Prop (semiring.{0} (random_gen.{0} (random_gen.{0} to_additive.value_type))) (@complete_lattice.to_conditionally_complete_lattice.{0} Prop Prop.complete_lattice) h0 h1  := sorry --non-trivial
lemma new_lemma_155218 (h1 : ring (uniform_space std_gen)) : strong_rank_condition (uniform_space std_gen) := sorry --non-trivial
lemma new_lemma_155219 (h0 : functor.add_const (function.extfun Type topological_space) environment.implicit_infer_kind) : @t0_space.{0} (boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) environment.implicit_infer_kind h0) (boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_155220 (h0 : ring (dlist (denumerable (linear_ordered_add_comm_group string_imp)))) : is_domain (dlist (denumerable (linear_ordered_add_comm_group string_imp))) := sorry --non-trivial
lemma new_lemma_155221 (h1 : add_group (has_norm to_additive.value_type)) : is_add_cyclic (has_norm to_additive.value_type) := sorry --non-trivial
lemma new_lemma_155222 (h0 : multiset (has_lt linarith.ineq)) (h1 : not (multiset (has_lt linarith.ineq) -> false)) : multiset.disjoint h0 (classical.by_contradiction' h1) := sorry --non-trivial
lemma new_lemma_155223 (h0 : ring (comm_group congr_arg_kind)) : rank_condition (comm_group congr_arg_kind) := sorry --non-trivial
lemma new_lemma_155224 (h0 : functor.add_const (topological_space (boolean_algebra pos)) name) : @discrete_topology.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_155225 (h0 : topological_space (add_cancel_monoid (finset ennreal))) : totally_separated_space (add_cancel_monoid (finset ennreal)) := sorry --non-trivial
lemma new_lemma_155226 (h0 : cancel_comm_monoid_with_zero (linear_ordered_comm_group (option (option (option (option ennreal)))))) : unique_factorization_monoid (linear_ordered_comm_group (option (option (option (option ennreal))))) := sorry --non-trivial
lemma new_lemma_155227 (h0 : topological_space (has_ssubset std_gen) -> topological_space (has_ssubset std_gen) -> Prop) (h1 : quot h0) (h2 : preorder (has_ssubset std_gen)) : @order_closed_topology.{0} (has_ssubset.{0} std_gen) (@quot.out.{1} (topological_space.{0} (has_ssubset.{0} std_gen)) h0 h1) h2  := sorry --non-trivial
lemma new_lemma_155228 (h0 : not (function.extfun Type topological_space -> false)) : @path_connected_space.{0} (with_one.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (with_one.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_155229 (h0 : list (has_neg (finset (finset Type)))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_155230 (h0 : complete_lattice (has_add linarith.comp)) : complete_lattice.is_Sup_finite_compact (has_add linarith.comp) := sorry --non-trivial
lemma new_lemma_155231 (h0 : functor.add_const (group (complete_distrib_lattice pos)) (generalized_boolean_algebra pos)) : @is_simple_group.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (complete_distrib_lattice.{0} pos)) (generalized_boolean_algebra.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_155232 (h0 : complete_lattice (generalized_boolean_algebra pos)) : is_compactly_generated (generalized_boolean_algebra pos) := sorry --non-trivial
lemma new_lemma_155233 (h0 : topological_space string.iterator_imp) (h2 : Prop) : is_path_connected (id (fun (h1 : string.iterator_imp), h2)) := sorry --non-trivial
lemma new_lemma_155234 (h0 : topological_space (has_to_string (has_add linarith.comp))) : preirreducible_space (has_to_string (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_155235 (h0 : topological_space (has_lt fun_info)) : path_connected_space (has_lt fun_info) := sorry --non-trivial
lemma new_lemma_155236 (h0 : functor.add_const (topological_space (normed_comm_ring ennreal)) num) : @preconnected_space.{0} (normed_comm_ring.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} ennreal)) num h0)  := sorry --non-trivial
lemma new_lemma_155237 (h0 : group (simple_graph (has_pos_part linarith.comp))) : normalizer_condition (simple_graph (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_155238 (h0 : functor.add_const (topological_space (ordered_comm_ring pos)) linarith.comp) : @t0_space.{0} (ordered_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_ring.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_155239 (h0 : ring (has_lt char)) : is_domain (has_lt char) := sorry --non-trivial
lemma new_lemma_155240 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (canonically_linear_ordered_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (canonically_linear_ordered_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155241 (h0 : add_group (has_nndist ennreal)) : is_add_cyclic (has_nndist ennreal) := sorry --non-trivial
lemma new_lemma_155242 (h0 : not (function.extfun (finset Type) (has_mem.mem (linear_ordered_semiring unsigned)) -> false)) : @strong_rank_condition.{0} (linear_ordered_semiring.{0} unsigned) (@finset.pi.empty.{1 0} Type ring.{0} (linear_ordered_semiring.{0} unsigned) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (linear_ordered_semiring.{0} unsigned)) (@classical.by_contradiction'.{0} (function.extfun.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (linear_ordered_semiring.{0} unsigned))) h0) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_155243 (h0 : not (complete_lattice (fintype char) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (fintype.{0} char) (@classical.by_contradiction'.{1} (complete_lattice.{0} (fintype.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_155244 (h0 : functor.comp list complete_distrib_lattice name) : palindrome (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_155245 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_nndist.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_nndist.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_155246 (h0 : not (topological_space (has_compl char) -> false)) : @path_connected_space.{0} (has_compl.{0} char) (@classical.by_contradiction'.{1} (topological_space.{0} (has_compl.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_155247 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (boolean_algebra.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_155248 (h0 : list (has_neg_part (semigroup Type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155249 (h0 : functor.add_const (uniform_space (ring name)) environment.implicit_infer_kind) : @complete_space.{0} (ring.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (ring.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_155250 (h0 : group (canonically_linear_ordered_monoid (finset real))) : is_cyclic (canonically_linear_ordered_monoid (finset real)) := sorry --non-trivial
lemma new_lemma_155251 (h0 : ring (complete_distrib_lattice real)) : strong_rank_condition (complete_distrib_lattice real) := sorry --non-trivial
lemma new_lemma_155252 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (linear_ordered_field.{0} empty) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (linear_ordered_field.{0} empty))  := sorry --non-trivial
lemma new_lemma_155253 (h0 : add_group (generalized_boolean_algebra (has_add (has_add Type)))) : is_add_cyclic (generalized_boolean_algebra (has_add (has_add Type))) := sorry --non-trivial
lemma new_lemma_155254 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @topological_space.separable_space.{0} (has_Inf.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (has_Inf.{0} name))  := sorry --non-trivial
lemma new_lemma_155255 (h0 : list (normed_comm_ring name)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155256 (h0 : functor.add_const (uniform_space (pseudo_metric_space linarith.comp)) (ring linarith.comp)) : @separated_space.{0} (pseudo_metric_space.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (pseudo_metric_space.{0} linarith.comp)) (ring.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_155257 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_simple_group.{0} (ring.{0} real) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (ring.{0} real))  := sorry --non-trivial
lemma new_lemma_155258 (h1 : group (distrib reducibility_hints)) : is_cyclic (distrib reducibility_hints) := sorry --non-trivial
lemma new_lemma_155259 (h0 : not (uniform_space (random_gen (metric_space char)) -> false)) : @complete_space.{0} (random_gen.{0} (metric_space.{0} char)) (@classical.by_contradiction'.{1} (uniform_space.{0} (random_gen.{0} (metric_space.{0} char))) h0)  := sorry --non-trivial
lemma new_lemma_155260 (h0 : ring (ring (ring pos))) : strong_rank_condition (ring (ring pos)) := sorry --non-trivial
lemma new_lemma_155261 (h0 : not (function.extfun Type complete_lattice -> false)) : @is_atomistic.{0} (normed_group.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (normed_group.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_155262 (h0 : group (distrib (mul_one_class reducibility_hints))) : is_cyclic (distrib (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_155263 (h0 : functor.add_const (topological_space (ring pos)) (finset Type)) : @loc_path_connected_space.{0} (ring.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (ring.{0} pos)) (finset.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_155264 (h0 : topological_space (has_append char)) : path_connected_space (has_append char) := sorry --non-trivial
lemma new_lemma_155265 (h0 : not (function.extfun Type group -> false)) : @normalizer_condition.{0} (random_gen.{0} num) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (random_gen.{0} num))  := sorry --non-trivial
lemma new_lemma_155266 (h0 : topological_space (pseudo_metric_space (has_nndist name))) : preirreducible_space (pseudo_metric_space (has_nndist name)) := sorry --non-trivial
lemma new_lemma_155267 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @regular_space.{0} (mul_zero_class.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (mul_zero_class.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155268 (h0 : functor.add_const (function.extfun Type ordered_add_comm_monoid) pos) : @archimedean.{0} (has_nndist.{0} pos) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_add_comm_monoid.{0}) pos h0) (has_nndist.{0} pos))  := sorry --non-trivial
lemma new_lemma_155269 (h0 : uniform_space (with_one reducibility_hints)) : complete_space (with_one reducibility_hints) := sorry --non-trivial
lemma new_lemma_155270 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (boolean_algebra.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_155271 (h1 : ring ereal) : strong_rank_condition ereal := sorry --non-trivial
lemma new_lemma_155272 (h0 : functor.add_const (topological_space (has_zero pos)) (ring linarith.comp)) : @path_connected_space.{0} (has_zero.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} pos)) (ring.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_155273 (h2 : complete_lattice (with_zero string_imp)) : complete_lattice.is_Sup_finite_compact (with_zero string_imp) := sorry --non-trivial
lemma new_lemma_155274 (h0 : fin has_zero.zero) : @normal_space.{0} (ordered_comm_ring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (ordered_comm_ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_155275 (h0 : function.extfun Type topological_space) : @regular_space.{0} (finset.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (finset.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_155276 (h0 : topological_space (has_neg_part (option name))) : preirreducible_space (has_neg_part (option name)) := sorry --non-trivial
lemma new_lemma_155277 (h0 : not (group (has_top to_additive.value_type) -> false)) : @group.fg.{0} (has_top.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (group.{0} (has_top.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_155278 (h0 : ring (linear_ordered_comm_group_with_zero linarith.ineq)) : is_domain (linear_ordered_comm_group_with_zero linarith.ineq) := sorry --non-trivial
lemma new_lemma_155279 (h0 : topological_space (comm_group (has_add Type))) : totally_disconnected_space (comm_group (has_add Type)) := sorry --non-trivial
lemma new_lemma_155280 (h0 : semiring (linear_ordered_field congr_arg_kind)) : is_noetherian_ring (linear_ordered_field congr_arg_kind) := sorry --non-trivial
lemma new_lemma_155281 (h0 : fin has_zero.zero) : t0_space real := sorry --non-trivial
lemma new_lemma_155282 (h0 : functor.add_const (topological_space (mul_zero_class pos)) (finset unsigned)) : @totally_disconnected_space.{0} (mul_zero_class.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (mul_zero_class.{0} pos)) (finset.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_155283 (h1 : has_mem.mem (metric_space linarith.comp) has_emptyc.emptyc) : @locally_compact_space.{0} (metric_space.{0} linarith.comp) (@finset.pi.empty.{1 0} Type topological_space.{0} (metric_space.{0} linarith.comp) h1)  := sorry --non-trivial
lemma new_lemma_155284 (h0 : group (normed_lattice_add_comm_group (finset real))) : is_cyclic (normed_lattice_add_comm_group (finset real)) := sorry --non-trivial
lemma new_lemma_155285 (h0 : topological_space (has_inv to_additive.value_type)) : path_connected_space (has_inv to_additive.value_type) := sorry --non-trivial
lemma new_lemma_155286 (h0 : semiring (with_one empty)) : is_noetherian_ring (with_one empty) := sorry --non-trivial
lemma new_lemma_155287 (h0 : not (monoid (has_union empty) -> false)) : @monoid.fg.{0} (has_union.{0} empty) (@classical.by_contradiction'.{1} (monoid.{0} (has_union.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_155288 (h0 : functor.add_const (monoid (has_bot pos)) name) : @monoid.fg.{0} (has_bot.{0} pos) (@functor.add_const.run.{0 0} (monoid.{0} (has_bot.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_155289 (h0 : group (normed_lattice_add_comm_group (has_add (has_Inf pos)))) : group.fg (normed_lattice_add_comm_group (has_add (has_Inf pos))) := sorry --non-trivial
lemma new_lemma_155290 (h0 : topological_space (linear_ordered_comm_group (option ennreal))) : discrete_topology (linear_ordered_comm_group (option ennreal)) := sorry --non-trivial
lemma new_lemma_155291 (h0 : measurable_space fun_info -> Prop) : @infi.{0 1} Prop (@conditionally_complete_lattice.to_has_Inf.{0} Prop (@complete_lattice.to_conditionally_complete_lattice.{0} Prop Prop.complete_lattice)) (measurable_space.{0} fun_info) h0  := sorry --non-trivial
lemma new_lemma_155292 (h0 : functor.add_const (ordered_comm_monoid (has_to_string Type)) pos) : @has_exists_mul_of_le.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (ordered_comm_monoid.{1} (has_to_string.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_155293 (h0 : group (option (semiring unsigned))) : group.fg (option (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_155294 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (canonically_ordered_add_monoid.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (canonically_ordered_add_monoid.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_155295 (h0 : topological_space (ring (ring (has_zero (has_zero pos))))) : path_connected_space (ring (ring (has_zero (has_zero pos)))) := sorry --non-trivial
lemma new_lemma_155296 (h1 : function.extfun Type list) : list.nodup (function.extfun_app h1 (linear_ordered_add_comm_group linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_155297 (h0 : functor.add_const (topological_space (has_neg Type)) linarith.comp) : @totally_disconnected_space.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_neg.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_155298 (h0 : fin has_zero.zero) : @normalizer_condition.{1} (canonically_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (group.{1} (canonically_ordered_monoid.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_155299 (h0 : group (has_pos_part (has_to_string name))) : group.fg (has_pos_part (has_to_string name)) := sorry --non-trivial
lemma new_lemma_155300 (h0 : topological_space (boolean_algebra (semigroup (ring (has_neg_part (comm_group pos)))))) : totally_disconnected_space (boolean_algebra (semigroup (ring (has_neg_part (comm_group pos))))) := sorry --non-trivial
lemma new_lemma_155301 (h0 : ring (comm_group (has_add (cancel_monoid ennreal)))) : is_principal_ideal_ring (comm_group (has_add (cancel_monoid ennreal))) := sorry --non-trivial
lemma new_lemma_155302 (h1 : ring (has_nnnorm (random_gen to_additive.value_type))) : rank_condition (has_nnnorm (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_155303 (h0 : not (monoid (mul_zero_class num) -> false)) : @monoid.fg.{0} (mul_zero_class.{0} num) (@classical.by_contradiction'.{1} (monoid.{0} (mul_zero_class.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_155304 (h1 : add_group (add_comm_semigroup (mul_one_class ereal))) : is_add_cyclic (add_comm_semigroup (mul_one_class ereal)) := sorry --non-trivial
lemma new_lemma_155305 (h0 : uniform_space (has_to_string (boolean_algebra.core name))) : complete_space (has_to_string (boolean_algebra.core name)) := sorry --non-trivial
lemma new_lemma_155306 (h0 : topological_space (linear_ordered_field (option empty))) : loc_path_connected_space (linear_ordered_field (option empty)) := sorry --non-trivial
lemma new_lemma_155307 (h0 : functor.add_const (functor.add_const (ring Type) pos) pos) : @strong_rank_condition.{1} Type (@functor.add_const.run.{1 0} (ring.{1} Type) pos (@functor.add_const.run.{1 0} (functor.add_const.{1 0} (ring.{1} Type) pos) pos h0))  := sorry --non-trivial
lemma new_lemma_155308 (h1 : topological_space std_gen) : connected_space std_gen := sorry --non-trivial
lemma new_lemma_155309 (h1 : has_mem.mem linarith.comp_source has_emptyc.emptyc) : @is_domain.{0} linarith.comp_source (@finset.pi.empty.{1 0} Type ring.{0} linarith.comp_source h1)  := sorry --non-trivial
lemma new_lemma_155310 (h0 : functor.add_const (ring (metric_space unsigned)) congr_arg_kind) : @is_principal_ideal_ring.{0} (metric_space.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (metric_space.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_155311 (h0 : finset (linear_ordered_comm_group num)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_155312 (h1 : function.extfun Type topological_space) : @t0_space.{0} (has_norm.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (has_norm.{0} num))  := sorry --non-trivial
lemma new_lemma_155313 (h0 : topological_space (has_zero (comm_group Type))) : irreducible_space (has_zero (comm_group Type)) := sorry --non-trivial
lemma new_lemma_155314 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @preirreducible_space.{0} (ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155315 (h0 : add_group (semiring (option empty))) : is_add_cyclic (semiring (option empty)) := sorry --non-trivial
lemma new_lemma_155316 (h0 : group (cancel_monoid (semigroup (comm_group environment.implicit_infer_kind)))) : group.fg (cancel_monoid (semigroup (comm_group environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_155317 (h0 : ring (linear_ordered_comm_group_with_zero (has_nnnorm linarith.ineq))) : is_domain (linear_ordered_comm_group_with_zero (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_155318 (h0 : functor.comp ring canonically_ordered_comm_semiring ennreal) : @strong_rank_condition.{0} (canonically_ordered_comm_semiring.{0} ennreal) (@functor.comp.run.{0 0 0} ring.{0} canonically_ordered_comm_semiring.{0} ennreal h0)  := sorry --non-trivial
lemma new_lemma_155319 (h0 : functor.add_const (topological_space (add_comm_monoid Type)) (has_to_string pos)) : @preirreducible_space.{1} (add_comm_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (add_comm_monoid.{1} Type)) (has_to_string.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_155320 (h0 : group (measurable_space.dynkin_system (semiring (semiring (semiring linarith.comp))))) : group.fg (measurable_space.dynkin_system (semiring (semiring (semiring linarith.comp)))) := sorry --non-trivial
lemma new_lemma_155321 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (linear_ordered_cancel_comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_cancel_comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_155322 (h1 h2 : multiset char) : multiset.disjoint h1 h2 := sorry --non-trivial
lemma new_lemma_155323 (h0 : group (with_one (has_norm linarith.comp))) : is_cyclic (with_one (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_155324 (h0 : functor.add_const (topological_space (simple_graph linarith.comp)) (finset pos)) : @discrete_topology.{0} (simple_graph.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (simple_graph.{0} linarith.comp)) (finset.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_155325 (h1 : ring (with_zero linarith.comp_source)) : rank_condition (with_zero linarith.comp_source) := sorry --non-trivial
lemma new_lemma_155326 (h0 : functor.add_const (topological_space (ring linarith.comp)) (ring (finset Type))) : @irreducible_space.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (ring.{0} linarith.comp)) (ring.{1} (finset.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_155327 (h0 : complete_lattice (has_emptyc (random_gen to_additive.value_type))) : complete_lattice.is_Sup_finite_compact (has_emptyc (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_155328 (h0 : functor.add_const (function.extfun Type ring) (mul_zero_class pos)) : @rank_condition.{0} (pseudo_metric_space.{0} name) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) (mul_zero_class.{0} pos) h0) (pseudo_metric_space.{0} name))  := sorry --non-trivial
lemma new_lemma_155329 (h0 : cancel_comm_monoid_with_zero (has_neg (mul_zero_class name))) : unique_factorization_monoid (has_neg (mul_zero_class name)) := sorry --non-trivial
lemma new_lemma_155330 (h0 : monoid (is_R_or_C (option unsigned))) : monoid.fg (is_R_or_C (option unsigned)) := sorry --non-trivial
lemma new_lemma_155331 (h0 : set (simple_graph environment.projection_info)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_155332 (h0 : topological_space (has_bot (ordered_comm_ring Type))) : path_connected_space (has_bot (ordered_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_155333 (h0 : uniform_space (normed_group (random_gen to_additive.value_type))) : complete_space (normed_group (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_155334 (h0 : topological_space (add_comm_monoid (ordered_comm_monoid real))) : regular_space (add_comm_monoid (ordered_comm_monoid real)) := sorry --non-trivial
lemma new_lemma_155335 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @regular_space.{0} (generalized_boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (generalized_boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_155336 (h0 : function.extfun Type (functor.add_const (ordered_add_comm_monoid (normed_comm_ring linarith.comp)))) : @archimedean.{0} (normed_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (normed_comm_ring.{0} linarith.comp)) name (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ordered_add_comm_monoid.{0} (normed_comm_ring.{0} linarith.comp))) h0 name))  := sorry --non-trivial
lemma new_lemma_155337 (h0 : add_group (has_le (mul_one_class std_gen))) : is_add_cyclic (has_le (mul_one_class std_gen)) := sorry --non-trivial
lemma new_lemma_155338 (h0 : finset (comm_monoid unsigned)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_155339 (h0 : functor.add_const (filter (semigroup name)) linarith.comp) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_155340 (h1 : group (has_nnnorm (has_nnnorm (has_nnnorm (comm_ring linarith.ineq))))) : is_cyclic (has_nnnorm (has_nnnorm (has_nnnorm (comm_ring linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_155341 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (finset.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (finset.{0} empty))  := sorry --non-trivial
lemma new_lemma_155342 (h0 : functor.add_const (complete_lattice (boolean_algebra linarith.comp)) linarith.comp) : @is_atomistic.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (complete_lattice.{0} (boolean_algebra.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_155343 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (mul_zero_class.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (mul_zero_class.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_155344 (h0 : functor.add_const (topological_space (semiring empty)) empty) : @irreducible_space.{0} (semiring.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (semiring.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_155345 (h0 : function.extfun Type (functor.add_const (add_monoid (has_nndist name)))) : @add_monoid.fg.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 0} (add_monoid.{0} (has_nndist.{0} name)) name (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (add_monoid.{0} (has_nndist.{0} name))) h0 name))  := sorry --non-trivial
lemma new_lemma_155346 (h0 : finset (comm_group (add_comm_monoid Type))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_155347 (h0 : functor.comp topological_space finset ennreal) : @locally_compact_space.{0} (finset.{0} ennreal) (@functor.comp.run.{0 0 0} topological_space.{0} finset.{0} ennreal h0)  := sorry --non-trivial
lemma new_lemma_155348 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (has_nndist.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_nndist.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_155349 (h0 : function.extfun (Type 1) (functor.comp group has_zero)) : @normalizer_condition.{1} (has_zero.{1} Type) (@functor.comp.run.{1 1 1} group.{1} has_zero.{1} Type (@function.extfun_app.{3 2} (Type 1) (functor.comp.{1 1 1} group.{1} has_zero.{1}) h0 Type))  := sorry --non-trivial
lemma new_lemma_155350 (h0 : ring (has_append (has_nnnorm (has_nnnorm (has_nnnorm (has_nnnorm char)))))) : is_domain (has_append (has_nnnorm (has_nnnorm (has_nnnorm (has_nnnorm char))))) := sorry --non-trivial
lemma new_lemma_155351 (h0 : add_monoid (comm_group (has_neg (has_neg name)))) : add_monoid.fg (comm_group (has_neg (has_neg name))) := sorry --non-trivial
lemma new_lemma_155352 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (canonically_linear_ordered_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} h0 (canonically_linear_ordered_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_155353 (h0 : uniform_space (omega_complete_partial_order unsigned)) : complete_space (omega_complete_partial_order unsigned) := sorry --non-trivial
lemma new_lemma_155354 (h0 : ring (comm_ring (denumerable char))) : rank_condition (comm_ring (denumerable char)) := sorry --non-trivial
lemma new_lemma_155355 (h1 : topological_space (has_compl (random_gen (random_gen (random_gen (denumerable (random_gen linarith.ineq))))))) : t0_space (has_compl (random_gen (random_gen (random_gen (denumerable (random_gen linarith.ineq)))))) := sorry --non-trivial
lemma new_lemma_155356 (h0 : filter (complete_semilattice_Sup (comm_ring fun_info))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_155357 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (canonically_linear_ordered_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_linear_ordered_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155358 (h0 : topological_space (simple_graph (mul_one_class linarith.comp_source))) (h1 : has_sub (simple_graph (mul_one_class linarith.comp_source))) : has_continuous_sub (simple_graph (mul_one_class linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_155359 (h0 : filter (monoid unsigned) -> Prop) (h1 : Exists (fun (x : filter (monoid unsigned)), h0 x)) : countable_Inter_filter (classical.some h1) := sorry --non-trivial
lemma new_lemma_155360 (h0 : topological_space (add_comm_monoid (option empty))) : t0_space (add_comm_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_155361 (h0 : set (has_div (mul_one_class (mul_one_class (mul_one_class environment.projection_info))))) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_155362 (h0 : uniform_space ennreal -> uniform_space ennreal -> Prop) : is_symm (uniform_space ennreal) h0 := sorry --non-trivial
lemma new_lemma_155363 (h0 : topological_space (has_Sup num)) : totally_separated_space (has_Sup num) := sorry --non-trivial
lemma new_lemma_155364 (h0 : topological_space (has_inv (has_ssubset fun_info))) : path_connected_space (has_inv (has_ssubset fun_info)) := sorry --non-trivial
lemma new_lemma_155365 (h0 : list (has_norm (random_gen to_additive.value_type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155366 (h0 : functor.add_const (monoid (finset pos)) Type) : @monoid.fg.{0} (finset.{0} pos) (@functor.add_const.run.{0 1} (monoid.{0} (finset.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_155367 (h0 : functor.add_const (topological_space (has_Inf pos)) (add_cancel_monoid (has_neg Type))) : @loc_path_connected_space.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (has_Inf.{0} pos)) (add_cancel_monoid.{1} (has_neg.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_155368 (h0 : functor.add_const (complete_lattice (add_cancel_monoid unsigned)) (option empty)) : @complete_lattice.is_Sup_finite_compact.{0} (add_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (add_cancel_monoid.{0} unsigned)) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_155369 (h1 : group Type) : group.fg Type := sorry --non-trivial
lemma new_lemma_155370 (h0 : add_group (random_gen (random_gen linarith.comp))) : is_add_cyclic (random_gen (random_gen linarith.comp)) := sorry --non-trivial
lemma new_lemma_155371 (h0 : group (sub_neg_monoid (has_Inf pos))) : is_cyclic (sub_neg_monoid (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_155372 (h0 : ring (has_add (ordered_semiring string))) : rank_condition (has_add (ordered_semiring string)) := sorry --non-trivial
lemma new_lemma_155373 (h5 : not (topological_space (has_append char) -> false)) : @t0_space.{0} (has_append.{0} char) (@classical.by_contradiction'.{1} (topological_space.{0} (has_append.{0} char)) h5)  := sorry --non-trivial
lemma new_lemma_155374 (h0 : group (comm_group environment.implicit_infer_kind)) : normalizer_condition (comm_group environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_155375 (h0 : functor.add_const (semiring (ring linarith.comp)) environment.implicit_infer_kind) : @is_noetherian_ring.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (semiring.{0} (ring.{0} linarith.comp)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_155376 (h0 : functor.add_const (ring (comm_group Type)) linarith.comp) : @is_principal_ideal_ring.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (comm_group.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_155377 (h0 : functor.add_const (list (add_cancel_monoid unsigned)) pos) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_155378 (h0 : ring (has_compl (mul_one_class ennreal))) : is_domain (has_compl (mul_one_class ennreal)) := sorry --non-trivial
lemma new_lemma_155379 (h0 : group (id to_additive.value_type)) : normalizer_condition (id to_additive.value_type) := sorry --non-trivial
lemma new_lemma_155380 (h0 : functor.add_const (function.extfun (Type 1) complete_lattice) Type) : @is_atomistic.{1} (has_to_string.{1} Type) (@function.extfun_app.{3 2} (Type 1) complete_lattice.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) complete_lattice.{1}) Type h0) (has_to_string.{1} Type))  := sorry --non-trivial
lemma new_lemma_155381 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (mul_zero_class.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (mul_zero_class.{0} real))  := sorry --non-trivial
lemma new_lemma_155382 (h0 : topological_space (linear_ordered_comm_ring (semiring (semiring (has_top congr_arg_kind))))) : t0_space (linear_ordered_comm_ring (semiring (semiring (has_top congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_155383 (h0 : functor.add_const (topological_space (semiring num)) empty) : @t1_space.{0} (semiring.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (semiring.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_155384 (h1 h2 : multiset (nondiscrete_normed_field char)) : multiset.subset h1 h2 := sorry --non-trivial
lemma new_lemma_155385 (h0 h1 h2 : pnat) : pnat.coprime h0 (pnat.mod h1 h2) := sorry --non-trivial
lemma new_lemma_155386 (h0 : topological_space (has_compl (has_nnnorm (has_nnnorm linarith.ineq)))) : t0_space (has_compl (has_nnnorm (has_nnnorm linarith.ineq))) := sorry --non-trivial
lemma new_lemma_155387 (h0 : functor.add_const (add_monoid (has_zero linarith.comp)) Type) : @add_monoid.fg.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 1} (add_monoid.{0} (has_zero.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_155388 (h0 : topological_space (ordered_comm_monoid (finset (finset Type)))) : t1_space (ordered_comm_monoid (finset (finset Type))) := sorry --non-trivial
lemma new_lemma_155389 (h0 : not (complete_lattice (add_cancel_comm_monoid to_additive.value_type) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (add_cancel_comm_monoid.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (complete_lattice.{0} (add_cancel_comm_monoid.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_155390 (h0 : ring (measure_theory.measure_space (has_top (has_top empty)))) : rank_condition (measure_theory.measure_space (has_top (has_top empty))) := sorry --non-trivial
lemma new_lemma_155391 (h0 : complete_lattice (boolean_algebra.core (boolean_algebra linarith.comp))) : is_atomistic (boolean_algebra.core (boolean_algebra linarith.comp)) := sorry --non-trivial
lemma new_lemma_155392 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (has_one.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (has_one.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_155393 (h1 : ring (distrib (normed_field reducibility_hints))) : strong_rank_condition (distrib (normed_field reducibility_hints)) := sorry --non-trivial
lemma new_lemma_155394 (h0 : add_monoid (has_zero (option (option unsigned)))) : add_monoid.fg (has_zero (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_155395 (h0 : topological_space (add_cancel_monoid ennreal)) : locally_compact_space (add_cancel_monoid ennreal) := sorry --non-trivial
lemma new_lemma_155396 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (complete_distrib_lattice.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (complete_distrib_lattice.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_155397 (h0 : topological_space (linear_ordered_semiring (linear_ordered_semiring num))) : discrete_topology (linear_ordered_semiring (linear_ordered_semiring num)) := sorry --non-trivial
lemma new_lemma_155398 (h0 : functor.add_const (function.extfun Type ordered_add_comm_monoid) name) : @archimedean.{0} (has_to_string.{0} (has_pos_part.{0} linarith.comp)) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_add_comm_monoid.{0}) name h0) (has_to_string.{0} (has_pos_part.{0} linarith.comp)))  := sorry --non-trivial
lemma new_lemma_155399 (h0 : fin has_zero.zero) : @rank_condition.{0} (comm_semigroup.{0} real) (@matrix.vec_empty.{0} (ring.{0} (comm_semigroup.{0} real)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)))  := sorry --non-trivial
lemma new_lemma_155400 (h0 : functor.comp topological_space has_zero pos) : @locally_compact_space.{0} (has_zero.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} has_zero.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_155401 (h0 : functor.add_const (topological_space (has_nndist unsigned)) linarith.comp) : @totally_disconnected_space.{0} (has_nndist.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_155402 (h0 : ring (semigroup (has_nndist (has_add name)))) : rank_condition (semigroup (has_nndist (has_add name))) := sorry --non-trivial
lemma new_lemma_155403 (h0 : list (normed_comm_ring (ring (finset linarith.comp)))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_155404 (h0 : not (group (option empty) -> false)) : @is_cyclic.{0} (option.{0} empty) (@classical.by_contradiction'.{1} (group.{0} (option.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_155405 (h0 : ring (has_to_string environment.implicit_infer_kind)) : is_domain (has_to_string environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_155406 (h0 : complete_lattice (with_bot unsigned)) : complete_lattice.is_Sup_finite_compact (with_bot unsigned) := sorry --non-trivial
lemma new_lemma_155407 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (complete_semilattice_Sup.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_semilattice_Sup.{0} num))  := sorry --non-trivial
lemma new_lemma_155408 (h0 : functor.add_const (topological_space (has_neg_part name)) linarith.comp) : @locally_compact_space.{0} (has_neg_part.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_155409 (h2 : empty) : empty.elim h2 := sorry --non-trivial
lemma new_lemma_155410 (h0 : ring (with_zero (random_gen linarith.ineq))) : strong_rank_condition (with_zero (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_155411 (h0 : topological_space (bin_tree congr_arg_kind)) : t0_space (bin_tree congr_arg_kind) := sorry --non-trivial
lemma new_lemma_155412 (h0 : uniform_space (with_one (semiring num))) : separated_space (with_one (semiring num)) := sorry --non-trivial
lemma new_lemma_155413 (h0 : ring (semiring congr_arg_kind)) : rank_condition (semiring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_155414 (h0 : function.extfun (Type 1) (functor.add_const (list (ring pos)))) : palindrome (functor.add_const.run (function.extfun_app h0 Type)) := sorry --non-trivial
lemma new_lemma_155415 (h0 : complete_lattice (has_append fun_info)) : is_compactly_generated (has_append fun_info) := sorry --non-trivial
lemma new_lemma_155416 (h0 : ordered_add_comm_monoid (mul_zero_class name)) : archimedean (mul_zero_class name) := sorry --non-trivial
lemma new_lemma_155417 (h0 : group (comm_group (has_neg_part environment.implicit_infer_kind))) : is_simple_group (comm_group (has_neg_part environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_155418 (h0 : topological_space (random_gen (has_top num))) : totally_separated_space (random_gen (has_top num)) := sorry --non-trivial
lemma new_lemma_155419 (h0 : functor.add_const (semiring (has_zero Type)) name) : @is_noetherian_ring.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (semiring.{1} (has_zero.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_155420 (h0 : functor.add_const (group (boolean_algebra environment.implicit_infer_kind)) (has_pos_part linarith.comp)) : @normalizer_condition.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) (has_pos_part.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_155421 (h0 : function.extfun Type (functor.add_const (list (has_edist empty)))) : list.nodup (functor.add_const.run (function.extfun_app h0 unsigned)) := sorry --non-trivial
lemma new_lemma_155422 (h0 : functor.add_const (function.extfun (Type 1) ring) pos) : @rank_condition.{1} (finset.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) ring.{1}) pos h0) (finset.{1} Type))  := sorry --non-trivial
lemma new_lemma_155423 (h0 : group (has_nndist (has_pos_part (has_neg (ring (has_pos_part pos)))))) : normalizer_condition (has_nndist (has_pos_part (has_neg (ring (has_pos_part pos))))) := sorry --non-trivial
lemma new_lemma_155424 (h0 : monoid_with_zero (ring ennreal) -> monoid_with_zero (ring ennreal) -> Prop) : is_symm (monoid_with_zero (ring ennreal)) h0 := sorry --non-trivial
lemma new_lemma_155425 (h1 : ring (fintype to_additive.value_type)) : strong_rank_condition (fintype to_additive.value_type) := sorry --non-trivial
lemma new_lemma_155426 (h0 : topological_space (has_neg (has_add (finset pos)))) : preconnected_space (has_neg (has_add (finset pos))) := sorry --non-trivial
lemma new_lemma_155427 (h0 : ring (has_zero (has_to_string (has_to_string unsigned)))) : is_principal_ideal_ring (has_zero (has_to_string (has_to_string unsigned))) := sorry --non-trivial
lemma new_lemma_155428 (h0 : functor.add_const (topological_space (option empty)) num) : @loc_path_connected_space.{0} (option.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (option.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_155429 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_155430 (h0 : group (distrib_lattice (random_gen (random_gen (random_gen string_imp))))) : group.fg (distrib_lattice (random_gen (random_gen (random_gen string_imp)))) := sorry --non-trivial
lemma new_lemma_155431 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (with_one linarith.comp)) := sorry --non-trivial
lemma new_lemma_155432 (h0 : function.extfun Type ring) : @is_domain.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (add_cancel_monoid.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_155433 (h0 : monoid (with_bot (has_norm congr_arg_kind))) : monoid.fg (with_bot (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_155434 (h0 : function.extfun Type group) : @is_cyclic.{0} (finset.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} h0 (finset.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155435 (h0 : function.extfun Type ring) : @rank_condition.{0} (add_cancel_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (add_cancel_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_155436 (h0 : function.extfun Type topological_space) : @t0_space.{0} (bin_tree.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (bin_tree.{0} num))  := sorry --non-trivial
lemma new_lemma_155437 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (bin_tree.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type monoid.{0} h0 (bin_tree.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_155438 (h0 : to_additive.value_type -> to_additive.value_type -> Prop) : irreflexive h0 := sorry --non-trivial
lemma new_lemma_155439 (h0 : complete_lattice (cancel_monoid (has_add name))) : is_compactly_generated (cancel_monoid (has_add name)) := sorry --non-trivial
lemma new_lemma_155440 (h1 : set (ereal -> fun_info)) : set.separates_points h1 := sorry --non-trivial
lemma new_lemma_155441 (h0 : functor.comp add_group encodable to_additive.value_type) : @is_add_cyclic.{0} (encodable.{0} to_additive.value_type) (@functor.comp.run.{0 0 0} add_group.{0} encodable.{0} to_additive.value_type h0)  := sorry --non-trivial
lemma new_lemma_155442 (h0 : has_mem.mem num has_emptyc.emptyc) : @is_atomistic.{0} num (@finset.pi.empty.{1 0} Type complete_lattice.{0} num h0)  := sorry --non-trivial
lemma new_lemma_155443 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (ordered_cancel_add_comm_monoid num)) := sorry --non-trivial
lemma new_lemma_155444 (h0 : list (fintype char)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155445 (h0 : monoid (comm_group (add_comm_monoid (boolean_algebra.core pos)))) : monoid.fg (comm_group (add_comm_monoid (boolean_algebra.core pos))) := sorry --non-trivial
lemma new_lemma_155446 (h0 : uniform_space (semigroup (option (option (option unsigned))))) : separated_space (semigroup (option (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_155447 (h0 : functor.add_const (complete_lattice (left_cancel_monoid unsigned)) (semiring unsigned)) : @is_atomistic.{0} (left_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (left_cancel_monoid.{0} unsigned)) (semiring.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_155448 (h0 : functor.comp ring has_neg name) : @rank_condition.{0} (has_neg.{0} name) (@functor.comp.run.{0 0 0} ring.{0} has_neg.{0} name h0)  := sorry --non-trivial
lemma new_lemma_155449 (h0 : topological_space (left_cancel_monoid num)) : t1_space (left_cancel_monoid num) := sorry --non-trivial
lemma new_lemma_155450 (h0 : has_mem.mem (with_one empty) has_emptyc.emptyc) : @group.fg.{0} (with_one.{0} empty) (@finset.pi.empty.{1 0} Type group.{0} (with_one.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_155451 (h0 : list (has_to_string (boolean_algebra.core Type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155452 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (has_inv.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_inv.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_155453 (h0 : ordered_add_comm_monoid (is_R_or_C congr_arg_kind)) : archimedean (is_R_or_C congr_arg_kind) := sorry --non-trivial
lemma new_lemma_155454 (h0 : not (function.extfun Type topological_space -> false)) : @totally_disconnected_space.{0} (@id.{2} Type num) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (@id.{2} Type num))  := sorry --non-trivial
lemma new_lemma_155455 (h0 : topological_space (boolean_algebra (has_add (has_to_string environment.implicit_infer_kind)))) : discrete_topology (boolean_algebra (has_add (has_to_string environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_155456 (h0 : topological_space (metric_space (semiring (semiring empty)))) : t0_space (metric_space (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_155457 (h0 : function.extfun Type topological_space) : @t0_space.{0} (comm_ring.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (comm_ring.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_155458 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (has_union.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_group.{0} h0 (has_union.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155459 (h0 : group (add_group (semiring congr_arg_kind))) : group.fg (add_group (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_155460 (h0 : functor.add_const (add_group (has_nndist name)) environment.implicit_infer_kind) : @is_add_cyclic.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 0} (add_group.{0} (has_nndist.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_155461 (h1 : add_group (complete_semilattice_Sup (random_gen string_imp))) : is_add_cyclic (complete_semilattice_Sup (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_155462 (h0 : fin has_zero.zero) : @is_simple_group.{0} (has_pos_part.{0} linarith.comp) (@matrix.vec_empty.{0} (group.{0} (has_pos_part.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_155463 (h1 : ring (distrib (has_ssubset linarith.comp_source))) : strong_rank_condition (distrib (has_ssubset linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_155464 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (add_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (add_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_155465 (h0 : topological_space (has_pos_part (has_Inf Type))) : irreducible_space (has_pos_part (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_155466 (h0 : functor.add_const (topological_space (has_zero Type)) (has_Inf linarith.comp)) : @totally_disconnected_space.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_zero.{1} Type)) (has_Inf.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_155467 (h0 : topological_space (plift (semiring (semiring num)))) : topological_space.separable_space (plift (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_155468 (h0 : functor.add_const (topological_space (boolean_algebra.core environment.implicit_infer_kind)) pos) : @totally_disconnected_space.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_155469 (h0 : group (linear_ordered_semiring (random_gen (random_gen fun_info)))) : normalizer_condition (linear_ordered_semiring (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_155470 (h0 : functor.add_const (add_monoid (non_assoc_semiring unsigned)) congr_arg_kind) : @add_monoid.fg.{0} (non_assoc_semiring.{0} unsigned) (@functor.add_const.run.{0 0} (add_monoid.{0} (non_assoc_semiring.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_155471 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (comm_group.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (comm_group.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_155472 (h2 : ring (linear_ordered_add_comm_group fun_info)) : rank_condition (linear_ordered_add_comm_group fun_info) := sorry --non-trivial
lemma new_lemma_155473 (h0 : fin has_zero.zero) : @loc_path_connected_space.{1} (comm_semigroup.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@matrix.vec_empty.{2} (function.extfun.{3 2} (Type 1) topological_space.{1}) h0) (comm_semigroup.{1} Type))  := sorry --non-trivial
lemma new_lemma_155474 (h0 : finset (left_cancel_semigroup (semiring unsigned))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_155475 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (has_pos_part.{0} real) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (has_pos_part.{0} real))  := sorry --non-trivial
lemma new_lemma_155476 (h0 : prod (non_assoc_semiring (semiring (option unsigned))) (non_assoc_semiring (semiring (option unsigned)))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_155477 (h0 : uniform_space (topological_space (random_gen (has_nnnorm (random_gen char))))) : complete_space (topological_space (random_gen (has_nnnorm (random_gen char)))) := sorry --non-trivial
lemma new_lemma_155478 (h0 : functor.add_const (monoid (has_Inf pos)) (finset Type)) : @monoid.fg.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 1} (monoid.{0} (has_Inf.{0} pos)) (finset.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_155479 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (with_one.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_one.{0} num))  := sorry --non-trivial
lemma new_lemma_155480 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem uniform_space)) : @separated_space.{0} (measurable_space.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) uniform_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) uniform_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (measurable_space.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155481 (h0 : function.extfun (Type 1) topological_space) : @preconnected_space.{1} (canonically_linear_ordered_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (canonically_linear_ordered_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_155482 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (normed_comm_ring.{0} empty) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (normed_comm_ring.{0} empty))  := sorry --non-trivial
lemma new_lemma_155483 (h0 : functor.add_const (complete_lattice (boolean_algebra.core unsigned)) pos) : @is_atomistic.{0} (boolean_algebra.core.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (boolean_algebra.core.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_155484 (h0 : functor.add_const (topological_space (ring empty)) unsigned) : @totally_separated_space.{0} (ring.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_155485 (h0 : functor.comp topological_space right_cancel_semigroup Type) : @t1_space.{1} (right_cancel_semigroup.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} right_cancel_semigroup.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_155486 (h0 : functor.comp (functor.add_const Prop) option (option pos)) : functor.add_const.run (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_155487 (h0 : has_lt (has_lt (has_compl linarith.comp_source))) : no_max_order (has_lt (has_compl linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_155488 (h0 : functor.add_const (list (ordered_comm_ring pos)) pos) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_155489 (h0 : list (has_norm num)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155490 (h0 : set (normed_field fun_info)) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_155491 (h1 : list (semi_normed_comm_ring (complete_semilattice_Sup linarith.ineq))) : list.nodup h1 := sorry --non-trivial
lemma new_lemma_155492 (h0 : not (topological_space (denumerable string_imp) -> false)) : @totally_disconnected_space.{0} (denumerable.{0} string_imp) (@classical.by_contradiction'.{1} (topological_space.{0} (denumerable.{0} string_imp)) h0)  := sorry --non-trivial
lemma new_lemma_155493 (h0 : functor.comp topological_space mul_zero_class pos) : @path_connected_space.{0} (mul_zero_class.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} mul_zero_class.{0} pos (@functor.comp.run.{0 0 0} topological_space.{0} mul_zero_class.{0} pos (@functor.comp.run.{0 0 0} topological_space.{0} mul_zero_class.{0} pos (@functor.comp.run.{0 0 0} topological_space.{0} mul_zero_class.{0} pos h0))))  := sorry --non-trivial
lemma new_lemma_155494 (h0 : not (function.extfun Type group -> false)) : @is_cyclic.{0} (has_ssubset.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (has_ssubset.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_155495 (h0 : topological_space (add_group (semiring empty))) : locally_compact_space (add_group (semiring empty)) := sorry --non-trivial
lemma new_lemma_155496 (h0 : ordered_add_comm_monoid (ordered_ring (semiring (semiring empty)))) : archimedean (ordered_ring (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_155497 (h0 : functor.add_const (list (canonically_ordered_add_monoid empty)) empty) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_155498 (h0 : finset (mul_zero_class (has_neg ennreal))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_155499 (h0 : ring (semigroup pos)) : rank_condition (semigroup pos) := sorry --non-trivial
lemma new_lemma_155500 (h0 : functor.add_const (group (comm_group pos)) pos) : @group.fg.{0} (comm_group.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (comm_group.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_155501 (h0 : complete_lattice (with_zero (has_nnnorm linarith.ineq))) : is_compactly_generated (with_zero (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_155502 (h0 : ring (has_append (has_nnnorm (has_nnnorm (has_nnnorm linarith.ineq))))) : is_domain (has_append (has_nnnorm (has_nnnorm (has_nnnorm linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_155503 (h0 : ring (has_star (option unsigned))) : is_principal_ideal_ring (has_star (option unsigned)) := sorry --non-trivial
lemma new_lemma_155504 (h1 : topological_space (fintype fun_info)) : locally_compact_space (fintype fun_info) := sorry --non-trivial
lemma new_lemma_155505 (h0 : ring (linear_ordered_comm_monoid_with_zero (option unsigned))) : strong_rank_condition (linear_ordered_comm_monoid_with_zero (option unsigned)) := sorry --non-trivial
lemma new_lemma_155506 (h0 : not (has_mem.mem (normed_group linarith.comp) has_emptyc.emptyc -> false)) : @strong_rank_condition.{0} (normed_group.{0} linarith.comp) (@finset.pi.empty.{1 0} Type ring.{0} (normed_group.{0} linarith.comp) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (normed_group.{0} linarith.comp) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_155507 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (with_bot.{0} string_imp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (with_bot.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_155508 (h0 : list (free_add_monoid congr_arg_kind)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155509 (h0 : cancel_comm_monoid_with_zero (has_bot (sub_neg_monoid real))) : unique_factorization_monoid (has_bot (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_155510 (h3 : uniform_space (has_lt string.iterator_imp)) : complete_space (has_lt string.iterator_imp) := sorry --non-trivial
lemma new_lemma_155511 (h0 : function.extfun Type topological_space) : @t1_space.{0} (has_to_string.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_to_string.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_155512 (h0 : set (char -> denumerable char)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_155513 (h1 : simple_graph (random_gen fun_info)) (h2 : sym2 (random_gen fun_info)) : simple_graph.edge_set h1 h2 := sorry --non-trivial
lemma new_lemma_155514 (h0 : ring (semigroup (has_neg Type))) : is_principal_ideal_ring (semigroup (has_neg Type)) := sorry --non-trivial
lemma new_lemma_155515 (h0 : topological_space (generalized_boolean_algebra (has_add linarith.comp))) : loc_path_connected_space (generalized_boolean_algebra (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_155516 (h0 : ring (non_assoc_semiring (semiring empty))) : rank_condition (non_assoc_semiring (semiring empty)) := sorry --non-trivial
lemma new_lemma_155517 (h0 : functor.add_const (topological_space (boolean_algebra pos)) linarith.comp) : @irreducible_space.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_155518 (h1 : has_mem.mem linarith.comp_source has_emptyc.emptyc) : @totally_disconnected_space.{0} linarith.comp_source (@finset.pi.empty.{1 0} Type topological_space.{0} linarith.comp_source h1)  := sorry --non-trivial
lemma new_lemma_155519 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (has_top.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 ring.{0}) (has_top.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_155520 (h0 : not (group (add_left_cancel_monoid linarith.comp_source) -> false)) : @is_cyclic.{0} (add_left_cancel_monoid.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (group.{0} (add_left_cancel_monoid.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_155521 (h0 : group (has_pos_part (ring (ring Type)))) : is_cyclic (has_pos_part (ring (ring Type))) := sorry --non-trivial
lemma new_lemma_155522 (h0 : ring (has_pos_part (has_Inf (has_Inf (has_nndist linarith.comp))))) : strong_rank_condition (has_pos_part (has_Inf (has_Inf (has_nndist linarith.comp)))) := sorry --non-trivial
lemma new_lemma_155523 (h0 : functor.add_const (function.extfun Type complete_lattice) linarith.comp) : @is_atomistic.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type complete_lattice.{0}) linarith.comp h0) (boolean_algebra.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_155524 (h0 : group (generalized_boolean_algebra (ring (ring Type)))) : is_cyclic (generalized_boolean_algebra (ring (ring Type))) := sorry --non-trivial
lemma new_lemma_155525 (h0 : add_group (normed_group (semiring (semiring unsigned)))) : is_add_cyclic (normed_group (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_155526 (h0 : topological_space (measurable_space.dynkin_system (add_group unsigned))) : irreducible_space (measurable_space.dynkin_system (add_group unsigned)) := sorry --non-trivial
lemma new_lemma_155527 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (has_pos_part.{0} name) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_pos_part.{0} name))  := sorry --non-trivial
lemma new_lemma_155528 (h0 : functor.add_const (complete_lattice (has_neg_part environment.implicit_infer_kind)) name) : @complete_lattice.is_Sup_finite_compact.{0} (has_neg_part.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_neg_part.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_155529 (h0 : ring (finset environment.implicit_infer_kind)) : rank_condition (finset environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_155530 (h0 : functor.add_const (complete_lattice (option empty)) empty) : @is_atomistic.{0} (option.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (option.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_155531 (h0 : functor.add_const (fin has_zero.zero) real) : @is_add_cyclic.{1} (ring.{1} Type) (@matrix.vec_empty.{1} (add_group.{1} (ring.{1} Type)) (@functor.add_const.run.{0 0} (fin (@has_zero.zero.{0} nat nat.has_zero)) real h0))  := sorry --non-trivial
lemma new_lemma_155532 (h0 : topological_space (semigroup (has_to_string name))) : regular_space (semigroup (has_to_string name)) := sorry --non-trivial
lemma new_lemma_155533 (h0 : not (prod (has_sub unsigned) (has_sub unsigned) -> false)) : id_rel (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_155534 (h0 : topological_space (normed_lattice_add_comm_group (has_neg pos))) : totally_separated_space (normed_lattice_add_comm_group (has_neg pos)) := sorry --non-trivial
lemma new_lemma_155535 (h0 : topological_space (preorder (semiring (option num)))) : normal_space (preorder (semiring (option num))) := sorry --non-trivial
lemma new_lemma_155536 (h0 : ring (mul_zero_class (has_add environment.implicit_infer_kind))) : rank_condition (mul_zero_class (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_155537 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} pos (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) pos)  := sorry --non-trivial
lemma new_lemma_155538 (h1 : measurable_space (topological_space linarith.comp_source)) (h2 : has_sup (topological_space linarith.comp_source)) : has_measurable_sup (topological_space linarith.comp_source) := sorry --non-trivial
lemma new_lemma_155539 (h0 : not (function.extfun Type topological_space -> false)) : @totally_disconnected_space.{0} string_imp (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) string_imp)  := sorry --non-trivial
lemma new_lemma_155540 (h0 : topological_space (option unsigned)) : normal_space (option unsigned) := sorry --non-trivial
lemma new_lemma_155541 (h0 : functor.add_const (uniform_space (has_to_string Type)) environment.implicit_infer_kind) : @separated_space.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (uniform_space.{1} (has_to_string.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_155542 (h0 : functor.add_const (function.extfun (Type 1) group) linarith.comp) : @group.fg.{1} (has_nndist.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) linarith.comp h0) (has_nndist.{1} Type))  := sorry --non-trivial
lemma new_lemma_155543 (h0 : ring (option (semiring (semiring congr_arg_kind)))) : is_principal_ideal_ring (option (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_155544 (h0 : complete_lattice (has_div enat)) : is_compactly_generated (has_div enat) := sorry --non-trivial
lemma new_lemma_155545 (h0 : cancel_comm_monoid_with_zero (has_to_string (has_pos_part (has_add pos)))) : unique_factorization_monoid (has_to_string (has_pos_part (has_add pos))) := sorry --non-trivial
lemma new_lemma_155546 (h1 : ring (add_left_cancel_monoid linarith.ineq)) : strong_rank_condition (add_left_cancel_monoid linarith.ineq) := sorry --non-trivial
lemma new_lemma_155547 (h0 : complete_lattice (normed_comm_ring unsigned)) : is_atomistic (normed_comm_ring unsigned) := sorry --non-trivial
lemma new_lemma_155548 (h0 : functor.add_const (function.extfun Type semiring) Type) : @is_noetherian_ring.{0} (has_add.{0} real) (@function.extfun_app.{2 1} Type semiring.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type semiring.{0}) Type h0) (has_add.{0} real))  := sorry --non-trivial
lemma new_lemma_155549 (h0 : topological_space (dlist (random_gen linarith.comp_source))) : totally_disconnected_space (dlist (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_155550 (h0 : not (ring (has_top linarith.comp_source) -> false)) : @is_domain.{0} (has_top.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (ring.{0} (has_top.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_155551 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (has_add.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_add.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_155552 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (monoid_with_zero.{0} ennreal) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (monoid_with_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_155553 (h0 : complete_lattice (comm_group (comm_group unsigned))) : is_atomistic (comm_group (comm_group unsigned)) := sorry --non-trivial
lemma new_lemma_155554 (h0 : function.extfun Type group) : @normalizer_condition.{0} (complete_linear_order.{0} num) (@function.extfun_app.{2 1} Type group.{0} h0 (complete_linear_order.{0} num))  := sorry --non-trivial
lemma new_lemma_155555 (h0 : functor.add_const (topological_space (normed_linear_ordered_group congr_arg_kind)) unsigned) : @totally_disconnected_space.{0} (normed_linear_ordered_group.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_linear_ordered_group.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_155556 (h0 : not (topological_space (measurable_space.dynkin_system linarith.comp) -> false)) : @preirreducible_space.{0} (measurable_space.dynkin_system.{0} linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (measurable_space.dynkin_system.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_155557 (h0 : ordered_comm_monoid (ordered_comm_monoid (has_add ordering))) : has_exists_mul_of_le (ordered_comm_monoid (has_add ordering)) := sorry --non-trivial
lemma new_lemma_155558 (h0 : not (function.extfun Type uniform_space -> false)) : @complete_space.{0} (metric_space.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (metric_space.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155559 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (has_bot.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_bot.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_155560 (h0 : topological_space (linear_ordered_comm_group (option (option (option ennreal))))) : t0_space (linear_ordered_comm_group (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_155561 (h0 : ring (sub_neg_monoid (has_bot name))) : is_domain (sub_neg_monoid (has_bot name)) := sorry --non-trivial
lemma new_lemma_155562 (h0 : ring (has_edist (option unsigned))) : is_principal_ideal_ring (has_edist (option unsigned)) := sorry --non-trivial
lemma new_lemma_155563 (h0 : topological_space (ordered_comm_ring (has_neg name))) : discrete_topology (ordered_comm_ring (has_neg name)) := sorry --non-trivial
lemma new_lemma_155564 (h0 : not (function.extfun Type topological_space -> false)) : @irreducible_space.{0} (with_one.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (with_one.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_155565 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (has_to_string.{0} empty) (@function.extfun_app.{2 1} Type monoid.{0} h0 (has_to_string.{0} empty))  := sorry --non-trivial
lemma new_lemma_155566 (h0 : not (function.extfun Type complete_lattice -> false)) : @is_compactly_generated.{0} (has_emptyc.{0} linarith.ineq) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (has_emptyc.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_155567 (h1 : complete_lattice (random_gen linarith.comp)) : complete_lattice.is_Sup_finite_compact (random_gen linarith.comp) := sorry --non-trivial
lemma new_lemma_155568 (h0 : group (has_add (mul_one_class linarith.comp))) : is_simple_group (has_add (mul_one_class linarith.comp)) := sorry --non-trivial
lemma new_lemma_155569 (h0 : functor.add_const (topological_space (fintype empty)) empty) : @t0_space.{0} (fintype.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (fintype.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_155570 (h0 : ordered_add_comm_monoid (boolean_algebra.core (has_add Type))) : archimedean (boolean_algebra.core (has_add Type)) := sorry --non-trivial
lemma new_lemma_155571 (h0 : topological_space (ordered_comm_ring (has_neg Type))) : locally_compact_space (ordered_comm_ring (has_neg Type)) := sorry --non-trivial
lemma new_lemma_155572 (h0 : add_monoid (linear_ordered_add_comm_group linarith.comp_source)) (h1 : with_bot (linear_ordered_add_comm_group linarith.comp_source)) (h2 : ne h1 has_bot.bot) : is_of_fin_add_order (with_bot.unbot h1 h2) := sorry --non-trivial
lemma new_lemma_155573 (h0 : functor.add_const (ordered_comm_monoid (comm_group unsigned)) Type) : @has_exists_mul_of_le.{0} (comm_group.{0} unsigned) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (comm_group.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_155574 (h0 : topological_space (ordered_comm_monoid (has_neg linarith.comp))) : sequential_space (ordered_comm_monoid (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_155575 (h0 : has_mem.mem complete_lattice has_emptyc.emptyc) : @complete_lattice.is_Sup_finite_compact.{0} (normed_group.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) complete_lattice.{0} h0) (normed_group.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_155576 (h0 : semiring (has_add pos)) : is_noetherian_ring (has_add pos) := sorry --non-trivial
lemma new_lemma_155577 (h0 : filter (has_neg_part ennreal)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_155578 (h0 : function.extfun Type has_neg) (h1 : function.extfun Type measurable_space) : @has_measurable_neg.{0} (comm_monoid_with_zero.{0} linarith.ineq) (@function.extfun_app.{2 1} Type has_neg.{0} h0 (comm_monoid_with_zero.{0} linarith.ineq)) (@function.extfun_app.{2 1} Type measurable_space.{0} h1 (comm_monoid_with_zero.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_155579 (h0 : ring (add_left_cancel_monoid to_additive.value_type)) : strong_rank_condition (add_left_cancel_monoid to_additive.value_type) := sorry --non-trivial
lemma new_lemma_155580 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (sub_neg_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (sub_neg_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_155581 (h0 : functor.add_const (topological_space (normed_comm_ring linarith.comp)) linarith.comp) : @path_connected_space.{0} (normed_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_155582 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (ordered_ring.{0} unsigned) (@function.extfun_app.{2 1} Type semiring.{0} h0 (ordered_ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_155583 (h0 : functor.add_const (topological_space linarith.comp) (has_neg (has_neg Type))) : @discrete_topology.{0} linarith.comp (@functor.add_const.run.{0 1} (topological_space.{0} linarith.comp) (has_neg.{1} (has_neg.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_155584 (h0 : uniform_space (has_nnnorm linarith.ineq)) : complete_space (has_nnnorm linarith.ineq) := sorry --non-trivial
lemma new_lemma_155585 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (canonically_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (canonically_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_155586 (h2 : ring (has_div linarith.comp_source)) : is_domain (has_div linarith.comp_source) := sorry --non-trivial
lemma new_lemma_155587 (h0 : function.extfun Type (functor.add_const (topological_space (normed_linear_ordered_group empty)))) : @discrete_topology.{0} (normed_linear_ordered_group.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_linear_ordered_group.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (normed_linear_ordered_group.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_155588 (h0 : list (has_to_string (option (option empty)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155589 (h0 : topological_space (boolean_algebra.core num)) : preirreducible_space (boolean_algebra.core num) := sorry --non-trivial
lemma new_lemma_155590 (h0 : function.extfun (Type 1) finset) : finset.nonempty (function.extfun_app h0 (canonically_ordered_comm_semiring Type)) := sorry --non-trivial
lemma new_lemma_155591 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (complete_distrib_lattice.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_distrib_lattice.{0} name))  := sorry --non-trivial
lemma new_lemma_155592 (h0 : semiring (has_neg_part (has_neg_part linarith.comp))) : is_noetherian_ring (has_neg_part (has_neg_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_155593 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (with_bot.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_bot.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_155594 (h0 : function.extfun Type ring) : @is_domain.{0} (ordered_comm_monoid.{0} name) (@function.extfun_app.{2 1} Type ring.{0} h0 (ordered_comm_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_155595 (h0 : group (group_with_zero num)) : normalizer_condition (group_with_zero num) := sorry --non-trivial
lemma new_lemma_155596 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (left_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (left_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_155597 (h0 : group (measurable_space (add_group (has_norm num)))) : is_cyclic (measurable_space (add_group (has_norm num))) := sorry --non-trivial
lemma new_lemma_155598 (h0 : topological_space (has_to_string (option environment.implicit_infer_kind))) : irreducible_space (has_to_string (option environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_155599 (h0 : has_mem.mem (complete_semilattice_Sup linarith.comp) has_emptyc.emptyc) : @is_compactly_generated.{0} (complete_semilattice_Sup.{0} linarith.comp) (@finset.pi.empty.{1 0} Type complete_lattice.{0} (complete_semilattice_Sup.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_155600 (h0 : complete_lattice (has_neg (ring (ring pos)))) : complete_lattice.is_Sup_finite_compact (has_neg (ring (ring pos))) := sorry --non-trivial
lemma new_lemma_155601 (h0 : functor.add_const (topological_space (normed_comm_ring name)) pos) : @sequential_space.{0} (normed_comm_ring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_155602 (h0 : complete_lattice (canonically_ordered_monoid real)) : complete_lattice.is_Sup_finite_compact (canonically_ordered_monoid real) := sorry --non-trivial
lemma new_lemma_155603 (h0 : topological_space (add_cancel_monoid (has_neg (ring Type)))) : discrete_topology (add_cancel_monoid (has_neg (ring Type))) := sorry --non-trivial
lemma new_lemma_155604 (h0 : topological_space (has_add (sub_neg_monoid (sub_neg_monoid Type)))) : regular_space (has_add (sub_neg_monoid (sub_neg_monoid Type))) := sorry --non-trivial
lemma new_lemma_155605 (h0 : complete_lattice (boolean_algebra.core (finset unsigned))) : complete_lattice.is_Sup_finite_compact (boolean_algebra.core (finset unsigned)) := sorry --non-trivial
lemma new_lemma_155606 (h0 : functor.add_const (topological_space (semigroup environment.implicit_infer_kind)) Type) : @preirreducible_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (semigroup.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_155607 (h0 : functor.add_const (complete_lattice (boolean_algebra Type)) Type) : @is_atomistic.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 1} (complete_lattice.{1} (boolean_algebra.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_155608 (h0 : ring (has_ssubset (random_gen (random_gen char)))) : rank_condition (has_ssubset (random_gen (random_gen char))) := sorry --non-trivial
lemma new_lemma_155609 (h0 : uniform_space (normed_comm_ring (has_nndist (has_nndist name)))) : complete_space (normed_comm_ring (has_nndist (has_nndist name))) := sorry --non-trivial
lemma new_lemma_155610 (h0 : complete_lattice (plift (complete_semilattice_Sup unsigned))) : complete_lattice.is_Sup_finite_compact (plift (complete_semilattice_Sup unsigned)) := sorry --non-trivial
lemma new_lemma_155611 (h0 : functor.add_const (topological_space (boolean_algebra linarith.comp)) name) : @t1_space.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_155612 (h0 : topological_space (add_cancel_monoid (has_neg environment.implicit_infer_kind))) : preconnected_space (add_cancel_monoid (has_neg environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_155613 (h0 : functor.add_const (list (has_neg environment.implicit_infer_kind)) name) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_155614 (h0 : functor.add_const (functor.add_const (topological_space pos) name) pos) : @t0_space.{0} pos (@functor.add_const.run.{0 0} (topological_space.{0} pos) name (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (topological_space.{0} pos) name) pos h0))  := sorry --non-trivial
lemma new_lemma_155615 (h0 : finset (has_neg_part (has_scalar environment.implicit_infer_kind name))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_155616 (h0 : monoid (canonically_ordered_comm_semiring (add_comm_monoid (finset pos)))) : monoid.fg (canonically_ordered_comm_semiring (add_comm_monoid (finset pos))) := sorry --non-trivial
lemma new_lemma_155617 (h0 : ring (add_comm_monoid unsigned)) : is_domain (add_comm_monoid unsigned) := sorry --non-trivial
lemma new_lemma_155618 (h0 : add_monoid (add_cancel_monoid (has_to_string environment.implicit_infer_kind))) : add_monoid.fg (add_cancel_monoid (has_to_string environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_155619 (h0 : topological_space (has_to_string (has_zero environment.implicit_infer_kind))) : preirreducible_space (has_to_string (has_zero environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_155620 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (sub_neg_monoid.{0} (finset.{0} linarith.comp)) (@function.extfun_app.{2 1} Type semiring.{0} h0 (sub_neg_monoid.{0} (finset.{0} linarith.comp)))  := sorry --non-trivial
lemma new_lemma_155621 (h0 : functor.add_const (topological_space (has_add (has_Inf (has_neg pos)))) pos) : @path_connected_space.{0} (has_add.{0} (has_Inf.{0} (has_neg.{0} pos))) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} (has_Inf.{0} (has_neg.{0} pos)))) pos h0)  := sorry --non-trivial
lemma new_lemma_155622 (h0 : function.extfun Type monoid) : @monoid.fg.{0} unsigned (@function.extfun_app.{2 1} Type monoid.{0} h0 unsigned)  := sorry --non-trivial
lemma new_lemma_155623 (h0 : cancel_comm_monoid_with_zero (canonically_ordered_monoid (has_bot (sub_neg_monoid real)))) : unique_factorization_monoid (canonically_ordered_monoid (has_bot (sub_neg_monoid real))) := sorry --non-trivial
lemma new_lemma_155624 (h0 : list (has_Sup unsigned)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_155625 (h0 : semiring (semigroup (normed_comm_ring environment.implicit_infer_kind))) : is_noetherian_ring (semigroup (normed_comm_ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_155626 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (comm_ring.{0} char) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (comm_ring.{0} char))  := sorry --non-trivial
lemma new_lemma_155627 (h0 : add_monoid (has_neg_part (option ennreal))) : add_monoid.fg (has_neg_part (option ennreal)) := sorry --non-trivial
lemma new_lemma_155628 (h1 : set (non_unital_non_assoc_semiring std_gen)) : set.finite h1 := sorry --non-trivial
lemma new_lemma_155629 (h0 : topological_space (has_bot empty)) : t1_space (has_bot empty) := sorry --non-trivial
lemma new_lemma_155630 (h0 : topological_space (has_bot (finset Type))) : t1_space (has_bot (finset Type)) := sorry --non-trivial
lemma new_lemma_155631 (h0 : complete_lattice (denumerable fun_info)) : complete_lattice.is_Sup_finite_compact (denumerable fun_info) := sorry --non-trivial
lemma new_lemma_155632 (h0 : functor.add_const (add_group (canonically_ordered_comm_semiring linarith.comp)) name) : @is_add_cyclic.{0} (canonically_ordered_comm_semiring.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_group.{0} (canonically_ordered_comm_semiring.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_155633 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} empty (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 empty)  := sorry --non-trivial
lemma new_lemma_155634 (h0 : uniform_space (normed_group (has_top unsigned))) : separated_space (normed_group (has_top unsigned)) := sorry --non-trivial
lemma new_lemma_155635 (h0 : functor.add_const Prop (ring (option (has_to_string (option unsigned))))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_155636 (h0 : complete_lattice (has_add ennreal)) : is_compactly_generated (has_add ennreal) := sorry --non-trivial
lemma new_lemma_155637 (h0 : prod (monoid unsigned) (monoid unsigned)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_155638 (h0 : name -> name -> Prop) (h1 : set name) : is_antichain h0 h1 := sorry --non-trivial
lemma new_lemma_155639 (h0 : functor.add_const (function.extfun Type uniform_space) num) : @separated_space.{0} (finset.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) num h0) (finset.{0} empty))  := sorry --non-trivial
lemma new_lemma_155640 (h0 : list (dlist (has_ssubset (has_ssubset fun_info)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155641 (h0 : uniform_space (random_gen (has_emptyc congr_arg_kind))) : separated_space (random_gen (has_emptyc congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_155642 (h0 : functor.add_const (topological_space (has_zero ennreal)) name) : @preconnected_space.{0} (has_zero.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} ennreal)) name h0)  := sorry --non-trivial
lemma new_lemma_155643 (h0 : not (complete_lattice (with_one linarith.ineq) -> false)) : @is_compactly_generated.{0} (with_one.{0} linarith.ineq) (@classical.by_contradiction'.{1} (complete_lattice.{0} (with_one.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_155644 (h0 : topological_space (complete_semilattice_Sup linarith.ineq)) : path_connected_space (complete_semilattice_Sup linarith.ineq) := sorry --non-trivial
lemma new_lemma_155645 (h2 : complete_lattice (mul_one_class environment.projection_info)) : complete_lattice.is_Sup_finite_compact (mul_one_class environment.projection_info) := sorry --non-trivial
lemma new_lemma_155646 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (semiring.{0} num) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_155647 (h0 : topological_space (has_top empty)) : path_connected_space (has_top empty) := sorry --non-trivial
lemma new_lemma_155648 (h0 : ring (has_ssubset (has_nnnorm linarith.comp_source))) : rank_condition (has_ssubset (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_155649 (h0 : topological_space (ordered_comm_ring (has_Inf (has_Inf pos)))) : t1_space (ordered_comm_ring (has_Inf (has_Inf pos))) := sorry --non-trivial
lemma new_lemma_155650 (h0 : functor.comp add_group mul_zero_class Type) : @is_add_cyclic.{1} (mul_zero_class.{1} Type) (@functor.comp.run.{1 1 1} add_group.{1} mul_zero_class.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_155651 (h0 : add_monoid (ring (has_neg (finset Type)))) : add_monoid.fg (ring (has_neg (finset Type))) := sorry --non-trivial
lemma new_lemma_155652 (h0 : group (boolean_algebra (finset (finset linarith.comp)))) : normalizer_condition (boolean_algebra (finset (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_155653 (h0 : ring (boolean_algebra (has_to_string (has_to_string unsigned)))) : strong_rank_condition (boolean_algebra (has_to_string (has_to_string unsigned))) := sorry --non-trivial
lemma new_lemma_155654 (h0 : function.extfun (Type 1) (functor.add_const (topological_space environment.implicit_infer_kind))) : @preirreducible_space.{0} environment.implicit_infer_kind (@functor.add_const.run.{0 1} (topological_space.{0} environment.implicit_infer_kind) Type (@function.extfun_app.{3 1} (Type 1) (functor.add_const.{0 1} (topological_space.{0} environment.implicit_infer_kind)) h0 Type))  := sorry --non-trivial
lemma new_lemma_155655 (h0 : function.extfun nat fin) : @locally_compact_space.{1} (has_pos_part.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (has_pos_part.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_155656 (h0 : ring (has_add (ring linarith.comp))) : rank_condition (has_add (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_155657 (h0 : not (function.extfun Type topological_space -> false)) : @preirreducible_space.{0} (add_group.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (add_group.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155658 (h0 : function.extfun (finset Type) (has_mem.mem (linear_ordered_semiring linarith.comp))) : @add_monoid.fg.{0} (linear_ordered_semiring.{0} linarith.comp) (@finset.pi.empty.{1 0} Type add_monoid.{0} (linear_ordered_semiring.{0} linarith.comp) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (linear_ordered_semiring.{0} linarith.comp)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_155659 (h0 : complete_lattice (with_one (with_one fun_info))) : complete_lattice.is_Sup_finite_compact (with_one (with_one fun_info)) := sorry --non-trivial
lemma new_lemma_155660 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (has_Inf.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_Inf.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155661 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (finset.{0} linarith.comp) (@function.extfun_app.{2 1} Type ring.{0} h0 (finset.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155662 (h0 : has_mem.mem (metric_space unsigned) has_emptyc.emptyc) : @normal_space.{0} (metric_space.{0} unsigned) (@finset.pi.empty.{1 0} Type topological_space.{0} (metric_space.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_155663 (h0 : complete_lattice (generalized_boolean_algebra (has_add pos))) : complete_lattice.is_Sup_finite_compact (generalized_boolean_algebra (has_add pos)) := sorry --non-trivial
lemma new_lemma_155664 (h0 : topological_space (linear_ordered_semiring (has_top (has_top to_additive.value_type)))) : discrete_topology (linear_ordered_semiring (has_top (has_top to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_155665 (h0 : functor.add_const (function.extfun (Type 1) topological_space) pos) : @t0_space.{1} (has_nndist.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) pos h0) (has_nndist.{1} Type))  := sorry --non-trivial
lemma new_lemma_155666 (h0 : finset (has_inner empty (option unsigned))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_155667 (h0 : list (sub_neg_monoid Type)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155668 (h0 : topological_space (semigroup (comm_group (comm_group pos)))) : loc_path_connected_space (semigroup (comm_group (comm_group pos))) := sorry --non-trivial
lemma new_lemma_155669 (h0 : function.extfun (Type 1) topological_space) : @topological_space.separable_space.{1} (sub_neg_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (sub_neg_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_155670 (h0 : topological_space (add_cancel_monoid environment.implicit_infer_kind)) : irreducible_space (add_cancel_monoid environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_155671 (h0 : topological_space (monoid_with_zero (option (option (ring unsigned))))) : topological_space.separable_space (monoid_with_zero (option (option (ring unsigned)))) := sorry --non-trivial
lemma new_lemma_155672 (h0 : list (ordered_semiring unsigned)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_155673 (h0 : add_group (generalized_boolean_algebra (has_Inf (has_neg real)))) : is_add_cyclic (generalized_boolean_algebra (has_Inf (has_neg real))) := sorry --non-trivial
lemma new_lemma_155674 (h0 : not (list (option congr_arg_kind) -> false)) : list.nodup (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_155675 (h1 : ring (with_one (random_gen string_imp))) : strong_rank_condition (with_one (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_155676 (h0 : group (option congr_arg_kind)) : normalizer_condition (option congr_arg_kind) := sorry --non-trivial
lemma new_lemma_155677 (h0 : ring (encodable (has_nnnorm char))) : rank_condition (encodable (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_155678 (h0 : group (linear_ordered_cancel_comm_monoid (option (option (option unsigned))))) : normalizer_condition (linear_ordered_cancel_comm_monoid (option (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_155679 (h0 : cancel_comm_monoid_with_zero (add_comm_monoid name)) : unique_factorization_monoid (add_comm_monoid name) := sorry --non-trivial
lemma new_lemma_155680 (h0 : uniform_space (semiring empty)) (h1 : function.extfun Type group) : @uniform_group.{0} (semiring.{0} empty) h0 (@function.extfun_app.{2 1} Type group.{0} h1 (semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_155681 (h0 : group (has_zero (has_to_string pos))) : normalizer_condition (has_zero (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_155682 (h0 : functor.add_const (add_group (complete_distrib_lattice unsigned)) unsigned) : @is_add_cyclic.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 0} (add_group.{0} (complete_distrib_lattice.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_155683 (h0 : ring (ordered_ring (semiring num))) : rank_condition (ordered_ring (semiring num)) := sorry --non-trivial
lemma new_lemma_155684 (h0 : fin has_zero.zero) : @Lim.{0} Prop sierpinski_space (@nonempty_of_inhabited.{1} Prop sort.inhabited.{0}) (@matrix.vec_empty.{0} (filter.{0} Prop) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)))  := sorry --non-trivial
lemma new_lemma_155685 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_155686 (h0 : topological_space (boolean_algebra (has_Inf (sub_neg_monoid pos)))) : totally_disconnected_space (boolean_algebra (has_Inf (sub_neg_monoid pos))) := sorry --non-trivial
lemma new_lemma_155687 (h1 : topological_space (normed_field linarith.ineq)) : path_connected_space (normed_field linarith.ineq) := sorry --non-trivial
lemma new_lemma_155688 (h0 : uniform_space (topological_space (has_nnnorm (comm_ring linarith.ineq)))) : complete_space (topological_space (has_nnnorm (comm_ring linarith.ineq))) := sorry --non-trivial
lemma new_lemma_155689 (h0 : topological_space (add_cancel_monoid (option (option (option empty))))) : irreducible_space (add_cancel_monoid (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_155690 (h0 : not (filter (has_union num) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_155691 (h0 : list (with_bot (random_gen (random_gen (random_gen (random_gen (random_gen linarith.ineq))))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155692 (h0 : functor.add_const (semiring (normed_comm_ring Type)) (ring environment.implicit_infer_kind)) : @is_noetherian_ring.{1} (normed_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (semiring.{1} (normed_comm_ring.{1} Type)) (ring.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_155693 (h0 : ring (boolean_algebra.core (finset (has_add (finset name))))) : strong_rank_condition (boolean_algebra.core (finset (has_add (finset name)))) := sorry --non-trivial
lemma new_lemma_155694 (h0 : add_group (canonically_ordered_monoid (sub_neg_monoid Type))) : is_add_cyclic (canonically_ordered_monoid (sub_neg_monoid Type)) := sorry --non-trivial
lemma new_lemma_155695 (h0 : not (function.extfun Type monoid -> false)) : @monoid.fg.{0} (with_one.{0} num) (@function.extfun_app.{2 1} Type monoid.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type monoid.{0}) h0) (with_one.{0} num))  := sorry --non-trivial
lemma new_lemma_155696 (h0 : functor.add_const (group (cancel_monoid name)) environment.implicit_infer_kind) : @is_cyclic.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (group.{0} (cancel_monoid.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_155697 (h0 : function.extfun Type ring) : @rank_condition.{0} (random_gen.{0} num) (@function.extfun_app.{2 1} Type ring.{0} h0 (random_gen.{0} num))  := sorry --non-trivial
lemma new_lemma_155698 (h0 : not (topological_space (linear_ordered_add_comm_group char) -> false)) : @path_connected_space.{0} (linear_ordered_add_comm_group.{0} char) (@classical.by_contradiction'.{1} (topological_space.{0} (linear_ordered_add_comm_group.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_155699 (h0 : topological_space (complete_distrib_lattice (has_add real))) : irreducible_space (complete_distrib_lattice (has_add real)) := sorry --non-trivial
lemma new_lemma_155700 (h0 : add_group (ordered_comm_ring (ordered_ring (has_neg (has_nndist pos))))) : is_add_cyclic (ordered_comm_ring (ordered_ring (has_neg (has_nndist pos)))) := sorry --non-trivial
lemma new_lemma_155701 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (has_edist.{0} (semiring.{0} empty)) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_edist.{0} (semiring.{0} empty)))  := sorry --non-trivial
lemma new_lemma_155702 (h0 : topological_space (has_top linarith.ineq)) : totally_separated_space (has_top linarith.ineq) := sorry --non-trivial
lemma new_lemma_155703 (h0 : function.extfun nat fin) : @complete_lattice.is_Sup_finite_compact.{1} (normed_lattice_add_comm_group.{1} Type) (@matrix.vec_empty.{1} (complete_lattice.{1} (normed_lattice_add_comm_group.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_155704 (h0 : complete_lattice (rel to_additive.value_type linarith.comp_source)) : is_compactly_generated (rel to_additive.value_type linarith.comp_source) := sorry --non-trivial
lemma new_lemma_155705 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (complete_distrib_lattice.{0} (option.{0} ennreal)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_distrib_lattice.{0} (option.{0} ennreal)))  := sorry --non-trivial
lemma new_lemma_155706 (h0 : list (has_norm fun_info)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155707 (h0 : ring (left_cancel_semigroup congr_arg_kind)) : is_domain (left_cancel_semigroup congr_arg_kind) := sorry --non-trivial
lemma new_lemma_155708 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (normed_group.{0} (has_top.{0} fun_info)) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (normed_group.{0} (has_top.{0} fun_info)))  := sorry --non-trivial
lemma new_lemma_155709 (h0 : not (topological_space (uniform_space string_imp) -> false)) : @totally_disconnected_space.{0} (uniform_space.{0} string_imp) (@classical.by_contradiction'.{1} (topological_space.{0} (uniform_space.{0} string_imp)) h0)  := sorry --non-trivial
lemma new_lemma_155710 (h0 : functor.add_const (finset ennreal) unsigned) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_155711 (h0 : complete_lattice (ring congr_arg_kind)) : is_atomistic (ring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_155712 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_emptyc.{0} string_imp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_emptyc.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_155713 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (add_right_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_right_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_155714 (h0 : topological_space (sub_neg_monoid name)) : sequential_space (sub_neg_monoid name) := sorry --non-trivial
lemma new_lemma_155715 (h0 : functor.add_const (function.extfun Type topological_space) environment.implicit_infer_kind) : @loc_path_connected_space.{0} (comm_group.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) environment.implicit_infer_kind h0) (comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_155716 (h0 : complete_lattice (distrib (mul_one_class linarith.ineq))) : is_compactly_generated (distrib (mul_one_class linarith.ineq)) := sorry --non-trivial
lemma new_lemma_155717 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_norm.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_norm.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_155718 (h0 : function.extfun Type (functor.add_const (function.extfun Type ordered_comm_monoid))) : @has_exists_mul_of_le.{0} (comm_group.{0} pos) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) pos (@function.extfun_app.{2 2} Type (functor.add_const.{1 0} (function.extfun.{2 1} Type ordered_comm_monoid.{0})) h0 pos)) (comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_155719 (h0 : not (topological_space (has_ssubset linarith.ineq) -> false)) (h1 : not (preorder (has_ssubset linarith.ineq) -> false)) : @order_topology.{0} (has_ssubset.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (has_ssubset.{0} linarith.ineq)) h0) (@classical.by_contradiction'.{1} (preorder.{0} (has_ssubset.{0} linarith.ineq)) h1)  := sorry --non-trivial
lemma new_lemma_155720 (h0 : topological_space (mul_zero_class unsigned)) (h1 : functor.add_const (preorder (mul_zero_class unsigned)) congr_arg_kind) : @order_topology.{0} (mul_zero_class.{0} unsigned) h0 (@functor.add_const.run.{0 0} (preorder.{0} (mul_zero_class.{0} unsigned)) congr_arg_kind h1)  := sorry --non-trivial
lemma new_lemma_155721 (h0 : functor.add_const (group (boolean_algebra environment.implicit_infer_kind)) Type) : @group.fg.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (group.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_155722 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @totally_disconnected_space.{0} string_imp (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) string_imp)  := sorry --non-trivial
lemma new_lemma_155723 (h0 : ring (add_comm_monoid empty)) : is_domain (add_comm_monoid empty) := sorry --non-trivial
lemma new_lemma_155724 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (with_one.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_one.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_155725 (h0 : semiring (has_add (has_Inf (has_Inf name)))) : is_noetherian_ring (has_add (has_Inf (has_Inf name))) := sorry --non-trivial
lemma new_lemma_155726 (h0 : topological_space (semi_normed_ring (monoid_with_zero linarith.ineq))) (h1 : preorder (semi_normed_ring (monoid_with_zero linarith.ineq))) : order_closed_topology (semi_normed_ring (monoid_with_zero linarith.ineq)) := sorry --non-trivial
lemma new_lemma_155727 (h0 : uniform_space (add_right_cancel_monoid (semiring (semiring (semiring empty))))) : complete_space (add_right_cancel_monoid (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_155728 (h0 : topological_space (semi_normed_comm_ring (comm_ring (random_gen (random_gen (comm_ring char)))))) : t0_space (semi_normed_comm_ring (comm_ring (random_gen (random_gen (comm_ring char))))) := sorry --non-trivial
lemma new_lemma_155729 (h0 : topological_space (has_edist (option unsigned))) : discrete_topology (has_edist (option unsigned)) := sorry --non-trivial
lemma new_lemma_155730 (h0 : ring (complete_distrib_lattice unsigned)) : strong_rank_condition (complete_distrib_lattice unsigned) := sorry --non-trivial
lemma new_lemma_155731 (h0 : monoid (has_norm (linear_ordered_semiring (id (id linarith.comp))))) : monoid.fg (has_norm (linear_ordered_semiring (id (id linarith.comp)))) := sorry --non-trivial
lemma new_lemma_155732 (h0 : functor.add_const (topological_space (add_cancel_monoid Type)) ennreal) : @loc_path_connected_space.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (add_cancel_monoid.{1} Type)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_155733 (h0 : cancel_comm_monoid_with_zero (has_zero num)) : unique_factorization_monoid (has_zero num) := sorry --non-trivial
lemma new_lemma_155734 (h0 : function.extfun Type (functor.add_const (topological_space (complete_distrib_lattice pos)))) : @totally_separated_space.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} pos)) linarith.comp (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} pos))) h0 linarith.comp))  := sorry --non-trivial
lemma new_lemma_155735 (h0 : ring (comm_ring (metric_space to_additive.value_type))) : is_domain (comm_ring (metric_space to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_155736 (h0 : functor.add_const (topological_space (comm_group pos)) (boolean_algebra linarith.comp)) : @normal_space.{0} (comm_group.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} pos)) (boolean_algebra.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_155737 (h2 h3 : multiset (uniform_space string.iterator_imp)) : multiset.disjoint h2 h3 := sorry --non-trivial
lemma new_lemma_155738 (h0 : ring (add_comm_monoid (option (option (option (option (option (option ennreal)))))))) : is_domain (add_comm_monoid (option (option (option (option (option (option ennreal))))))) := sorry --non-trivial
lemma new_lemma_155739 (h0 : topological_space (cancel_monoid (comm_group pos))) : normal_space (cancel_monoid (comm_group pos)) := sorry --non-trivial
lemma new_lemma_155740 (h0 : functor.add_const (complete_lattice (pseudo_metric_space unsigned)) empty) : @is_atomistic.{0} (pseudo_metric_space.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (pseudo_metric_space.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_155741 (h3 : ring (with_one fun_info)) : rank_condition (with_one fun_info) := sorry --non-trivial
lemma new_lemma_155742 (h0 : group (ring ennreal)) : normalizer_condition (ring ennreal) := sorry --non-trivial
lemma new_lemma_155743 (h0 : list (ordered_ring (option empty))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155744 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring unsigned)) ennreal) : @sequential_space.{0} (canonically_ordered_comm_semiring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_comm_semiring.{0} unsigned)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_155745 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (@id.{2} Type congr_arg_kind) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (@id.{2} Type congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_155746 (h0 : complete_lattice (with_one (denumerable fun_info))) : complete_lattice.is_Sup_finite_compact (with_one (denumerable fun_info)) := sorry --non-trivial
lemma new_lemma_155747 (h0 : functor.add_const (topological_space (finset Type)) name) : @loc_path_connected_space.{1} (finset.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (finset.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_155748 (h0 : complete_lattice (distrib (has_nnnorm enat))) : is_compactly_generated (distrib (has_nnnorm enat)) := sorry --non-trivial
lemma new_lemma_155749 (h0 : functor.add_const (topological_space (measurable_space.dynkin_system congr_arg_kind)) num) : @locally_compact_space.{0} (measurable_space.dynkin_system.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (measurable_space.dynkin_system.{0} congr_arg_kind)) num h0)  := sorry --non-trivial
lemma new_lemma_155750 (h0 : functor.add_const (ordered_add_comm_monoid (finset unsigned)) pos) : @archimedean.{0} (finset.{0} unsigned) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (finset.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_155751 (h0 : not (uniform_space (add_group empty) -> false)) : @separated_space.{0} (add_group.{0} empty) (@classical.by_contradiction'.{1} (uniform_space.{0} (add_group.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_155752 (h0 : uniform_space (id (semiring (semiring unsigned)))) : separated_space (id (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_155753 (h0 : topological_space (distrib_lattice (random_gen (has_norm to_additive.value_type)))) : locally_compact_space (distrib_lattice (random_gen (has_norm to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_155754 (h0 : topological_space (boolean_algebra.core (has_add (has_nndist (ordered_comm_ring linarith.comp))))) : preconnected_space (boolean_algebra.core (has_add (has_nndist (ordered_comm_ring linarith.comp)))) := sorry --non-trivial
lemma new_lemma_155755 (h0 : uniform_space (uniform_space (mul_one_class reducibility_hints))) : complete_space (uniform_space (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_155756 (h1 : function.extfun Type topological_space) : @irreducible_space.{0} (has_inv.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (has_inv.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_155757 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (add_cancel_monoid.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (add_cancel_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_155758 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_155759 (h0 : functor.add_const (ordered_comm_monoid (boolean_algebra Type)) pos) : @has_exists_mul_of_le.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (ordered_comm_monoid.{1} (boolean_algebra.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_155760 (h0 : topological_space (simple_graph string_imp)) : totally_disconnected_space (simple_graph string_imp) := sorry --non-trivial
lemma new_lemma_155761 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (ordered_comm_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (ordered_comm_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_155762 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @irreducible_space.{0} string_imp (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 topological_space.{0}) string_imp)  := sorry --non-trivial
lemma new_lemma_155763 (h0 : uniform_space (has_div string.iterator_imp)) : complete_space (has_div string.iterator_imp) := sorry --non-trivial
lemma new_lemma_155764 (h0 : uniform_space (has_union (semiring (has_top congr_arg_kind)))) : separated_space (has_union (semiring (has_top congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_155765 (h0 : monoid (has_add (has_neg (has_neg (finset Type))))) : monoid.fg (has_add (has_neg (has_neg (finset Type)))) := sorry --non-trivial
lemma new_lemma_155766 (h0 : not (complete_lattice (linear_ordered_add_comm_group char) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (linear_ordered_add_comm_group.{0} char) (@classical.by_contradiction'.{1} (complete_lattice.{0} (linear_ordered_add_comm_group.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_155767 (h0 : ring (sub_neg_monoid (has_Inf Type))) : is_principal_ideal_ring (sub_neg_monoid (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_155768 (h0 : prod (measure_theory.measure_space (semiring empty)) (measure_theory.measure_space (semiring empty))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_155769 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (has_Sup.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_Sup.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_155770 (h0 : list (random_gen (random_gen linarith.ineq))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155771 (h1 : semiring char) (h3 : ideal char) : ideal.is_prime h3 := sorry --non-trivial
lemma new_lemma_155772 (h0 : cancel_comm_monoid_with_zero (with_bot num)) : unique_factorization_monoid (with_bot num) := sorry --non-trivial
lemma new_lemma_155773 (h0 : list (has_Inf (generalized_boolean_algebra (has_Inf (has_Inf pos))))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_155774 (h0 : topological_space (linear_ordered_semiring (semiring (semiring num)))) : t0_space (linear_ordered_semiring (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_155775 (h0 : add_group (has_nnnorm (mul_one_class (mul_one_class to_additive.value_type)))) : is_add_cyclic (has_nnnorm (mul_one_class (mul_one_class to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_155776 (h0 : complete_lattice (uniform_space (option pos))) : is_compactly_generated (uniform_space (option pos)) := sorry --non-trivial
lemma new_lemma_155777 (h0 : cancel_comm_monoid_with_zero (has_neg_part (add_cancel_monoid name))) : unique_factorization_monoid (has_neg_part (add_cancel_monoid name)) := sorry --non-trivial
lemma new_lemma_155778 (h0 : topological_space (ordered_comm_ring empty)) : totally_disconnected_space (ordered_comm_ring empty) := sorry --non-trivial
lemma new_lemma_155779 (h0 : ordered_comm_monoid (has_to_string (has_add unsigned))) : has_exists_mul_of_le (has_to_string (has_add unsigned)) := sorry --non-trivial
lemma new_lemma_155780 (h0 : fin has_zero.zero) : @archimedean.{0} (canonically_ordered_monoid.{0} real) (@matrix.vec_empty.{0} (ordered_add_comm_monoid.{0} (canonically_ordered_monoid.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_155781 (h0 : monoid_with_zero std_gen) (h1 : has_zero ereal) : infinite (has_involutive_star (mul_action_with_zero std_gen ereal)) := sorry --non-trivial
lemma new_lemma_155782 (h0 : topological_space (boolean_algebra (has_add name))) : normal_space (boolean_algebra (has_add name)) := sorry --non-trivial
lemma new_lemma_155783 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (with_bot.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (with_bot.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_155784 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring name)) environment.implicit_infer_kind) : @loc_path_connected_space.{0} (canonically_ordered_comm_semiring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_comm_semiring.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_155785 (h0 : group (complete_distrib_lattice name)) : group.fg (complete_distrib_lattice name) := sorry --non-trivial
lemma new_lemma_155786 (h0 : has_lt (has_nnnorm (mul_one_class char))) : no_max_order (has_nnnorm (mul_one_class char)) := sorry --non-trivial
lemma new_lemma_155787 (h0 : group (has_bot (has_add (has_add Type)))) : is_simple_group (has_bot (has_add (has_add Type))) := sorry --non-trivial
lemma new_lemma_155788 (h0 : filter (simple_graph (has_add (ring (ring (has_Inf Type)))))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_155789 (h1 : not (complete_lattice (semi_normed_comm_ring string_imp) -> false)) : @is_compactly_generated.{0} (semi_normed_comm_ring.{0} string_imp) (@classical.by_contradiction'.{1} (complete_lattice.{0} (semi_normed_comm_ring.{0} string_imp)) h1)  := sorry --non-trivial
lemma new_lemma_155790 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (ordered_comm_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (ordered_comm_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_155791 (h1 : topological_space (has_norm congr_arg_kind)) : discrete_topology (has_norm congr_arg_kind) := sorry --non-trivial
lemma new_lemma_155792 (h0 : rel char enat) (h1 : set char) (h2 : enat) : rel.image h0 h1 h2 := sorry --non-trivial
lemma new_lemma_155793 (h0 : not (ring (has_add linarith.ineq) -> false)) : @is_domain.{0} (has_add.{0} linarith.ineq) (@classical.by_contradiction'.{1} (ring.{0} (has_add.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_155794 (h0 h1 : multiset (has_div enat)) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_155795 (h0 : topological_space (group_with_zero (option (option ennreal)))) : normal_space (group_with_zero (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_155796 (h0 : filter (monoid unsigned)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_155797 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (linear_ordered_semiring.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (linear_ordered_semiring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155798 (h0 : topological_space (comm_monoid empty)) : totally_disconnected_space (comm_monoid empty) := sorry --non-trivial
lemma new_lemma_155799 (h0 : topological_space (semiring (semiring empty))) : irreducible_space (semiring (semiring empty)) := sorry --non-trivial
lemma new_lemma_155800 (h0 : function.extfun Type group) : @normalizer_condition.{0} (finset.{0} ennreal) (@function.extfun_app.{2 1} Type group.{0} h0 (finset.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_155801 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (random_gen.{0} (random_gen.{0} linarith.comp_source)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (random_gen.{0} (random_gen.{0} linarith.comp_source)))  := sorry --non-trivial
lemma new_lemma_155802 (h0 : ordered_add_comm_monoid (has_pos_part (has_Inf (has_add Type)))) : archimedean (has_pos_part (has_Inf (has_add Type))) := sorry --non-trivial
lemma new_lemma_155803 (h0 : topological_space (has_top (metric_space empty))) : irreducible_space (has_top (metric_space empty)) := sorry --non-trivial
lemma new_lemma_155804 (h0 : functor.add_const (semiring (has_pos_part pos)) (generalized_boolean_algebra pos)) : @is_noetherian_ring.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 0} (semiring.{0} (has_pos_part.{0} pos)) (generalized_boolean_algebra.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_155805 (h1 : set (has_zero string.iterator_imp)) : set.finite h1 := sorry --non-trivial
lemma new_lemma_155806 (h0 : functor.add_const (semiring (has_star empty)) congr_arg_kind) : @is_noetherian_ring.{0} (has_star.{0} empty) (@functor.add_const.run.{0 0} (semiring.{0} (has_star.{0} empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_155807 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t1_space.{0} (has_to_string.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_to_string.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_155808 (h0 : ring (comm_group (has_to_string unsigned))) : is_principal_ideal_ring (comm_group (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_155809 (h0 : list (add_comm_monoid environment.implicit_infer_kind)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155810 (h0 : measurable_space (linear_ordered_comm_group_with_zero ereal)) (h1 : filter (linear_ordered_comm_group_with_zero ereal)) : filter.is_measurably_generated h1 := sorry --non-trivial
lemma new_lemma_155811 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @normal_space.{0} (linear_ordered_semiring.{0} (has_top.{0} (semiring.{0} (semiring.{0} (semiring.{0} empty))))) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) topological_space.{0}) (linear_ordered_semiring.{0} (has_top.{0} (semiring.{0} (semiring.{0} (semiring.{0} empty))))))  := sorry --non-trivial
lemma new_lemma_155812 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : palindrome (function.extfun_app (function.extfun_app h0 list) (left_cancel_monoid num)) := sorry --non-trivial
lemma new_lemma_155813 (h1 : set (has_compl char)) : set.finite h1 := sorry --non-trivial
lemma new_lemma_155814 (h0 : semiring (measurable_space.dynkin_system (semiring num))) : is_noetherian_ring (measurable_space.dynkin_system (semiring num)) := sorry --non-trivial
lemma new_lemma_155815 (h0 : functor.comp topological_space has_to_string name) : @locally_compact_space.{0} (has_to_string.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_to_string.{0} name h0)  := sorry --non-trivial
lemma new_lemma_155816 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type semiring.{0} h0 (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155817 (h0 : functor.add_const (topological_space (has_neg_part pos)) unsigned) : @preconnected_space.{0} (has_neg_part.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} pos)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_155818 (h0 : uniform_space fun_info) (h1 : set fun_info) : totally_bounded h1 := sorry --non-trivial
lemma new_lemma_155819 (h0 : list (has_zero (cancel_monoid environment.implicit_infer_kind))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155820 (h0 : add_group (generalized_boolean_algebra (has_nndist (has_add pos)))) : is_add_cyclic (generalized_boolean_algebra (has_nndist (has_add pos))) := sorry --non-trivial
lemma new_lemma_155821 (h0 : uniform_space (canonically_ordered_monoid (has_add (ordered_comm_ring real)))) : complete_space (canonically_ordered_monoid (has_add (ordered_comm_ring real))) := sorry --non-trivial
lemma new_lemma_155822 (h0 : functor.add_const (topological_space auto.case_option) unsigned) : @topological_space.separable_space.{0} auto.case_option (@functor.add_const.run.{0 0} (topological_space.{0} auto.case_option) unsigned h0)  := sorry --non-trivial
lemma new_lemma_155823 (h1 : topological_space (has_compl std_gen)) : path_connected_space (has_compl std_gen) := sorry --non-trivial
lemma new_lemma_155824 (h0 : semiring (ring (has_Inf (has_add Type)))) : is_noetherian_ring (ring (has_Inf (has_add Type))) := sorry --non-trivial
lemma new_lemma_155825 (h0 : ring (with_zero (random_gen linarith.ineq))) : rank_condition (with_zero (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_155826 (h0 : not (topological_space (random_gen linarith.ineq) -> false)) : @locally_compact_space.{0} (random_gen.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (random_gen.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_155827 (h0 : function.extfun Type (functor.add_const Prop)) : functor.add_const.run (function.extfun_app h0 (normed_comm_ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_155828 (h0 : topological_space (id (has_norm fun_info))) : locally_compact_space (id (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_155829 (h0 : topological_space (has_add name)) : path_connected_space (has_add name) := sorry --non-trivial
lemma new_lemma_155830 (h0 : uniform_space (has_pos_part (ordered_comm_monoid (has_Inf pos)))) : separated_space (has_pos_part (ordered_comm_monoid (has_Inf pos))) := sorry --non-trivial
lemma new_lemma_155831 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (add_cancel_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_cancel_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_155832 (h0 : uniform_space (monoid pos)) : complete_space (monoid pos) := sorry --non-trivial
lemma new_lemma_155833 (h0 : functor.add_const (topological_space (boolean_algebra environment.implicit_infer_kind)) (boolean_algebra Type)) : @preconnected_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) (boolean_algebra.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_155834 (h0 : group (has_zero Type)) : normalizer_condition (has_zero Type) := sorry --non-trivial
lemma new_lemma_155835 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_155836 (h0 : fin has_zero.zero) : @totally_separated_space.{0} (sub_neg_monoid.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (sub_neg_monoid.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_155837 (h0 : monoid (has_ssubset fun_info)) : monoid.fg (has_ssubset fun_info) := sorry --non-trivial
lemma new_lemma_155838 (h0 : function.extfun Type (functor.add_const (topological_space (mv_power_series empty num)))) : @totally_separated_space.{0} (mv_power_series.{0 0} empty num) (@functor.add_const.run.{0 0} (topological_space.{0} (mv_power_series.{0 0} empty num)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (mv_power_series.{0 0} empty num))) h0 empty))  := sorry --non-trivial
lemma new_lemma_155839 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @is_cyclic.{1} (comm_group.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 group.{1}) (comm_group.{1} Type))  := sorry --non-trivial
lemma new_lemma_155840 (h2 : topological_space congr_arg_kind) : path_connected_space congr_arg_kind := sorry --non-trivial
lemma new_lemma_155841 (h0 : filter (normed_group (semiring linarith.comp))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_155842 (h0 : ring (canonically_ordered_comm_semiring (finset (finset (has_nndist Type))))) : rank_condition (canonically_ordered_comm_semiring (finset (finset (has_nndist Type)))) := sorry --non-trivial
lemma new_lemma_155843 (h0 : group (ordered_comm_group (option unsigned))) : is_cyclic (ordered_comm_group (option unsigned)) := sorry --non-trivial
lemma new_lemma_155844 (h0 : functor.add_const (cancel_comm_monoid_with_zero (add_cancel_monoid name)) pos) : @unique_factorization_monoid.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (add_cancel_monoid.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_155845 (h0 : complete_lattice (linear_ordered_semiring (has_norm (has_norm congr_arg_kind)))) : is_atomistic (linear_ordered_semiring (has_norm (has_norm congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_155846 (h0 : not (uniform_space (random_gen (mul_one_class (mul_one_class linarith.ineq))) -> false)) : @complete_space.{0} (random_gen.{0} (mul_one_class.{0} (mul_one_class.{0} linarith.ineq))) (@classical.by_contradiction'.{1} (uniform_space.{0} (random_gen.{0} (mul_one_class.{0} (mul_one_class.{0} linarith.ineq)))) h0)  := sorry --non-trivial
lemma new_lemma_155847 (h0 : topological_space (has_sub congr_arg_kind)) : totally_separated_space (has_sub congr_arg_kind) := sorry --non-trivial
lemma new_lemma_155848 (h0 : group (pseudo_metric_space (option (option ennreal)))) : group.fg (pseudo_metric_space (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_155849 (h0 : add_group (has_Inf (has_pos_part Type))) : is_add_cyclic (has_Inf (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_155850 (h0 : function.extfun (finset Type) (has_mem.mem (has_emptyc linarith.comp_source))) : @group.fg.{0} (has_emptyc.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type group.{0} (has_emptyc.{0} linarith.comp_source) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_emptyc.{0} linarith.comp_source)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_155851 (h0 : function.extfun Type (functor.add_const (uniform_space (has_star empty)))) : @separated_space.{0} (has_star.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_star.{0} empty)) (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (normed_linear_ordered_group.{0} unsigned))))) (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (uniform_space.{0} (has_star.{0} empty))) h0 (semiring.{0} (semiring.{0} (semiring.{0} (semiring.{0} (normed_linear_ordered_group.{0} unsigned)))))))  := sorry --non-trivial
lemma new_lemma_155852 (h0 : topological_space (simple_graph unsigned)) : locally_compact_space (simple_graph unsigned) := sorry --non-trivial
lemma new_lemma_155853 (h1 : set (linear_ordered_comm_group_with_zero linarith.comp_source)) : set.subsingleton h1 := sorry --non-trivial
lemma new_lemma_155854 (h0 : group (semiring (semiring unsigned))) : normalizer_condition (semiring (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_155855 (h0 : ring (linear_ordered_add_comm_group (has_union char))) : is_domain (linear_ordered_add_comm_group (has_union char)) := sorry --non-trivial
lemma new_lemma_155856 (h0 : topological_space (has_pos_part (has_pos_part Type))) : regular_space (has_pos_part (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_155857 (h0 : functor.add_const (monoid (has_edist unsigned)) empty) : @monoid.fg.{0} (has_edist.{0} unsigned) (@functor.add_const.run.{0 0} (monoid.{0} (has_edist.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_155858 (h0 : complete_lattice (has_to_string name)) : is_atomistic (has_to_string name) := sorry --non-trivial
lemma new_lemma_155859 (h0 : complete_lattice (id string_imp)) : is_atomistic (id string_imp) := sorry --non-trivial
lemma new_lemma_155860 (h0 : complete_lattice (measurable_space (has_nnnorm (random_gen fun_info)))) : is_compactly_generated (measurable_space (has_nnnorm (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_155861 (h0 : filter (has_top (has_norm linarith.comp))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_155862 (h0 : not (topological_space (complete_semilattice_Sup unsigned) -> false)) : @totally_separated_space.{0} (complete_semilattice_Sup.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (complete_semilattice_Sup.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_155863 (h0 : monoid (has_pos_part pos)) : monoid.fg (has_pos_part pos) := sorry --non-trivial
lemma new_lemma_155864 (h0 : topological_space (with_one (has_norm linarith.comp))) : totally_separated_space (with_one (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_155865 (h0 : function.extfun (Type 1) filter) : filter.ne_bot (function.extfun_app h0 (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_155866 (h0 : list (has_nnnorm (random_gen to_additive.value_type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_155867 (h0 : ring (complete_distrib_lattice (has_add (has_neg_part Type)))) : rank_condition (complete_distrib_lattice (has_add (has_neg_part Type))) := sorry --non-trivial
lemma new_lemma_155868 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (complete_linear_order.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (complete_linear_order.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_155869 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (non_assoc_semiring.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (non_assoc_semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_155870 (h0 : functor.add_const (function.extfun Type filter) environment.implicit_infer_kind) : filter.ne_bot (function.extfun_app (functor.add_const.run h0) (has_neg pos)) := sorry --non-trivial
lemma new_lemma_155871 (h0 : functor.comp group comm_group name) : @normalizer_condition.{0} (comm_group.{0} name) (@functor.comp.run.{0 0 0} group.{0} comm_group.{0} name h0)  := sorry --non-trivial
lemma new_lemma_155872 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : id_rel (function.extfun_app (function.extfun_app h0 (prod ennreal)) ennreal) := sorry --non-trivial
lemma new_lemma_155873 (h0 : group (has_neg_part (finset name))) : group.fg (has_neg_part (finset name)) := sorry --non-trivial
lemma new_lemma_155874 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @sequential_space.{0} (add_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_155875 (h0 : functor.add_const (filter (boolean_algebra name)) name) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_155876 (h0 : topological_space (distrib_lattice fun_info)) : totally_disconnected_space (distrib_lattice fun_info) := sorry --non-trivial
lemma new_lemma_155877 (h1 : group (has_append to_additive.value_type)) : is_cyclic (has_append to_additive.value_type) := sorry --non-trivial
lemma new_lemma_155878 (h0 : ordered_add_comm_monoid (has_neg (measurable_space linarith.comp))) : archimedean (has_neg (measurable_space linarith.comp)) := sorry --non-trivial
lemma new_lemma_155879 (h0 : add_group (distrib_lattice string_imp)) : is_add_cyclic (distrib_lattice string_imp) := sorry --non-trivial
lemma new_lemma_155880 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @discrete_topology.{0} (random_gen.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (random_gen.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_155881 (h0 : functor.add_const (function.extfun Type ring) linarith.comp) : @strong_rank_condition.{0} (semigroup.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) linarith.comp h0) (semigroup.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_155882 (h0 : not (topological_space (semi_normed_ring linarith.comp_source) -> false)) : @t0_space.{0} (semi_normed_ring.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (semi_normed_ring.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_155883 (h0 : ring (finset (comm_monoid unsigned))) : is_principal_ideal_ring (finset (comm_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_155884 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_155885 (h0 : topological_space (generalized_boolean_algebra (has_add pos))) : preirreducible_space (generalized_boolean_algebra (has_add pos)) := sorry --non-trivial
lemma new_lemma_155886 (h0 : ring (measurable_space (random_gen (random_gen to_additive.value_type)))) : rank_condition (measurable_space (random_gen (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_155887 (h0 : functor.add_const (topological_space (semigroup environment.implicit_infer_kind)) linarith.comp) : @sequential_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_155888 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (has_neg_part.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_neg_part.{0} name))  := sorry --non-trivial
lemma new_lemma_155889 (h0 : topological_space (cancel_monoid (boolean_algebra name))) : normal_space (cancel_monoid (boolean_algebra name)) := sorry --non-trivial
lemma new_lemma_155890 (h1 : monoid (id linarith.comp_source)) : monoid.fg (id linarith.comp_source) := sorry --non-trivial
lemma new_lemma_155891 (h0 : functor.add_const (topological_space (comm_semigroup linarith.comp)) pos) : @preirreducible_space.{0} (comm_semigroup.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_semigroup.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_155892 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (monoid.{0} pos) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_155893 (h0 : uniform_space (measurable_space (has_norm linarith.comp))) : separated_space (measurable_space (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_155894 (h4 : not (topological_space (with_one num) -> false)) : @path_connected_space.{0} (with_one.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (with_one.{0} num)) h4)  := sorry --non-trivial
lemma new_lemma_155895 (h0 : not (uniform_space (has_lt char) -> false)) : @complete_space.{0} (has_lt.{0} char) (@classical.by_contradiction'.{1} (uniform_space.{0} (has_lt.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_155896 (h0 : group (ring (has_pos_part (has_add linarith.comp)))) : group.fg (ring (has_pos_part (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_155897 (h0 : function.extfun (Type 1) ring) : @rank_condition.{1} (normed_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} h0 (normed_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_155898 (h0 : topological_space (linear_ordered_comm_group (option (option (option ennreal))))) : totally_separated_space (linear_ordered_comm_group (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_155899 (h0 : filter (complete_distrib_lattice (comm_group Type))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_155900 (h0 : fin has_zero.zero) : @add_monoid.fg.{0} (has_pos_part.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_monoid.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type add_monoid.{0}) h0) (has_pos_part.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155901 (h0 : preorder (add_monoid (has_ssubset linarith.comp_source))) (h1 : topological_space (locally_finite_order (add_monoid (has_ssubset linarith.comp_source)))) : t0_space (locally_finite_order (add_monoid (has_ssubset linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_155902 (h0 : topological_space (normed_field (has_nnnorm linarith.comp_source))) : t0_space (normed_field (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_155903 (h0 : ring (mul_zero_class (finset (option (has_neg_part (option pos)))))) : strong_rank_condition (mul_zero_class (finset (option (has_neg_part (option pos))))) := sorry --non-trivial
lemma new_lemma_155904 (h0 : not (uniform_space (semi_normed_comm_ring reducibility_hints) -> false)) : @complete_space.{0} (semi_normed_comm_ring.{0} reducibility_hints) (@classical.by_contradiction'.{1} (uniform_space.{0} (semi_normed_comm_ring.{0} reducibility_hints)) h0)  := sorry --non-trivial
lemma new_lemma_155905 (h0 : functor.add_const (group (has_pos_part pos)) linarith.comp) : @group.fg.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_pos_part.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_155906 (h0 : not (fin has_zero.zero -> false)) : @t0_space.{0} (add_group.{0} congr_arg_kind) (@matrix.vec_empty.{0} (topological_space.{0} (add_group.{0} congr_arg_kind)) (@classical.by_contradiction'.{1} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_155907 (h0 : functor.add_const (topological_space (boolean_algebra unsigned)) pos) : @topological_space.separable_space.{0} (boolean_algebra.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_155908 (h0 : topological_space (plift (semiring (semiring congr_arg_kind)))) : discrete_topology (plift (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_155909 (h0 : set (mul_one_class (add_comm_semigroup (mul_one_class std_gen)) -> ereal)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_155910 (h0 : function.extfun Type ring) : @is_domain.{0} (random_gen.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (random_gen.{0} empty))  := sorry --non-trivial
lemma new_lemma_155911 (h0 : group (with_zero string_imp)) : is_cyclic (with_zero string_imp) := sorry --non-trivial
lemma new_lemma_155912 (h0 : functor.add_const (function.extfun (Type 1) ring) (has_nndist (has_nndist name))) : @is_domain.{1} (ordered_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) ring.{1}) (has_nndist.{0} (has_nndist.{0} name)) h0) (ordered_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_155913 (h0 : topological_space (normed_field fun_info)) : path_connected_space (normed_field fun_info) := sorry --non-trivial
lemma new_lemma_155914 (h0 : topological_space (has_union (linear_ordered_semiring (random_gen string_imp)))) : totally_disconnected_space (has_union (linear_ordered_semiring (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_155915 (h0 : topological_space (boolean_algebra.core (option pos))) : sequential_space (boolean_algebra.core (option pos)) := sorry --non-trivial
lemma new_lemma_155916 (h0 : topological_space (mul_one_class fun_info)) (h1 : preorder (mul_one_class fun_info)) : order_closed_topology (mul_one_class fun_info) := sorry --non-trivial
lemma new_lemma_155917 (h0 : topological_space (has_nndist num) -> Prop) : @normal_space.{0} (has_nndist.{0} num) (@classical.epsilon.{1} (topological_space.{0} (has_nndist.{0} num)) (@nonempty_of_inhabited.{1} (topological_space.{0} (has_nndist.{0} num)) (@inhabited_topological_space.{0} (has_nndist.{0} num))) h0)  := sorry --non-trivial
lemma new_lemma_155918 (h0 : not (complete_lattice (left_cancel_semigroup congr_arg_kind) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (left_cancel_semigroup.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (complete_lattice.{0} (left_cancel_semigroup.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_155919 (h0 : function.extfun Type (functor.comp topological_space add_comm_monoid)) : @irreducible_space.{0} (add_comm_monoid.{0} unsigned) (@functor.comp.run.{0 0 0} topological_space.{0} add_comm_monoid.{0} unsigned (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} add_comm_monoid.{0}) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_155920 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (has_top.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (has_top.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_155921 (h0 : topological_space (has_zero (has_to_string name))) : totally_separated_space (has_zero (has_to_string name)) := sorry --non-trivial
lemma new_lemma_155922 (h0 : cancel_comm_monoid_with_zero (cancel_monoid (has_to_string pos))) : unique_factorization_monoid (cancel_monoid (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_155923 (h0 : complete_lattice (has_append (random_gen char))) : complete_lattice.is_Sup_finite_compact (has_append (random_gen char)) := sorry --non-trivial
lemma new_lemma_155924 (h0 : ordered_comm_monoid (finset (has_to_string name))) : has_exists_mul_of_le (finset (has_to_string name)) := sorry --non-trivial
lemma new_lemma_155925 (h0 : functor.add_const (topological_space (complete_distrib_lattice unsigned)) unsigned) : @loc_path_connected_space.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_155926 (h0 : functor.add_const (ring (boolean_algebra.core pos)) Type) : @is_principal_ideal_ring.{0} (boolean_algebra.core.{0} pos) (@functor.add_const.run.{0 1} (ring.{0} (boolean_algebra.core.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_155927 (h0 : functor.add_const (list (has_zero Type)) name) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_155928 (h0 : uniform_space (has_neg (option (has_neg ennreal)))) : complete_space (has_neg (option (has_neg ennreal))) := sorry --non-trivial
lemma new_lemma_155929 (h0 : functor.add_const (ordered_add_comm_monoid (boolean_algebra.core empty)) unsigned) : @archimedean.{0} (boolean_algebra.core.{0} empty) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (boolean_algebra.core.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_155930 (h0 : functor.add_const (finset (semigroup unsigned)) unsigned) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_155931 (h0 : functor.add_const (topological_space (ordered_comm_monoid pos)) (has_Inf Type)) : @irreducible_space.{0} (ordered_comm_monoid.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (ordered_comm_monoid.{0} pos)) (has_Inf.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_155932 (h0 : finset (option (semiring (semiring empty)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_155933 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (encodable.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type add_group.{0} h0 (encodable.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_155934 (h0 : ring (comm_group linarith.comp)) : is_domain (comm_group linarith.comp) := sorry --non-trivial
lemma new_lemma_155935 (h0 : add_group (generalized_boolean_algebra real)) : is_add_cyclic (generalized_boolean_algebra real) := sorry --non-trivial
lemma new_lemma_155936 (h0 : complete_lattice (boolean_algebra.core (option empty))) : is_compactly_generated (boolean_algebra.core (option empty)) := sorry --non-trivial
lemma new_lemma_155937 (h0 : function.extfun Type (functor.add_const Prop)) : functor.add_const.run (function.extfun_app h0 (canonically_ordered_comm_semiring name)) := sorry --non-trivial
lemma new_lemma_155938 (h0 : ring (linear_ordered_comm_group_with_zero char)) : is_domain (linear_ordered_comm_group_with_zero char) := sorry --non-trivial
lemma new_lemma_155939 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_155940 (h0 : functor.add_const (monoid (ring pos)) (has_neg linarith.comp)) : @monoid.fg.{0} (ring.{0} pos) (@functor.add_const.run.{0 0} (monoid.{0} (ring.{0} pos)) (has_neg.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_155941 (h1 : function.extfun Type ring) : @rank_condition.{0} linarith.comp_source (@function.extfun_app.{2 1} Type ring.{0} h1 linarith.comp_source)  := sorry --non-trivial
lemma new_lemma_155942 (h0 : complete_lattice (comm_group (comm_group name))) : is_compactly_generated (comm_group (comm_group name)) := sorry --non-trivial
lemma new_lemma_155943 (h0 : not (add_group (linear_ordered_comm_group_with_zero (mul_one_class char)) -> false)) : @is_add_cyclic.{0} (linear_ordered_comm_group_with_zero.{0} (mul_one_class.{0} char)) (@classical.by_contradiction'.{1} (add_group.{0} (linear_ordered_comm_group_with_zero.{0} (mul_one_class.{0} char))) h0)  := sorry --non-trivial
lemma new_lemma_155944 (h0 : function.extfun Type (functor.comp list add_cancel_monoid)) : list.nodup (functor.comp.run (function.extfun_app h0 name)) := sorry --non-trivial
lemma new_lemma_155945 (h0 : function.extfun (Type 1) option) (h1 : monoid (option.get_or_else (function.extfun_app h0 Type) congr_arg_kind)) : monoid.fg (option.get_or_else (function.extfun_app h0 Type) congr_arg_kind) := sorry --non-trivial
lemma new_lemma_155946 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @monoid.fg.{0} (with_one.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) monoid.{0}) (with_one.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_155947 (h0 : group (add_group_with_zero_nhd char)) : is_cyclic (add_group_with_zero_nhd char) := sorry --non-trivial
lemma new_lemma_155948 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (normed_comm_ring.{0} num) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (normed_comm_ring.{0} num))  := sorry --non-trivial
lemma new_lemma_155949 (h0 : group (partial_order (semiring (semiring (semiring unsigned))))) : group.fg (partial_order (semiring (semiring (semiring unsigned)))) := sorry --non-trivial
lemma new_lemma_155950 (h0 : not (group (id congr_arg_kind) -> false)) : @normalizer_condition.{0} (@id.{2} Type congr_arg_kind) (@classical.by_contradiction'.{1} (group.{0} (@id.{2} Type congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_155951 (h0 : topological_space (has_add (normed_comm_ring pos))) : sequential_space (has_add (normed_comm_ring pos)) := sorry --non-trivial
lemma new_lemma_155952 (h0 : uniform_space (encodable (has_nnnorm linarith.ineq))) : complete_space (encodable (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_155953 (h0 : topological_space (ordered_ring (semiring (semiring (semiring empty))))) : t0_space (ordered_ring (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_155954 (h0 : function.extfun Type ring) : @is_domain.{0} (sub_neg_monoid.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} h0 (sub_neg_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_155955 (h0 : fin has_zero.zero) : @complete_lattice.is_Sup_finite_compact.{1} (simple_graph.{1} Type) (@matrix.vec_empty.{1} (complete_lattice.{1} (simple_graph.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_155956 (h0 : functor.add_const (topological_space (simple_graph pos)) Type) : @irreducible_space.{0} (simple_graph.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (simple_graph.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_155957 (h0 : function.extfun Type ring) : @rank_condition.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (boolean_algebra.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_155958 (h0 : not (function.extfun Type topological_space -> false)) : totally_disconnected_space empty := sorry --non-trivial
lemma new_lemma_155959 (h1 : topological_space (denumerable (has_ssubset char))) : t0_space (denumerable (has_ssubset char)) := sorry --non-trivial
lemma new_lemma_155960 (h0 : ring (has_union (semiring unsigned))) : strong_rank_condition (has_union (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_155961 (h1 : semiring (add_comm_semigroup char)) (h2 : ideal (add_comm_semigroup char)) : ideal.is_prime h2 := sorry --non-trivial
lemma new_lemma_155962 (h0 : function.extfun Type ring) : @rank_condition.{0} (linear_ordered_comm_ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_ordered_comm_ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_155963 (h0 : functor.add_const (group (has_neg_part Type)) (has_neg environment.implicit_infer_kind)) : @is_simple_group.{1} (has_neg_part.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (has_neg_part.{1} Type)) (has_neg.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_155964 (h0 : functor.add_const (ordered_add_comm_monoid (has_neg Type)) (has_neg linarith.comp)) : @archimedean.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (ordered_add_comm_monoid.{1} (has_neg.{1} Type)) (has_neg.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_155965 (h0 : not (group (has_top empty) -> false)) : @group.fg.{0} (has_top.{0} empty) (@classical.by_contradiction'.{1} (group.{0} (has_top.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_155966 (h0 : functor.comp complete_lattice mul_zero_class name) : @complete_lattice.is_Sup_finite_compact.{0} (mul_zero_class.{0} name) (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name (@functor.comp.run.{0 0 0} complete_lattice.{0} mul_zero_class.{0} name h0))))))))))))))))))))))))))))))))))  := sorry --non-trivial
lemma new_lemma_155967 (h0 : functor.add_const (topological_space (add_left_cancel_semigroup empty)) empty) : @totally_separated_space.{0} (add_left_cancel_semigroup.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (add_left_cancel_semigroup.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_155968 (h0 : semiring (normed_comm_ring (has_to_string pos))) : is_noetherian_ring (normed_comm_ring (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_155969 (h0 : ordered_add_comm_monoid (finset (has_pos_part linarith.comp))) : archimedean (finset (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_155970 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @sequential_space.{1} (ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_155971 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_bot.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_bot.{0} num))  := sorry --non-trivial
lemma new_lemma_155972 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (comm_semigroup.{0} pos) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (comm_semigroup.{0} pos))  := sorry --non-trivial
lemma new_lemma_155973 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (has_Inf.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_Inf.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_155974 (h0 : topological_space (uniform_space string.iterator_imp)) : t0_space (uniform_space string.iterator_imp) := sorry --non-trivial
lemma new_lemma_155975 (h0 : function.extfun (finset Type -> Prop) (function.extfun (finset Type))) : @path_connected_space.{0} (with_bot.{0} linarith.ineq) (@finset.pi.empty.{1 0} Type topological_space.{0} (with_bot.{0} linarith.ineq) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_bot.{0} linarith.ineq)) (@function.extfun_app.{2 0} (finset.{1} Type → Prop) (function.extfun.{2 0} (finset.{1} Type)) h0 (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_bot.{0} linarith.ineq))) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_155976 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (has_to_string.{0} name) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_to_string.{0} name))  := sorry --non-trivial
lemma new_lemma_155977 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (linear_ordered_comm_monoid_with_zero.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_comm_monoid_with_zero.{0} empty))  := sorry --non-trivial
lemma new_lemma_155978 (h0 : complete_lattice (semigroup pos)) : complete_lattice.is_Sup_finite_compact (semigroup pos) := sorry --non-trivial
lemma new_lemma_155979 (h0 : not (function.extfun Type topological_space -> false)) : @path_connected_space.{0} (has_emptyc.{0} (has_inv.{0} linarith.comp_source)) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_emptyc.{0} (has_inv.{0} linarith.comp_source)))  := sorry --non-trivial
lemma new_lemma_155980 (h0 : group (has_neg_part pos)) : normalizer_condition (has_neg_part pos) := sorry --non-trivial
lemma new_lemma_155981 (h0 : functor.add_const (topological_space (semigroup unsigned)) Type) : @sequential_space.{0} (semigroup.{0} unsigned) (@functor.add_const.run.{0 1} (topological_space.{0} (semigroup.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_155982 (h0 : functor.add_const (function.extfun Type ring) environment.implicit_infer_kind) : @strong_rank_condition.{0} (add_cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) environment.implicit_infer_kind h0) (add_cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_155983 (h0 : topological_space (mul_one_class (normed_field ereal))) : path_connected_space (mul_one_class (normed_field ereal)) := sorry --non-trivial
lemma new_lemma_155984 (h0 : function.extfun Type topological_space) : @regular_space.{0} (mul_zero_class.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (mul_zero_class.{0} num))  := sorry --non-trivial
lemma new_lemma_155985 (h0 : function.extfun Type topological_space) : @t0_space.{0} linarith.comp (@function.extfun_app.{2 1} Type topological_space.{0} h0 linarith.comp)  := sorry --non-trivial
lemma new_lemma_155986 (h0 : group (mul_zero_class name)) : group.fg (mul_zero_class name) := sorry --non-trivial
lemma new_lemma_155987 (h0 : topological_space (ordered_comm_monoid real)) : normal_space (ordered_comm_monoid real) := sorry --non-trivial
lemma new_lemma_155988 (h0 : topological_space (has_Inf (has_Inf (has_pos_part linarith.comp)))) : loc_path_connected_space (has_Inf (has_Inf (has_pos_part linarith.comp))) := sorry --non-trivial
lemma new_lemma_155989 (h0 : topological_space (has_inv (has_top (has_top (has_ssubset (has_ssubset linarith.ineq)))))) : t0_space (has_inv (has_top (has_top (has_ssubset (has_ssubset linarith.ineq))))) := sorry --non-trivial
lemma new_lemma_155990 (h0 : fin has_zero.zero) : @add_monoid.fg.{1} (has_add.{1} Type) (@matrix.vec_empty.{1} (add_monoid.{1} (has_add.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_155991 (h0 : functor.add_const (ordered_add_comm_monoid (sub_neg_monoid pos)) (finset linarith.comp)) : @archimedean.{0} (sub_neg_monoid.{0} pos) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (sub_neg_monoid.{0} pos)) (finset.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_155992 (h0 : functor.add_const (topological_space (ordered_ring empty)) num) : @totally_separated_space.{0} (ordered_ring.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_ring.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_155993 (h0 : ring (normed_group string_imp)) : rank_condition (normed_group string_imp) := sorry --non-trivial
lemma new_lemma_155994 (h0 : topological_space (pseudo_metric_space empty)) : loc_path_connected_space (pseudo_metric_space empty) := sorry --non-trivial
lemma new_lemma_155995 (h0 : filter (option unsigned)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_155996 (h0 : not (topological_space (non_assoc_semiring unsigned) -> false)) : @discrete_topology.{0} (non_assoc_semiring.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (non_assoc_semiring.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_155997 (h0 : add_group (has_div string.iterator_imp)) : is_add_cyclic (has_div string.iterator_imp) := sorry --non-trivial
lemma new_lemma_155998 (h0 : functor.add_const (complete_lattice (left_cancel_monoid empty)) empty) : @is_compactly_generated.{0} (left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (left_cancel_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_155999 (h0 : complete_lattice (linear_ordered_semiring (semiring linarith.comp))) : is_atomistic (linear_ordered_semiring (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_156000 (h0 : functor.add_const (topological_space (cancel_monoid Type)) (has_neg_part name)) : @locally_compact_space.{1} (cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (cancel_monoid.{1} Type)) (has_neg_part.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_156001 (h0 : topological_space (normed_group (has_norm congr_arg_kind))) : locally_compact_space (normed_group (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_156002 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (left_cancel_semigroup.{0} num) (@function.extfun_app.{2 1} Type monoid.{0} h0 (left_cancel_semigroup.{0} num))  := sorry --non-trivial
lemma new_lemma_156003 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (linear_order.{0} (option.{0} (option.{0} (option.{0} (option.{0} (option.{0} empty)))))) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_order.{0} (option.{0} (option.{0} (option.{0} (option.{0} (option.{0} empty)))))))  := sorry --non-trivial
lemma new_lemma_156004 (h0 : functor.add_const (finset (canonically_ordered_add_monoid empty)) (option empty)) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156005 (h0 : functor.add_const (topological_space (finset pos)) linarith.comp) : @locally_compact_space.{0} (finset.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_156006 (h0 : group (with_bot (random_gen (has_inv to_additive.value_type)))) : normalizer_condition (with_bot (random_gen (has_inv to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_156007 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (semigroup.{0} (option.{0} (option.{0} unsigned))) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (semigroup.{0} (option.{0} (option.{0} unsigned))))  := sorry --non-trivial
lemma new_lemma_156008 (h0 : topological_space (random_gen congr_arg_kind)) : t0_space (random_gen congr_arg_kind) := sorry --non-trivial
lemma new_lemma_156009 (h0 : not (ring (measurable_space to_additive.value_type) -> false)) : @strong_rank_condition.{0} (measurable_space.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (measurable_space.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_156010 (h0 : functor.add_const (group (cancel_monoid environment.implicit_infer_kind)) name) : @is_simple_group.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (cancel_monoid.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_156011 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @discrete_topology.{0} (has_top.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (has_top.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_156012 (h0 : functor.add_const (group (has_Inf pos)) linarith.comp) : @group.fg.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_Inf.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_156013 (h0 : topological_space (id (linear_ordered_add_comm_group (distrib_lattice fun_info)))) : locally_compact_space (id (linear_ordered_add_comm_group (distrib_lattice fun_info))) := sorry --non-trivial
lemma new_lemma_156014 (h0 : topological_space (add_group (semiring congr_arg_kind))) : topological_space.separable_space (add_group (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_156015 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @normal_space.{0} (boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_156016 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @monoid.fg.{1} (ordered_comm_monoid.{1} Type) (@matrix.vec_empty.{1} (monoid.{1} (ordered_comm_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_156017 (h0 : topological_space (id congr_arg_kind)) : topological_space.separable_space (id congr_arg_kind) := sorry --non-trivial
lemma new_lemma_156018 (h0 : group (has_zero (ring linarith.comp))) : normalizer_condition (has_zero (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_156019 (h0 : not (filter (has_union congr_arg_kind) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_156020 (h0 : topological_space (has_nndist (has_add (has_add (option (has_add ennreal)))))) : totally_separated_space (has_nndist (has_add (has_add (option (has_add ennreal))))) := sorry --non-trivial
lemma new_lemma_156021 (h0 : add_group (plift (semiring (semiring (semiring (semiring congr_arg_kind)))))) : is_add_cyclic (plift (semiring (semiring (semiring (semiring congr_arg_kind))))) := sorry --non-trivial
lemma new_lemma_156022 (h0 : not (group empty -> false)) : @is_cyclic.{0} empty (@classical.by_contradiction'.{1} (group.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_156023 (h0 : not (topological_space (non_assoc_semiring empty) -> false)) : @totally_separated_space.{0} (non_assoc_semiring.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (non_assoc_semiring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_156024 (h0 : list (dlist (has_top (random_gen linarith.comp_source)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_156025 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (normed_group.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_group.{0} num))  := sorry --non-trivial
lemma new_lemma_156026 (h0 : topological_space (normed_linear_ordered_group (semiring (semiring empty)))) : irreducible_space (normed_linear_ordered_group (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_156027 (h0 : filter (complete_distrib_lattice unsigned)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_156028 (h0 : topological_space (canonically_linear_ordered_monoid congr_arg_kind)) : t1_space (canonically_linear_ordered_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_156029 (h0 : functor.comp complete_lattice finset pos) : @complete_lattice.is_Sup_finite_compact.{0} (finset.{0} pos) (@functor.comp.run.{0 0 0} complete_lattice.{0} finset.{0} pos (@functor.comp.run.{0 0 0} complete_lattice.{0} finset.{0} pos h0))  := sorry --non-trivial
lemma new_lemma_156030 (h0 : ordered_comm_monoid (has_add (has_nndist pos))) : has_exists_mul_of_le (has_add (has_nndist pos)) := sorry --non-trivial
lemma new_lemma_156031 (h0 : functor.add_const (function.extfun Type group) (has_neg Type)) : @normalizer_condition.{0} (has_Inf.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type group.{0}) (has_neg.{1} Type) h0) (has_Inf.{0} pos))  := sorry --non-trivial
lemma new_lemma_156032 (h0 : functor.add_const (finset (add_cancel_monoid num)) empty) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156033 (h0 : topological_space (has_bot linarith.comp)) : topological_space.separable_space (has_bot linarith.comp) := sorry --non-trivial
lemma new_lemma_156034 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} pos (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) pos)  := sorry --non-trivial
lemma new_lemma_156035 (h0 : functor.add_const (topological_space (semigroup environment.implicit_infer_kind)) environment.implicit_infer_kind) : @totally_disconnected_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_156036 (h0 : finset (boolean_algebra.core (has_add environment.implicit_infer_kind))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_156037 (h0 : topological_space (boolean_algebra (normed_comm_ring (has_add (normed_comm_ring pos))))) : t0_space (boolean_algebra (normed_comm_ring (has_add (normed_comm_ring pos)))) := sorry --non-trivial
lemma new_lemma_156038 (h0 : finset (order_dual ennreal)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_156039 (h0 : topological_space (normed_comm_ring (semigroup name))) : t0_space (normed_comm_ring (semigroup name)) := sorry --non-trivial
lemma new_lemma_156040 (h0 : group (normed_group (has_top (has_top (has_top congr_arg_kind))))) : is_cyclic (normed_group (has_top (has_top (has_top congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_156041 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (canonically_ordered_monoid.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (canonically_ordered_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_156042 (h0 : topological_space (option (semiring congr_arg_kind))) : topological_space.separable_space (option (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_156043 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (normed_linear_ordered_group (semiring empty))) := sorry --non-trivial
lemma new_lemma_156044 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @preconnected_space.{0} (has_pos_part.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (has_pos_part.{0} name))  := sorry --non-trivial
lemma new_lemma_156045 (h0 : has_mem.mem (has_top linarith.comp_source) has_emptyc.emptyc) : @locally_compact_space.{0} (has_top.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_top.{0} linarith.comp_source) h0)  := sorry --non-trivial
lemma new_lemma_156046 (h0 : string_imp -> string_imp -> Prop) : is_equiv string_imp h0 := sorry --non-trivial
lemma new_lemma_156047 (h0 : complete_lattice (distrib_lattice (random_gen char))) : is_compactly_generated (distrib_lattice (random_gen char)) := sorry --non-trivial
lemma new_lemma_156048 (h0 : add_group (finset environment.implicit_infer_kind)) : is_add_cyclic (finset environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_156049 (h0 : finset (left_cancel_semigroup (semiring congr_arg_kind))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_156050 (h0 : functor.add_const (ring (finset Type)) (has_add (ring pos))) : @strong_rank_condition.{1} (finset.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (finset.{1} Type)) (has_add.{0} (ring.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_156051 (h0 : group (has_neg pos)) : is_simple_group (has_neg pos) := sorry --non-trivial
lemma new_lemma_156052 (h0 : topological_space (normed_group (with_bot num))) : t0_space (normed_group (with_bot num)) := sorry --non-trivial
lemma new_lemma_156053 (h0 : function.extfun Type group) : @group.fg.{0} (cancel_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type group.{0} h0 (cancel_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_156054 (h0 : ring (with_zero (random_gen to_additive.value_type))) : strong_rank_condition (with_zero (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_156055 (h0 : ring (has_sub (semiring num))) : is_principal_ideal_ring (has_sub (semiring num)) := sorry --non-trivial
lemma new_lemma_156056 (h1 : complete_lattice (mul_one_class environment.projection_info)) : complete_lattice.is_Sup_finite_compact (mul_one_class environment.projection_info) := sorry --non-trivial
lemma new_lemma_156057 (h0 : function.extfun Type group) : @group.fg.{0} pos (@function.extfun_app.{2 1} Type group.{0} h0 pos)  := sorry --non-trivial
lemma new_lemma_156058 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (has_nndist.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_nndist.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_156059 (h0 : ring (random_gen linarith.comp)) : strong_rank_condition (random_gen linarith.comp) := sorry --non-trivial
lemma new_lemma_156060 (h0 : functor.add_const (topological_space (comm_group name)) name) : @preconnected_space.{0} (comm_group.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_156061 (h0 : has_mem.mem (metric_space num) has_emptyc.emptyc) : @is_cyclic.{0} (metric_space.{0} num) (@finset.pi.empty.{1 0} Type group.{0} (metric_space.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_156062 (h0 : monoid (mul_zero_class (add_comm_monoid (has_nndist name)))) : monoid.fg (mul_zero_class (add_comm_monoid (has_nndist name))) := sorry --non-trivial
lemma new_lemma_156063 (h0 : complete_lattice (topological_space linarith.comp_source)) : is_compactly_generated (topological_space linarith.comp_source) := sorry --non-trivial
lemma new_lemma_156064 (h0 : group (comm_semigroup (has_bot (sub_neg_monoid (has_bot (has_add pos)))))) : group.fg (comm_semigroup (has_bot (sub_neg_monoid (has_bot (has_add pos))))) := sorry --non-trivial
lemma new_lemma_156065 (h0 : topological_space (has_to_string (has_add linarith.comp))) : preconnected_space (has_to_string (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_156066 (h0 : functor.add_const (group (ring environment.implicit_infer_kind)) name) : @normalizer_condition.{0} (ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (ring.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_156067 (h0 : add_group (normed_comm_ring (has_nndist pos))) : is_add_cyclic (normed_comm_ring (has_nndist pos)) := sorry --non-trivial
lemma new_lemma_156068 (h0 : topological_space (complete_semilattice_Sup unsigned)) : totally_disconnected_space (complete_semilattice_Sup unsigned) := sorry --non-trivial
lemma new_lemma_156069 (h0 : complete_lattice (has_emptyc to_additive.value_type)) : is_atomistic (has_emptyc to_additive.value_type) := sorry --non-trivial
lemma new_lemma_156070 (h0 : functor.comp ring cancel_monoid environment.implicit_infer_kind) : @is_principal_ideal_ring.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} ring.{0} cancel_monoid.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_156071 (h0 : functor.add_const (ring (has_nndist name)) Type) : @is_domain.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 1} (ring.{0} (has_nndist.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_156072 (h0 : topological_space (normed_lattice_add_comm_group (ordered_comm_monoid real))) : totally_separated_space (normed_lattice_add_comm_group (ordered_comm_monoid real)) := sorry --non-trivial
lemma new_lemma_156073 (h0 : add_group (finset ennreal)) : is_add_cyclic (finset ennreal) := sorry --non-trivial
lemma new_lemma_156074 (h0 : topological_space (semiring linarith.ineq)) : totally_disconnected_space (semiring linarith.ineq) := sorry --non-trivial
lemma new_lemma_156075 (h0 : topological_space (boolean_algebra.core (finset name))) : irreducible_space (boolean_algebra.core (finset name)) := sorry --non-trivial
lemma new_lemma_156076 (h0 h1 : multiset (add_comm_semigroup std_gen)) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_156077 (h0 : semiring (simple_graph (option (option (option (option unsigned)))))) : is_noetherian_ring (simple_graph (option (option (option (option unsigned))))) := sorry --non-trivial
lemma new_lemma_156078 (h0 : semiring (has_sub (semiring unsigned))) : is_noetherian_ring (has_sub (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_156079 (h0 : option name -> Prop) : zzz_forall h0 := sorry --non-trivial
lemma new_lemma_156080 (h0 : not (topological_space (normed_group empty) -> false)) : @totally_disconnected_space.{0} (normed_group.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (normed_group.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_156081 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (linear_ordered_comm_ring.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (linear_ordered_comm_ring.{0} num))  := sorry --non-trivial
lemma new_lemma_156082 (h0 : functor.add_const (topological_space (has_neg pos)) (has_neg linarith.comp)) : @preconnected_space.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} pos)) (has_neg.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_156083 (h0 : ordered_comm_monoid (comm_group environment.implicit_infer_kind)) : has_exists_mul_of_le (comm_group environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_156084 (h0 : not (group (comm_ring linarith.comp_source) -> false)) : @is_cyclic.{0} (comm_ring.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (group.{0} (comm_ring.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_156085 (h0 : functor.add_const (topological_space (partial_order num)) num) : @normal_space.{0} (partial_order.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (partial_order.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_156086 (h0 : functor.add_const (topological_space (monoid ennreal)) ennreal) : @normal_space.{0} (monoid.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (monoid.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_156087 (h0 : topological_space (ordered_comm_monoid (has_neg Type))) : locally_compact_space (ordered_comm_monoid (has_neg Type)) := sorry --non-trivial
lemma new_lemma_156088 (h1 : topological_space (semiring (has_norm (has_norm to_additive.value_type)))) : t0_space (semiring (has_norm (has_norm to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_156089 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (add_comm_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (add_comm_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_156090 (h0 : function.extfun Type group) : @group.fg.{0} (ordered_cancel_add_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type group.{0} h0 (ordered_cancel_add_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_156091 (h1 : complete_lattice (has_norm (has_norm linarith.comp_source))) : complete_lattice.is_Sup_finite_compact (has_norm (has_norm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_156092 (h0 : ring (has_zero (has_add pos))) : is_principal_ideal_ring (has_zero (has_add pos)) := sorry --non-trivial
lemma new_lemma_156093 (h0 : functor.add_const (ring (mul_zero_class num)) num) : @strong_rank_condition.{0} (mul_zero_class.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (mul_zero_class.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_156094 (h0 : ring (normed_field (has_nnnorm (has_nnnorm char)))) : rank_condition (normed_field (has_nnnorm (has_nnnorm char))) := sorry --non-trivial
lemma new_lemma_156095 (h0 : topological_space (as_linear_order empty)) : t0_space (as_linear_order empty) := sorry --non-trivial
lemma new_lemma_156096 (h0 : list (finset num)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_156097 (h0 : functor.add_const (topological_space (has_neg_part Type)) Type) : @preirreducible_space.{1} (has_neg_part.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (has_neg_part.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_156098 (h0 : ring (has_to_string (has_add (boolean_algebra linarith.comp)))) : rank_condition (has_to_string (has_add (boolean_algebra linarith.comp))) := sorry --non-trivial
lemma new_lemma_156099 (h0 : topological_space (has_nndist (has_to_string name))) : totally_disconnected_space (has_nndist (has_to_string name)) := sorry --non-trivial
lemma new_lemma_156100 (h0 : functor.add_const Prop (boolean_algebra.core (has_add pos))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_156101 (h0 : topological_space (ordered_comm_ring linarith.comp)) : preconnected_space (ordered_comm_ring linarith.comp) := sorry --non-trivial
lemma new_lemma_156102 (h0 : group (normed_comm_ring (has_add environment.implicit_infer_kind))) : normalizer_condition (normed_comm_ring (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_156103 (h0 : topological_space (normed_linear_ordered_group (semiring num))) : topological_space.separable_space (normed_linear_ordered_group (semiring num)) := sorry --non-trivial
lemma new_lemma_156104 (h0 : has_mem.mem ring has_emptyc.emptyc) : @is_domain.{0} (normed_group.{0} linarith.ineq) (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} h0) (normed_group.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_156105 (h0 : not (topological_space (has_lt string.iterator_imp) -> false)) : @t0_space.{0} (has_lt.{0} string.iterator_imp) (@classical.by_contradiction'.{1} (topological_space.{0} (has_lt.{0} string.iterator_imp)) h0)  := sorry --non-trivial
lemma new_lemma_156106 (h0 : cancel_comm_monoid_with_zero (linear_ordered_comm_group congr_arg_kind)) : unique_factorization_monoid (linear_ordered_comm_group congr_arg_kind) := sorry --non-trivial
lemma new_lemma_156107 (h0 : fin has_zero.zero) : @is_atomistic.{1} (has_pos_part.{1} Type) (@matrix.vec_empty.{1} (complete_lattice.{1} (has_pos_part.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_156108 (h0 : not (ring (topological_space fun_info) -> false)) : @is_domain.{0} (topological_space.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (topological_space.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_156109 (h0 : functor.add_const (group (cancel_monoid Type)) environment.implicit_infer_kind) : @is_cyclic.{1} (cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (cancel_monoid.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_156110 (h0 : punit) (h1 : add_group (category_theory.hom_of_element environment.projection_info h0)) : is_add_cyclic (category_theory.hom_of_element environment.projection_info h0) := sorry --non-trivial
lemma new_lemma_156111 (h0 : functor.add_const (list (mul_zero_class unsigned)) unsigned) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156112 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (add_comm_monoid pos)) := sorry --non-trivial
lemma new_lemma_156113 (h0 : complete_lattice (has_nndist (option unsigned))) : complete_lattice.is_Sup_finite_compact (has_nndist (option unsigned)) := sorry --non-trivial
lemma new_lemma_156114 (h0 : complete_lattice (complete_linear_order (semiring (semiring num)))) : is_compactly_generated (complete_linear_order (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_156115 (h0 : functor.add_const (topological_space (has_to_string pos)) (has_pos_part linarith.comp)) : @irreducible_space.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} pos)) (has_pos_part.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_156116 (h0 : filter (canonically_linear_ordered_monoid (option num))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_156117 (h0 : topological_space (has_top (random_gen (random_gen string_imp)))) : totally_disconnected_space (has_top (random_gen (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_156118 (h2 : topological_space (distrib linarith.ineq)) : path_connected_space (distrib linarith.ineq) := sorry --non-trivial
lemma new_lemma_156119 (h0 : functor.add_const (ring (canonically_ordered_monoid linarith.comp)) linarith.comp) : @strong_rank_condition.{0} (canonically_ordered_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (canonically_ordered_monoid.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_156120 (h0 : topological_space (measure_theory.measure_space num)) : irreducible_space (measure_theory.measure_space num) := sorry --non-trivial
lemma new_lemma_156121 (h0 : group (semiring linarith.comp)) : is_cyclic (semiring linarith.comp) := sorry --non-trivial
lemma new_lemma_156122 (h0 : ordered_add_comm_monoid (boolean_algebra (has_neg (has_add pos)))) : archimedean (boolean_algebra (has_neg (has_add pos))) := sorry --non-trivial
lemma new_lemma_156123 (h0 : ring (with_one (has_nnnorm fun_info))) : rank_condition (with_one (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_156124 (h0 : ring (multiplicative reducibility_hints)) : strong_rank_condition (multiplicative reducibility_hints) := sorry --non-trivial
lemma new_lemma_156125 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (add_cancel_comm_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_cancel_comm_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_156126 (h0 : set (has_lt (mul_one_class (mul_one_class enat)))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_156127 (h1 : not (topological_space (has_emptyc linarith.ineq) -> false)) : @path_connected_space.{0} (has_emptyc.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (has_emptyc.{0} linarith.ineq)) h1)  := sorry --non-trivial
lemma new_lemma_156128 (h0 : list (has_add (has_add Type))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_156129 (h0 : ring num) : rank_condition num := sorry --non-trivial
lemma new_lemma_156130 (h0 : topological_space (has_neg (finset Type))) : sequential_space (has_neg (finset Type)) := sorry --non-trivial
lemma new_lemma_156131 (h0 : ring (with_bot (semiring num))) : is_domain (with_bot (semiring num)) := sorry --non-trivial
lemma new_lemma_156132 (h0 : ring (has_ssubset (mul_zero_one_class to_additive.value_type))) : strong_rank_condition (has_ssubset (mul_zero_one_class to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_156133 (h0 : ring (ring name)) : rank_condition (ring name) := sorry --non-trivial
lemma new_lemma_156134 (h0 : ordered_add_comm_monoid (complete_distrib_lattice (has_neg_part name))) : archimedean (complete_distrib_lattice (has_neg_part name)) := sorry --non-trivial
lemma new_lemma_156135 (h0 : topological_space (distrib_lattice (with_bot to_additive.value_type))) : irreducible_space (distrib_lattice (with_bot to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_156136 (h0 : topological_space (has_to_string (finset ennreal))) : irreducible_space (has_to_string (finset ennreal)) := sorry --non-trivial
lemma new_lemma_156137 (h1 : set (reducibility_hints -> reducibility_hints)) : set.separates_points h1 := sorry --non-trivial
lemma new_lemma_156138 (h0 : topological_space (plift (option num))) : path_connected_space (plift (option num)) := sorry --non-trivial
lemma new_lemma_156139 (h0 : group (semi_normed_comm_ring (has_nnnorm (has_nnnorm char)))) : group.fg (semi_normed_comm_ring (has_nnnorm (has_nnnorm char))) := sorry --non-trivial
lemma new_lemma_156140 (h0 : measurable_space linarith.comp_source) (h1 : filter linarith.comp_source) : filter.is_measurably_generated h1 := sorry --non-trivial
lemma new_lemma_156141 (h0 : ring (has_append fun_info)) : strong_rank_condition (has_append fun_info) := sorry --non-trivial
lemma new_lemma_156142 (h0 : function.extfun (Type 1) uniform_space) : @separated_space.{1} (canonically_ordered_comm_semiring.{1} Type) (@function.extfun_app.{3 2} (Type 1) uniform_space.{1} h0 (canonically_ordered_comm_semiring.{1} Type))  := sorry --non-trivial
lemma new_lemma_156143 (h0 : functor.add_const (topological_space (has_to_string Type)) (ring pos)) : @sequential_space.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_to_string.{1} Type)) (ring.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_156144 (h1 : topological_space (has_div reducibility_hints)) : totally_disconnected_space (has_div reducibility_hints) := sorry --non-trivial
lemma new_lemma_156145 (h0 : not (group linarith.comp_source -> false)) : @is_cyclic.{0} linarith.comp_source (@classical.by_contradiction'.{1} (group.{0} linarith.comp_source) h0)  := sorry --non-trivial
lemma new_lemma_156146 (h0 : functor.comp ring has_neg_part environment.implicit_infer_kind) : @rank_condition.{0} (has_neg_part.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} ring.{0} has_neg_part.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_156147 (h0 : functor.comp (functor.comp complete_lattice has_nndist) with_top nnreal) : @is_compactly_generated.{0} (has_nndist.{0} ennreal) (@functor.comp.run.{0 0 0} complete_lattice.{0} has_nndist.{0} ennreal (@functor.comp.run.{0 0 0} (functor.comp.{0 0 0} complete_lattice.{0} has_nndist.{0}) with_top.{0} nnreal h0))  := sorry --non-trivial
lemma new_lemma_156148 (h0 : monoid (comm_group (finset linarith.comp))) : monoid.fg (comm_group (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_156149 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (has_neg.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_neg.{0} name))  := sorry --non-trivial
lemma new_lemma_156150 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (simple_graph.{0} empty) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (simple_graph.{0} empty))  := sorry --non-trivial
lemma new_lemma_156151 (h0 : nat) (h1 : topological_space (zmod h0)) : path_connected_space (zmod h0) := sorry --non-trivial
lemma new_lemma_156152 (h0 : functor.add_const (topological_space (complete_distrib_lattice Type)) linarith.comp) : @preconnected_space.{1} (complete_distrib_lattice.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (complete_distrib_lattice.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_156153 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (generalized_boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (generalized_boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_156154 (h0 : cancel_comm_monoid_with_zero (option (semiring unsigned))) : unique_factorization_monoid (option (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_156155 (h0 : add_comm_semigroup char -> add_comm_semigroup char -> add_comm_semigroup char) : is_right_cancel (add_comm_semigroup char) h0 := sorry --non-trivial
lemma new_lemma_156156 (h0 : functor.add_const (ring (as_linear_order empty)) empty) : @strong_rank_condition.{0} (as_linear_order.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (as_linear_order.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_156157 (h0 : list (linear_ordered_comm_group (comm_monoid (has_dist unsigned)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_156158 (h0 : topological_space (ordered_ring congr_arg_kind)) : preirreducible_space (ordered_ring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_156159 (h0 : functor.add_const (ring (bin_tree num)) num) : @strong_rank_condition.{0} (bin_tree.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (bin_tree.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_156160 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (canonically_ordered_monoid real)) := sorry --non-trivial
lemma new_lemma_156161 (h0 : topological_space (ordered_comm_ring (has_Inf (ring linarith.comp)))) : totally_separated_space (ordered_comm_ring (has_Inf (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_156162 (h0 : group (canonically_ordered_monoid (sub_neg_monoid (sub_neg_monoid (sub_neg_monoid pos))))) : is_simple_group (canonically_ordered_monoid (sub_neg_monoid (sub_neg_monoid (sub_neg_monoid pos)))) := sorry --non-trivial
lemma new_lemma_156163 (h0 : topological_space (metric_space (has_top (semiring num)))) : discrete_topology (metric_space (has_top (semiring num))) := sorry --non-trivial
lemma new_lemma_156164 (h3 : add_group (comm_ring to_additive.value_type)) : is_add_cyclic (comm_ring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_156165 (h0 : functor.add_const (topological_space (has_add unsigned)) ennreal) : @t1_space.{0} (has_add.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} unsigned)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_156166 (h0 : complete_lattice (has_star unsigned)) : is_atomistic (has_star unsigned) := sorry --non-trivial
lemma new_lemma_156167 (h0 : add_group (has_union (semiring fun_info))) : is_add_cyclic (has_union (semiring fun_info)) := sorry --non-trivial
lemma new_lemma_156168 (h0 : topological_space (id unsigned)) : irreducible_space (id unsigned) := sorry --non-trivial
lemma new_lemma_156169 (h0 : ring (monoid_with_zero (option (option unsigned)))) : is_domain (monoid_with_zero (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_156170 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (semiring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (semiring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_156171 (h0 : function.extfun Type (functor.add_const (ring (add_semigroup unsigned)))) : @is_domain.{0} (add_semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (add_semigroup.{0} unsigned)) unsigned (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ring.{0} (add_semigroup.{0} unsigned))) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_156172 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (generalized_boolean_algebra.{0} name) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (generalized_boolean_algebra.{0} name))  := sorry --non-trivial
lemma new_lemma_156173 (h0 : ring (has_ssubset (random_gen (has_compl linarith.comp_source)))) : strong_rank_condition (has_ssubset (random_gen (has_compl linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_156174 (h0 : topological_space (pseudo_metric_space (mul_zero_class (option unsigned)))) : sequential_space (pseudo_metric_space (mul_zero_class (option unsigned))) := sorry --non-trivial
lemma new_lemma_156175 (h0 : functor.add_const (topological_space (add_cancel_monoid Type)) name) : @t0_space.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (add_cancel_monoid.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_156176 (h0 : topological_space (metric_space (semiring (semiring (semiring unsigned))))) : totally_separated_space (metric_space (semiring (semiring (semiring unsigned)))) := sorry --non-trivial
lemma new_lemma_156177 (h0 : uniform_space (add_comm_monoid (has_Inf pos))) : complete_space (add_comm_monoid (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_156178 (h0 : complete_lattice (semi_normed_ring (has_nnnorm linarith.ineq))) : complete_lattice.is_Sup_finite_compact (semi_normed_ring (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_156179 (h0 : uniform_space (simple_graph (has_Inf linarith.comp))) : separated_space (simple_graph (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_156180 (h0 : topological_space (add_right_cancel_monoid (has_top num))) : discrete_topology (add_right_cancel_monoid (has_top num)) := sorry --non-trivial
lemma new_lemma_156181 (h0 : functor.add_const (topological_space (pseudo_metric_space ennreal)) (ring (option (option pos)))) : @irreducible_space.{0} (pseudo_metric_space.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (pseudo_metric_space.{0} ennreal)) (ring.{0} (option.{0} (option.{0} pos))) h0)  := sorry --non-trivial
lemma new_lemma_156182 (h0 : ordered_add_comm_monoid (has_add (has_bot (has_bot real)))) : archimedean (has_add (has_bot (has_bot real))) := sorry --non-trivial
lemma new_lemma_156183 (h0 : group (has_inv (random_gen (random_gen string_imp)))) : group.fg (has_inv (random_gen (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_156184 (h0 : not (add_group (metric_space empty) -> false)) : @is_add_cyclic.{0} (metric_space.{0} empty) (@classical.by_contradiction'.{1} (add_group.{0} (metric_space.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_156185 (h0 : ordered_comm_monoid (semigroup name)) : has_exists_mul_of_le (semigroup name) := sorry --non-trivial
lemma new_lemma_156186 (h0 : ring (finset name)) : is_principal_ideal_ring (finset name) := sorry --non-trivial
lemma new_lemma_156187 (h0 : ring (normed_field (random_gen (add_cancel_comm_monoid (has_ssubset linarith.ineq))))) : is_domain (normed_field (random_gen (add_cancel_comm_monoid (has_ssubset linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_156188 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (add_group.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (add_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_156189 (h0 : set (string.iterator_imp -> std_gen)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_156190 (h0 : ring (has_compl (has_inv linarith.ineq))) : is_domain (has_compl (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_156191 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @is_noetherian_ring.{0} (sub_neg_monoid.{0} linarith.comp) (@matrix.vec_empty.{0} (semiring.{0} (sub_neg_monoid.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_156192 (h0 : group (partial_order empty)) : is_simple_group (partial_order empty) := sorry --non-trivial
lemma new_lemma_156193 (h0 : ring (linear_ordered_comm_ring (semiring (semiring empty)))) : rank_condition (linear_ordered_comm_ring (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_156194 (h0 : list (plift empty)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_156195 (h0 : function.extfun Type (functor.add_const (complete_lattice nnreal))) : @is_compactly_generated.{0} nnreal (@functor.add_const.run.{0 0} (complete_lattice.{0} nnreal) num (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (complete_lattice.{0} nnreal)) h0 num))  := sorry --non-trivial
lemma new_lemma_156196 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (canonically_ordered_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_156197 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} znum (@function.extfun_app.{2 1} Type ring.{0} h0 znum)  := sorry --non-trivial
lemma new_lemma_156198 (h0 : function.extfun Type group) : @normalizer_condition.{0} (has_to_string.{0} pos) (@function.extfun_app.{2 1} Type group.{0} h0 (has_to_string.{0} pos))  := sorry --non-trivial
lemma new_lemma_156199 (h0 : topological_space (boolean_algebra (comm_group name))) : preirreducible_space (boolean_algebra (comm_group name)) := sorry --non-trivial
lemma new_lemma_156200 (h0 : topological_space (has_Sup num)) : path_connected_space (has_Sup num) := sorry --non-trivial
lemma new_lemma_156201 (h0 : add_group (plift (semiring congr_arg_kind))) : is_add_cyclic (plift (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_156202 (h0 : add_group (has_top (semiring unsigned))) : is_add_cyclic (has_top (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_156203 (h0 : topological_space (sub_neg_monoid (has_add (comm_semigroup (has_add (has_Inf real)))))) : t0_space (sub_neg_monoid (has_add (comm_semigroup (has_add (has_Inf real))))) := sorry --non-trivial
lemma new_lemma_156204 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (order_dual.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (order_dual.{0} num))  := sorry --non-trivial
lemma new_lemma_156205 (h0 : function.extfun (Type 1) complete_lattice) : @is_compactly_generated.{1} (add_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) complete_lattice.{1} h0 (add_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_156206 (h0 : topological_space (semigroup (has_neg_part (has_to_string name)))) : totally_separated_space (semigroup (has_neg_part (has_to_string name))) := sorry --non-trivial
lemma new_lemma_156207 (h0 : functor.add_const (add_monoid (left_cancel_semigroup empty)) num) : @add_monoid.fg.{0} (left_cancel_semigroup.{0} empty) (@functor.add_const.run.{0 0} (add_monoid.{0} (left_cancel_semigroup.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_156208 (h0 : add_monoid (has_zero (option unsigned))) : add_monoid.fg (has_zero (option unsigned)) := sorry --non-trivial
lemma new_lemma_156209 (h0 : ring (has_inter empty)) : is_principal_ideal_ring (has_inter empty) := sorry --non-trivial
lemma new_lemma_156210 (h0 : semiring (option (has_norm (has_top (has_norm empty))))) : is_noetherian_ring (option (has_norm (has_top (has_norm empty)))) := sorry --non-trivial
lemma new_lemma_156211 (h0 : pnat) (h1 : with_bot pnat) (h2 : sym2 (with_bot pnat)) (h3 : has_mem.mem h1 h2) (h4 : ne (sym2.mem.other h3) has_bot.bot) : pnat.coprime h0 (with_bot.unbot (sym2.mem.other h3) h4) := sorry --non-trivial
lemma new_lemma_156212 (h0 : functor.add_const (function.extfun Type add_monoid) pos) : @add_monoid.fg.{0} linarith.comp (@function.extfun_app.{2 1} Type add_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type add_monoid.{0}) pos h0) linarith.comp)  := sorry --non-trivial
lemma new_lemma_156213 (h0 : not (topological_space (measurable_space linarith.comp_source) -> false)) : @locally_compact_space.{0} (measurable_space.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (measurable_space.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_156214 (h0 : topological_space (ring num)) : topological_space.separable_space (ring num) := sorry --non-trivial
lemma new_lemma_156215 (h0 : not (ring (has_div to_additive.value_type) -> false)) : @is_domain.{0} (has_div.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (has_div.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_156216 (h0 : functor.add_const (ordered_comm_monoid (sub_neg_monoid name)) pos) : @has_exists_mul_of_le.{0} (sub_neg_monoid.{0} name) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (sub_neg_monoid.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_156217 (h0 : filter (normed_field linarith.comp_source)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_156218 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (measurable_space.{0} fun_info) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (measurable_space.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_156219 (h0 : has_mem.mem (has_norm fun_info) has_emptyc.emptyc) : @add_monoid.fg.{0} (has_norm.{0} fun_info) (@finset.pi.empty.{1 0} Type add_monoid.{0} (has_norm.{0} fun_info) h0)  := sorry --non-trivial
lemma new_lemma_156220 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} fun_info (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) fun_info)  := sorry --non-trivial
lemma new_lemma_156221 (h0 : cancel_comm_monoid_with_zero (simple_graph (has_add (has_pos_part linarith.comp)))) : unique_factorization_monoid (simple_graph (has_add (has_pos_part linarith.comp))) := sorry --non-trivial
lemma new_lemma_156222 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (boolean_algebra.core.{0} pos) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (boolean_algebra.core.{0} pos))  := sorry --non-trivial
lemma new_lemma_156223 (h0 : complete_lattice (simple_graph pos)) : complete_lattice.is_Sup_finite_compact (simple_graph pos) := sorry --non-trivial
lemma new_lemma_156224 (h0 : topological_space (has_nndist (has_to_string (has_to_string (has_to_string pos))))) : path_connected_space (has_nndist (has_to_string (has_to_string (has_to_string pos)))) := sorry --non-trivial
lemma new_lemma_156225 (h0 : semiring (canonically_ordered_monoid (sub_neg_monoid linarith.comp))) : is_noetherian_ring (canonically_ordered_monoid (sub_neg_monoid linarith.comp)) := sorry --non-trivial
lemma new_lemma_156226 (h0 : add_group (has_nndist (boolean_algebra.core name))) : is_add_cyclic (has_nndist (boolean_algebra.core name)) := sorry --non-trivial
lemma new_lemma_156227 (h0 : not (ring (distrib (comm_ring linarith.comp_source)) -> false)) : @rank_condition.{0} (distrib.{0} (comm_ring.{0} linarith.comp_source)) (@classical.by_contradiction'.{1} (ring.{0} (distrib.{0} (comm_ring.{0} linarith.comp_source))) h0)  := sorry --non-trivial
lemma new_lemma_156228 (h0 : not (complete_lattice (add_left_cancel_monoid (has_nnnorm linarith.comp_source)) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (add_left_cancel_monoid.{0} (has_nnnorm.{0} linarith.comp_source)) (@classical.by_contradiction'.{1} (complete_lattice.{0} (add_left_cancel_monoid.{0} (has_nnnorm.{0} linarith.comp_source))) h0)  := sorry --non-trivial
lemma new_lemma_156229 (h0 : uniform_space (canonically_ordered_monoid (has_bot Type))) : separated_space (canonically_ordered_monoid (has_bot Type)) := sorry --non-trivial
lemma new_lemma_156230 (h0 : functor.add_const (topological_space (add_cancel_monoid name)) name) : @preirreducible_space.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_156231 (h0 : functor.add_const (ring (has_zero Type)) (ring linarith.comp)) : @is_domain.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_zero.{1} Type)) (ring.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_156232 (h0 : functor.add_const (functor.add_const (list linarith.comp) pos) pos) : list.nodup (functor.add_const.run (functor.add_const.run h0)) := sorry --non-trivial
lemma new_lemma_156233 (h0 : ordered_comm_monoid (cancel_monoid (has_add (add_comm_monoid Type)))) : has_exists_mul_of_le (cancel_monoid (has_add (add_comm_monoid Type))) := sorry --non-trivial
lemma new_lemma_156234 (h0 : functor.comp topological_space has_nndist pos) : @preirreducible_space.{0} (has_nndist.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} has_nndist.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_156235 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type monoid.{0} h0 (ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_156236 (h0 : complete_lattice (comm_ring char)) : is_compactly_generated (comm_ring char) := sorry --non-trivial
lemma new_lemma_156237 (h1 : ring (has_union empty)) : rank_condition (has_union empty) := sorry --non-trivial
lemma new_lemma_156238 (h0 : topological_space (cancel_monoid (option (option (option ennreal))))) : loc_path_connected_space (cancel_monoid (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_156239 (h0 : uniform_space (uniform_space (uniform_space (random_gen reducibility_hints)))) : complete_space (uniform_space (uniform_space (random_gen reducibility_hints))) := sorry --non-trivial
lemma new_lemma_156240 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @path_connected_space.{1} (boolean_algebra.core.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (boolean_algebra.core.{1} Type))  := sorry --non-trivial
lemma new_lemma_156241 (h0 : topological_space (distrib_lattice (has_nnnorm (semi_normed_ring (has_ssubset char))))) : t0_space (distrib_lattice (has_nnnorm (semi_normed_ring (has_ssubset char)))) := sorry --non-trivial
lemma new_lemma_156242 (h0 : ring (ordered_comm_ring (ring (ring (has_add pos))))) : rank_condition (ordered_comm_ring (ring (ring (has_add pos)))) := sorry --non-trivial
lemma new_lemma_156243 (h0 : topological_space (has_to_string (semigroup linarith.comp))) : discrete_topology (has_to_string (semigroup linarith.comp)) := sorry --non-trivial
lemma new_lemma_156244 (h0 : functor.add_const (topological_space (semigroup Type)) (ordered_ring (has_Inf Type))) : @totally_separated_space.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (semigroup.{1} Type)) (ordered_ring.{1} (has_Inf.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_156245 (h0 : functor.add_const (ring (finset linarith.comp)) (has_to_string linarith.comp)) : @rank_condition.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (finset.{0} linarith.comp)) (has_to_string.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_156246 (h0 : fin has_zero.zero) : @path_connected_space.{1} (ring.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (ring.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_156247 (h0 : topological_space (has_neg name)) : path_connected_space (has_neg name) := sorry --non-trivial
lemma new_lemma_156248 (h1 : not (group (mul_one_class char) -> false)) : @is_cyclic.{0} (mul_one_class.{0} char) (@classical.by_contradiction'.{1} (group.{0} (mul_one_class.{0} char)) h1)  := sorry --non-trivial
lemma new_lemma_156249 (h0 : topological_space (add_cancel_monoid pos)) : regular_space (add_cancel_monoid pos) := sorry --non-trivial
lemma new_lemma_156250 (h0 : topological_space (add_cancel_monoid (has_to_string (comm_group unsigned)))) : totally_disconnected_space (add_cancel_monoid (has_to_string (comm_group unsigned))) := sorry --non-trivial
lemma new_lemma_156251 (h0 : functor.add_const (list (comm_group ennreal)) pos) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156252 (h0 : monoid (measurable_space (random_gen num))) : monoid.fg (measurable_space (random_gen num)) := sorry --non-trivial
lemma new_lemma_156253 (h0 : functor.add_const (topological_space (has_to_string ennreal)) Type) : @normal_space.{0} (has_to_string.{0} ennreal) (@functor.add_const.run.{0 1} (topological_space.{0} (has_to_string.{0} ennreal)) Type h0)  := sorry --non-trivial
lemma new_lemma_156254 (h0 : topological_space (complete_distrib_lattice (mul_zero_class Type))) : topological_space.separable_space (complete_distrib_lattice (mul_zero_class Type)) := sorry --non-trivial
lemma new_lemma_156255 (h0 : group (has_Sup unsigned)) : is_cyclic (has_Sup unsigned) := sorry --non-trivial
lemma new_lemma_156256 (h0 : functor.add_const (add_monoid (left_cancel_semigroup empty)) (semiring (semiring (semiring num)))) : @add_monoid.fg.{0} (left_cancel_semigroup.{0} empty) (@functor.add_const.run.{0 0} (add_monoid.{0} (left_cancel_semigroup.{0} empty)) (semiring.{0} (semiring.{0} (semiring.{0} num))) h0)  := sorry --non-trivial
lemma new_lemma_156257 (h0 : functor.add_const (complete_lattice (has_mul empty)) unsigned) : @complete_lattice.is_Sup_finite_compact.{0} (has_mul.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_mul.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_156258 (h0 : topological_space (has_zero (comm_group unsigned))) : totally_separated_space (has_zero (comm_group unsigned)) := sorry --non-trivial
lemma new_lemma_156259 (h0 : not (uniform_space (has_top linarith.comp_source) -> false)) : @separated_space.{0} (has_top.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (uniform_space.{0} (has_top.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_156260 (h0 : function.extfun Type topological_space) : @regular_space.{0} (finset.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (finset.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_156261 (h0 : set (has_div enat)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_156262 (h0 : filter (has_compl (has_nnnorm (has_nnnorm (has_nnnorm (has_nnnorm linarith.comp_source)))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_156263 (h0 : group (linear_ordered_add_comm_group (has_top fun_info))) : normalizer_condition (linear_ordered_add_comm_group (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_156264 (h0 : group (distrib_lattice string_imp)) : is_cyclic (distrib_lattice string_imp) := sorry --non-trivial
lemma new_lemma_156265 (h1 : topological_space (has_emptyc (has_emptyc (random_gen num)))) : totally_disconnected_space (has_emptyc (has_emptyc (random_gen num))) := sorry --non-trivial
lemma new_lemma_156266 (h0 : functor.add_const (topological_space (ordered_ring congr_arg_kind)) congr_arg_kind) : @path_connected_space.{0} (ordered_ring.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_ring.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_156267 (h0 : topological_space (comm_group (has_to_string environment.implicit_infer_kind))) : sequential_space (comm_group (has_to_string environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_156268 (h0 : function.extfun (finset Type) (has_mem.mem (normed_group num))) : @strong_rank_condition.{0} (normed_group.{0} num) (@finset.pi.empty.{1 0} Type ring.{0} (normed_group.{0} num) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (normed_group.{0} num)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_156269 (h0 : topological_space (add_cancel_monoid (has_add environment.implicit_infer_kind))) : sequential_space (add_cancel_monoid (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_156270 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type semiring.{0} h0 (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_156271 (h1 h2 : multiset (add_comm_semigroup linarith.ineq)) : multiset.le h1 h2 := sorry --non-trivial
lemma new_lemma_156272 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (has_inv.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type monoid.{0} h0 (has_inv.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_156273 (h0 : ring (topological_space string_imp)) : rank_condition (topological_space string_imp) := sorry --non-trivial
lemma new_lemma_156274 (h1 : not (topological_space (complete_semilattice_Sup empty) -> false)) : @totally_disconnected_space.{0} (complete_semilattice_Sup.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (complete_semilattice_Sup.{0} empty)) h1)  := sorry --non-trivial
lemma new_lemma_156275 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} znum (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) znum)  := sorry --non-trivial
lemma new_lemma_156276 (h0 : topological_space to_additive.value_type) : totally_separated_space to_additive.value_type := sorry --non-trivial
lemma new_lemma_156277 (h0 : functor.add_const (uniform_space (has_add linarith.comp)) Type) : @complete_space.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 1} (uniform_space.{0} (has_add.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_156278 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (has_bot.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (has_bot.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_156279 (h0 : topological_space (mul_one_class fun_info)) : totally_disconnected_space (mul_one_class fun_info) := sorry --non-trivial
lemma new_lemma_156280 (h0 : function.extfun Type (functor.add_const (topological_space (has_bot empty)))) : @preirreducible_space.{0} (has_bot.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_bot.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (has_bot.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_156281 (h0 : list (canonically_ordered_comm_semiring ennreal)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_156282 (h0 : ring (linear_ordered_add_comm_group (has_nnnorm (has_nnnorm (has_nnnorm fun_info))))) : is_domain (linear_ordered_add_comm_group (has_nnnorm (has_nnnorm (has_nnnorm fun_info)))) := sorry --non-trivial
lemma new_lemma_156283 (h0 : group (non_assoc_semiring empty)) : normalizer_condition (non_assoc_semiring empty) := sorry --non-trivial
lemma new_lemma_156284 (h0 : ring (normed_comm_ring name)) : strong_rank_condition (normed_comm_ring name) := sorry --non-trivial
lemma new_lemma_156285 (h0 : functor.add_const (topological_space (boolean_algebra linarith.comp)) environment.implicit_infer_kind) : @topological_space.separable_space.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} linarith.comp)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_156286 (h0 : topological_space (monoid (option empty))) : t0_space (monoid (option empty)) := sorry --non-trivial
lemma new_lemma_156287 (h2 : ring (has_nnnorm linarith.ineq)) : rank_condition (has_nnnorm linarith.ineq) := sorry --non-trivial
lemma new_lemma_156288 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (has_dist.{0} empty) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (has_dist.{0} empty))  := sorry --non-trivial
lemma new_lemma_156289 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (has_add.{0} ennreal) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_add.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_156290 (h0 : topological_space (has_to_string (option ennreal))) : preirreducible_space (has_to_string (option ennreal)) := sorry --non-trivial
lemma new_lemma_156291 (h0 : functor.add_const (topological_space (has_neg pos)) (ring linarith.comp)) : @totally_separated_space.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} pos)) (ring.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_156292 (h0 : not (function.extfun Type (functor.add_const Prop) -> false)) : functor.add_const.run (function.extfun_app (classical.by_contradiction' h0) empty) := sorry --non-trivial
lemma new_lemma_156293 (h0 : cancel_comm_monoid_with_zero (has_add (has_Inf name))) : unique_factorization_monoid (has_add (has_Inf name)) := sorry --non-trivial
lemma new_lemma_156294 (h0 : group (boolean_algebra environment.implicit_infer_kind)) : normalizer_condition (boolean_algebra environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_156295 (h0 : functor.add_const (ring (normed_linear_ordered_group num)) empty) : @is_domain.{0} (normed_linear_ordered_group.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (normed_linear_ordered_group.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_156296 (h0 : ring (has_lt (mul_one_class fun_info))) : strong_rank_condition (has_lt (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_156297 (h0 : not (function.extfun Type semiring -> false)) : @is_noetherian_ring.{0} (preorder.{0} unsigned) (@function.extfun_app.{2 1} Type semiring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type semiring.{0}) h0) (preorder.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_156298 (h0 : functor.add_const (function.extfun (Type 1) add_group) linarith.comp) : @is_add_cyclic.{1} (complete_distrib_lattice.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) add_group.{1}) linarith.comp h0) (complete_distrib_lattice.{1} Type))  := sorry --non-trivial
lemma new_lemma_156299 (h0 : uniform_space (has_add (sub_neg_monoid pos))) : complete_space (has_add (sub_neg_monoid pos)) := sorry --non-trivial
lemma new_lemma_156300 (h0 : topological_space (with_bot (semiring (semiring (semiring (semiring empty)))))) : totally_separated_space (with_bot (semiring (semiring (semiring (semiring empty))))) := sorry --non-trivial
lemma new_lemma_156301 (h0 : measurable_space (has_norm string_imp)) (h1 : has_mul (has_norm string_imp)) : has_measurable_mul (has_norm string_imp) := sorry --non-trivial
lemma new_lemma_156302 (h0 : functor.add_const (add_monoid (linear_order empty)) empty) : @add_monoid.fg.{0} (linear_order.{0} empty) (@functor.add_const.run.{0 0} (add_monoid.{0} (linear_order.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_156303 (h0 : functor.add_const (group (linear_ordered_cancel_comm_monoid unsigned)) num) : @is_cyclic.{0} (linear_ordered_cancel_comm_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (linear_ordered_cancel_comm_monoid.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_156304 (h0 : list (semiring congr_arg_kind)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_156305 (h0 : functor.add_const (finset ennreal) num) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156306 (h1 : uniform_space (has_norm num)) : separated_space (has_norm num) := sorry --non-trivial
lemma new_lemma_156307 (h0 : functor.add_const (topological_space (boolean_algebra.core congr_arg_kind)) empty) : @t0_space.{0} (boolean_algebra.core.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} congr_arg_kind)) empty h0)  := sorry --non-trivial
lemma new_lemma_156308 (h0 : fin has_zero.zero) : id (matrix.vec_empty (matrix.vec_empty (matrix.vec_empty (matrix.vec_empty h0)))) := sorry --non-trivial
lemma new_lemma_156309 (h0 : topological_space (add_right_cancel_monoid (semiring unsigned))) : discrete_topology (add_right_cancel_monoid (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_156310 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @normalizer_condition.{0} (random_gen.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) group.{0}) (random_gen.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_156311 (h0 : topological_space (lex (has_nnnorm fun_info))) : locally_compact_space (lex (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_156312 (h0 h1 : set real) (h2 : fin has_zero.zero) : set.re_prod_im h0 h1 (id (matrix.vec_empty h2)) := sorry --non-trivial
lemma new_lemma_156313 (h0 : topological_space (uniform_space unsigned)) : preirreducible_space (uniform_space unsigned) := sorry --non-trivial
lemma new_lemma_156314 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (pseudo_metric_space.{0} num) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (pseudo_metric_space.{0} num))  := sorry --non-trivial
lemma new_lemma_156315 (h0 : topological_space (semiring (has_norm num))) : discrete_topology (semiring (has_norm num)) := sorry --non-trivial
lemma new_lemma_156316 (h0 : not (function.extfun Type complete_lattice -> false)) : @is_atomistic.{0} (linear_ordered_semiring.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (linear_ordered_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_156317 (h0 : function.extfun Type ring) : @is_domain.{0} (dlist.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} h0 (dlist.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_156318 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (pseudo_emetric_space.{0} pos) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (pseudo_emetric_space.{0} pos))  := sorry --non-trivial
lemma new_lemma_156319 (h0 : functor.add_const (group (has_to_string Type)) linarith.comp) : @group.fg.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (has_to_string.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_156320 (h0 : topological_space (with_one (random_gen num))) : path_connected_space (with_one (random_gen num)) := sorry --non-trivial
lemma new_lemma_156321 (h0 : ring (monoid (option (option (option unsigned))))) : is_principal_ideal_ring (monoid (option (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_156322 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (has_neg.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (has_neg.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_156323 (h0 : functor.add_const (functor.add_const (topological_space linarith.comp) linarith.comp) pos) : @locally_compact_space.{0} linarith.comp (@functor.add_const.run.{0 0} (topological_space.{0} linarith.comp) linarith.comp (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (topological_space.{0} linarith.comp) linarith.comp) pos h0))  := sorry --non-trivial
lemma new_lemma_156324 (h1 : has_neg (has_ssubset std_gen)) (h2 : measurable_space (has_ssubset std_gen)) : has_measurable_neg (has_ssubset std_gen) := sorry --non-trivial
lemma new_lemma_156325 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t1_space.{0} (monoid.{0} (option.{0} (option.{0} (option.{0} (option.{0} (option.{0} (option.{0} (option.{0} unsigned)))))))) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (monoid.{0} (option.{0} (option.{0} (option.{0} (option.{0} (option.{0} (option.{0} (option.{0} unsigned)))))))))  := sorry --non-trivial
lemma new_lemma_156326 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (has_norm.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_norm.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_156327 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (ring.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_156328 (h0 : topological_space (pseudo_metric_space num)) : path_connected_space (pseudo_metric_space num) := sorry --non-trivial
lemma new_lemma_156329 (h0 : functor.add_const (topological_space (has_neg_part Type)) name) : @discrete_topology.{1} (has_neg_part.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_neg_part.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_156330 (h0 : functor.add_const (topological_space (has_nndist name)) linarith.comp) : @sequential_space.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_156331 (h0 : functor.add_const (ordered_add_comm_monoid (normed_linear_ordered_group empty)) (option unsigned)) : @archimedean.{0} (normed_linear_ordered_group.{0} empty) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (normed_linear_ordered_group.{0} empty)) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_156332 (h0 : add_monoid (has_add (option ennreal))) : add_monoid.fg (has_add (option ennreal)) := sorry --non-trivial
lemma new_lemma_156333 (h0 : topological_space (ring (semigroup name))) : loc_path_connected_space (ring (semigroup name)) := sorry --non-trivial
lemma new_lemma_156334 (h0 : function.extfun Type topological_space) : @t0_space.{0} (boolean_algebra.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.{0} name))  := sorry --non-trivial
lemma new_lemma_156335 (h0 : nat) (h1 : not (ring (array h0 to_additive.value_type) -> false)) : @is_domain.{0} (array.{0} h0 to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (array.{0} h0 to_additive.value_type)) h1)  := sorry --non-trivial
lemma new_lemma_156336 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (linear_ordered_semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (linear_ordered_semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_156337 (h0 : functor.add_const (function.extfun Type group) linarith.comp) : @is_cyclic.{0} (has_Inf.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) linarith.comp h0) (has_Inf.{0} pos))  := sorry --non-trivial
lemma new_lemma_156338 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (has_top.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_top.{0} empty))  := sorry --non-trivial
lemma new_lemma_156339 (h0 : functor.add_const (function.extfun Type cancel_comm_monoid_with_zero) linarith.comp) : @unique_factorization_monoid.{0} (has_to_string.{0} pos) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type cancel_comm_monoid_with_zero.{0}) linarith.comp h0) (has_to_string.{0} pos))  := sorry --non-trivial
lemma new_lemma_156340 (h0 : functor.add_const (ring (finset Type)) Type) : @is_principal_ideal_ring.{1} (finset.{1} Type) (@functor.add_const.run.{1 1} (ring.{1} (finset.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_156341 (h0 : complete_lattice (normed_group (random_gen (has_inv to_additive.value_type)))) : is_atomistic (normed_group (random_gen (has_inv to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_156342 (h0 : functor.add_const (finset (has_zero Type)) pos) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156343 (h0 : function.extfun Type group) : @is_simple_group.{0} (has_nndist.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (has_nndist.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_156344 (h0 : topological_space (has_pos_part (has_Inf Type))) : topological_space.separable_space (has_pos_part (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_156345 (h0 : ring (has_sub (semiring congr_arg_kind))) : is_domain (has_sub (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_156346 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (has_pos_part.{0} (has_Inf.{0} linarith.comp)) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_pos_part.{0} (has_Inf.{0} linarith.comp)))  := sorry --non-trivial
lemma new_lemma_156347 (h0 : functor.add_const (topological_space Type) (finset pos)) : @totally_disconnected_space.{1} Type (@functor.add_const.run.{1 0} (topological_space.{1} Type) (finset.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_156348 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (has_top.{0} num) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (has_top.{0} num))  := sorry --non-trivial
lemma new_lemma_156349 (h0 : fin has_zero.zero) : @archimedean.{0} (ordered_comm_ring.{0} name) (@matrix.vec_empty.{0} (ordered_add_comm_monoid.{0} (ordered_comm_ring.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_156350 (h0 : function.extfun Type (prod (has_add pos))) : id_rel (function.extfun_app h0 (has_add pos)) := sorry --non-trivial
lemma new_lemma_156351 (h0 : topological_space (has_norm linarith.comp_source)) : totally_disconnected_space (has_norm linarith.comp_source) := sorry --non-trivial
lemma new_lemma_156352 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @preirreducible_space.{1} (has_neg.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (has_neg.{1} Type))  := sorry --non-trivial
lemma new_lemma_156353 (h0 : ring (has_top (has_norm (semiring linarith.comp)))) : strong_rank_condition (has_top (has_norm (semiring linarith.comp))) := sorry --non-trivial
lemma new_lemma_156354 (h0 : function.extfun nat fin) : @strong_rank_condition.{1} (has_bot.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (has_bot.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_156355 (h0 : add_group (bin_tree (semiring num))) : is_add_cyclic (bin_tree (semiring num)) := sorry --non-trivial
lemma new_lemma_156356 (h0 : complete_lattice (measurable_space (semiring (semiring (semiring congr_arg_kind))))) : is_compactly_generated (measurable_space (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_156357 (h0 : set (uniform_space char)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_156358 (h0 : add_group (has_compl (mul_one_class (mul_one_class linarith.ineq)))) : is_add_cyclic (has_compl (mul_one_class (mul_one_class linarith.ineq))) := sorry --non-trivial
lemma new_lemma_156359 (h0 : topological_space (add_comm_monoid (option (option pos)))) : t1_space (add_comm_monoid (option (option pos))) := sorry --non-trivial
lemma new_lemma_156360 (h0 : fin has_zero.zero) : @totally_separated_space.{0} (has_add.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (has_add.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_156361 (h0 : finset (comm_group Type)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_156362 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (linear_ordered_field.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_field.{0} pos))  := sorry --non-trivial
lemma new_lemma_156363 (h0 : complete_lattice (random_gen (non_unital_non_assoc_semiring string_imp))) : is_compactly_generated (random_gen (non_unital_non_assoc_semiring string_imp)) := sorry --non-trivial
lemma new_lemma_156364 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (with_bot.{0} linarith.ineq) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 complete_lattice.{0}) (with_bot.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_156365 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (has_inter ennreal)) := sorry --non-trivial
lemma new_lemma_156366 (h0 : uniform_space (ordered_ring char)) : complete_space (ordered_ring char) := sorry --non-trivial
lemma new_lemma_156367 (h0 : functor.add_const (function.extfun (Type 1) ring) environment.implicit_infer_kind) : @is_principal_ideal_ring.{1} (has_zero.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) ring.{1}) environment.implicit_infer_kind h0) (has_zero.{1} Type))  := sorry --non-trivial
lemma new_lemma_156368 (h0 : ring (boolean_algebra (ring (has_nndist Type)))) : strong_rank_condition (boolean_algebra (ring (has_nndist Type))) := sorry --non-trivial
lemma new_lemma_156369 (h0 : semiring (canonically_ordered_monoid real)) : is_noetherian_ring (canonically_ordered_monoid real) := sorry --non-trivial
lemma new_lemma_156370 (h0 : ring (dlist (has_nnnorm linarith.comp_source))) : is_domain (dlist (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_156371 (h0 : ring (with_one num)) : rank_condition (with_one num) := sorry --non-trivial
lemma new_lemma_156372 (h0 : uniform_space (add_right_cancel_monoid num)) : separated_space (add_right_cancel_monoid num) := sorry --non-trivial
lemma new_lemma_156373 (h0 : functor.comp topological_space cancel_monoid pos) : @locally_compact_space.{0} (cancel_monoid.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} cancel_monoid.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_156374 (h0 : group (has_nndist (add_comm_monoid pos))) : normalizer_condition (has_nndist (add_comm_monoid pos)) := sorry --non-trivial
lemma new_lemma_156375 (h0 : add_monoid (has_star congr_arg_kind)) : add_monoid.fg (has_star congr_arg_kind) := sorry --non-trivial
lemma new_lemma_156376 (h0 : functor.add_const (topological_space (boolean_algebra linarith.comp)) Type) : @irreducible_space.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_156377 (h0 : group (has_one (has_norm fun_info))) : normalizer_condition (has_one (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_156378 (h0 : cancel_comm_monoid_with_zero (has_add (boolean_algebra.core Type))) : unique_factorization_monoid (has_add (boolean_algebra.core Type)) := sorry --non-trivial
lemma new_lemma_156379 (h0 : functor.add_const (group (ordered_comm_monoid pos)) name) : @normalizer_condition.{0} (ordered_comm_monoid.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (ordered_comm_monoid.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_156380 (h0 : functor.add_const (finset (has_Sup congr_arg_kind)) empty) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156381 (h0 : fin has_zero.zero) : @group.fg.{0} (normed_lattice_add_comm_group.{0} linarith.comp) (@matrix.vec_empty.{0} (group.{0} (normed_lattice_add_comm_group.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_156382 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @discrete_topology.{0} (add_cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (add_cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_156383 (h0 : topological_space (has_nndist (has_add pos))) : locally_compact_space (has_nndist (has_add pos)) := sorry --non-trivial
lemma new_lemma_156384 (h0 : functor.add_const (finset (complete_linear_order empty)) congr_arg_kind) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156385 (h0 : has_mem.mem (random_gen fun_info) has_emptyc.emptyc) : list.nodup (finset.pi.empty list (random_gen fun_info) h0) := sorry --non-trivial
lemma new_lemma_156386 (h0 : functor.add_const (ordered_add_comm_monoid (comm_group pos)) (option (option pos))) : @archimedean.{0} (comm_group.{0} pos) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (comm_group.{0} pos)) (option.{0} (option.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_156387 (h0 : ring (has_nndist Type)) : rank_condition (has_nndist Type) := sorry --non-trivial
lemma new_lemma_156388 (h0 : functor.add_const (ordered_comm_monoid (has_nndist name)) (has_neg Type)) : @has_exists_mul_of_le.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (has_nndist.{0} name)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_156389 (h0 : ring (plift (non_assoc_semiring congr_arg_kind))) : is_domain (plift (non_assoc_semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_156390 (h1 : ring (semiring to_additive.value_type)) : rank_condition (semiring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_156391 (h0 : function.extfun nat fin) : @topological_space.separable_space.{1} (canonically_linear_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (canonically_linear_ordered_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_156392 (h0 : topological_space (has_pos_part (has_Inf (has_Inf linarith.comp)))) : irreducible_space (has_pos_part (has_Inf (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_156393 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (boolean_algebra unsigned)) := sorry --non-trivial
lemma new_lemma_156394 (h0 : functor.add_const (ring (has_norm num)) empty) : @strong_rank_condition.{0} (has_norm.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (has_norm.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_156395 (h0 : functor.add_const (list (has_edist empty)) empty) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156396 (h0 : uniform_space (with_one num)) : complete_space (with_one num) := sorry --non-trivial
lemma new_lemma_156397 (h0 : function.extfun (Type 1) complete_lattice) : @complete_lattice.is_Sup_finite_compact.{1} (normed_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) complete_lattice.{1} h0 (normed_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_156398 (h1 : ring (comm_ring (has_inv (has_ssubset string_imp)))) : strong_rank_condition (comm_ring (has_inv (has_ssubset string_imp))) := sorry --non-trivial
lemma new_lemma_156399 (h0 : functor.add_const (finset (boolean_algebra name)) environment.implicit_infer_kind) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156400 (h0 : group (has_bot (has_add real))) : is_simple_group (has_bot (has_add real)) := sorry --non-trivial
lemma new_lemma_156401 (h0 : functor.add_const (filter (ring pos)) environment.implicit_infer_kind) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156402 (h0 : topological_space (id (has_top linarith.comp))) : path_connected_space (id (has_top linarith.comp)) := sorry --non-trivial
lemma new_lemma_156403 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (sub_neg_monoid.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (sub_neg_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_156404 (h0 : monoid (has_bot (ordered_comm_monoid real))) : monoid.fg (has_bot (ordered_comm_monoid real)) := sorry --non-trivial
lemma new_lemma_156405 (h0 : fin has_zero.zero) : @monoid.fg.{0} (boolean_algebra.{0} pos) (@matrix.vec_empty.{0} (monoid.{0} (boolean_algebra.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_156406 (h0 : topological_space (add_cancel_monoid (has_to_string (comm_group Type)))) : sequential_space (add_cancel_monoid (has_to_string (comm_group Type))) := sorry --non-trivial
lemma new_lemma_156407 (h0 : ring (normed_field to_additive.value_type)) : is_domain (normed_field to_additive.value_type) := sorry --non-trivial
lemma new_lemma_156408 (h0 : topological_space (denumerable (comm_ring (comm_ring reducibility_hints)))) : t0_space (denumerable (comm_ring (comm_ring reducibility_hints))) := sorry --non-trivial
lemma new_lemma_156409 (h0 : function.extfun Type group) : @is_simple_group.{0} (has_neg.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (has_neg.{0} name))  := sorry --non-trivial
lemma new_lemma_156410 (h0 : functor.add_const (semiring (has_neg pos)) linarith.comp) : @is_noetherian_ring.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (semiring.{0} (has_neg.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_156411 (h0 : uniform_space (generalized_boolean_algebra (has_add linarith.comp))) : separated_space (generalized_boolean_algebra (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_156412 (h0 : topological_space (normed_comm_ring (option name))) : totally_disconnected_space (normed_comm_ring (option name)) := sorry --non-trivial
lemma new_lemma_156413 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (pseudo_emetric_space.{0} (option.{0} unsigned)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (pseudo_emetric_space.{0} (option.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_156414 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (normed_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_156415 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (canonically_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (canonically_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_156416 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (has_nndist.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_nndist.{0} pos))  := sorry --non-trivial
lemma new_lemma_156417 (h0 : complete_lattice (finset (option pos))) : complete_lattice.is_Sup_finite_compact (finset (option pos)) := sorry --non-trivial
lemma new_lemma_156418 (h0 : not (function.extfun Type topological_space -> false)) : @totally_disconnected_space.{0} (has_sub.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_sub.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_156419 (h0 : uniform_space (add_left_cancel_monoid (has_nnnorm to_additive.value_type))) : complete_space (add_left_cancel_monoid (has_nnnorm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_156420 (h0 : set (add_comm_semigroup (add_comm_semigroup (nondiscrete_normed_field enat)) -> fun_info)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_156421 (h0 : topological_space (has_bot name)) : loc_path_connected_space (has_bot name) := sorry --non-trivial
lemma new_lemma_156422 (h0 : measurable_space occurrences) (h1 : has_sup occurrences) : has_measurable_sup occurrences := sorry --non-trivial
lemma new_lemma_156423 (h0 : functor.add_const (add_monoid (normed_comm_ring name)) name) : @add_monoid.fg.{0} (normed_comm_ring.{0} name) (@functor.add_const.run.{0 0} (add_monoid.{0} (normed_comm_ring.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_156424 (h0 : functor.add_const (group (mul_zero_class environment.implicit_infer_kind)) environment.implicit_infer_kind) : @is_cyclic.{0} (mul_zero_class.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (mul_zero_class.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_156425 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (non_assoc_semiring.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (non_assoc_semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_156426 (h0 : monoid (id (random_gen to_additive.value_type))) : monoid.fg (id (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_156427 (h0 : topological_space (ordered_comm_monoid (has_add linarith.comp))) : regular_space (ordered_comm_monoid (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_156428 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (mul_zero_class.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (mul_zero_class.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_156429 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (@id.{2} Type (random_gen.{0} (has_inv.{0} (random_gen.{0} (random_gen.{0} linarith.ineq))))) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (@id.{2} Type (random_gen.{0} (has_inv.{0} (random_gen.{0} (random_gen.{0} linarith.ineq))))))  := sorry --non-trivial
lemma new_lemma_156430 (h0 : topological_space (has_add (ring pos))) : irreducible_space (has_add (ring pos)) := sorry --non-trivial
lemma new_lemma_156431 (h1 : list (with_one (random_gen string_imp))) : list.nodup h1 := sorry --non-trivial
lemma new_lemma_156432 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (has_add.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (has_add.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_156433 (h0 : group (comm_group (finset (finset Type)))) : is_cyclic (comm_group (finset (finset Type))) := sorry --non-trivial
lemma new_lemma_156434 (h0 : filter (boolean_algebra (has_nndist linarith.comp))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_156435 (h0 : not (group (complete_semilattice_Sup to_additive.value_type) -> false)) : @is_cyclic.{0} (complete_semilattice_Sup.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (group.{0} (complete_semilattice_Sup.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_156436 (h0 : functor.add_const (uniform_space (ordered_ring unsigned)) congr_arg_kind) : @separated_space.{0} (ordered_ring.{0} unsigned) (@functor.add_const.run.{0 0} (uniform_space.{0} (ordered_ring.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_156437 (h0 : add_group (has_zero (semigroup (has_add Type)))) : is_add_cyclic (has_zero (semigroup (has_add Type))) := sorry --non-trivial
lemma new_lemma_156438 (h0 : functor.add_const (topological_space (id empty)) congr_arg_kind) : @totally_disconnected_space.{0} (@id.{2} Type empty) (@functor.add_const.run.{0 0} (topological_space.{0} (@id.{2} Type empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_156439 (h0 : functor.add_const (group (has_zero Type)) Type) : @normalizer_condition.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 1} (group.{1} (has_zero.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_156440 (h1 : ring (mul_one_class ereal)) : is_domain (mul_one_class ereal) := sorry --non-trivial
lemma new_lemma_156441 (h0 : fin has_zero.zero) : @add_monoid.fg.{0} (normed_lattice_add_comm_group.{0} pos) (@matrix.vec_empty.{0} (add_monoid.{0} (normed_lattice_add_comm_group.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_156442 (h0 : not (topological_space environment.implicit_infer_kind -> false)) : @t0_space.{0} environment.implicit_infer_kind (@classical.by_contradiction'.{1} (topological_space.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_156443 (h0 : group (measurable_space.dynkin_system (semiring empty))) : normalizer_condition (measurable_space.dynkin_system (semiring empty)) := sorry --non-trivial
lemma new_lemma_156444 (h0 : ring (has_Inf (has_neg (has_neg pos)))) : strong_rank_condition (has_Inf (has_neg (has_neg pos))) := sorry --non-trivial
lemma new_lemma_156445 (h1 : ring enat) (h2 : topological_space (semi_normed_ring (random_gen (ring.positive_cone enat)))) : regular_space (semi_normed_ring (random_gen (ring.positive_cone enat))) := sorry --non-trivial
lemma new_lemma_156446 (h0 : topological_space (ring ennreal)) : t0_space (ring ennreal) := sorry --non-trivial
lemma new_lemma_156447 (h0 : functor.add_const (ordered_add_comm_monoid (complete_distrib_lattice pos)) Type) : @archimedean.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 1} (ordered_add_comm_monoid.{0} (complete_distrib_lattice.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_156448 (h0 : set ereal) (h1 : ereal) : set.up h0 h1 := sorry --non-trivial
lemma new_lemma_156449 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (monoid_with_zero pos)) := sorry --non-trivial
lemma new_lemma_156450 (h0 : functor.add_const (list (add_comm_monoid linarith.comp)) environment.implicit_infer_kind) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156451 (h0 : function.extfun Type uniform_space) : @complete_space.{0} pos (@function.extfun_app.{2 1} Type uniform_space.{0} h0 pos)  := sorry --non-trivial
lemma new_lemma_156452 (h0 : functor.add_const (topological_space (cancel_monoid Type)) name) : @t1_space.{1} (cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (cancel_monoid.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_156453 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_zero pos)) Type) : @unique_factorization_monoid.{0} (has_zero.{0} pos) (@functor.add_const.run.{0 1} (cancel_comm_monoid_with_zero.{0} (has_zero.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_156454 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (complete_distrib_lattice.{0} ennreal) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (complete_distrib_lattice.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_156455 (h0 : semiring (normed_linear_ordered_group num)) : is_noetherian_ring (normed_linear_ordered_group num) := sorry --non-trivial
lemma new_lemma_156456 (h0 : functor.comp ring canonically_ordered_comm_semiring name) : @rank_condition.{0} (canonically_ordered_comm_semiring.{0} name) (@functor.comp.run.{0 0 0} ring.{0} canonically_ordered_comm_semiring.{0} name h0)  := sorry --non-trivial
lemma new_lemma_156457 (h0 : functor.add_const (fin has_zero.zero) (has_bot real)) : @separated_space.{0} (canonically_ordered_monoid.{0} real) (@matrix.vec_empty.{0} (uniform_space.{0} (canonically_ordered_monoid.{0} real)) (@functor.add_const.run.{0 0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (has_bot.{0} real) h0))  := sorry --non-trivial
lemma new_lemma_156458 (h0 : ring (is_R_or_C congr_arg_kind)) : is_domain (is_R_or_C congr_arg_kind) := sorry --non-trivial
lemma new_lemma_156459 (h0 : functor.add_const (ring (has_neg Type)) pos) : @rank_condition.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_neg.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_156460 (h0 : group (random_gen num)) : is_cyclic (random_gen num) := sorry --non-trivial
lemma new_lemma_156461 (h0 : function.extfun Type (functor.add_const (ring (has_inner unsigned congr_arg_kind)))) : @rank_condition.{0} (has_inner.{0 0} unsigned congr_arg_kind) (@functor.add_const.run.{0 0} (ring.{0} (has_inner.{0 0} unsigned congr_arg_kind)) unsigned (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ring.{0} (has_inner.{0 0} unsigned congr_arg_kind))) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_156462 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (linear_ordered_field.{0} pos) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (linear_ordered_field.{0} pos))  := sorry --non-trivial
lemma new_lemma_156463 (h0 : topological_space (canonically_ordered_monoid (has_add pos))) : discrete_topology (canonically_ordered_monoid (has_add pos)) := sorry --non-trivial
lemma new_lemma_156464 (h0 : ring (boolean_algebra (has_Inf Type))) : is_principal_ideal_ring (boolean_algebra (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_156465 (h4 : add_group (distrib char)) : is_add_cyclic (distrib char) := sorry --non-trivial
lemma new_lemma_156466 (h0 : monoid (complete_semilattice_Sup (has_top linarith.comp_source))) : monoid.fg (complete_semilattice_Sup (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_156467 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (option.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (option.{0} pos))  := sorry --non-trivial
lemma new_lemma_156468 (h0 : topological_space (has_append (normed_field (has_nnnorm linarith.comp_source)))) : totally_disconnected_space (has_append (normed_field (has_nnnorm linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_156469 (h1 : function.extfun Type group) : @normalizer_condition.{0} stieltjes_function (@function.extfun_app.{2 1} Type group.{0} h1 stieltjes_function)  := sorry --non-trivial
lemma new_lemma_156470 (h0 : uniform_space (has_compl (has_ssubset char))) : complete_space (has_compl (has_ssubset char)) := sorry --non-trivial
lemma new_lemma_156471 (h0 : topological_space (boolean_algebra (ring Type))) : preirreducible_space (boolean_algebra (ring Type)) := sorry --non-trivial
lemma new_lemma_156472 (h1 : topological_space (denumerable (random_gen (add_left_cancel_monoid char)))) : t0_space (denumerable (random_gen (add_left_cancel_monoid char))) := sorry --non-trivial
lemma new_lemma_156473 (h0 : complete_lattice (complete_distrib_lattice pos)) : complete_lattice.is_Sup_finite_compact (complete_distrib_lattice pos) := sorry --non-trivial
lemma new_lemma_156474 (h0 : topological_space (normed_comm_ring (has_to_string (has_to_string pos)))) : topological_space.separable_space (normed_comm_ring (has_to_string (has_to_string pos))) := sorry --non-trivial
lemma new_lemma_156475 (h0 : topological_space (has_nndist (option name))) : locally_compact_space (has_nndist (option name)) := sorry --non-trivial
lemma new_lemma_156476 (h0 : functor.comp topological_space has_add name) : @discrete_topology.{0} (has_add.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} has_add.{0} name h0)  := sorry --non-trivial
lemma new_lemma_156477 (h0 : topological_space (pseudo_metric_space (option unsigned))) : discrete_topology (pseudo_metric_space (option unsigned)) := sorry --non-trivial
lemma new_lemma_156478 (h0 : list (has_add (has_pos_part linarith.comp))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_156479 (h0 : topological_space (semigroup (finset Type))) : preconnected_space (semigroup (finset Type)) := sorry --non-trivial
lemma new_lemma_156480 (h0 : not (add_monoid (non_assoc_semiring unsigned) -> false)) : @add_monoid.fg.{0} (non_assoc_semiring.{0} unsigned) (@classical.by_contradiction'.{1} (add_monoid.{0} (non_assoc_semiring.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_156481 (h0 : add_comm_monoid (ring (option ennreal)) -> add_comm_monoid (ring (option ennreal)) -> Prop) : is_symm (add_comm_monoid (ring (option ennreal))) h0 := sorry --non-trivial
lemma new_lemma_156482 (h0 : add_group (has_norm (semiring num))) : is_add_cyclic (has_norm (semiring num)) := sorry --non-trivial
lemma new_lemma_156483 (h0 : uniform_space (comm_group (has_zero (has_add name)))) : separated_space (comm_group (has_zero (has_add name))) := sorry --non-trivial
lemma new_lemma_156484 (h0 : group (has_one (semiring linarith.comp))) : group.fg (has_one (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_156485 (h0 : topological_space (free_add_monoid unsigned)) : locally_compact_space (free_add_monoid unsigned) := sorry --non-trivial
lemma new_lemma_156486 (h0 : topological_space (has_neg (option ennreal))) : locally_compact_space (has_neg (option ennreal)) := sorry --non-trivial
lemma new_lemma_156487 (h0 : functor.add_const (ring (has_add name)) name) : @rank_condition.{0} (has_add.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (has_add.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_156488 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (@id.{2} Type (with_bot.{0} (with_bot.{0} (with_bot.{0} (with_bot.{0} (with_bot.{0} string_imp)))))) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (@id.{2} Type (with_bot.{0} (with_bot.{0} (with_bot.{0} (with_bot.{0} (with_bot.{0} string_imp)))))))  := sorry --non-trivial
lemma new_lemma_156489 (h0 : topological_space (ring (option (option unsigned)))) : preconnected_space (ring (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_156490 (h0 : not (group (with_bot linarith.ineq) -> false)) : @is_cyclic.{0} (with_bot.{0} linarith.ineq) (@classical.by_contradiction'.{1} (group.{0} (with_bot.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_156491 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (random_gen.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (random_gen.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_156492 (h0 : not (filter (random_gen (has_nnnorm (has_nnnorm (has_nnnorm (has_nnnorm (has_nnnorm fun_info)))))) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_156493 (h1 : ring (semi_normed_ring string.iterator_imp)) : strong_rank_condition (semi_normed_ring string.iterator_imp) := sorry --non-trivial
lemma new_lemma_156494 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (has_union.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_union.{0} empty))  := sorry --non-trivial
lemma new_lemma_156495 (h0 : functor.add_const (group (finset pos)) (has_add (boolean_algebra.core (has_add (boolean_algebra.core Type))))) : @group.fg.{0} (finset.{0} pos) (@functor.add_const.run.{0 1} (group.{0} (finset.{0} pos)) (has_add.{1} (boolean_algebra.core.{1} (has_add.{1} (boolean_algebra.core.{1} Type)))) h0)  := sorry --non-trivial
lemma new_lemma_156496 (h0 : topological_space (complete_distrib_lattice (option (option empty)))) : normal_space (complete_distrib_lattice (option (option empty))) := sorry --non-trivial
lemma new_lemma_156497 (h0 : group (finset (linear_ordered_comm_monoid_with_zero pos))) : normalizer_condition (finset (linear_ordered_comm_monoid_with_zero pos)) := sorry --non-trivial
lemma new_lemma_156498 (h0 : ring (has_neg_part name)) : is_principal_ideal_ring (has_neg_part name) := sorry --non-trivial
lemma new_lemma_156499 (h0 : functor.add_const (finset (has_nndist pos)) (finset pos)) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156500 (h0 : uniform_space (denumerable (has_nnnorm char))) : complete_space (denumerable (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_156501 (h0 : functor.add_const (ring (monoid empty)) (option empty)) : @is_domain.{0} (monoid.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (monoid.{0} empty)) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_156502 (h0 : topological_space (measurable_space (random_gen (random_gen linarith.ineq)))) : totally_separated_space (measurable_space (random_gen (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_156503 (h1 : ring string.iterator_imp) : strong_rank_condition string.iterator_imp := sorry --non-trivial
lemma new_lemma_156504 (h0 : topological_space (ordered_comm_monoid (has_Inf (has_Inf linarith.comp)))) : irreducible_space (ordered_comm_monoid (has_Inf (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_156505 (h0 : ring (has_to_string (ring (complete_semilattice_Sup Type)))) : is_domain (has_to_string (ring (complete_semilattice_Sup Type))) := sorry --non-trivial
lemma new_lemma_156506 (h0 : not (topological_space (has_inv to_additive.value_type) -> false)) : @totally_disconnected_space.{0} (has_inv.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (has_inv.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_156507 (h0 : ordered_comm_monoid (generalized_boolean_algebra (has_Inf pos))) : has_exists_mul_of_le (generalized_boolean_algebra (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_156508 (h0 : complete_lattice (preorder congr_arg_kind)) : is_compactly_generated (preorder congr_arg_kind) := sorry --non-trivial
lemma new_lemma_156509 (h0 : function.extfun Type ring) : @is_domain.{0} (measure_theory.measure_space.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (measure_theory.measure_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_156510 (h0 : group (distrib_lattice (random_gen linarith.ineq))) : normalizer_condition (distrib_lattice (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_156511 (h0 : uniform_space (boolean_algebra (has_add environment.implicit_infer_kind))) : separated_space (boolean_algebra (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_156512 (h0 : topological_space (has_neg_part (has_add name))) : t1_space (has_neg_part (has_add name)) := sorry --non-trivial
lemma new_lemma_156513 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (has_star.{0} num) (@function.extfun_app.{2 1} Type add_group.{0} h0 (has_star.{0} num))  := sorry --non-trivial
lemma new_lemma_156514 (h0 : ring (comm_ring (has_ssubset to_additive.value_type))) : rank_condition (comm_ring (has_ssubset to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_156515 (h0 : topological_space (ordered_comm_ring (has_Inf pos))) : totally_separated_space (ordered_comm_ring (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_156516 (h0 : functor.add_const (complete_lattice (boolean_algebra.core unsigned)) name) : @is_atomistic.{0} (boolean_algebra.core.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (boolean_algebra.core.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_156517 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (random_gen.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type add_group.{0} h0 (random_gen.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_156518 (h0 : functor.add_const (topological_space (add_comm_monoid unsigned)) name) : @t0_space.{0} (add_comm_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (add_comm_monoid.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_156519 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @preirreducible_space.{0} (ring.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (ring.{0} name))  := sorry --non-trivial
lemma new_lemma_156520 (h1 : filter (semi_normed_comm_ring (has_nnnorm linarith.ineq))) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_156521 (h0 : function.extfun Type (functor.add_const (list (add_semigroup empty)))) : palindrome (functor.add_const.run (function.extfun_app h0 empty)) := sorry --non-trivial
lemma new_lemma_156522 (h0 : not (list (complete_linear_order unsigned) -> false)) : list.nodup (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_156523 (h0 : topological_space (has_emptyc (random_gen congr_arg_kind))) : totally_disconnected_space (has_emptyc (random_gen congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_156524 (h0 : add_monoid (partial_order unsigned)) : add_monoid.fg (partial_order unsigned) := sorry --non-trivial
lemma new_lemma_156525 (h8 h9 : multiset (has_nnnorm char)) : multiset.disjoint h8 h9 := sorry --non-trivial
lemma new_lemma_156526 (h0 : function.extfun (Type 1) topological_space) : @sequential_space.{1} (ordered_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (ordered_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_156527 (h0 : not (filter (random_gen char) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_156528 (h0 : functor.add_const (group (add_cancel_monoid name)) linarith.comp) : @is_cyclic.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (group.{0} (add_cancel_monoid.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_156529 (h0 : function.extfun Type group) : @is_cyclic.{0} (has_nnnorm.{0} char) (@function.extfun_app.{2 1} Type group.{0} h0 (has_nnnorm.{0} char))  := sorry --non-trivial
lemma new_lemma_156530 (h0 : functor.add_const (topological_space (has_zero environment.implicit_infer_kind)) name) : @normal_space.{0} (has_zero.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_156531 (h0 : has_mem.mem (with_one linarith.comp) has_emptyc.emptyc) : @complete_lattice.is_Sup_finite_compact.{0} (with_one.{0} linarith.comp) (@finset.pi.empty.{1 0} Type complete_lattice.{0} (with_one.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_156532 (h0 : not (uniform_space (measurable_space linarith.comp_source) -> false)) : @complete_space.{0} (measurable_space.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (uniform_space.{0} (measurable_space.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_156533 (h0 : topological_space (canonically_ordered_comm_semiring (option unsigned))) : preirreducible_space (canonically_ordered_comm_semiring (option unsigned)) := sorry --non-trivial
lemma new_lemma_156534 (h0 : ring (comm_ring (random_gen (random_gen char)))) : rank_condition (comm_ring (random_gen (random_gen char))) := sorry --non-trivial
lemma new_lemma_156535 (h0 : complete_lattice (linear_ordered_comm_group_with_zero enat)) : is_compactly_generated (linear_ordered_comm_group_with_zero enat) := sorry --non-trivial
lemma new_lemma_156536 (h0 : function.extfun Type (functor.add_const (uniform_space (ordered_ring congr_arg_kind)))) : @complete_space.{0} (ordered_ring.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (uniform_space.{0} (ordered_ring.{0} congr_arg_kind)) (semiring.{0} (semiring.{0} (semiring.{0} empty))) (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (uniform_space.{0} (ordered_ring.{0} congr_arg_kind))) h0 (semiring.{0} (semiring.{0} (semiring.{0} empty)))))  := sorry --non-trivial
lemma new_lemma_156537 (h0 : functor.add_const (function.extfun Type semiring) name) : @is_noetherian_ring.{0} (boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type semiring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type semiring.{0}) name h0) (boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_156538 (h0 : group (linear_ordered_field (option ennreal))) : is_simple_group (linear_ordered_field (option ennreal)) := sorry --non-trivial
lemma new_lemma_156539 (h0 : functor.add_const (topological_space (has_Sup empty)) congr_arg_kind) : @loc_path_connected_space.{0} (has_Sup.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Sup.{0} empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_156540 (h0 : function.extfun (Type 1) monoid) : @monoid.fg.{1} (add_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) monoid.{1} h0 (add_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_156541 (h0 : add_group (semigroup (has_add (has_add pos)))) : is_add_cyclic (semigroup (has_add (has_add pos))) := sorry --non-trivial
lemma new_lemma_156542 (h0 : uniform_space (sub_neg_monoid (has_add (has_Inf linarith.comp)))) : separated_space (sub_neg_monoid (has_add (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_156543 (h0 : monoid (has_bot (normed_lattice_add_comm_group real))) : monoid.fg (has_bot (normed_lattice_add_comm_group real)) := sorry --non-trivial
lemma new_lemma_156544 (h0 : functor.add_const (cancel_comm_monoid_with_zero (semigroup linarith.comp)) pos) : @unique_factorization_monoid.{0} (semigroup.{0} linarith.comp) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (semigroup.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_156545 (h0 : function.extfun Type topological_space) : @t0_space.{0} (monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_156546 (h0 : topological_space (has_nndist (finset (has_nndist pos)))) : loc_path_connected_space (has_nndist (finset (has_nndist pos))) := sorry --non-trivial
lemma new_lemma_156547 (h0 : functor.add_const (add_monoid (has_zero linarith.comp)) pos) : @add_monoid.fg.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_monoid.{0} (has_zero.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_156548 (h0 : topological_space (normed_group (has_top congr_arg_kind))) : discrete_topology (normed_group (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_156549 (h0 : functor.add_const (add_group (mul_zero_class name)) pos) : @is_add_cyclic.{0} (mul_zero_class.{0} name) (@functor.add_const.run.{0 0} (add_group.{0} (mul_zero_class.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_156550 (h0 : topological_space (has_neg (semigroup environment.implicit_infer_kind))) : normal_space (has_neg (semigroup environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_156551 (h0 : functor.add_const (complete_lattice (has_zero name)) (has_add name)) : @is_atomistic.{0} (has_zero.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_zero.{0} name)) (has_add.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_156552 (h0 : topological_space (has_sub empty)) : irreducible_space (has_sub empty) := sorry --non-trivial
lemma new_lemma_156553 (h0 : topological_space (normed_group (semiring linarith.comp))) : preirreducible_space (normed_group (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_156554 (h0 : topological_space (comm_ring (linear_ordered_add_comm_group linarith.ineq))) : irreducible_space (comm_ring (linear_ordered_add_comm_group linarith.ineq)) := sorry --non-trivial
lemma new_lemma_156555 (h0 : functor.add_const (add_monoid (plift congr_arg_kind)) num) : @add_monoid.fg.{1} (plift.{1} congr_arg_kind) (@functor.add_const.run.{1 0} (add_monoid.{1} (plift.{1} congr_arg_kind)) num h0)  := sorry --non-trivial
lemma new_lemma_156556 (h0 : add_group (ring (semigroup (has_neg_part pos)))) : is_add_cyclic (ring (semigroup (has_neg_part pos))) := sorry --non-trivial
lemma new_lemma_156557 (h0 : functor.add_const (group (add_cancel_monoid pos)) (ring linarith.comp)) : @is_cyclic.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (add_cancel_monoid.{0} pos)) (ring.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_156558 (h0 : topological_space (div_inv_monoid char)) : t0_space (div_inv_monoid char) := sorry --non-trivial
lemma new_lemma_156559 (h0 : uniform_space (boolean_algebra (has_to_string (finset (finset (has_to_string linarith.comp)))))) : separated_space (boolean_algebra (has_to_string (finset (finset (has_to_string linarith.comp))))) := sorry --non-trivial
lemma new_lemma_156560 (h0 : not (complete_lattice (metric_space linarith.comp_source) -> false)) : @is_compactly_generated.{0} (metric_space.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (complete_lattice.{0} (metric_space.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_156561 (h0 : functor.add_const (group (generalized_boolean_algebra linarith.comp)) (has_neg Type)) : @is_simple_group.{0} (generalized_boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 1} (group.{0} (generalized_boolean_algebra.{0} linarith.comp)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_156562 (h0 : group (complete_semilattice_Sup linarith.comp)) : is_cyclic (complete_semilattice_Sup linarith.comp) := sorry --non-trivial
lemma new_lemma_156563 (h0 : add_monoid (generalized_boolean_algebra (has_add (has_add linarith.comp)))) : add_monoid.fg (generalized_boolean_algebra (has_add (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_156564 (h0 : ring (random_gen (has_nnnorm (has_ssubset linarith.comp_source)))) : strong_rank_condition (random_gen (has_nnnorm (has_ssubset linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_156565 (h0 : functor.add_const (topological_space (option num)) num) : @preirreducible_space.{0} (option.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (option.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_156566 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (ordered_cancel_add_comm_monoid.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_cancel_add_comm_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_156567 (h0 : ordered_add_comm_monoid (boolean_algebra linarith.comp)) : archimedean (boolean_algebra linarith.comp) := sorry --non-trivial
lemma new_lemma_156568 (h0 : functor.add_const (complete_lattice (comm_group Type)) environment.implicit_infer_kind) : @is_atomistic.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 0} (complete_lattice.{1} (comm_group.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_156569 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @irreducible_space.{1} (add_cancel_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (add_cancel_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_156570 (h0 : functor.add_const (group (has_add linarith.comp)) linarith.comp) : @is_cyclic.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (has_add.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_156571 (h0 : add_group std_gen) : is_add_cyclic std_gen := sorry --non-trivial
lemma new_lemma_156572 (h0 : complete_lattice (add_group unsigned)) : is_compactly_generated (add_group unsigned) := sorry --non-trivial
lemma new_lemma_156573 (h0 : function.extfun (finset Type) (has_mem.mem (with_bot num))) : @irreducible_space.{0} (with_bot.{0} num) (@finset.pi.empty.{1 0} Type topological_space.{0} (with_bot.{0} num) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_bot.{0} num)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_156574 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (has_ssubset.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_ssubset.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_156575 (h0 : not (topological_space (option environment.implicit_infer_kind) -> false)) : @irreducible_space.{0} (option.{0} environment.implicit_infer_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (option.{0} environment.implicit_infer_kind)) h0)  := sorry --non-trivial
lemma new_lemma_156576 (h0 : functor.comp topological_space add_cancel_monoid Type) : @path_connected_space.{1} (add_cancel_monoid.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} add_cancel_monoid.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_156577 (h0 : pfun (add_comm_semigroup std_gen) Prop) (h1 : coe_sort (pfun.dom h0)) : pfun.as_subtype h0 h1 := sorry --non-trivial
lemma new_lemma_156578 (h0 : has_mem.mem complete_lattice has_emptyc.emptyc) : @complete_lattice.is_Sup_finite_compact.{0} (metric_space.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) complete_lattice.{0} h0) (metric_space.{0} num))  := sorry --non-trivial
lemma new_lemma_156579 (h0 : topological_space (cancel_monoid pos)) : locally_compact_space (cancel_monoid pos) := sorry --non-trivial
lemma new_lemma_156580 (h0 : cancel_comm_monoid_with_zero (normed_comm_ring (finset environment.implicit_infer_kind))) : unique_factorization_monoid (normed_comm_ring (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_156581 (h1 : ring (random_gen (random_gen char))) : rank_condition (random_gen (random_gen char)) := sorry --non-trivial
lemma new_lemma_156582 (h0 : has_lt (has_le (mul_one_class string.iterator_imp))) : no_max_order (has_le (mul_one_class string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_156583 (h0 : topological_space (semigroup (ring linarith.comp))) : path_connected_space (semigroup (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_156584 (h0 : ring (measurable_space.dynkin_system (has_union (semiring linarith.comp)))) : rank_condition (measurable_space.dynkin_system (has_union (semiring linarith.comp))) := sorry --non-trivial
lemma new_lemma_156585 (h0 : not (add_group (semi_normed_comm_ring to_additive.value_type) -> false)) : @is_add_cyclic.{0} (semi_normed_comm_ring.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (add_group.{0} (semi_normed_comm_ring.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_156586 (h0 : group (distrib to_additive.value_type)) : is_cyclic (distrib to_additive.value_type) := sorry --non-trivial
lemma new_lemma_156587 (h1 : monoid (measurable_space (random_gen (random_gen string_imp)))) : monoid.fg (measurable_space (random_gen (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_156588 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (has_to_string.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_to_string.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_156589 (h1 : set (has_ssubset linarith.comp_source)) : set.subsingleton h1 := sorry --non-trivial
lemma new_lemma_156590 (h0 : functor.comp finset comm_group Type) : finset.nonempty (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_156591 (h0 : group (non_assoc_semiring (semiring (semiring congr_arg_kind)))) : normalizer_condition (non_assoc_semiring (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_156592 (h0 : not (add_group (distrib (has_nnnorm char)) -> false)) : @is_add_cyclic.{0} (distrib.{0} (has_nnnorm.{0} char)) (@classical.by_contradiction'.{1} (add_group.{0} (distrib.{0} (has_nnnorm.{0} char))) h0)  := sorry --non-trivial
lemma new_lemma_156593 (h0 : ring (dlist (has_inv fun_info))) : is_domain (dlist (has_inv fun_info)) := sorry --non-trivial
lemma new_lemma_156594 (h0 : not (complete_lattice (bin_tree congr_arg_kind) -> false)) : @is_compactly_generated.{0} (bin_tree.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (complete_lattice.{0} (bin_tree.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_156595 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem ring)) : @strong_rank_condition.{0} (has_top.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) ring.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (has_top.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_156596 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (non_assoc_semiring.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (non_assoc_semiring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_156597 (h0 : functor.add_const (uniform_space (mul_zero_class unsigned)) unsigned) : @separated_space.{0} (mul_zero_class.{0} unsigned) (@functor.add_const.run.{0 0} (uniform_space.{0} (mul_zero_class.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_156598 (h0 : ordered_comm_monoid (ring (finset environment.implicit_infer_kind))) : has_exists_mul_of_le (ring (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_156599 (h1 : ring (encodable linarith.comp_source)) : is_domain (encodable linarith.comp_source) := sorry --non-trivial
lemma new_lemma_156600 (h2 : add_group (add_cancel_comm_monoid char)) : is_add_cyclic (add_cancel_comm_monoid char) := sorry --non-trivial
lemma new_lemma_156601 (h0 : list (left_cancel_monoid (semiring (option (left_cancel_monoid congr_arg_kind))))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_156602 (h0 : add_cancel_comm_monoid (ordered_ring empty) -> add_cancel_comm_monoid (ordered_ring empty) -> Prop) : is_total (add_cancel_comm_monoid (ordered_ring empty)) h0 := sorry --non-trivial
lemma new_lemma_156603 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @complete_space.{1} (semigroup.{1} Type) (@function.extfun_app.{3 2} (Type 1) uniform_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 uniform_space.{1}) (semigroup.{1} Type))  := sorry --non-trivial
lemma new_lemma_156604 (h0 : functor.add_const (complete_lattice (has_add linarith.comp)) pos) : @complete_lattice.is_Sup_finite_compact.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_add.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_156605 (h0 : add_monoid (add_cancel_monoid congr_arg_kind)) : add_monoid.fg (add_cancel_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_156606 (h0 : function.extfun nat fin) : @complete_lattice.is_Sup_finite_compact.{0} (generalized_boolean_algebra.{0} real) (@matrix.vec_empty.{0} (complete_lattice.{0} (generalized_boolean_algebra.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_156607 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @preconnected_space.{0} (add_cancel_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (add_cancel_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_156608 (h0 : functor.add_const (topological_space (ordered_ring unsigned)) congr_arg_kind) : @path_connected_space.{0} (ordered_ring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_ring.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_156609 (h0 : monoid (canonically_linear_ordered_monoid (has_neg real))) : monoid.fg (canonically_linear_ordered_monoid (has_neg real)) := sorry --non-trivial
lemma new_lemma_156610 (h0 : topological_space (comm_semigroup Type)) : irreducible_space (comm_semigroup Type) := sorry --non-trivial
lemma new_lemma_156611 (h0 : add_group (semigroup (has_neg (finset (finset (finset (has_Inf pos))))))) : is_add_cyclic (semigroup (has_neg (finset (finset (finset (has_Inf pos)))))) := sorry --non-trivial
lemma new_lemma_156612 (h0 : list (has_bot (semiring empty))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_156613 (h0 : prod (semigroup unsigned) (semigroup unsigned)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_156614 (h0 : ring (has_sub (has_top unsigned))) : strong_rank_condition (has_sub (has_top unsigned)) := sorry --non-trivial
lemma new_lemma_156615 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (comm_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_156616 (h0 : list (add_comm_monoid (has_neg (finset environment.implicit_infer_kind)))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_156617 (h0 : topological_space (add_group (measurable_space.dynkin_system empty))) : totally_disconnected_space (add_group (measurable_space.dynkin_system empty)) := sorry --non-trivial
lemma new_lemma_156618 (h0 : function.extfun Type group) : @group.fg.{0} (@id.{2} Type to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} h0 (@id.{2} Type to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_156619 (h0 : topological_space (boolean_algebra.core unsigned)) : sequential_space (boolean_algebra.core unsigned) := sorry --non-trivial
lemma new_lemma_156620 (h0 : filter (add_cancel_monoid (has_pos_part Type))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_156621 (h0 : functor.comp topological_space canonically_ordered_comm_semiring Type) : @preconnected_space.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} canonically_ordered_comm_semiring.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_156622 (h0 : functor.add_const (group (linear_order unsigned)) empty) : @normalizer_condition.{0} (linear_order.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (linear_order.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_156623 (h0 : function.extfun (Type 1) complete_lattice) : @is_compactly_generated.{1} (has_nndist.{1} Type) (@function.extfun_app.{3 2} (Type 1) complete_lattice.{1} h0 (has_nndist.{1} Type))  := sorry --non-trivial
lemma new_lemma_156624 (h0 : not (function.extfun (finset Type) (has_mem.mem (measurable_space empty)) -> false)) : @totally_separated_space.{0} (measurable_space.{0} empty) (@finset.pi.empty.{1 0} Type topological_space.{0} (measurable_space.{0} empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (measurable_space.{0} empty)) (@classical.by_contradiction'.{0} (function.extfun.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (measurable_space.{0} empty))) h0) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_156625 (h0 : ring (complete_semilattice_Sup (random_gen (has_norm (random_gen fun_info))))) : is_domain (complete_semilattice_Sup (random_gen (has_norm (random_gen fun_info)))) := sorry --non-trivial
lemma new_lemma_156626 (h0 : topological_space (with_bot (semiring num))) : path_connected_space (with_bot (semiring num)) := sorry --non-trivial
lemma new_lemma_156627 (h0 : function.extfun (Type 1) group) : @normalizer_condition.{1} (has_pos_part.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} h0 (has_pos_part.{1} Type))  := sorry --non-trivial
lemma new_lemma_156628 (h2 : function.extfun (Type -> Type) (function.extfun Type)) : list.nodup (function.extfun_app (function.extfun_app h2 list) (has_norm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_156629 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (normed_comm_ring unsigned)) := sorry --non-trivial
lemma new_lemma_156630 (h0 : ring (with_one (has_norm unsigned))) : is_domain (with_one (has_norm unsigned)) := sorry --non-trivial
lemma new_lemma_156631 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (linear_ordered_comm_ring.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (linear_ordered_comm_ring.{0} num))  := sorry --non-trivial
lemma new_lemma_156632 (h0 : ring (has_append (canonically_ordered_monoid linarith.ineq))) : is_domain (has_append (canonically_ordered_monoid linarith.ineq)) := sorry --non-trivial
lemma new_lemma_156633 (h0 : not (function.extfun Type add_monoid -> false)) : @add_monoid.fg.{0} (semiring.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_monoid.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_monoid.{0}) h0) (semiring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_156634 (h0 : group (has_one (semiring (semiring linarith.comp)))) : normalizer_condition (has_one (semiring (semiring linarith.comp))) := sorry --non-trivial
lemma new_lemma_156635 (h0 : functor.add_const (ordered_add_comm_monoid (has_neg Type)) name) : @archimedean.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (ordered_add_comm_monoid.{1} (has_neg.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_156636 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (ordered_ring.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_ring.{0} empty))  := sorry --non-trivial
lemma new_lemma_156637 (h0 : functor.add_const (ordered_add_comm_monoid nnreal) congr_arg_kind) : archimedean nnreal := sorry --non-trivial
lemma new_lemma_156638 (h0 : ring (nondiscrete_normed_field (has_ssubset (add_comm_semigroup linarith.ineq)))) : strong_rank_condition (nondiscrete_normed_field (has_ssubset (add_comm_semigroup linarith.ineq))) := sorry --non-trivial
lemma new_lemma_156639 (h0 : complete_lattice Type) : is_atomistic Type := sorry --non-trivial
lemma new_lemma_156640 (h0 : functor.add_const (complete_lattice (normed_lattice_add_comm_group name)) (has_add Type)) : @is_compactly_generated.{0} (normed_lattice_add_comm_group.{0} name) (@functor.add_const.run.{0 1} (complete_lattice.{0} (normed_lattice_add_comm_group.{0} name)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_156641 (h0 : topological_space (ordered_comm_monoid (ring Type))) : topological_space.separable_space (ordered_comm_monoid (ring Type)) := sorry --non-trivial
lemma new_lemma_156642 (h0 : has_mem.mem string_imp has_emptyc.emptyc) : @totally_separated_space.{0} string_imp (@finset.pi.empty.{1 0} Type topological_space.{0} string_imp h0)  := sorry --non-trivial
lemma new_lemma_156643 (h0 : not (cancel_comm_monoid_with_zero (plift congr_arg_kind) -> false)) : @unique_factorization_monoid.{1} (plift.{1} congr_arg_kind) (@classical.by_contradiction'.{2} (cancel_comm_monoid_with_zero.{1} (plift.{1} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_156644 (h0 : functor.add_const (group (has_neg Type)) Type) : @is_cyclic.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 1} (group.{1} (has_neg.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_156645 (h0 : uniform_space (add_comm_monoid name)) : separated_space (add_comm_monoid name) := sorry --non-trivial
lemma new_lemma_156646 (h0 : group (add_cancel_monoid (option (option (option ennreal))))) : is_cyclic (add_cancel_monoid (option (option (option ennreal)))) := sorry --non-trivial
lemma new_lemma_156647 (h0 : uniform_space (boolean_algebra (comm_semigroup (has_Inf pos)))) : separated_space (boolean_algebra (comm_semigroup (has_Inf pos))) := sorry --non-trivial
lemma new_lemma_156648 (h0 : topological_space (normed_group (has_top num))) : totally_separated_space (normed_group (has_top num)) := sorry --non-trivial
lemma new_lemma_156649 (h0 : uniform_space (has_norm (has_norm congr_arg_kind))) : complete_space (has_norm (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_156650 (h0 : not (complete_lattice (left_cancel_semigroup empty) -> false)) : @is_compactly_generated.{0} (left_cancel_semigroup.{0} empty) (@classical.by_contradiction'.{1} (complete_lattice.{0} (left_cancel_semigroup.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_156651 (h0 : group (is_R_or_C unsigned)) : is_cyclic (is_R_or_C unsigned) := sorry --non-trivial
lemma new_lemma_156652 (h0 : topological_space (cancel_monoid (boolean_algebra.core (comm_group (comm_group name))))) : totally_disconnected_space (cancel_monoid (boolean_algebra.core (comm_group (comm_group name)))) := sorry --non-trivial
lemma new_lemma_156653 (h0 : filter (random_gen (random_gen (has_sdiff fun_info)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_156654 (h0 : fin has_zero.zero) : @irreducible_space.{0} (canonically_linear_ordered_monoid.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (canonically_linear_ordered_monoid.{0} linarith.comp)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_156655 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @path_connected_space.{0} (ordered_comm_ring.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (ordered_comm_ring.{0} real)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_156656 (h0 : filter (filter (semiring (semiring empty)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_156657 (h0 : topological_space (has_one (has_norm (linear_ordered_semiring unsigned)))) : t0_space (has_one (has_norm (linear_ordered_semiring unsigned))) := sorry --non-trivial
lemma new_lemma_156658 (h0 : functor.add_const Prop (has_pos_part Type)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_156659 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (has_to_string.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_to_string.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_156660 (h0 : list (non_assoc_semiring unsigned)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_156661 (h0 : add_group (boolean_algebra (has_add name))) : is_add_cyclic (boolean_algebra (has_add name)) := sorry --non-trivial
lemma new_lemma_156662 (h0 : topological_space (has_ssubset to_additive.value_type)) : normal_space (has_ssubset to_additive.value_type) := sorry --non-trivial
lemma new_lemma_156663 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (uniform_space unsigned)) := sorry --non-trivial
lemma new_lemma_156664 (h0 : uniform_space (has_nnnorm fun_info)) : complete_space (has_nnnorm fun_info) := sorry --non-trivial
lemma new_lemma_156665 (h0 : topological_space (complete_distrib_lattice (has_add Type))) : sequential_space (complete_distrib_lattice (has_add Type)) := sorry --non-trivial
lemma new_lemma_156666 (h0 h1 : not (multiset (distrib reducibility_hints) -> false)) : multiset.disjoint (classical.by_contradiction' h0) (classical.by_contradiction' h1) := sorry --non-trivial
lemma new_lemma_156667 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (semigroup.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type add_group.{0} h0 (semigroup.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_156668 (h0 : topological_space (mul_zero_class Type)) : regular_space (mul_zero_class Type) := sorry --non-trivial
lemma new_lemma_156669 (h0 : topological_space (has_inter unsigned)) : path_connected_space (has_inter unsigned) := sorry --non-trivial
lemma new_lemma_156670 (h0 : ring (has_norm (random_gen (random_gen (has_norm linarith.ineq))))) : rank_condition (has_norm (random_gen (random_gen (has_norm linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_156671 (h0 : ring (normed_group (random_gen (random_gen (has_inv linarith.ineq))))) : rank_condition (normed_group (random_gen (random_gen (has_inv linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_156672 (h0 : set.set_semiring to_additive.value_type) (h1 : to_additive.value_type) : set.set_semiring.down h0 h1 := sorry --non-trivial
lemma new_lemma_156673 (h0 : functor.add_const (complete_lattice (semigroup pos)) pos) : @is_atomistic.{0} (semigroup.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (semigroup.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_156674 (h0 : function.extfun Type monoid) : monoid.fg real := sorry --non-trivial
lemma new_lemma_156675 (h0 : topological_space (canonically_ordered_comm_semiring (finset name))) : loc_path_connected_space (canonically_ordered_comm_semiring (finset name)) := sorry --non-trivial
lemma new_lemma_156676 (h0 : functor.add_const (topological_space (ring Type)) (has_to_string (has_to_string pos))) : @irreducible_space.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (ring.{1} Type)) (has_to_string.{0} (has_to_string.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_156677 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 linarith.comp) := sorry --non-trivial
lemma new_lemma_156678 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (has_pos_part.{0} real) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_pos_part.{0} real))  := sorry --non-trivial
lemma new_lemma_156679 (h0 : topological_space (cancel_monoid (comm_group name))) : discrete_topology (cancel_monoid (comm_group name)) := sorry --non-trivial
lemma new_lemma_156680 (h0 : has_lt (nondiscrete_normed_field (nondiscrete_normed_field linarith.ineq))) : no_max_order (nondiscrete_normed_field (nondiscrete_normed_field linarith.ineq)) := sorry --non-trivial
lemma new_lemma_156681 (h0 : topological_space (linear_ordered_field congr_arg_kind)) : irreducible_space (linear_ordered_field congr_arg_kind) := sorry --non-trivial
lemma new_lemma_156682 (h0 : ordered_comm_monoid (ordered_comm_ring (has_bot real))) : has_exists_mul_of_le (ordered_comm_ring (has_bot real)) := sorry --non-trivial
lemma new_lemma_156683 (h0 : ring (boolean_algebra (boolean_algebra unsigned))) : is_principal_ideal_ring (boolean_algebra (boolean_algebra unsigned)) := sorry --non-trivial
lemma new_lemma_156684 (h1 : ring (normed_group (add_left_cancel_monoid (normed_group string_imp)))) : strong_rank_condition (normed_group (add_left_cancel_monoid (normed_group string_imp))) := sorry --non-trivial
lemma new_lemma_156685 (h0 : topological_space (has_nndist (has_add ennreal))) : sequential_space (has_nndist (has_add ennreal)) := sorry --non-trivial
lemma new_lemma_156686 (h0 : ring (has_zero ennreal)) : is_principal_ideal_ring (has_zero ennreal) := sorry --non-trivial
lemma new_lemma_156687 (h0 : complete_lattice (sub_neg_monoid (has_Inf Type))) : complete_lattice.is_Sup_finite_compact (sub_neg_monoid (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_156688 (h0 : functor.add_const (ring nnreal) (semiring num)) : @is_principal_ideal_ring.{0} nnreal (@functor.add_const.run.{0 0} (ring.{0} nnreal) (semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_156689 (h0 : function.extfun Type ring) : @is_domain.{0} (normed_group.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} h0 (normed_group.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_156690 (h0 : topological_space (left_cancel_semigroup (semiring unsigned))) : t1_space (left_cancel_semigroup (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_156691 (h0 : not (group (encodable linarith.comp_source) -> false)) : @group.fg.{0} (encodable.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (group.{0} (encodable.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_156692 (h0 : not (ring (add_monoid linarith.comp_source) -> false)) : @rank_condition.{0} (add_monoid.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (ring.{0} (add_monoid.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_156693 (h0 : functor.add_const (list (partial_order empty)) num) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156694 (h0 : group (has_add ennreal)) : is_simple_group (has_add ennreal) := sorry --non-trivial
lemma new_lemma_156695 (h0 : function.extfun Type group) : @group.fg.{0} (boolean_algebra.{0} real) (@function.extfun_app.{2 1} Type group.{0} h0 (boolean_algebra.{0} real))  := sorry --non-trivial
lemma new_lemma_156696 (h0 : not (complete_lattice (complete_semilattice_Sup empty) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (complete_semilattice_Sup.{0} empty) (@classical.by_contradiction'.{1} (complete_lattice.{0} (complete_semilattice_Sup.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_156697 (h0 : topological_space (finset (finset (finset (finset linarith.comp))))) : loc_path_connected_space (finset (finset (finset (finset linarith.comp)))) := sorry --non-trivial
lemma new_lemma_156698 (h0 : functor.add_const (complete_lattice (left_cancel_semigroup empty)) empty) : @complete_lattice.is_Sup_finite_compact.{0} (left_cancel_semigroup.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (left_cancel_semigroup.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_156699 (h0 : pseudo_metric_space (comm_ring reducibility_hints)) (h1 : add_monoid (comm_ring reducibility_hints)) : has_lipschitz_add (comm_ring reducibility_hints) := sorry --non-trivial
lemma new_lemma_156700 (h0 : filter (has_to_string (option num))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_156701 (h0 : functor.add_const (function.extfun Type topological_space) (finset pos)) : @preirreducible_space.{0} (normed_comm_ring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) (finset.{0} pos) h0) (normed_comm_ring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_156702 (h0 : set (has_append to_additive.value_type)) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_156703 (h0 : functor.add_const (ring (monoid empty)) unsigned) : @strong_rank_condition.{0} (monoid.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (monoid.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_156704 (h4 : preorder (mul_one_class char)) (h5 : set (mul_one_class char)) : set.is_pwo h5 := sorry --non-trivial
lemma new_lemma_156705 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (add_left_cancel_semigroup.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_left_cancel_semigroup.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_156706 (h0 : functor.add_const (ring (canonically_linear_ordered_monoid unsigned)) ennreal) : @is_principal_ideal_ring.{0} (canonically_linear_ordered_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (canonically_linear_ordered_monoid.{0} unsigned)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_156707 (h0 : topological_space (has_pos_part real)) : preconnected_space (has_pos_part real) := sorry --non-trivial
lemma new_lemma_156708 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (linear_ordered_field name)) := sorry --non-trivial
lemma new_lemma_156709 (h0 : topological_space (has_bot (has_Inf real))) : totally_disconnected_space (has_bot (has_Inf real)) := sorry --non-trivial
lemma new_lemma_156710 (h0 : function.extfun Type ring) : @is_domain.{0} (semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_156711 (h0 : group (fintype (random_gen fun_info))) : is_cyclic (fintype (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_156712 (h0 : fin has_zero.zero) : @normalizer_condition.{0} (add_comm_monoid.{0} pos) (@matrix.vec_empty.{0} (group.{0} (add_comm_monoid.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_156713 (h0 : topological_space (option (option (option (option (option unsigned)))))) : normal_space (option (option (option (option (option unsigned))))) := sorry --non-trivial
lemma new_lemma_156714 (h0 : topological_space (boolean_algebra (has_add real))) : normal_space (boolean_algebra (has_add real)) := sorry --non-trivial
lemma new_lemma_156715 (h0 : cancel_comm_monoid_with_zero (has_neg (has_neg Type))) : unique_factorization_monoid (has_neg (has_neg Type)) := sorry --non-trivial
lemma new_lemma_156716 (h0 : functor.add_const (topological_space (has_pos_part linarith.comp)) pos) : @preconnected_space.{0} (has_pos_part.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_pos_part.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_156717 (h0 : complete_lattice (with_bot linarith.comp)) : is_compactly_generated (with_bot linarith.comp) := sorry --non-trivial
lemma new_lemma_156718 (h0 : topological_space (with_one (has_top fun_info))) : totally_disconnected_space (with_one (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_156719 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (has_pos_part.{0} real) (@function.extfun_app.{2 1} Type add_group.{0} h0 (has_pos_part.{0} real))  := sorry --non-trivial
lemma new_lemma_156720 (h0 : functor.add_const (topological_space (has_nndist unsigned)) unsigned) : @loc_path_connected_space.{0} (has_nndist.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_156721 (h0 : topological_space (has_div linarith.comp_source)) (h1 : preorder (has_div linarith.comp_source)) : compact_Icc_space (has_div linarith.comp_source) := sorry --non-trivial
lemma new_lemma_156722 (h1 : add_group (semi_normed_ring string_imp)) : add_group.fg (semi_normed_ring string_imp) := sorry --non-trivial
lemma new_lemma_156723 (h0 : ring (normed_comm_ring (option (option (option empty))))) : is_principal_ideal_ring (normed_comm_ring (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_156724 (h2 : not (add_group (random_gen char) -> false)) : @is_add_cyclic.{0} (random_gen.{0} char) (@classical.by_contradiction'.{1} (add_group.{0} (random_gen.{0} char)) h2)  := sorry --non-trivial
lemma new_lemma_156725 (h0 : group (measurable_space.dynkin_system num)) : normalizer_condition (measurable_space.dynkin_system num) := sorry --non-trivial
lemma new_lemma_156726 (h0 : is_empty unit) : @trace_call_stack.{0} Prop (@is_empty.elim.{1 1} unit h0 (λ (a : unit), Prop))  := sorry --non-trivial
lemma new_lemma_156727 (h0 : complete_lattice (denumerable linarith.ineq)) : complete_lattice.is_Sup_finite_compact (denumerable linarith.ineq) := sorry --non-trivial
lemma new_lemma_156728 (h0 : topological_space (has_inv (random_gen linarith.ineq))) : totally_disconnected_space (has_inv (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_156729 (h0 : functor.add_const (monoid (has_edist unsigned)) (semiring (semiring empty))) : @monoid.fg.{0} (has_edist.{0} unsigned) (@functor.add_const.run.{0 0} (monoid.{0} (has_edist.{0} unsigned)) (semiring.{0} (semiring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_156730 (h0 : topological_space (semiring (option empty))) : locally_compact_space (semiring (option empty)) := sorry --non-trivial
lemma new_lemma_156731 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (semiring.{0} (has_top.{0} (has_top.{0} (has_top.{0} (has_top.{0} fun_info))))) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (semiring.{0} (has_top.{0} (has_top.{0} (has_top.{0} (has_top.{0} fun_info))))))  := sorry --non-trivial
lemma new_lemma_156732 (h0 : functor.add_const (topological_space (has_pos_part Type)) name) : @preconnected_space.{1} (has_pos_part.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_pos_part.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_156733 (h0 : ring (sub_neg_monoid (has_neg name))) : is_domain (sub_neg_monoid (has_neg name)) := sorry --non-trivial
lemma new_lemma_156734 (h0 : ring (has_add (has_neg (has_neg linarith.comp)))) : is_domain (has_add (has_neg (has_neg linarith.comp))) := sorry --non-trivial
lemma new_lemma_156735 (h0 : group (boolean_algebra name)) : is_cyclic (boolean_algebra name) := sorry --non-trivial
lemma new_lemma_156736 (h0 : filter (has_neg (has_Inf (finset pos)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_156737 (h0 : complete_lattice (with_one fun_info)) : complete_lattice.is_Sup_finite_compact (with_one fun_info) := sorry --non-trivial
lemma new_lemma_156738 (h1 : has_mem.mem (has_emptyc congr_arg_kind) has_emptyc.emptyc) : @normalizer_condition.{0} (has_emptyc.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type group.{0} (has_emptyc.{0} congr_arg_kind) h1)  := sorry --non-trivial
lemma new_lemma_156739 (h0 : list (normed_comm_ring (option ennreal))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_156740 (h0 : topological_space (has_nndist (ring (normed_comm_ring pos)))) : totally_disconnected_space (has_nndist (ring (normed_comm_ring pos))) := sorry --non-trivial
lemma new_lemma_156741 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (has_neg.{0} linarith.comp) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (has_neg.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_156742 (h0 : group (has_edist empty)) : normalizer_condition (has_edist empty) := sorry --non-trivial
lemma new_lemma_156743 (h0 : functor.add_const (function.extfun Type uniform_space) (has_neg (finset pos))) : @complete_space.{0} (has_nndist.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) (has_neg.{0} (finset.{0} pos)) h0) (has_nndist.{0} pos))  := sorry --non-trivial
lemma new_lemma_156744 (h0 : topological_space (normed_field (comm_ring char))) : path_connected_space (normed_field (comm_ring char)) := sorry --non-trivial
lemma new_lemma_156745 (h0 : topological_space (has_compl (has_nnnorm (has_nnnorm char)))) : totally_disconnected_space (has_compl (has_nnnorm (has_nnnorm char))) := sorry --non-trivial
lemma new_lemma_156746 (h0 : not (function.extfun Type filter -> false)) : filter.ne_bot (function.extfun_app (classical.by_contradiction' h0) (with_one linarith.comp)) := sorry --non-trivial
lemma new_lemma_156747 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @unique_factorization_monoid.{0} (semigroup.{0} (option.{0} unsigned)) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 cancel_comm_monoid_with_zero.{0}) (semigroup.{0} (option.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_156748 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (add_comm_monoid empty)) := sorry --non-trivial
lemma new_lemma_156749 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (simple_graph.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (simple_graph.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_156750 (h0 : functor.add_const (ring (preorder unsigned)) unsigned) : @strong_rank_condition.{0} (preorder.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (preorder.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_156751 (h0 : topological_space (normed_field linarith.ineq) -> Prop) (h1 : Exists (fun (x : topological_space (normed_field linarith.ineq)), h0 x)) : @t0_space.{0} (normed_field.{0} linarith.ineq) (@classical.some.{1} (topological_space.{0} (normed_field.{0} linarith.ineq)) h0 h1)  := sorry --non-trivial
lemma new_lemma_156752 (h0 : functor.add_const (group (boolean_algebra.core pos)) pos) : @group.fg.{0} (boolean_algebra.core.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (boolean_algebra.core.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_156753 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (ordered_comm_monoid.{0} (has_add.{0} linarith.comp)) (@function.extfun_app.{2 1} Type ring.{0} h0 (ordered_comm_monoid.{0} (has_add.{0} linarith.comp)))  := sorry --non-trivial
lemma new_lemma_156754 (h0 : ring (denumerable (random_gen (random_gen (random_gen string_imp))))) : rank_condition (denumerable (random_gen (random_gen (random_gen string_imp)))) := sorry --non-trivial
lemma new_lemma_156755 (h0 : ring (random_gen reducibility_hints)) : rank_condition (random_gen reducibility_hints) := sorry --non-trivial
lemma new_lemma_156756 (h0 : filter (distrib_lattice (lex (fintype (comm_ring char))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_156757 (h0 : ring (has_union (has_top num))) : is_domain (has_union (has_top num)) := sorry --non-trivial
lemma new_lemma_156758 (h0 : topological_space (complete_semilattice_Sup (random_gen (random_gen (random_gen linarith.ineq))))) : t0_space (complete_semilattice_Sup (random_gen (random_gen (random_gen linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_156759 (h0 : add_group (has_one linarith.comp)) : is_add_cyclic (has_one linarith.comp) := sorry --non-trivial
lemma new_lemma_156760 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (boolean_algebra.core.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.core.{0} name))  := sorry --non-trivial
lemma new_lemma_156761 (h0 : function.extfun (finset Type) (has_mem.mem (has_top num))) : @complete_lattice.is_Sup_finite_compact.{0} (has_top.{0} num) (@finset.pi.empty.{1 0} Type complete_lattice.{0} (has_top.{0} num) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_top.{0} num)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_156762 (h0 : functor.add_const (topological_space (semigroup pos)) (finset environment.implicit_infer_kind)) : @sequential_space.{0} (semigroup.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} pos)) (finset.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_156763 (h0 : not (topological_space (add_group unsigned) -> false)) : @locally_compact_space.{0} (add_group.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (add_group.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_156764 (h0 : prod (partial_order (ordered_ring empty)) (partial_order (ordered_ring empty))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_156765 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (encodable.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (encodable.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_156766 (h0 : functor.add_const (topological_space (complete_distrib_lattice environment.implicit_infer_kind)) name) : @preirreducible_space.{0} (complete_distrib_lattice.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_156767 (h0 : functor.add_const (topological_space (boolean_algebra name)) (boolean_algebra Type)) : @irreducible_space.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.{0} name)) (boolean_algebra.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_156768 (h0 : not (functor.comp add_group has_compl linarith.ineq -> false)) : @is_add_cyclic.{0} (has_compl.{0} linarith.ineq) (@functor.comp.run.{0 0 0} add_group.{0} has_compl.{0} linarith.ineq (@classical.by_contradiction'.{1} (functor.comp.{0 0 0} add_group.{0} has_compl.{0} linarith.ineq) h0))  := sorry --non-trivial
lemma new_lemma_156769 (h0 : topological_space (has_lt char)) (h1 : preorder (has_lt char)) : order_closed_topology (has_lt char) := sorry --non-trivial
lemma new_lemma_156770 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (with_one.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_one.{0} num))  := sorry --non-trivial
lemma new_lemma_156771 (h0 : list (add_cancel_monoid (has_pos_part (has_pos_part (has_pos_part (has_pos_part pos)))))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_156772 (h0 : topological_space (add_left_cancel_monoid (has_ssubset to_additive.value_type))) : path_connected_space (add_left_cancel_monoid (has_ssubset to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_156773 (h0 : ring (boolean_algebra.core (add_comm_monoid environment.implicit_infer_kind))) : strong_rank_condition (boolean_algebra.core (add_comm_monoid environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_156774 (h0 : complete_lattice (has_pos_part (finset (has_add pos)))) : complete_lattice.is_Sup_finite_compact (has_pos_part (finset (has_add pos))) := sorry --non-trivial
lemma new_lemma_156775 (h0 : function.extfun Type (functor.comp topological_space cancel_monoid)) : @irreducible_space.{0} (cancel_monoid.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} cancel_monoid.{0} name (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} cancel_monoid.{0}) h0 name))  := sorry --non-trivial
lemma new_lemma_156776 (h0 : not (monoid (add_group num) -> false)) : @monoid.fg.{0} (add_group.{0} num) (@classical.by_contradiction'.{1} (monoid.{0} (add_group.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_156777 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (finset.{0} (finset.{0} pos)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (finset.{0} (finset.{0} pos)))  := sorry --non-trivial
lemma new_lemma_156778 (h0 : not (ring Type -> false)) : @strong_rank_condition.{1} Type (@classical.by_contradiction'.{2} (ring.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_156779 (h0 : filter (measurable_space (semiring linarith.comp))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_156780 (h0 : topological_space (monoid_with_zero (option unsigned))) : preirreducible_space (monoid_with_zero (option unsigned)) := sorry --non-trivial
lemma new_lemma_156781 (h0 : add_group (mul_zero_class (option (option ennreal)))) : is_add_cyclic (mul_zero_class (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_156782 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (measurable_space.dynkin_system.{0} num) (@function.extfun_app.{2 1} Type semiring.{0} h0 (measurable_space.dynkin_system.{0} num))  := sorry --non-trivial
lemma new_lemma_156783 (h0 : functor.comp topological_space comm_group name) : @t1_space.{0} (comm_group.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} comm_group.{0} name h0)  := sorry --non-trivial
lemma new_lemma_156784 (h0 : group (has_add (has_Inf (has_neg name)))) : is_simple_group (has_add (has_Inf (has_neg name))) := sorry --non-trivial
lemma new_lemma_156785 (h0 : functor.add_const (topological_space name) num) : @loc_path_connected_space.{0} name (@functor.add_const.run.{0 0} (topological_space.{0} name) num h0)  := sorry --non-trivial
lemma new_lemma_156786 (h0 : has_neg (ordered_comm_monoid linarith.comp)) (h1 : function.extfun (nat -> Type) (function.extfun nat)) : @has_measurable_neg.{0} (ordered_comm_monoid.{0} linarith.comp) h0 (@matrix.vec_empty.{0} (measurable_space.{0} (ordered_comm_monoid.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h1 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_156787 (h0 : ordered_comm_monoid (has_Inf (has_neg (has_neg name)))) : has_exists_mul_of_le (has_Inf (has_neg (has_neg name))) := sorry --non-trivial
lemma new_lemma_156788 (h0 : topological_space (with_zero (has_nnnorm to_additive.value_type))) : path_connected_space (with_zero (has_nnnorm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_156789 (h0 : functor.comp topological_space with_zero fun_info) : @t0_space.{0} (with_zero.{0} fun_info) (@functor.comp.run.{0 0 0} topological_space.{0} with_zero.{0} fun_info h0)  := sorry --non-trivial
lemma new_lemma_156790 (h0 : functor.add_const (semiring (add_comm_monoid pos)) (has_add real)) : @is_noetherian_ring.{0} (add_comm_monoid.{0} pos) (@functor.add_const.run.{0 0} (semiring.{0} (add_comm_monoid.{0} pos)) (has_add.{0} real) h0)  := sorry --non-trivial
lemma new_lemma_156791 (h0 : ring (random_gen (mul_one_class linarith.comp_source))) : rank_condition (random_gen (mul_one_class linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_156792 (h0 : ring (cancel_monoid (semigroup Type))) : is_domain (cancel_monoid (semigroup Type)) := sorry --non-trivial
lemma new_lemma_156793 (h0 : complete_lattice (finset linarith.comp)) : is_compactly_generated (finset linarith.comp) := sorry --non-trivial
lemma new_lemma_156794 (h0 : group (ordered_comm_ring (ring Type))) : is_cyclic (ordered_comm_ring (ring Type)) := sorry --non-trivial
lemma new_lemma_156795 (h0 : complete_lattice (denumerable reducibility_hints)) : is_compactly_generated (denumerable reducibility_hints) := sorry --non-trivial
lemma new_lemma_156796 (h0 : add_monoid (add_comm_monoid (comm_group pos))) : add_monoid.fg (add_comm_monoid (comm_group pos)) := sorry --non-trivial
lemma new_lemma_156797 (h0 : prod (normed_linear_ordered_group unsigned) (normed_linear_ordered_group unsigned)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_156798 (h0 : function.extfun (Type 1) add_group) : @is_add_cyclic.{1} (has_neg.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_group.{1} h0 (has_neg.{1} Type))  := sorry --non-trivial
lemma new_lemma_156799 (h0 : monoid (sub_neg_monoid ennreal)) : monoid.fg (sub_neg_monoid ennreal) := sorry --non-trivial
lemma new_lemma_156800 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} char (@function.extfun_app.{2 1} Type ring.{0} h0 char)  := sorry --non-trivial
lemma new_lemma_156801 (h0 : function.extfun (Type 1) group) : @group.fg.{1} (mul_zero_class.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} h0 (mul_zero_class.{1} Type))  := sorry --non-trivial
lemma new_lemma_156802 (h0 : function.extfun Type topological_space) : @normal_space.{0} (simple_graph.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (simple_graph.{0} name))  := sorry --non-trivial
lemma new_lemma_156803 (h0 : functor.add_const (uniform_space (normed_comm_ring pos)) linarith.comp) : @complete_space.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (uniform_space.{0} (normed_comm_ring.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_156804 (h0 : uniform_space (has_star (semiring (semiring congr_arg_kind)))) : separated_space (has_star (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_156805 (h0 : filter (semiring (has_top fun_info))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_156806 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (has_neg_part.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_neg_part.{0} name))  := sorry --non-trivial
lemma new_lemma_156807 (h0 : topological_space (sub_neg_monoid pos)) : locally_compact_space (sub_neg_monoid pos) := sorry --non-trivial
lemma new_lemma_156808 (h0 : ring (complete_semilattice_Sup (has_top linarith.ineq))) : is_domain (complete_semilattice_Sup (has_top linarith.ineq)) := sorry --non-trivial
lemma new_lemma_156809 (h0 : topological_space (pseudo_metric_space unsigned)) : loc_path_connected_space (pseudo_metric_space unsigned) := sorry --non-trivial
lemma new_lemma_156810 (h0 : function.extfun Type ring) : @rank_condition.{0} (with_bot.{0} num) (@function.extfun_app.{2 1} Type ring.{0} h0 (with_bot.{0} num))  := sorry --non-trivial
lemma new_lemma_156811 (h0 : topological_space (monoid_with_zero unsigned)) : t0_space (monoid_with_zero unsigned) := sorry --non-trivial
lemma new_lemma_156812 (h0 : complete_lattice (metric_space (has_norm linarith.comp))) : complete_lattice.is_Sup_finite_compact (metric_space (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_156813 (h0 : ring (random_gen (mul_one_class fun_info))) : rank_condition (random_gen (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_156814 (h0 : ring (ring (has_neg_part Type))) : strong_rank_condition (ring (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_156815 (h0 : functor.add_const (group (boolean_algebra unsigned)) pos) : @is_simple_group.{0} (boolean_algebra.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (boolean_algebra.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_156816 (h0 : not (function.extfun Type topological_space -> false)) : @locally_compact_space.{0} (with_one.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (with_one.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_156817 (h0 : has_lt (has_nnnorm (mul_one_class fun_info))) : no_max_order (has_nnnorm (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_156818 (h0 : topological_space (add_cancel_monoid (comm_monoid name))) : totally_disconnected_space (add_cancel_monoid (comm_monoid name)) := sorry --non-trivial
lemma new_lemma_156819 (h0 : topological_space (linear_ordered_semiring (random_gen num))) : totally_disconnected_space (linear_ordered_semiring (random_gen num)) := sorry --non-trivial
lemma new_lemma_156820 (h0 : functor.add_const (topological_space (canonically_ordered_add_monoid unsigned)) congr_arg_kind) : @normal_space.{0} (canonically_ordered_add_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_add_monoid.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_156821 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t1_space.{0} (linear_ordered_field.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (linear_ordered_field.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_156822 (h0 : not (finset (left_cancel_semigroup num) -> false)) : finset.nonempty (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_156823 (h0 : topological_space (left_cancel_semigroup (semiring (semiring num)))) : totally_separated_space (left_cancel_semigroup (semiring (semiring num))) := sorry --non-trivial
lemma new_lemma_156824 (h0 : complete_lattice (has_Sup (has_bot unsigned))) : is_atomistic (has_Sup (has_bot unsigned)) := sorry --non-trivial
lemma new_lemma_156825 (h0 : group (canonically_ordered_monoid (has_add (has_add (has_Inf Type))))) : normalizer_condition (canonically_ordered_monoid (has_add (has_add (has_Inf Type)))) := sorry --non-trivial
lemma new_lemma_156826 (h0 : semiring (left_cancel_monoid (left_cancel_monoid unsigned))) : is_noetherian_ring (left_cancel_monoid (left_cancel_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_156827 (h0 : functor.add_const (topological_space (has_neg Type)) name) : @regular_space.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_neg.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_156828 (h0 : ring (has_ssubset (random_gen (comm_ring linarith.comp_source)))) : rank_condition (has_ssubset (random_gen (comm_ring linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_156829 (h3 : uniform_space (non_unital_non_assoc_semiring linarith.ineq)) : complete_space (non_unital_non_assoc_semiring linarith.ineq) := sorry --non-trivial
lemma new_lemma_156830 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @totally_disconnected_space.{0} fun_info (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) fun_info)  := sorry --non-trivial
lemma new_lemma_156831 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (generalized_boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (generalized_boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_156832 (h0 : ring (mul_zero_class (normed_comm_ring Type))) : rank_condition (mul_zero_class (normed_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_156833 (h0 : topological_space (with_one (has_top congr_arg_kind))) : totally_disconnected_space (with_one (has_top congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_156834 (h0 : functor.add_const (topological_space (has_add environment.implicit_infer_kind)) environment.implicit_infer_kind) : @normal_space.{0} (has_add.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_156835 (h0 : not (function.extfun Type uniform_space -> false)) : @complete_space.{0} (@id.{2} Type empty) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (@id.{2} Type empty))  := sorry --non-trivial
lemma new_lemma_156836 (h0 : topological_space (is_R_or_C empty)) : discrete_topology (is_R_or_C empty) := sorry --non-trivial
lemma new_lemma_156837 (h0 : topological_space (has_to_string (comm_group Type))) : discrete_topology (has_to_string (comm_group Type)) := sorry --non-trivial
lemma new_lemma_156838 (h0 : functor.add_const (complete_lattice (has_zero unsigned)) environment.implicit_infer_kind) : @is_compactly_generated.{0} (has_zero.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_zero.{0} unsigned)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_156839 (h0 : function.extfun Type ring) : @is_domain.{0} (has_Sup.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_Sup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_156840 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (has_inter.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_inter.{0} num))  := sorry --non-trivial
lemma new_lemma_156841 (h1 : measurable_space (nondiscrete_normed_field (mul_one_class enat))) (h2 : measure_theory.measure (nondiscrete_normed_field (mul_one_class enat))) : measure_theory.is_finite_measure h2 := sorry --non-trivial
lemma new_lemma_156842 (h0 : function.extfun nat fin) : @separated_space.{0} (normed_lattice_add_comm_group.{0} linarith.comp) (@matrix.vec_empty.{0} (uniform_space.{0} (normed_lattice_add_comm_group.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_156843 (h0 : ulower pnat) (h1 : ulower (ulower pnat)) : pnat.coprime (ulower.up h0) (ulower.up (id (id (ulower.up h1)))) := sorry --non-trivial
lemma new_lemma_156844 (h0 : ring (distrib (has_ssubset to_additive.value_type))) : rank_condition (distrib (has_ssubset to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_156845 (h0 : ring (ordered_cancel_add_comm_monoid pos)) : strong_rank_condition (ordered_cancel_add_comm_monoid pos) := sorry --non-trivial
lemma new_lemma_156846 (h0 : group (random_gen (random_gen (random_gen (random_gen string_imp))))) : group.fg (random_gen (random_gen (random_gen (random_gen string_imp)))) := sorry --non-trivial
lemma new_lemma_156847 (h0 : not (topological_space (with_one num) -> false)) : @totally_disconnected_space.{0} (with_one.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (with_one.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_156848 (h0 : semiring (has_add (has_neg pos))) : is_noetherian_ring (has_add (has_neg pos)) := sorry --non-trivial
lemma new_lemma_156849 (h0 : not (function.extfun Type topological_space -> false)) : @totally_separated_space.{0} (normed_group.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (normed_group.{0} num))  := sorry --non-trivial
lemma new_lemma_156850 (h0 : fin has_zero.zero) : @path_connected_space.{0} (right_cancel_semigroup.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (right_cancel_semigroup.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_156851 (h0 : add_group (fintype to_additive.value_type)) : is_add_cyclic (fintype to_additive.value_type) := sorry --non-trivial
lemma new_lemma_156852 (h0 : functor.add_const (group (ring pos)) environment.implicit_infer_kind) : @is_simple_group.{0} (ring.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (ring.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_156853 (h0 : topological_space (complete_distrib_lattice (normed_comm_ring environment.implicit_infer_kind))) : sequential_space (complete_distrib_lattice (normed_comm_ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_156854 (h0 : functor.add_const (topological_space (comm_group unsigned)) unsigned) : @t0_space.{0} (comm_group.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_156855 (h0 : functor.add_const (group (boolean_algebra linarith.comp)) pos) : @normalizer_condition.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (boolean_algebra.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_156856 (h0 : topological_space (has_add (mul_one_class (has_neg (has_nndist (mul_one_class pos)))))) : regular_space (has_add (mul_one_class (has_neg (has_nndist (mul_one_class pos))))) := sorry --non-trivial
lemma new_lemma_156857 (h0 : topological_space (add_cancel_monoid (normed_comm_ring (has_neg Type)))) : locally_compact_space (add_cancel_monoid (normed_comm_ring (has_neg Type))) := sorry --non-trivial
lemma new_lemma_156858 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (semigroup.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (semigroup.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_156859 (h0 : topological_space (has_top (random_gen (random_gen unsigned)))) : locally_compact_space (has_top (random_gen (random_gen unsigned))) := sorry --non-trivial
lemma new_lemma_156860 (h0 : function.extfun Type group) : @group.fg.{0} (option.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (option.{0} empty))  := sorry --non-trivial
lemma new_lemma_156861 (h0 : topological_space (cancel_monoid (option (option (option (option (option num))))))) : irreducible_space (cancel_monoid (option (option (option (option (option num)))))) := sorry --non-trivial
lemma new_lemma_156862 (h0 : finset (has_zero (has_nndist (has_neg Type)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_156863 (h0 : ring (simple_graph ereal)) : is_domain (simple_graph ereal) := sorry --non-trivial
lemma new_lemma_156864 (h0 : function.extfun Type ring) : @rank_condition.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} num))))) (@function.extfun_app.{2 1} Type ring.{0} h0 (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} num))))))  := sorry --non-trivial
lemma new_lemma_156865 (h0 : ring (simple_graph (mul_one_class char))) : is_domain (simple_graph (mul_one_class char)) := sorry --non-trivial
lemma new_lemma_156866 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (has_top.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_top.{0} empty))  := sorry --non-trivial
lemma new_lemma_156867 (h0 : group (denumerable (has_top fun_info))) : normalizer_condition (denumerable (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_156868 (h0 : functor.add_const (finset (comm_group pos)) pos) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156869 (h1 : complete_lattice (semiring (has_top (has_top (has_top congr_arg_kind))))) : complete_lattice.is_Sup_finite_compact (semiring (has_top (has_top (has_top congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_156870 (h0 : has_mem.mem group has_emptyc.emptyc) : @is_cyclic.{0} (with_bot.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) group.{0} h0) (with_bot.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_156871 (h0 : not (ring (semiring linarith.comp) -> false)) : @rank_condition.{0} (semiring.{0} linarith.comp) (@classical.by_contradiction'.{1} (ring.{0} (semiring.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_156872 (h0 : topological_space (has_add environment.implicit_infer_kind)) : irreducible_space (has_add environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_156873 (h0 : list (canonically_ordered_comm_semiring Type)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_156874 (h0 : functor.add_const (topological_space (add_comm_monoid name)) Type) : @path_connected_space.{0} (add_comm_monoid.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (add_comm_monoid.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_156875 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (normed_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (normed_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_156876 (h0 : set (fun_info -> mul_one_class (mul_one_class (mul_one_class (mul_one_class fun_info))))) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_156877 (h0 : function.extfun (Type 1) add_monoid) : @add_monoid.fg.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_monoid.{1} h0 (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_156878 (h0 : functor.add_const (complete_lattice (has_neg pos)) (comm_group name)) : @is_compactly_generated.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_neg.{0} pos)) (comm_group.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_156879 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (normed_lattice_add_comm_group.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_lattice_add_comm_group.{0} name))  := sorry --non-trivial
lemma new_lemma_156880 (h0 : char -> char) (h2 : char) : function.is_fixed_pt h0 h2 := sorry --non-trivial
lemma new_lemma_156881 (h0 : ring (has_le reducibility_hints)) : rank_condition (has_le reducibility_hints) := sorry --non-trivial
lemma new_lemma_156882 (h0 : normed_comm_ring (option ennreal) -> normed_comm_ring (option ennreal) -> Prop) : is_symm (normed_comm_ring (option ennreal)) h0 := sorry --non-trivial
lemma new_lemma_156883 (h0 : topological_space (has_nndist (add_comm_monoid (has_add (boolean_algebra.core Type))))) : t0_space (has_nndist (add_comm_monoid (has_add (boolean_algebra.core Type)))) := sorry --non-trivial
lemma new_lemma_156884 (h0 : complete_lattice (has_div (mul_one_class (mul_one_class (mul_one_class linarith.ineq))))) : is_compactly_generated (has_div (mul_one_class (mul_one_class (mul_one_class linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_156885 (h0 : ring (distrib_lattice (has_ssubset (has_norm (has_norm (with_bot to_additive.value_type)))))) : is_domain (distrib_lattice (has_ssubset (has_norm (has_norm (with_bot to_additive.value_type))))) := sorry --non-trivial
lemma new_lemma_156886 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : totally_separated_space nnreal := sorry --non-trivial
lemma new_lemma_156887 (h0 : topological_space (has_bot (has_Inf (has_Inf linarith.comp)))) : topological_space.separable_space (has_bot (has_Inf (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_156888 (h2 : add_group (has_append char)) : is_add_cyclic (has_append char) := sorry --non-trivial
lemma new_lemma_156889 (h0 : function.extfun nat fin) : @t1_space.{0} (has_bot.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (has_bot.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_156890 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (partial_order.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (partial_order.{0} empty))  := sorry --non-trivial
lemma new_lemma_156891 (h0 : functor.add_const (finset (linear_order empty)) (option (option empty))) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156892 (h0 : ring (ordered_cancel_add_comm_monoid (option num))) : is_domain (ordered_cancel_add_comm_monoid (option num)) := sorry --non-trivial
lemma new_lemma_156893 (h0 : complete_lattice (has_compl (random_gen (dlist fun_info)))) : is_compactly_generated (has_compl (random_gen (dlist fun_info))) := sorry --non-trivial
lemma new_lemma_156894 (h0 : complete_lattice (has_star unsigned)) : complete_lattice.is_Sup_finite_compact (has_star unsigned) := sorry --non-trivial
lemma new_lemma_156895 (h0 : ring (has_norm (has_inv (random_gen (random_gen linarith.comp_source))))) : is_domain (has_norm (has_inv (random_gen (random_gen linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_156896 (h0 : topological_space (has_Inf (has_add Type))) : totally_separated_space (has_Inf (has_add Type)) := sorry --non-trivial
lemma new_lemma_156897 (h0 : topological_space (finset (right_cancel_semigroup Type))) : totally_disconnected_space (finset (right_cancel_semigroup Type)) := sorry --non-trivial
lemma new_lemma_156898 (h0 : topological_space (has_top (semiring (has_norm congr_arg_kind)))) : t0_space (has_top (semiring (has_norm congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_156899 (h0 : complete_lattice (boolean_algebra.core (option ennreal))) : is_atomistic (boolean_algebra.core (option ennreal)) := sorry --non-trivial
lemma new_lemma_156900 (h0 : complete_lattice (has_add Type)) : is_compactly_generated (has_add Type) := sorry --non-trivial
lemma new_lemma_156901 (h0 : add_group (with_bot (random_gen to_additive.value_type))) : is_add_cyclic (with_bot (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_156902 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @t0_space.{0} (finset.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (finset.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_156903 (h0 : function.extfun Type topological_space) : @normal_space.{0} (linear_ordered_cancel_comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_cancel_comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_156904 (h0 : add_monoid (has_add (finset (has_add linarith.comp)))) : add_monoid.fg (has_add (finset (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_156905 (h0 : ring (add_cancel_comm_monoid (random_gen linarith.ineq))) : is_domain (add_cancel_comm_monoid (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_156906 (h0 : topological_space (ring (has_Inf (has_add linarith.comp)))) : t0_space (ring (has_Inf (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_156907 (h0 : complete_lattice (encodable (denumerable fun_info))) : is_compactly_generated (encodable (denumerable fun_info)) := sorry --non-trivial
lemma new_lemma_156908 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (cancel_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (cancel_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_156909 (h1 : monoid (normed_group (random_gen linarith.comp_source))) : monoid.fg (normed_group (random_gen linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_156910 (h0 : topological_space (boolean_algebra.core (has_add ennreal))) : normal_space (boolean_algebra.core (has_add ennreal)) := sorry --non-trivial
lemma new_lemma_156911 (h0 : monoid (has_inter ennreal)) : monoid.fg (has_inter ennreal) := sorry --non-trivial
lemma new_lemma_156912 (h0 : fin has_zero.zero) : @is_atomistic.{0} (has_pos_part.{0} name) (@matrix.vec_empty.{0} (complete_lattice.{0} (has_pos_part.{0} name)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_156913 (h1 : not (function.extfun Type uniform_space -> false)) : @complete_space.{0} (with_one.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h1) (with_one.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_156914 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (finset.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (finset.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_156915 (h0 : functor.add_const (function.extfun (Type 1) topological_space) (ring (finset linarith.comp))) : @topological_space.separable_space.{1} (has_zero.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) (ring.{0} (finset.{0} linarith.comp)) h0) (has_zero.{1} Type))  := sorry --non-trivial
lemma new_lemma_156916 (h0 : function.extfun Type topological_space) : @t0_space.{0} (has_star.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_star.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_156917 (h0 : topological_space (id to_additive.value_type)) : totally_disconnected_space (id to_additive.value_type) := sorry --non-trivial
lemma new_lemma_156918 (h0 : monoid (simple_graph name)) : monoid.fg (simple_graph name) := sorry --non-trivial
lemma new_lemma_156919 (h0 : complete_lattice (normed_group (has_norm num))) : is_compactly_generated (normed_group (has_norm num)) := sorry --non-trivial
lemma new_lemma_156920 (h0 : topological_space (has_union (semiring (has_norm congr_arg_kind)))) : path_connected_space (has_union (semiring (has_norm congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_156921 (h0 : functor.add_const (topological_space environment.implicit_infer_kind) (comm_group Type)) : @regular_space.{0} environment.implicit_infer_kind (@functor.add_const.run.{0 1} (topological_space.{0} environment.implicit_infer_kind) (comm_group.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_156922 (h0 : ring (linear_ordered_comm_group_with_zero (mul_one_class linarith.ineq))) : strong_rank_condition (linear_ordered_comm_group_with_zero (mul_one_class linarith.ineq)) := sorry --non-trivial
lemma new_lemma_156923 (h0 : ring (has_top (has_inv (random_gen linarith.ineq)))) : is_domain (has_top (has_inv (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_156924 (h0 : uniform_space (has_neg (mul_one_class (ring (ring Type))))) : separated_space (has_neg (mul_one_class (ring (ring Type)))) := sorry --non-trivial
lemma new_lemma_156925 (h0 : semiring (has_to_string (option (option num)))) : is_noetherian_ring (has_to_string (option (option num))) := sorry --non-trivial
lemma new_lemma_156926 (h0 : functor.add_const (filter real) Type) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156927 (h1 : set (has_le (mul_one_class environment.projection_info))) : set.finite h1 := sorry --non-trivial
lemma new_lemma_156928 (h0 : ring (has_pos_part environment.implicit_infer_kind)) : rank_condition (has_pos_part environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_156929 (h0 : functor.add_const (monoid (semigroup environment.implicit_infer_kind)) environment.implicit_infer_kind) : @monoid.fg.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (monoid.{0} (semigroup.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_156930 (h0 : functor.add_const (uniform_space (ordered_comm_ring name)) linarith.comp) : @separated_space.{0} (ordered_comm_ring.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (ordered_comm_ring.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_156931 (h0 : functor.add_const (uniform_space (finset linarith.comp)) Type) : @complete_space.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 1} (uniform_space.{0} (finset.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_156932 (h0 : functor.add_const (complete_lattice (canonically_ordered_comm_semiring Type)) pos) : @is_compactly_generated.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (complete_lattice.{1} (canonically_ordered_comm_semiring.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_156933 (h0 : list (cancel_monoid (boolean_algebra environment.implicit_infer_kind))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_156934 (h0 : functor.comp topological_space add_cancel_monoid environment.implicit_infer_kind) : @discrete_topology.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} topological_space.{0} add_cancel_monoid.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_156935 (h0 : monoid (add_comm_monoid empty)) : monoid.fg (add_comm_monoid empty) := sorry --non-trivial
lemma new_lemma_156936 (h0 : functor.add_const (uniform_space (partial_order congr_arg_kind)) unsigned) : @separated_space.{0} (partial_order.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (uniform_space.{0} (partial_order.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_156937 (h0 : complete_lattice (has_sub empty)) : is_atomistic (has_sub empty) := sorry --non-trivial
lemma new_lemma_156938 (h0 : add_group (has_neg_part (finset name))) : is_add_cyclic (has_neg_part (finset name)) := sorry --non-trivial
lemma new_lemma_156939 (h0 : topological_space (has_to_string (finset linarith.comp))) : t1_space (has_to_string (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_156940 (h0 : monoid (simple_graph Type)) : monoid.fg (simple_graph Type) := sorry --non-trivial
lemma new_lemma_156941 (h0 : complete_lattice (has_add (option (option (option (option ennreal)))))) : is_compactly_generated (has_add (option (option (option (option ennreal))))) := sorry --non-trivial
lemma new_lemma_156942 (h0 : group (has_sub (semiring congr_arg_kind))) : normalizer_condition (has_sub (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_156943 (h0 : function.extfun (Prop -> Type) (function.extfun Prop)) : classical.epsilon (function.extfun_app (function.extfun_app h0 (fun (x : Prop), Prop))) := sorry --non-trivial
lemma new_lemma_156944 (h0 : functor.add_const (cancel_comm_monoid_with_zero (semigroup Type)) linarith.comp) : @unique_factorization_monoid.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (cancel_comm_monoid_with_zero.{1} (semigroup.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_156945 (h0 : functor.add_const (topological_space (option ennreal)) num) : @path_connected_space.{0} (option.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (option.{0} ennreal)) num h0)  := sorry --non-trivial
lemma new_lemma_156946 (h0 : has_mem.mem fun_info has_zero.zero) : @is_cyclic.{0} fun_info (@multiset.pi.empty.{1 0} Type group.{0} fun_info h0)  := sorry --non-trivial
lemma new_lemma_156947 (h0 : not (function.extfun Type group -> false)) : @is_cyclic.{0} (has_union.{0} num) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (has_union.{0} num))  := sorry --non-trivial
lemma new_lemma_156948 (h0 : ring (add_comm_monoid pos)) : is_principal_ideal_ring (add_comm_monoid pos) := sorry --non-trivial
lemma new_lemma_156949 (h0 : add_monoid (add_cancel_monoid (option ennreal))) : add_monoid.fg (add_cancel_monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_156950 (h0 : add_monoid (option (semiring (semiring congr_arg_kind)))) : add_monoid.fg (option (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_156951 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (boolean_algebra.core.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (boolean_algebra.core.{0} name))  := sorry --non-trivial
lemma new_lemma_156952 (h0 : topological_space (metric_space (has_top (semiring linarith.comp)))) : locally_compact_space (metric_space (has_top (semiring linarith.comp))) := sorry --non-trivial
lemma new_lemma_156953 (h0 : group (complete_semilattice_Sup num)) : is_cyclic (complete_semilattice_Sup num) := sorry --non-trivial
lemma new_lemma_156954 (h0 : finset (cancel_monoid (option (option empty)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_156955 (h0 : topological_space (has_inv (has_inv (distrib_lattice to_additive.value_type)))) : path_connected_space (has_inv (has_inv (distrib_lattice to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_156956 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (has_Inf.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_group.{0} h0 (has_Inf.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_156957 (h0 : functor.add_const (finset (non_assoc_semiring unsigned)) unsigned) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156958 (h0 : ordered_add_comm_monoid (has_Inf (has_neg Type))) : archimedean (has_Inf (has_neg Type)) := sorry --non-trivial
lemma new_lemma_156959 (h0 : topological_space (generalized_boolean_algebra name)) : totally_disconnected_space (generalized_boolean_algebra name) := sorry --non-trivial
lemma new_lemma_156960 (h0 : functor.add_const (list (generalized_boolean_algebra pos)) Type) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156961 (h0 : add_group (topological_space (comm_ring linarith.comp_source))) : is_add_cyclic (topological_space (comm_ring linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_156962 (h0 : measurable_space (add_comm_semigroup std_gen)) (h1 : measure_theory.measure (add_comm_semigroup std_gen)) : measure_theory.is_finite_measure h1 := sorry --non-trivial
lemma new_lemma_156963 (h0 : not (add_group (semi_normed_comm_ring fun_info) -> false)) : @is_add_cyclic.{0} (semi_normed_comm_ring.{0} fun_info) (@classical.by_contradiction'.{1} (add_group.{0} (semi_normed_comm_ring.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_156964 (h0 : list (with_one (has_ssubset (has_ssubset fun_info)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_156965 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (distrib_lattice num)) := sorry --non-trivial
lemma new_lemma_156966 (h0 : prod (has_nndist name) (has_nndist name)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_156967 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (ring.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ring.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_156968 (h0 : semiring (measure_theory.measure_space (has_top (has_top empty)))) : is_noetherian_ring (measure_theory.measure_space (has_top (has_top empty))) := sorry --non-trivial
lemma new_lemma_156969 (h0 : ordered_add_comm_monoid (has_add linarith.comp)) : archimedean (has_add linarith.comp) := sorry --non-trivial
lemma new_lemma_156970 (h0 : topological_space (complete_distrib_lattice (option congr_arg_kind))) : locally_compact_space (complete_distrib_lattice (option congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_156971 (h0 : functor.add_const (topological_space (has_neg name)) pos) : @locally_compact_space.{0} (has_neg.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_156972 (h0 : functor.add_const (topological_space (boolean_algebra linarith.comp)) (finset linarith.comp)) : @path_connected_space.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} linarith.comp)) (finset.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_156973 (h0 : topological_space (div_inv_monoid string_imp)) : totally_disconnected_space (div_inv_monoid string_imp) := sorry --non-trivial
lemma new_lemma_156974 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (has_to_string environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_156975 (h2 : fintype to_additive.value_type -> filter (fintype to_additive.value_type)) : @path_connected_space.{0} (fintype.{0} to_additive.value_type) (@topological_space.mk_of_nhds.{0} (fintype.{0} to_additive.value_type) h2)  := sorry --non-trivial
lemma new_lemma_156976 (h0 : complete_lattice (comm_group (option pos))) : is_atomistic (comm_group (option pos)) := sorry --non-trivial
lemma new_lemma_156977 (h0 : topological_space (generalized_boolean_algebra (has_add name))) : t0_space (generalized_boolean_algebra (has_add name)) := sorry --non-trivial
lemma new_lemma_156978 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (linear_ordered_field.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (linear_ordered_field.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_156979 (h0 : filter (denumerable (has_inv (random_gen (add_left_cancel_monoid (random_gen (has_inv string_imp))))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_156980 (h0 : group (normed_field (has_Inf linarith.comp_source))) : is_cyclic (normed_field (has_Inf linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_156981 (h1 : complete_lattice (has_nnnorm (random_gen string_imp))) : is_compactly_generated (has_nnnorm (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_156982 (h0 : functor.add_const (topological_space (semigroup Type)) linarith.comp) : @t1_space.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (semigroup.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_156983 (h0 : topological_space pos) : path_connected_space pos := sorry --non-trivial
lemma new_lemma_156984 (h0 : has_mem.mem group has_emptyc.emptyc) : @is_cyclic.{0} (has_top.{0} num) (@function.extfun_app.{2 1} Type group.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) group.{0} h0) (has_top.{0} num))  := sorry --non-trivial
lemma new_lemma_156985 (h0 : functor.add_const (topological_space (generalized_boolean_algebra pos)) (ring (ring Type))) : @discrete_topology.{0} (generalized_boolean_algebra.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (generalized_boolean_algebra.{0} pos)) (ring.{1} (ring.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_156986 (h0 : topological_space (linear_ordered_add_comm_group char)) : t0_space (linear_ordered_add_comm_group char) := sorry --non-trivial
lemma new_lemma_156987 (h0 : functor.add_const (topological_space (complete_distrib_lattice pos)) Type) : @irreducible_space.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (complete_distrib_lattice.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_156988 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (has_to_string.{0} ennreal) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (has_to_string.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_156989 (h0 : functor.add_const (topological_space (add_cancel_monoid Type)) name) : @sequential_space.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (add_cancel_monoid.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_156990 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (monoid.{0} ennreal) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_156991 (h0 : ring (linear_ordered_field (mul_one_class (mul_one_class linarith.ineq)))) : is_domain (linear_ordered_field (mul_one_class (mul_one_class linarith.ineq))) := sorry --non-trivial
lemma new_lemma_156992 (h0 : functor.add_const (list (finset Type)) linarith.comp) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_156993 (h0 : functor.add_const (ordered_comm_monoid (cancel_monoid pos)) (has_add Type)) : @has_exists_mul_of_le.{0} (cancel_monoid.{0} pos) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (cancel_monoid.{0} pos)) (has_add.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_156994 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring unsigned)) unsigned) : @path_connected_space.{0} (canonically_ordered_comm_semiring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_comm_semiring.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_156995 (h0 : function.extfun Type group) : @normalizer_condition.{0} (measurable_space.{0} string_imp) (@function.extfun_app.{2 1} Type group.{0} h0 (measurable_space.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_156996 (h0 : filter (fintype (has_nnnorm linarith.comp_source))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_156997 (h0 : group (denumerable (has_nnnorm linarith.comp_source))) : group.fg (denumerable (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_156998 (h0 : add_group (free_add_monoid num)) : is_add_cyclic (free_add_monoid num) := sorry --non-trivial
lemma new_lemma_156999 (h0 : topological_space (has_inter ennreal)) : discrete_topology (has_inter ennreal) := sorry --non-trivial
lemma new_lemma_157000 (h0 : not (ring (normed_group congr_arg_kind) -> false)) : @strong_rank_condition.{0} (normed_group.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (ring.{0} (normed_group.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_157001 (h0 : functor.add_const (topological_space (semigroup pos)) linarith.comp) : @totally_separated_space.{0} (semigroup.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157002 (h0 : topological_space (with_bot (has_top linarith.comp_source))) : irreducible_space (with_bot (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_157003 (h0 : fin has_zero.zero) : @is_compactly_generated.{0} (has_Inf.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (has_Inf.{0} name))  := sorry --non-trivial
lemma new_lemma_157004 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (has_neg.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_neg.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157005 (h0 : not (function.extfun Type add_group -> false)) : @is_add_cyclic.{0} (distrib_lattice.{0} linarith.ineq) (@function.extfun_app.{2 1} Type add_group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_group.{0}) h0) (distrib_lattice.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_157006 (h0 : not (topological_space (complete_semilattice_Sup to_additive.value_type) -> false)) : @locally_compact_space.{0} (complete_semilattice_Sup.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (complete_semilattice_Sup.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_157007 (h0 : cancel_comm_monoid_with_zero (normed_lattice_add_comm_group (has_add linarith.comp))) : unique_factorization_monoid (normed_lattice_add_comm_group (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_157008 (h0 : functor.add_const (topological_space (semigroup Type)) linarith.comp) : @t0_space.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (semigroup.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157009 (h0 : group (denumerable (comm_ring char))) : is_cyclic (denumerable (comm_ring char)) := sorry --non-trivial
lemma new_lemma_157010 (h0 : finset (comm_group (boolean_algebra linarith.comp))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_157011 (h0 : uniform_space (semi_normed_comm_ring reducibility_hints)) : complete_space (semi_normed_comm_ring reducibility_hints) := sorry --non-trivial
lemma new_lemma_157012 (h0 : uniform_space (has_nndist (has_add (boolean_algebra.core environment.implicit_infer_kind)))) : separated_space (has_nndist (has_add (boolean_algebra.core environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_157013 (h1 : group (has_norm linarith.comp)) : normalizer_condition (has_norm linarith.comp) := sorry --non-trivial
lemma new_lemma_157014 (h0 : ring (has_norm (comm_ring linarith.ineq))) : rank_condition (has_norm (comm_ring linarith.ineq)) := sorry --non-trivial
lemma new_lemma_157015 (h1 : function.extfun Type topological_space) : @discrete_topology.{0} (with_bot.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (with_bot.{0} num))  := sorry --non-trivial
lemma new_lemma_157016 (h0 : functor.comp (functor.comp add_monoid has_neg_part) option unsigned) : @add_monoid.fg.{0} (has_neg_part.{0} (option.{0} unsigned)) (@functor.comp.run.{0 0 0} add_monoid.{0} has_neg_part.{0} (option.{0} unsigned) (@functor.comp.run.{0 0 0} (functor.comp.{0 0 0} add_monoid.{0} has_neg_part.{0}) option.{0} unsigned h0))  := sorry --non-trivial
lemma new_lemma_157017 (h0 : ring (with_bot (random_gen (random_gen (random_gen (random_gen fun_info)))))) : rank_condition (with_bot (random_gen (random_gen (random_gen (random_gen fun_info))))) := sorry --non-trivial
lemma new_lemma_157018 (h0 : function.extfun (finset Type) (has_mem.mem (measurable_space linarith.comp))) : @is_add_cyclic.{0} (measurable_space.{0} linarith.comp) (@finset.pi.empty.{1 0} Type add_group.{0} (measurable_space.{0} linarith.comp) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (measurable_space.{0} linarith.comp)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_157019 (h0 : topological_space (has_star (option unsigned))) : t0_space (has_star (option unsigned)) := sorry --non-trivial
lemma new_lemma_157020 (h0 : functor.add_const (ordered_comm_monoid (ordered_comm_monoid linarith.comp)) linarith.comp) : @has_exists_mul_of_le.{0} (ordered_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (ordered_comm_monoid.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157021 (h0 : ring (has_top (has_ssubset string_imp))) : rank_condition (has_top (has_ssubset string_imp)) := sorry --non-trivial
lemma new_lemma_157022 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (complete_semilattice_Sup.{0} string_imp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_semilattice_Sup.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_157023 (h0 : functor.add_const (add_group (canonically_linear_ordered_monoid real)) linarith.comp) : @is_add_cyclic.{0} (canonically_linear_ordered_monoid.{0} real) (@functor.add_const.run.{0 0} (add_group.{0} (canonically_linear_ordered_monoid.{0} real)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157024 (h1 : function.extfun Type ring) : @is_domain.{0} (measurable_space.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h1 (measurable_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_157025 (h1 : set (linear_ordered_comm_group_with_zero string_imp)) : set.finite h1 := sorry --non-trivial
lemma new_lemma_157026 (h0 : monoid (has_neg (has_nndist (has_neg Type)))) : monoid.fg (has_neg (has_nndist (has_neg Type))) := sorry --non-trivial
lemma new_lemma_157027 (h0 : set (has_compl (mul_one_class (mul_one_class reducibility_hints)))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_157028 (h0 : topological_space (has_top (has_top (has_top (has_top (has_top num)))))) : path_connected_space (has_top (has_top (has_top (has_top (has_top num))))) := sorry --non-trivial
lemma new_lemma_157029 (h0 : ring (add_cancel_monoid (has_pos_part Type))) : is_domain (add_cancel_monoid (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_157030 (h0 : group (distrib_lattice (has_compl (linear_ordered_cancel_add_comm_monoid linarith.comp_source)))) : is_cyclic (distrib_lattice (has_compl (linear_ordered_cancel_add_comm_monoid linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_157031 (h0 h1 : multiset (nondiscrete_normed_field (add_comm_semigroup linarith.ineq))) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_157032 (h0 : semiring (measurable_space congr_arg_kind)) : is_noetherian_ring (measurable_space congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157033 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (has_zero congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_157034 (h0 : functor.add_const (ring (has_to_string Type)) linarith.comp) : @is_domain.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (has_to_string.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157035 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (normed_linear_ordered_group.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_linear_ordered_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_157036 (h0 : functor.add_const (function.extfun Type list) Type) : palindrome (function.extfun_app (functor.add_const.run h0) (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_157037 (h0 : functor.comp ring has_neg_part unsigned) : @is_principal_ideal_ring.{0} (has_neg_part.{0} unsigned) (@functor.comp.run.{0 0 0} ring.{0} has_neg_part.{0} unsigned h0)  := sorry --non-trivial
lemma new_lemma_157038 (h0 : topological_space (has_zero (has_add pos))) : path_connected_space (has_zero (has_add pos)) := sorry --non-trivial
lemma new_lemma_157039 (h0 : functor.add_const (function.extfun Type topological_space) Type) : @irreducible_space.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) Type h0) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_157040 (h0 : functor.comp cancel_comm_monoid_with_zero mul_zero_class Type) : @unique_factorization_monoid.{1} (mul_zero_class.{1} Type) (@functor.comp.run.{1 1 1} cancel_comm_monoid_with_zero.{1} mul_zero_class.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_157041 (h0 : not (semiring (add_group linarith.comp) -> false)) : @is_noetherian_ring.{0} (add_group.{0} linarith.comp) (@classical.by_contradiction'.{1} (semiring.{0} (add_group.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_157042 (h0 : functor.add_const (semiring (finset pos)) (finset Type)) : @is_noetherian_ring.{0} (finset.{0} pos) (@functor.add_const.run.{0 1} (semiring.{0} (finset.{0} pos)) (finset.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_157043 (h0 : functor.comp ordered_comm_monoid has_to_string name) : @has_exists_mul_of_le.{0} (has_to_string.{0} name) (@functor.comp.run.{0 0 0} ordered_comm_monoid.{0} has_to_string.{0} name h0)  := sorry --non-trivial
lemma new_lemma_157044 (h0 : function.extfun nat fin) : @normalizer_condition.{1} (comm_semigroup.{1} Type) (@matrix.vec_empty.{1} (group.{1} (comm_semigroup.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_157045 (h0 : fin has_zero.zero) : @unique_factorization_monoid.{0} (canonically_linear_ordered_monoid.{0} real) (@matrix.vec_empty.{0} (cancel_comm_monoid_with_zero.{0} (canonically_linear_ordered_monoid.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_157046 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} num (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) num)  := sorry --non-trivial
lemma new_lemma_157047 (h0 : functor.add_const (uniform_space (comm_group linarith.comp)) linarith.comp) : @complete_space.{0} (comm_group.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (comm_group.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157048 (h0 : topological_space (add_cancel_monoid (cancel_monoid (cancel_monoid (ring (ring name)))))) : locally_compact_space (add_cancel_monoid (cancel_monoid (cancel_monoid (ring (ring name))))) := sorry --non-trivial
lemma new_lemma_157049 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : palindrome (function.extfun_app (function.extfun_app h0 list) (finset Type)) := sorry --non-trivial
lemma new_lemma_157050 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (has_inter.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (has_inter.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157051 (h0 : function.extfun (finset Type) (has_mem.mem (complete_semilattice_Sup num))) : @rank_condition.{0} (complete_semilattice_Sup.{0} num) (@finset.pi.empty.{1 0} Type ring.{0} (complete_semilattice_Sup.{0} num) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (complete_semilattice_Sup.{0} num)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_157052 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (has_neg.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_neg.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_157053 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (boolean_algebra.core.{0} name) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (boolean_algebra.core.{0} name))  := sorry --non-trivial
lemma new_lemma_157054 (h0 : list (cancel_monoid num)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_157055 (h0 : functor.add_const (topological_space (add_cancel_monoid pos)) pos) : @path_connected_space.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_157056 (h0 : fin has_zero.zero) : @path_connected_space.{0} (ordered_comm_monoid.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (ordered_comm_monoid.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_157057 (h0 : ordered_comm_monoid (add_cancel_monoid pos)) : has_exists_mul_of_le (add_cancel_monoid pos) := sorry --non-trivial
lemma new_lemma_157058 (h0 : complete_lattice (finset (ring linarith.comp))) : is_compactly_generated (finset (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_157059 (h1 : add_group (add_left_cancel_monoid char)) : is_add_cyclic (add_left_cancel_monoid char) := sorry --non-trivial
lemma new_lemma_157060 (h0 : group (has_neg_part ennreal)) : is_simple_group (has_neg_part ennreal) := sorry --non-trivial
lemma new_lemma_157061 (h0 h1 : multiset (has_lt string.iterator_imp)) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_157062 (h0 : function.extfun Type group) : @is_simple_group.{0} (ordered_cancel_add_comm_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type group.{0} h0 (ordered_cancel_add_comm_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_157063 (h0 : topological_space (mul_zero_class pos)) : t1_space (mul_zero_class pos) := sorry --non-trivial
lemma new_lemma_157064 (h0 : not (has_mem.mem (with_bot congr_arg_kind) has_emptyc.emptyc -> false)) : @is_domain.{0} (with_bot.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type ring.{0} (with_bot.{0} congr_arg_kind) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_bot.{0} congr_arg_kind) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_157065 (h1 : add_group (has_norm congr_arg_kind)) : is_add_cyclic (has_norm congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157066 (h0 : semiring (bin_tree congr_arg_kind)) : is_noetherian_ring (bin_tree congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157067 (h0 : semiring (has_union (has_norm empty))) : is_noetherian_ring (has_union (has_norm empty)) := sorry --non-trivial
lemma new_lemma_157068 (h0 : topological_space (ordered_comm_ring (has_neg linarith.comp))) : discrete_topology (ordered_comm_ring (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_157069 (h0 h1 : set real) (h2 : complex) : set.re_prod_im h0 h1 h2 := sorry --non-trivial
lemma new_lemma_157070 (h0 : functor.add_const (topological_space (semiring unsigned)) (semiring num)) : @normal_space.{0} (semiring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (semiring.{0} unsigned)) (semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_157071 (h0 : add_group (add_comm_monoid (metric_space to_additive.value_type))) : is_add_cyclic (add_comm_monoid (metric_space to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_157072 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @t0_space.{1} Type (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@finset.pi.empty.{2 2} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) topological_space.{1} h0) Type)  := sorry --non-trivial
lemma new_lemma_157073 (h0 : topological_space (boolean_algebra (finset linarith.comp))) : preconnected_space (boolean_algebra (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_157074 (h0 : complete_lattice (mul_zero_class (semiring unsigned))) : is_compactly_generated (mul_zero_class (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_157075 (h0 : group (random_gen char)) : group.fg (random_gen char) := sorry --non-trivial
lemma new_lemma_157076 (h0 : functor.add_const (ordered_add_comm_monoid (has_neg Type)) environment.implicit_infer_kind) : @archimedean.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (ordered_add_comm_monoid.{1} (has_neg.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_157077 (h0 : topological_space (has_add (has_pos_part Type))) : totally_separated_space (has_add (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_157078 (h0 : functor.add_const (topological_space (option unsigned)) pos) : @preconnected_space.{0} (option.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (option.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_157079 (h0 : set (has_nnnorm enat)) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_157080 (h0 : functor.add_const (finset (add_left_cancel_semigroup congr_arg_kind)) unsigned) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157081 (h0 : complete_lattice (random_gen empty)) : is_compactly_generated (random_gen empty) := sorry --non-trivial
lemma new_lemma_157082 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_157083 (h0 : functor.add_const (ring (finset pos)) unsigned) : @is_principal_ideal_ring.{0} (finset.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (finset.{0} pos)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_157084 (h3 : num -> Prop) : @infi.{0 1} Prop (@conditionally_complete_lattice.to_has_Inf.{0} Prop (@complete_lattice.to_conditionally_complete_lattice.{0} Prop Prop.complete_lattice)) num h3  := sorry --non-trivial
lemma new_lemma_157085 (h0 : functor.add_const (complete_lattice (has_add linarith.comp)) (ring Type)) : @is_compactly_generated.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 1} (complete_lattice.{0} (has_add.{0} linarith.comp)) (ring.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_157086 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (linear_ordered_field.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (linear_ordered_field.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_157087 (h0 : ring (finset num)) : strong_rank_condition (finset num) := sorry --non-trivial
lemma new_lemma_157088 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (denumerable.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (denumerable.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_157089 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (has_Inf.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_Inf.{0} pos))  := sorry --non-trivial
lemma new_lemma_157090 (h0 : topological_space (ordered_comm_ring congr_arg_kind)) : totally_disconnected_space (ordered_comm_ring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157091 (h0 : functor.add_const (filter (ring name)) pos) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157092 (h0 : topological_space (has_bot (has_neg (has_neg (has_neg pos))))) : t0_space (has_bot (has_neg (has_neg (has_neg pos)))) := sorry --non-trivial
lemma new_lemma_157093 (h0 : set (semi_normed_comm_ring to_additive.value_type)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_157094 (h0 : topological_space (has_inner unsigned congr_arg_kind)) : loc_path_connected_space (has_inner unsigned congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157095 (h0 : ring (distrib_lattice (has_norm fun_info))) : is_domain (distrib_lattice (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_157096 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (cancel_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (cancel_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157097 (h0 : group (measurable_space (has_norm to_additive.value_type))) : is_cyclic (measurable_space (has_norm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_157098 (h0 : not (ring (normed_group fun_info) -> false)) : @strong_rank_condition.{0} (normed_group.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (normed_group.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_157099 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @discrete_topology.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_157100 (h0 : add_group (add_monoid (random_gen to_additive.value_type))) : is_add_cyclic (add_monoid (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_157101 (h0 : not (topological_space (free_add_monoid congr_arg_kind) -> false)) : @path_connected_space.{0} (free_add_monoid.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (free_add_monoid.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_157102 (h0 : functor.add_const (topological_space (semigroup Type)) (has_neg linarith.comp)) : @topological_space.separable_space.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (semigroup.{1} Type)) (has_neg.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_157103 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (as_linear_order.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (as_linear_order.{0} empty))  := sorry --non-trivial
lemma new_lemma_157104 (h0 : complete_lattice (has_Sup num)) : complete_lattice.is_Sup_finite_compact (has_Sup num) := sorry --non-trivial
lemma new_lemma_157105 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_neg environment.implicit_infer_kind)) Type) : @unique_factorization_monoid.{0} (has_neg.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (cancel_comm_monoid_with_zero.{0} (has_neg.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_157106 (h0 : topological_space (has_le string.iterator_imp)) : totally_disconnected_space (has_le string.iterator_imp) := sorry --non-trivial
lemma new_lemma_157107 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (boolean_algebra.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_157108 (h0 : complete_lattice (distrib_lattice char)) : complete_lattice.is_Sup_finite_compact (distrib_lattice char) := sorry --non-trivial
lemma new_lemma_157109 (h0 : complete_lattice (pseudo_metric_space (has_to_string (has_to_string ennreal)))) : complete_lattice.is_Sup_finite_compact (pseudo_metric_space (has_to_string (has_to_string ennreal))) := sorry --non-trivial
lemma new_lemma_157110 (h0 : not (topological_space (has_emptyc num) -> false)) : @locally_compact_space.{0} (has_emptyc.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (has_emptyc.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_157111 (h0 : topological_space (comm_semigroup name)) : loc_path_connected_space (comm_semigroup name) := sorry --non-trivial
lemma new_lemma_157112 (h0 : topological_space (add_left_cancel_semigroup (option unsigned))) : locally_compact_space (add_left_cancel_semigroup (option unsigned)) := sorry --non-trivial
lemma new_lemma_157113 (h0 : filter (normed_group (semiring num))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_157114 (h0 : topological_space (ring (has_zero Type))) : t0_space (ring (has_zero Type)) := sorry --non-trivial
lemma new_lemma_157115 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (simple_graph unsigned)) := sorry --non-trivial
lemma new_lemma_157116 (h0 : has_neg (has_compl linarith.comp_source)) (h1 : measurable_space (has_compl linarith.comp_source)) : has_measurable_neg (has_compl linarith.comp_source) := sorry --non-trivial
lemma new_lemma_157117 (h0 : uniform_space (semiring char)) : complete_space (semiring char) := sorry --non-trivial
lemma new_lemma_157118 (h0 : topological_space (semigroup (has_add (comm_group (has_neg_part pos))))) : discrete_topology (semigroup (has_add (comm_group (has_neg_part pos)))) := sorry --non-trivial
lemma new_lemma_157119 (h0 : topological_space (canonically_ordered_comm_semiring (option (option unsigned)))) : topological_space.separable_space (canonically_ordered_comm_semiring (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_157120 (h0 : functor.add_const (list (cancel_monoid Type)) Type) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157121 (h0 : topological_space (mul_one_class linarith.ineq)) (h1 : has_sup (mul_one_class linarith.ineq)) : has_continuous_sup (mul_one_class linarith.ineq) := sorry --non-trivial
lemma new_lemma_157122 (h0 : functor.add_const (topological_space (has_Inf name)) (has_add name)) : @totally_separated_space.{0} (has_Inf.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} name)) (has_add.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_157123 (h0 : group (canonically_linear_ordered_monoid (has_add ennreal))) : is_cyclic (canonically_linear_ordered_monoid (has_add ennreal)) := sorry --non-trivial
lemma new_lemma_157124 (h0 : not (topological_space (has_norm linarith.ineq) -> false)) : @t0_space.{0} (has_norm.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (has_norm.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_157125 (h0 : functor.add_const (topological_space (monoid unsigned)) num) : @normal_space.{0} (monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (monoid.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_157126 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (has_emptyc.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_emptyc.{0} num))  := sorry --non-trivial
lemma new_lemma_157127 (h0 : add_monoid (metric_space congr_arg_kind)) : add_monoid.fg (metric_space congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157128 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @is_atomistic.{0} (canonically_ordered_monoid.{0} real) (@matrix.vec_empty.{0} (complete_lattice.{0} (canonically_ordered_monoid.{0} real)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_157129 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @complete_space.{1} Type (@function.extfun_app.{3 2} (Type 1) uniform_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) (@matrix.vec_empty.{2} (function.extfun.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1))) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero))) uniform_space.{1}) Type)  := sorry --non-trivial
lemma new_lemma_157130 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : finset.nonempty (function.extfun_app (function.extfun_app h0 finset) (ordered_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_157131 (h0 : group (add_cancel_comm_monoid (option empty))) : normalizer_condition (add_cancel_comm_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_157132 (h0 : functor.add_const (complete_lattice (has_add pos)) pos) : @complete_lattice.is_Sup_finite_compact.{0} (has_add.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_add.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_157133 (h0 : ring (distrib (has_ssubset char))) : rank_condition (distrib (has_ssubset char)) := sorry --non-trivial
lemma new_lemma_157134 (h1 : topological_space (nondiscrete_normed_field char)) : totally_disconnected_space (nondiscrete_normed_field char) := sorry --non-trivial
lemma new_lemma_157135 (h0 : topological_space (measurable_space.dynkin_system (metric_space unsigned))) : normal_space (measurable_space.dynkin_system (metric_space unsigned)) := sorry --non-trivial
lemma new_lemma_157136 (h0 : semiring (has_nndist (measurable_space.dynkin_system (option unsigned)))) : is_noetherian_ring (has_nndist (measurable_space.dynkin_system (option unsigned))) := sorry --non-trivial
lemma new_lemma_157137 (h0 : monoid nat) : monoid.exponent_exists nat := sorry --non-trivial
lemma new_lemma_157138 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (has_pos_part.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_pos_part.{0} pos))  := sorry --non-trivial
lemma new_lemma_157139 (h0 : functor.add_const (group (has_add linarith.comp)) (has_to_string (has_to_string Type))) : @is_simple_group.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 1} (group.{0} (has_add.{0} linarith.comp)) (has_to_string.{1} (has_to_string.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_157140 (h0 : topological_space (boolean_algebra (comm_group name))) : totally_separated_space (boolean_algebra (comm_group name)) := sorry --non-trivial
lemma new_lemma_157141 (h1 : ring (linear_ordered_add_comm_group (random_gen reducibility_hints))) : strong_rank_condition (linear_ordered_add_comm_group (random_gen reducibility_hints)) := sorry --non-trivial
lemma new_lemma_157142 (h3 : uniform_space (topological_space char)) : complete_space (topological_space char) := sorry --non-trivial
lemma new_lemma_157143 (h0 : ring (has_inv (has_nnnorm fun_info))) : rank_condition (has_inv (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_157144 (h1 : group (normed_field (topological_space char))) : is_cyclic (normed_field (topological_space char)) := sorry --non-trivial
lemma new_lemma_157145 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} name (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) name)  := sorry --non-trivial
lemma new_lemma_157146 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} congr_arg_kind (@function.extfun_app.{2 1} Type topological_space.{0} h0 congr_arg_kind)  := sorry --non-trivial
lemma new_lemma_157147 (h0 : function.extfun (Type 1) list) : palindrome (function.extfun_app h0 (has_nndist Type)) := sorry --non-trivial
lemma new_lemma_157148 (h0 : topological_space (add_comm_monoid congr_arg_kind)) : irreducible_space (add_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157149 (h0 : topological_space (semigroup Type)) : normal_space (semigroup Type) := sorry --non-trivial
lemma new_lemma_157150 (h1 : topological_space (has_ssubset reducibility_hints)) (h2 : add_group (has_ssubset reducibility_hints)) : topological_add_group (has_ssubset reducibility_hints) := sorry --non-trivial
lemma new_lemma_157151 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (semiring.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (semiring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157152 (h0 : topological_space (has_emptyc num)) : totally_disconnected_space (has_emptyc num) := sorry --non-trivial
lemma new_lemma_157153 (h0 : function.extfun nat fin) : @discrete_topology.{1} (has_pos_part.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (has_pos_part.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_157154 (h0 : uniform_space (preorder unsigned)) : complete_space (preorder unsigned) := sorry --non-trivial
lemma new_lemma_157155 (h0 : topological_space (has_emptyc (random_gen (random_gen to_additive.value_type)))) : totally_disconnected_space (has_emptyc (random_gen (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_157156 (h0 : not (ring (generalized_boolean_algebra fun_info) -> false)) : @is_domain.{0} (generalized_boolean_algebra.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (generalized_boolean_algebra.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_157157 (h0 : ring (boolean_algebra.core (has_add name))) : strong_rank_condition (boolean_algebra.core (has_add name)) := sorry --non-trivial
lemma new_lemma_157158 (h0 : functor.add_const (topological_space (metric_space empty)) (semiring num)) : @t1_space.{0} (metric_space.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (metric_space.{0} empty)) (semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_157159 (h0 : not (complete_lattice (option empty) -> false)) : @is_compactly_generated.{0} (option.{0} empty) (@classical.by_contradiction'.{1} (complete_lattice.{0} (option.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_157160 (h0 : group (has_union (has_norm (has_norm (has_norm (has_norm (has_norm linarith.comp))))))) : is_cyclic (has_union (has_norm (has_norm (has_norm (has_norm (has_norm linarith.comp)))))) := sorry --non-trivial
lemma new_lemma_157161 (h0 : topological_space (semigroup (has_to_string congr_arg_kind))) : irreducible_space (semigroup (has_to_string congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_157162 (h4 : topological_space (topological_space (random_gen (random_gen char)))) : path_connected_space (topological_space (random_gen (random_gen char))) := sorry --non-trivial
lemma new_lemma_157163 (h0 : topological_space (has_dist (option empty))) : preirreducible_space (has_dist (option empty)) := sorry --non-trivial
lemma new_lemma_157164 (h0 : function.extfun Type ordered_comm_monoid) : @has_exists_mul_of_le.{0} (has_to_string.{0} pos) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} h0 (has_to_string.{0} pos))  := sorry --non-trivial
lemma new_lemma_157165 (h0 : functor.add_const (topological_space (add_comm_monoid linarith.comp)) Type) : @locally_compact_space.{0} (add_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (add_comm_monoid.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_157166 (h0 : uniform_space (has_Inf (has_nndist linarith.comp))) : complete_space (has_Inf (has_nndist linarith.comp)) := sorry --non-trivial
lemma new_lemma_157167 (h0 : ring (distrib to_additive.value_type)) : strong_rank_condition (distrib to_additive.value_type) := sorry --non-trivial
lemma new_lemma_157168 (h0 : has_zero (finset (option ennreal)) -> has_zero (finset (option ennreal)) -> Prop) : is_symm (has_zero (finset (option ennreal))) h0 := sorry --non-trivial
lemma new_lemma_157169 (h0 : function.extfun Type (functor.comp monoid has_add)) : @monoid.fg.{0} (has_add.{0} pos) (@functor.comp.run.{0 0 0} monoid.{0} has_add.{0} pos (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} monoid.{0} has_add.{0}) h0 pos))  := sorry --non-trivial
lemma new_lemma_157170 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem complete_lattice)) : @complete_lattice.is_Sup_finite_compact.{0} linarith.comp_source (@function.extfun_app.{2 1} Type complete_lattice.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) complete_lattice.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) complete_lattice.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) linarith.comp_source)  := sorry --non-trivial
lemma new_lemma_157171 (h0 : not (function.extfun Type group -> false)) : @is_cyclic.{0} (complete_linear_order.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (complete_linear_order.{0} empty))  := sorry --non-trivial
lemma new_lemma_157172 (h0 : group (normed_comm_ring (finset (has_neg (ring Type))))) : normalizer_condition (normed_comm_ring (finset (has_neg (ring Type)))) := sorry --non-trivial
lemma new_lemma_157173 (h0 : topological_space (add_comm_monoid (option empty))) : normal_space (add_comm_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_157174 (h0 : add_group (with_bot (has_top linarith.comp_source))) : is_add_cyclic (with_bot (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_157175 (h0 : functor.add_const (topological_space (boolean_algebra Type)) environment.implicit_infer_kind) : @irreducible_space.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (boolean_algebra.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_157176 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (has_bot.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_bot.{0} empty))  := sorry --non-trivial
lemma new_lemma_157177 (h0 : ring (has_one fun_info)) : strong_rank_condition (has_one fun_info) := sorry --non-trivial
lemma new_lemma_157178 (h0 : functor.add_const (add_group (add_comm_monoid linarith.comp)) name) : @is_add_cyclic.{0} (add_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_group.{0} (add_comm_monoid.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_157179 (h0 : function.extfun Type ring) : @rank_condition.{0} (omega_complete_partial_order.{0} num) (@function.extfun_app.{2 1} Type ring.{0} h0 (omega_complete_partial_order.{0} num))  := sorry --non-trivial
lemma new_lemma_157180 (h0 : function.extfun (finset Type) (has_mem.mem (with_bot fun_info))) : @is_domain.{0} (with_bot.{0} fun_info) (@finset.pi.empty.{1 0} Type ring.{0} (with_bot.{0} fun_info) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_bot.{0} fun_info)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_157181 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (group_with_zero.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (group_with_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_157182 (h0 : ring (has_nnnorm (mul_one_class ereal))) : rank_condition (has_nnnorm (mul_one_class ereal)) := sorry --non-trivial
lemma new_lemma_157183 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157184 (h0 : function.extfun (Type 1) group) : @normalizer_condition.{1} (canonically_ordered_comm_semiring.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} h0 (canonically_ordered_comm_semiring.{1} Type))  := sorry --non-trivial
lemma new_lemma_157185 (h0 : functor.comp topological_space has_add Type) : @irreducible_space.{1} (has_add.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} has_add.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_157186 (h0 : topological_space (cancel_monoid (ring (option pos)))) : normal_space (cancel_monoid (ring (option pos))) := sorry --non-trivial
lemma new_lemma_157187 (h0 : function.extfun Type topological_space) : @normal_space.{0} (group_with_zero.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (group_with_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_157188 (h0 : filter (with_bot (distrib_lattice to_additive.value_type))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_157189 (h1 : ring (topological_space string_imp)) : rank_condition (topological_space string_imp) := sorry --non-trivial
lemma new_lemma_157190 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (linear_ordered_semiring.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (linear_ordered_semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_157191 (h0 : topological_space (linear_ordered_field (cancel_monoid name))) : totally_disconnected_space (linear_ordered_field (cancel_monoid name)) := sorry --non-trivial
lemma new_lemma_157192 (h0 : ring (has_ssubset (mul_one_class to_additive.value_type))) : strong_rank_condition (has_ssubset (mul_one_class to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_157193 (h0 : semiring (has_neg_part pos)) : is_noetherian_ring (has_neg_part pos) := sorry --non-trivial
lemma new_lemma_157194 (h0 : functor.add_const (topological_space (add_cancel_monoid name)) environment.implicit_infer_kind) : @preirreducible_space.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_157195 (h0 : functor.add_const (functor.add_const (topological_space complex) name) linarith.comp) : preirreducible_space complex := sorry --non-trivial
lemma new_lemma_157196 (h0 : functor.add_const (finset (has_to_string environment.implicit_infer_kind)) ennreal) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157197 (h0 : ring (canonically_ordered_add_monoid to_additive.value_type)) : rank_condition (canonically_ordered_add_monoid to_additive.value_type) := sorry --non-trivial
lemma new_lemma_157198 (h0 : function.extfun Type topological_space) : @t0_space.{0} (has_one.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_one.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157199 (h0 : topological_space complex) : path_connected_space complex := sorry --non-trivial
lemma new_lemma_157200 (h0 : topological_space (add_comm_semigroup (add_comm_semigroup char))) (h1 : preorder (add_comm_semigroup (add_comm_semigroup char))) : order_closed_topology (add_comm_semigroup (add_comm_semigroup char)) := sorry --non-trivial
lemma new_lemma_157201 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (canonically_ordered_add_monoid.{0} empty) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (canonically_ordered_add_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_157202 (h0 : topological_space (has_nndist (has_add (has_add environment.implicit_infer_kind)))) : t0_space (has_nndist (has_add (has_add environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_157203 (h0 : ring (semiring (option empty))) : rank_condition (semiring (option empty)) := sorry --non-trivial
lemma new_lemma_157204 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (preorder.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (preorder.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157205 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} congr_arg_kind (@function.extfun_app.{2 1} Type topological_space.{0} h0 congr_arg_kind)  := sorry --non-trivial
lemma new_lemma_157206 (h0 : functor.add_const (function.extfun Type ordered_comm_monoid) Type) : @has_exists_mul_of_le.{0} (ordered_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) Type h0) (ordered_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_157207 (h0 : not (topological_space (semiring empty) -> false)) : @preirreducible_space.{0} (semiring.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (semiring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_157208 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (pseudo_emetric_space.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (pseudo_emetric_space.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_157209 (h1 : topological_space (distrib (distrib (has_nnnorm (has_nnnorm char))))) : totally_disconnected_space (distrib (distrib (has_nnnorm (has_nnnorm char)))) := sorry --non-trivial
lemma new_lemma_157210 (h0 : functor.add_const (ordered_add_comm_monoid (add_comm_monoid pos)) environment.implicit_infer_kind) : @archimedean.{0} (add_comm_monoid.{0} pos) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (add_comm_monoid.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_157211 (h0 : group (has_nndist (has_neg (ring (boolean_algebra (finset linarith.comp)))))) : is_simple_group (has_nndist (has_neg (ring (boolean_algebra (finset linarith.comp))))) := sorry --non-trivial
lemma new_lemma_157212 (h0 : group (cancel_monoid (has_add name))) : is_simple_group (cancel_monoid (has_add name)) := sorry --non-trivial
lemma new_lemma_157213 (h0 : ring (has_to_string (has_Inf pos))) : rank_condition (has_to_string (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_157214 (h0 : topological_space (denumerable char)) : locally_compact_space (denumerable char) := sorry --non-trivial
lemma new_lemma_157215 (h0 : functor.add_const (topological_space (non_assoc_semiring num)) empty) : @t1_space.{0} (non_assoc_semiring.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (non_assoc_semiring.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_157216 (h0 : topological_space (has_neg_part (comm_group (comm_group (comm_group (comm_group name)))))) : t0_space (has_neg_part (comm_group (comm_group (comm_group (comm_group name))))) := sorry --non-trivial
lemma new_lemma_157217 (h0 : topological_space (simple_graph (ring (has_pos_part (has_pos_part pos))))) : regular_space (simple_graph (ring (has_pos_part (has_pos_part pos)))) := sorry --non-trivial
lemma new_lemma_157218 (h0 : topological_space (has_neg_part (has_nndist (has_add Type)))) : path_connected_space (has_neg_part (has_nndist (has_add Type))) := sorry --non-trivial
lemma new_lemma_157219 (h0 : topological_space (partial_order unsigned)) : irreducible_space (partial_order unsigned) := sorry --non-trivial
lemma new_lemma_157220 (h0 : group (add_semigroup empty)) : is_cyclic (add_semigroup empty) := sorry --non-trivial
lemma new_lemma_157221 (h0 : topological_space (ordered_comm_ring name)) : preirreducible_space (ordered_comm_ring name) := sorry --non-trivial
lemma new_lemma_157222 (h0 : functor.add_const (ring (boolean_algebra Type)) Type) : @strong_rank_condition.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 1} (ring.{1} (boolean_algebra.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_157223 (h0 : topological_space (normed_group unsigned)) : totally_separated_space (normed_group unsigned) := sorry --non-trivial
lemma new_lemma_157224 (h0 : cancel_comm_monoid_with_zero (measurable_space.dynkin_system (semiring num))) : unique_factorization_monoid (measurable_space.dynkin_system (semiring num)) := sorry --non-trivial
lemma new_lemma_157225 (h0 : topological_space (distrib_lattice linarith.comp_source)) : t0_space (distrib_lattice linarith.comp_source) := sorry --non-trivial
lemma new_lemma_157226 (h0 : complete_lattice (has_Inf (comm_semigroup Type))) : is_atomistic (has_Inf (comm_semigroup Type)) := sorry --non-trivial
lemma new_lemma_157227 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (linear_ordered_comm_group.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (linear_ordered_comm_group.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_157228 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @is_domain.{1} (ordered_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 ring.{1}) (ordered_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_157229 (h0 : function.extfun Type topological_space) : @t1_space.{0} (has_to_string.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_to_string.{0} num))  := sorry --non-trivial
lemma new_lemma_157230 (h0 : topological_space (has_to_string (option ennreal))) : irreducible_space (has_to_string (option ennreal)) := sorry --non-trivial
lemma new_lemma_157231 (h0 : functor.add_const (function.extfun Type topological_space) Type) : @normal_space.{0} (ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) Type h0) (ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_157232 (h0 : ring (add_comm_monoid (has_add pos))) : is_principal_ideal_ring (add_comm_monoid (has_add pos)) := sorry --non-trivial
lemma new_lemma_157233 (h0 : topological_space (normed_comm_ring (has_add pos))) : discrete_topology (normed_comm_ring (has_add pos)) := sorry --non-trivial
lemma new_lemma_157234 (h1 : group (normed_group (random_gen to_additive.value_type))) : is_cyclic (normed_group (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_157235 (h0 : functor.add_const Prop (has_Inf real)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_157236 (h0 : set (simple_graph to_additive.value_type)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_157237 (h0 : functor.add_const (complete_lattice (free_add_monoid empty)) empty) : @is_atomistic.{0} (free_add_monoid.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (free_add_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_157238 (h0 : ring (measurable_space.dynkin_system (semiring (semiring (semiring unsigned))))) : is_domain (measurable_space.dynkin_system (semiring (semiring (semiring unsigned)))) := sorry --non-trivial
lemma new_lemma_157239 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : strong_rank_condition real := sorry --non-trivial
lemma new_lemma_157240 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (has_zero.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_157241 (h0 : ordered_add_comm_monoid (has_inter (option (option (option (option unsigned)))))) : archimedean (has_inter (option (option (option (option unsigned))))) := sorry --non-trivial
lemma new_lemma_157242 (h0 : functor.add_const (group (canonically_ordered_comm_semiring pos)) pos) : @is_cyclic.{0} (canonically_ordered_comm_semiring.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (canonically_ordered_comm_semiring.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_157243 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (ring.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (ring.{0} empty))  := sorry --non-trivial
lemma new_lemma_157244 (h0 : uniform_space (linear_ordered_comm_group (has_to_string congr_arg_kind))) : complete_space (linear_ordered_comm_group (has_to_string congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_157245 (h0 : cancel_comm_monoid_with_zero (has_neg_part (normed_comm_ring Type))) : unique_factorization_monoid (has_neg_part (normed_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_157246 (h0 : ring (cancel_monoid (semigroup environment.implicit_infer_kind))) : is_principal_ideal_ring (cancel_monoid (semigroup environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_157247 (h0 : functor.add_const (filter (has_neg_part name)) (has_add Type)) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157248 (h0 : topological_space (linear_ordered_semiring (has_top unsigned))) : locally_compact_space (linear_ordered_semiring (has_top unsigned)) := sorry --non-trivial
lemma new_lemma_157249 (h0 : fin has_zero.zero) : @is_noetherian_ring.{0} (canonically_ordered_monoid.{0} pos) (@matrix.vec_empty.{0} (semiring.{0} (canonically_ordered_monoid.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_157250 (h0 : functor.add_const (ring (ring environment.implicit_infer_kind)) pos) : @rank_condition.{0} (ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (ring.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_157251 (h0 : ring (distrib (has_nnnorm fun_info))) : is_domain (distrib (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_157252 (h1 : group (has_norm (with_bot (with_bot (with_bot (with_bot (with_bot string_imp))))))) : group.fg (has_norm (with_bot (with_bot (with_bot (with_bot (with_bot string_imp)))))) := sorry --non-trivial
lemma new_lemma_157253 (h0 : ring (comm_group Type)) : is_principal_ideal_ring (comm_group Type) := sorry --non-trivial
lemma new_lemma_157254 (h0 : ordered_comm_monoid (ring (ring (ring linarith.comp)))) : has_exists_mul_of_le (ring (ring (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_157255 (h0 : not (topological_space (has_inv string_imp) -> false)) : @totally_disconnected_space.{0} (has_inv.{0} string_imp) (@classical.by_contradiction'.{1} (topological_space.{0} (has_inv.{0} string_imp)) h0)  := sorry --non-trivial
lemma new_lemma_157256 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t1_space.{0} (non_assoc_semiring.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (non_assoc_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_157257 (h0 : topological_space (boolean_algebra (has_add environment.implicit_infer_kind))) : irreducible_space (boolean_algebra (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_157258 (h0 : semiring (id (semiring unsigned))) : is_noetherian_ring (id (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_157259 (h0 : ring (uniform_space (mul_one_class (mul_one_class linarith.ineq)))) : rank_condition (uniform_space (mul_one_class (mul_one_class linarith.ineq))) := sorry --non-trivial
lemma new_lemma_157260 (h0 : add_group (bin_tree (semiring (semiring unsigned)))) : is_add_cyclic (bin_tree (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_157261 (h0 : functor.add_const (topological_space (simple_graph linarith.comp)) Type) : @loc_path_connected_space.{0} (simple_graph.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (simple_graph.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_157262 (h0 : add_monoid (sub_neg_monoid name)) : add_monoid.fg (sub_neg_monoid name) := sorry --non-trivial
lemma new_lemma_157263 (h0 : function.extfun (Type 1) cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) cancel_comm_monoid_with_zero.{1} h0 (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_157264 (h0 : functor.add_const (functor.add_const (complete_lattice (normed_comm_ring unsigned)) Type) linarith.comp) : @complete_lattice.is_Sup_finite_compact.{0} (normed_comm_ring.{0} unsigned) (@functor.add_const.run.{0 1} (complete_lattice.{0} (normed_comm_ring.{0} unsigned)) Type (@functor.add_const.run.{0 0} (functor.add_const.{0 1} (complete_lattice.{0} (normed_comm_ring.{0} unsigned)) Type) linarith.comp h0))  := sorry --non-trivial
lemma new_lemma_157265 (h0 : functor.add_const (topological_space (comm_group name)) (comm_group (comm_group Type))) : @loc_path_connected_space.{0} (comm_group.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (comm_group.{0} name)) (comm_group.{1} (comm_group.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_157266 (h0 : topological_space (has_neg (has_Inf linarith.comp))) : irreducible_space (has_neg (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_157267 (h0 : not (function.extfun Type topological_space -> false)) : @t0_space.{0} (linear_ordered_semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (linear_ordered_semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157268 (h0 : complete_semilattice_Sup string_imp -> complete_semilattice_Sup string_imp -> bool) : is_dec_refl h0 := sorry --non-trivial
lemma new_lemma_157269 (h0 : function.extfun Type group) : @group.fg.{0} (is_R_or_C.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (is_R_or_C.{0} empty))  := sorry --non-trivial
lemma new_lemma_157270 (h0 : functor.add_const (filter (comm_group name)) name) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157271 (h0 : function.extfun Type (functor.add_const (complete_lattice (has_zero ennreal)))) : @is_atomistic.{0} (has_zero.{0} ennreal) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_zero.{0} ennreal)) pos (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (complete_lattice.{0} (has_zero.{0} ennreal))) h0 pos))  := sorry --non-trivial
lemma new_lemma_157272 (h0 : topological_space (has_zero Type)) : topological_space.separable_space (has_zero Type) := sorry --non-trivial
lemma new_lemma_157273 (h0 : ring (uniform_space string.iterator_imp)) : strong_rank_condition (uniform_space string.iterator_imp) := sorry --non-trivial
lemma new_lemma_157274 (h0 : functor.add_const (topological_space (comm_group environment.implicit_infer_kind)) pos) : @preconnected_space.{0} (comm_group.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_157275 (h0 : functor.add_const (finset (option empty)) (semiring congr_arg_kind)) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157276 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (add_comm_monoid.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type monoid.{0} h0 (add_comm_monoid.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_157277 (h0 : topological_space (with_bot congr_arg_kind)) : topological_space.separable_space (with_bot congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157278 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (monoid_with_zero.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (monoid_with_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_157279 (h0 : functor.add_const (ordered_comm_monoid linarith.comp) (ring (finset linarith.comp))) : @has_exists_mul_of_le.{0} linarith.comp (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} linarith.comp) (ring.{0} (finset.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_157280 (h0 : topological_space (fintype (random_gen to_additive.value_type))) : path_connected_space (fintype (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_157281 (h0 : complete_lattice (preorder num)) : complete_lattice.is_Sup_finite_compact (preorder num) := sorry --non-trivial
lemma new_lemma_157282 (h4 : uniform_space (semi_normed_comm_ring char)) : complete_space (semi_normed_comm_ring char) := sorry --non-trivial
lemma new_lemma_157283 (h0 : functor.add_const (topological_space (has_add linarith.comp)) pos) : @locally_compact_space.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_157284 (h0 : list (has_inv fun_info)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_157285 (h0 : topological_space (has_nndist (option unsigned))) : locally_compact_space (has_nndist (option unsigned)) := sorry --non-trivial
lemma new_lemma_157286 (h0 : topological_space (canonically_ordered_add_monoid empty)) : normal_space (canonically_ordered_add_monoid empty) := sorry --non-trivial
lemma new_lemma_157287 (h3 : uniform_space (mul_one_class (mul_one_class ereal))) : complete_space (mul_one_class (mul_one_class ereal)) := sorry --non-trivial
lemma new_lemma_157288 (h0 : topological_space (add_semigroup num)) : discrete_topology (add_semigroup num) := sorry --non-trivial
lemma new_lemma_157289 (h0 : ring (finset (has_Inf pos))) : is_principal_ideal_ring (finset (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_157290 (h0 : add_monoid (add_cancel_monoid environment.implicit_infer_kind)) : add_monoid.fg (add_cancel_monoid environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_157291 (h0 : fin has_zero.zero) : @separated_space.{0} (simple_graph.{0} linarith.comp) (@matrix.vec_empty.{0} (uniform_space.{0} (simple_graph.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_157292 (h0 : complete_lattice (denumerable (comm_ring fun_info))) : complete_lattice.is_Sup_finite_compact (denumerable (comm_ring fun_info)) := sorry --non-trivial
lemma new_lemma_157293 (h0 : uniform_space (distrib reducibility_hints)) : complete_space (distrib reducibility_hints) := sorry --non-trivial
lemma new_lemma_157294 (h0 : topological_space (has_Inf (has_add (has_neg pos)))) : sequential_space (has_Inf (has_add (has_neg pos))) := sorry --non-trivial
lemma new_lemma_157295 (h0 : group (with_one (comm_ring linarith.comp_source))) : normalizer_condition (with_one (comm_ring linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_157296 (h0 : group (has_top (random_gen (random_gen (random_gen linarith.ineq))))) : is_cyclic (has_top (random_gen (random_gen (random_gen linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_157297 (h0 : functor.add_const (topological_space (is_R_or_C (option empty))) empty) : @normal_space.{0} (is_R_or_C.{0} (option.{0} empty)) (@functor.add_const.run.{0 0} (topological_space.{0} (is_R_or_C.{0} (option.{0} empty))) empty h0)  := sorry --non-trivial
lemma new_lemma_157298 (h1 : filter (distrib_lattice (fintype char))) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_157299 (h0 : topological_space (has_Inf (has_pos_part (has_Inf Type)))) : loc_path_connected_space (has_Inf (has_pos_part (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_157300 (h1 : Prop) (h2 : list Prop) : list.ilast' h1 h2 := sorry --non-trivial
lemma new_lemma_157301 (h1 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (measurable_space.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 uniform_space.{0}) (measurable_space.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_157302 (h0 : fin has_zero.zero) : @totally_disconnected_space.{0} (finset.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)) (finset.{0} real))  := sorry --non-trivial
lemma new_lemma_157303 (h0 : non_assoc_semiring unsigned -> non_assoc_semiring unsigned -> Prop) : is_antisymm (non_assoc_semiring unsigned) h0 := sorry --non-trivial
lemma new_lemma_157304 (h0 : monoid (has_neg environment.implicit_infer_kind)) : monoid.fg (has_neg environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_157305 (h0 : topological_space unsigned) : path_connected_space unsigned := sorry --non-trivial
lemma new_lemma_157306 (h0 : filter (pseudo_metric_space Type)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_157307 (h0 : topological_space (finset (has_Inf Type))) : path_connected_space (finset (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_157308 (h0 : functor.add_const (uniform_space (option empty)) (semiring empty)) : @separated_space.{0} (option.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (option.{0} empty)) (semiring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_157309 (h0 : complete_lattice (semi_normed_ring enat)) : complete_lattice.is_Sup_finite_compact (semi_normed_ring enat) := sorry --non-trivial
lemma new_lemma_157310 (h0 : functor.add_const (topological_space (has_Inf linarith.comp)) linarith.comp) : @path_connected_space.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157311 (h0 : function.extfun Type (functor.add_const (ring (add_group congr_arg_kind)))) : @rank_condition.{0} (add_group.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (ring.{0} (add_group.{0} congr_arg_kind)) num (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ring.{0} (add_group.{0} congr_arg_kind))) h0 num))  := sorry --non-trivial
lemma new_lemma_157312 (h0 : topological_space (has_pos_part pos)) : totally_disconnected_space (has_pos_part pos) := sorry --non-trivial
lemma new_lemma_157313 (h0 : ring (ring (finset (finset pos)))) : is_principal_ideal_ring (ring (finset (finset pos))) := sorry --non-trivial
lemma new_lemma_157314 (h0 : not (topological_space (has_add fun_info) -> false)) : @totally_disconnected_space.{0} (has_add.{0} fun_info) (@classical.by_contradiction'.{1} (topological_space.{0} (has_add.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_157315 (h0 : functor.add_const (topological_space (semigroup environment.implicit_infer_kind)) environment.implicit_infer_kind) : @path_connected_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_157316 (h1 : topological_space (has_norm linarith.ineq)) : locally_compact_space (has_norm linarith.ineq) := sorry --non-trivial
lemma new_lemma_157317 (h0 : function.extfun (Type 1) ordered_comm_monoid) : @has_exists_mul_of_le.{1} (has_neg_part.{1} Type) (@function.extfun_app.{3 2} (Type 1) ordered_comm_monoid.{1} h0 (has_neg_part.{1} Type))  := sorry --non-trivial
lemma new_lemma_157318 (h0 : uniform_space (add_left_cancel_monoid linarith.comp_source)) : complete_space (add_left_cancel_monoid linarith.comp_source) := sorry --non-trivial
lemma new_lemma_157319 (h0 : uniform_space (normed_lattice_add_comm_group (has_add (has_neg name)))) : complete_space (normed_lattice_add_comm_group (has_add (has_neg name))) := sorry --non-trivial
lemma new_lemma_157320 (h0 : topological_space (simple_graph name)) : discrete_topology (simple_graph name) := sorry --non-trivial
lemma new_lemma_157321 (h0 : list (semigroup (semiring (semiring unsigned)))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_157322 (h0 : set string.iterator) : set.finite h0 := sorry --non-trivial
lemma new_lemma_157323 (h0 : group (has_inv (has_inv string_imp))) : is_cyclic (has_inv (has_inv string_imp)) := sorry --non-trivial
lemma new_lemma_157324 (h0 : topological_space (normed_linear_ordered_group unsigned)) : preirreducible_space (normed_linear_ordered_group unsigned) := sorry --non-trivial
lemma new_lemma_157325 (h0 : semiring (has_Inf (has_add real))) : is_noetherian_ring (has_Inf (has_add real)) := sorry --non-trivial
lemma new_lemma_157326 (h0 : ring (complete_linear_order (has_top empty))) : is_principal_ideal_ring (complete_linear_order (has_top empty)) := sorry --non-trivial
lemma new_lemma_157327 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (complete_distrib_lattice.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (complete_distrib_lattice.{0} pos))  := sorry --non-trivial
lemma new_lemma_157328 (h0 : functor.add_const (function.extfun (Type 1) topological_space) pos) : @locally_compact_space.{1} (has_add.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) pos h0) (has_add.{1} Type))  := sorry --non-trivial
lemma new_lemma_157329 (h0 : functor.add_const (topological_space (boolean_algebra unsigned)) (comm_group Type)) : @normal_space.{0} (boolean_algebra.{0} unsigned) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.{0} unsigned)) (comm_group.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_157330 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (has_one.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_one.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157331 (h0 : finset (finset (finset (has_neg pos)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_157332 (h0 : topological_space (mul_zero_class (semiring (semiring unsigned)))) : normal_space (mul_zero_class (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_157333 (h0 : monoid (ordered_comm_monoid (ring pos))) : monoid.fg (ordered_comm_monoid (ring pos)) := sorry --non-trivial
lemma new_lemma_157334 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @locally_compact_space.{0} (normed_comm_ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (normed_comm_ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_157335 (h0 : functor.add_const (ring (has_to_string linarith.comp)) (has_neg Type)) : @strong_rank_condition.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 1} (ring.{0} (has_to_string.{0} linarith.comp)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_157336 (h0 : functor.add_const (monoid (comm_group name)) name) : @monoid.fg.{0} (comm_group.{0} name) (@functor.add_const.run.{0 0} (monoid.{0} (comm_group.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_157337 (h0 : add_monoid (normed_group (semiring congr_arg_kind))) : add_monoid.fg (normed_group (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_157338 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} unsigned (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) unsigned)  := sorry --non-trivial
lemma new_lemma_157339 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (monoid pos)) := sorry --non-trivial
lemma new_lemma_157340 (h0 : ring (has_star (semiring congr_arg_kind))) : is_domain (has_star (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_157341 (h0 : functor.add_const (group (has_bot pos)) name) : @is_simple_group.{0} (has_bot.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_bot.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_157342 (h0 : functor.add_const (filter (normed_comm_ring unsigned)) linarith.comp) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157343 (h0 : group (canonically_ordered_monoid Type)) : normalizer_condition (canonically_ordered_monoid Type) := sorry --non-trivial
lemma new_lemma_157344 (h0 : functor.add_const (add_group (ordered_comm_ring pos)) pos) : @is_add_cyclic.{0} (ordered_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (add_group.{0} (ordered_comm_ring.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_157345 (h0 : group (topological_space reducibility_hints)) : is_cyclic (topological_space reducibility_hints) := sorry --non-trivial
lemma new_lemma_157346 (h0 : uniform_space (canonically_ordered_comm_semiring (finset ennreal))) : separated_space (canonically_ordered_comm_semiring (finset ennreal)) := sorry --non-trivial
lemma new_lemma_157347 (h0 : complete_lattice (dlist (random_gen (has_dist fun_info)))) : is_compactly_generated (dlist (random_gen (has_dist fun_info))) := sorry --non-trivial
lemma new_lemma_157348 (h0 : functor.add_const (ordered_comm_monoid (has_Inf linarith.comp)) (ordered_ring pos)) : @has_exists_mul_of_le.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (has_Inf.{0} linarith.comp)) (ordered_ring.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_157349 (h0 : topological_space (non_assoc_semiring (semiring unsigned))) : discrete_topology (non_assoc_semiring (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_157350 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (metric_space.{0} num) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (metric_space.{0} num))  := sorry --non-trivial
lemma new_lemma_157351 (h0 : add_monoid (left_cancel_semigroup (semiring num))) : add_monoid.fg (left_cancel_semigroup (semiring num)) := sorry --non-trivial
lemma new_lemma_157352 (h0 : add_group (canonically_linear_ordered_monoid (has_neg name))) : is_add_cyclic (canonically_linear_ordered_monoid (has_neg name)) := sorry --non-trivial
lemma new_lemma_157353 (h0 : uniform_space (has_nndist (option pos))) : separated_space (has_nndist (option pos)) := sorry --non-trivial
lemma new_lemma_157354 (h0 : ring (has_zero (has_add unsigned))) : rank_condition (has_zero (has_add unsigned)) := sorry --non-trivial
lemma new_lemma_157355 (h1 : topological_space (add_comm_semigroup (add_comm_semigroup enat))) : path_connected_space (add_comm_semigroup (add_comm_semigroup enat)) := sorry --non-trivial
lemma new_lemma_157356 (h1 : complete_lattice (topological_space linarith.comp_source)) : complete_lattice.is_Sup_finite_compact (topological_space linarith.comp_source) := sorry --non-trivial
lemma new_lemma_157357 (h0 : functor.add_const (topological_space (add_cancel_monoid pos)) linarith.comp) : @totally_separated_space.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157358 (h0 : functor.add_const (finset (has_zero linarith.comp)) linarith.comp) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157359 (h0 : cancel_comm_monoid_with_zero (has_add (has_add (ring Type)))) : unique_factorization_monoid (has_add (has_add (ring Type))) := sorry --non-trivial
lemma new_lemma_157360 (h0 : functor.add_const (complete_lattice environment.implicit_infer_kind) linarith.comp) : @is_compactly_generated.{0} environment.implicit_infer_kind (@functor.add_const.run.{0 0} (complete_lattice.{0} environment.implicit_infer_kind) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157361 (h0 : linear_ordered_comm_group (comm_monoid fun_info)) (h1 : not (list (linear_ordered_comm_group (comm_monoid fun_info)) -> false)) : list.mem h0 (classical.by_contradiction' h1) := sorry --non-trivial
lemma new_lemma_157362 (h0 : function.extfun Type topological_space) : @normal_space.{0} (group_with_zero.{0} (option.{0} (option.{0} ennreal))) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (group_with_zero.{0} (option.{0} (option.{0} ennreal))))  := sorry --non-trivial
lemma new_lemma_157363 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring name)) Type) : @sequential_space.{0} (canonically_ordered_comm_semiring.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (canonically_ordered_comm_semiring.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_157364 (h0 : complete_lattice (preorder (option (option unsigned)))) : is_atomistic (preorder (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_157365 (h0 : topological_space (comm_group (add_comm_monoid pos))) : t0_space (comm_group (add_comm_monoid pos)) := sorry --non-trivial
lemma new_lemma_157366 (h0 : topological_space (complete_semilattice_Sup linarith.comp_source)) : irreducible_space (complete_semilattice_Sup linarith.comp_source) := sorry --non-trivial
lemma new_lemma_157367 (h2 : complete_lattice (distrib (has_nnnorm to_additive.value_type))) : complete_lattice.is_Sup_finite_compact (distrib (has_nnnorm to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_157368 (h0 : measurable_space (semi_normed_comm_ring enat)) (h1 : filter (semi_normed_comm_ring enat)) : filter.is_measurably_generated h1 := sorry --non-trivial
lemma new_lemma_157369 (h0 : group (linear_ordered_comm_group unsigned)) : normalizer_condition (linear_ordered_comm_group unsigned) := sorry --non-trivial
lemma new_lemma_157370 (h0 : function.extfun ((Type 1 -> Type 1) -> Type 2) (function.extfun (Type 1 -> Type 1))) : @preconnected_space.{1} (add_cancel_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) (@function.extfun_app.{4 3} ((Type 1 → Type 1) → Type 2) (function.extfun.{3 3} (Type 1 → Type 1)) h0 (function.extfun.{3 2} (Type 1))) topological_space.{1}) (add_cancel_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_157371 (h0 : ring (has_to_string (has_neg (has_neg Type)))) : is_principal_ideal_ring (has_to_string (has_neg (has_neg Type))) := sorry --non-trivial
lemma new_lemma_157372 (h0 : function.extfun nat fin) : @complete_space.{1} (ordered_comm_ring.{1} Type) (@matrix.vec_empty.{1} (uniform_space.{1} (ordered_comm_ring.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_157373 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (semiring.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (semiring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157374 (h0 : topological_space (normed_linear_ordered_group num)) : locally_compact_space (normed_linear_ordered_group num) := sorry --non-trivial
lemma new_lemma_157375 (h0 : functor.add_const (group (has_nndist pos)) linarith.comp) : @is_simple_group.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (has_nndist.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157376 (h0 : ring (semiring (has_top (has_top fun_info)))) : strong_rank_condition (semiring (has_top (has_top fun_info))) := sorry --non-trivial
lemma new_lemma_157377 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (has_Sup.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_Sup.{0} empty))  := sorry --non-trivial
lemma new_lemma_157378 (h0 : function.extfun Type topological_space) : @t0_space.{0} (ordered_cancel_add_comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_cancel_add_comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_157379 (h0 : topological_space (complete_semilattice_Sup (semiring (semiring unsigned)))) : discrete_topology (complete_semilattice_Sup (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_157380 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (simple_graph.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (simple_graph.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_157381 (h0 : ring (complete_distrib_lattice (ring linarith.comp))) : is_domain (complete_distrib_lattice (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_157382 (h0 : semiring (has_one (has_norm unsigned))) : is_noetherian_ring (has_one (has_norm unsigned)) := sorry --non-trivial
lemma new_lemma_157383 (h0 : topological_space (canonically_linear_ordered_monoid (has_Inf Type))) : irreducible_space (canonically_linear_ordered_monoid (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_157384 (h0 : topological_space (linear_ordered_add_comm_group (has_inv linarith.comp_source))) : totally_separated_space (linear_ordered_add_comm_group (has_inv linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_157385 (h0 : ordered_comm_monoid (simple_graph (has_add pos))) : has_exists_mul_of_le (simple_graph (has_add pos)) := sorry --non-trivial
lemma new_lemma_157386 (h0 : function.extfun Type (functor.add_const (group auto.case_option))) : @normalizer_condition.{0} auto.case_option (@functor.add_const.run.{0 0} (group.{0} auto.case_option) num (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (group.{0} auto.case_option)) h0 num))  := sorry --non-trivial
lemma new_lemma_157387 (h0 : functor.add_const (finset (has_Sup unsigned)) num) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157388 (h0 : has_mem.mem (linear_ordered_semiring num) has_emptyc.emptyc) : @complete_lattice.is_Sup_finite_compact.{0} (linear_ordered_semiring.{0} num) (@finset.pi.empty.{1 0} Type complete_lattice.{0} (linear_ordered_semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_157389 (h0 : topological_space (sub_neg_monoid (sub_neg_monoid pos))) : regular_space (sub_neg_monoid (sub_neg_monoid pos)) := sorry --non-trivial
lemma new_lemma_157390 (h1 : has_neg (mul_one_class string.iterator_imp)) (h2 : measurable_space (mul_one_class string.iterator_imp)) : has_measurable_neg (mul_one_class string.iterator_imp) := sorry --non-trivial
lemma new_lemma_157391 (h0 : filter (distrib_lattice to_additive.value_type)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_157392 (h0 : not (add_group (fintype fun_info) -> false)) : @is_add_cyclic.{0} (fintype.{0} fun_info) (@classical.by_contradiction'.{1} (add_group.{0} (fintype.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_157393 (h0 : functor.add_const (list (semigroup linarith.comp)) (finset linarith.comp)) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157394 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (denumerable.{0} fun_info) (@function.extfun_app.{2 1} Type add_group.{0} h0 (denumerable.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_157395 (h0 : functor.add_const (complete_lattice (add_cancel_monoid pos)) Type) : @complete_lattice.is_Sup_finite_compact.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 1} (complete_lattice.{0} (add_cancel_monoid.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_157396 (h0 : topological_space (add_cancel_monoid (has_add (boolean_algebra.core name)))) : discrete_topology (add_cancel_monoid (has_add (boolean_algebra.core name))) := sorry --non-trivial
lemma new_lemma_157397 (h0 : not (ring (comm_ring fun_info) -> false)) : @strong_rank_condition.{0} (comm_ring.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (comm_ring.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_157398 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (ordered_ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157399 (h0 : topological_space (ordered_ring (semiring empty))) : irreducible_space (ordered_ring (semiring empty)) := sorry --non-trivial
lemma new_lemma_157400 (h0 : topological_space (measurable_space.dynkin_system (semiring unsigned))) : irreducible_space (measurable_space.dynkin_system (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_157401 (h0 : group (normed_field (random_gen string.iterator_imp))) : is_cyclic (normed_field (random_gen string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_157402 (h0 : topological_space (add_cancel_monoid (boolean_algebra linarith.comp))) : discrete_topology (add_cancel_monoid (boolean_algebra linarith.comp)) := sorry --non-trivial
lemma new_lemma_157403 (h0 : ring (has_add (ring (semigroup (has_nndist name))))) : rank_condition (has_add (ring (semigroup (has_nndist name)))) := sorry --non-trivial
lemma new_lemma_157404 (h0 : ring (boolean_algebra.core (option ennreal))) : is_domain (boolean_algebra.core (option ennreal)) := sorry --non-trivial
lemma new_lemma_157405 (h0 : topological_space (comm_ring (has_nnnorm (random_gen (random_gen (has_ssubset (random_gen char))))))) : connected_space (comm_ring (has_nnnorm (random_gen (random_gen (has_ssubset (random_gen char)))))) := sorry --non-trivial
lemma new_lemma_157406 (h0 : functor.add_const Prop (has_union congr_arg_kind)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_157407 (h0 : topological_space (linear_ordered_semiring linarith.comp)) : path_connected_space (linear_ordered_semiring linarith.comp) := sorry --non-trivial
lemma new_lemma_157408 (h0 : add_group (generalized_boolean_algebra (finset Type))) : is_add_cyclic (generalized_boolean_algebra (finset Type)) := sorry --non-trivial
lemma new_lemma_157409 (h0 : topological_space (add_right_cancel_monoid num)) : loc_path_connected_space (add_right_cancel_monoid num) := sorry --non-trivial
lemma new_lemma_157410 (h0 : not (uniform_space (linear_ordered_semiring linarith.comp_source) -> false)) : @separated_space.{0} (linear_ordered_semiring.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (uniform_space.{0} (linear_ordered_semiring.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_157411 (h0 : list (canonically_ordered_comm_semiring unsigned)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_157412 (h0 : monoid (cancel_monoid (has_add unsigned))) : monoid.fg (cancel_monoid (has_add unsigned)) := sorry --non-trivial
lemma new_lemma_157413 (h0 : function.extfun nat fin) : @sequential_space.{0} (complete_distrib_lattice.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (complete_distrib_lattice.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_157414 (h1 : set (has_lt string.iterator_imp)) : set.finite h1 := sorry --non-trivial
lemma new_lemma_157415 (h0 : topological_space (boolean_algebra.core (option unsigned))) : path_connected_space (boolean_algebra.core (option unsigned)) := sorry --non-trivial
lemma new_lemma_157416 (h0 : functor.add_const (ring (has_to_string pos)) unsigned) : @rank_condition.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (has_to_string.{0} pos)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_157417 (h0 : prod (ring num) (ring num)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_157418 (h0 : uniform_space (measure_theory.measure_space (has_top empty))) : separated_space (measure_theory.measure_space (has_top empty)) := sorry --non-trivial
lemma new_lemma_157419 (h0 : filter (canonically_ordered_comm_semiring (finset (ring pos)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_157420 (h0 : functor.add_const (uniform_space Type) Type) : @separated_space.{1} Type (@functor.add_const.run.{1 1} (uniform_space.{1} Type) Type h0)  := sorry --non-trivial
lemma new_lemma_157421 (h0 : function.extfun (finset Type) (has_mem.mem (complete_semilattice_Sup linarith.comp_source))) : @path_connected_space.{0} (complete_semilattice_Sup.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type topological_space.{0} (complete_semilattice_Sup.{0} linarith.comp_source) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (complete_semilattice_Sup.{0} linarith.comp_source)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_157422 (h0 : group (canonically_ordered_monoid (has_add Type))) : normalizer_condition (canonically_ordered_monoid (has_add Type)) := sorry --non-trivial
lemma new_lemma_157423 (h0 : functor.add_const (topological_space (boolean_algebra Type)) Type) : @normal_space.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (boolean_algebra.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_157424 (h0 : group (has_add pos)) : is_cyclic (has_add pos) := sorry --non-trivial
lemma new_lemma_157425 (h0 : topological_space (linear_ordered_comm_ring (semiring (semiring empty)))) : locally_compact_space (linear_ordered_comm_ring (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_157426 (h0 : topological_space (has_bot (has_Inf (has_Inf (has_Inf linarith.comp))))) : path_connected_space (has_bot (has_Inf (has_Inf (has_Inf linarith.comp)))) := sorry --non-trivial
lemma new_lemma_157427 (h0 : functor.add_const (topological_space (has_pos_part linarith.comp)) pos) : @normal_space.{0} (has_pos_part.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_pos_part.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_157428 (h0 : complete_lattice (uniform_space (random_gen to_additive.value_type))) : complete_lattice.is_Sup_finite_compact (uniform_space (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_157429 (h0 : function.extfun Type topological_space) : @t1_space.{0} (ordered_comm_group.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157430 (h0 : function.extfun Type ring) : @rank_condition.{0} (has_Sup.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_Sup.{0} empty))  := sorry --non-trivial
lemma new_lemma_157431 (h0 : complete_lattice (has_one empty)) : is_atomistic (has_one empty) := sorry --non-trivial
lemma new_lemma_157432 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @complete_space.{1} (has_Inf.{1} Type) (@matrix.vec_empty.{1} (uniform_space.{1} (has_Inf.{1} Type)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_157433 (h0 : complete_lattice (has_inter ennreal)) : complete_lattice.is_Sup_finite_compact (has_inter ennreal) := sorry --non-trivial
lemma new_lemma_157434 (h0 : functor.add_const (add_monoid (free_add_monoid congr_arg_kind)) congr_arg_kind) : add_monoid.fg (free_add_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157435 (h0 : list (has_norm (has_inv to_additive.value_type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_157436 (h0 : uniform_space (boolean_algebra.core Type)) : complete_space (boolean_algebra.core Type) := sorry --non-trivial
lemma new_lemma_157437 (h0 : ring (comm_semigroup pos)) : is_domain (comm_semigroup pos) := sorry --non-trivial
lemma new_lemma_157438 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (left_cancel_semigroup.{0} (semiring.{0} (semiring.{0} (semiring.{0} empty)))) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (left_cancel_semigroup.{0} (semiring.{0} (semiring.{0} (semiring.{0} empty)))))  := sorry --non-trivial
lemma new_lemma_157439 (h0 : function.extfun (finset Type) (has_mem.mem (linear_ordered_semiring fun_info))) : @totally_separated_space.{0} (linear_ordered_semiring.{0} fun_info) (@finset.pi.empty.{1 0} Type topological_space.{0} (linear_ordered_semiring.{0} fun_info) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (linear_ordered_semiring.{0} fun_info)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_157440 (h0 : uniform_space (add_comm_semigroup (mul_one_class fun_info))) : complete_space (add_comm_semigroup (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_157441 (h0 : list (has_neg (has_Inf pos))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_157442 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (add_comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157443 (h0 : topological_space (metric_space (has_norm (has_norm (has_top empty))))) : locally_compact_space (metric_space (has_norm (has_norm (has_top empty)))) := sorry --non-trivial
lemma new_lemma_157444 (h0 : functor.add_const (function.extfun Type group) pos) : @normalizer_condition.{0} (has_zero.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) pos h0) (has_zero.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_157445 (h0 : functor.add_const (complete_lattice (complete_distrib_lattice pos)) name) : @complete_lattice.is_Sup_finite_compact.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (complete_distrib_lattice.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_157446 (h0 : fin has_zero.zero) : @complete_space.{1} (ring.{1} Type) (@matrix.vec_empty.{1} (uniform_space.{1} (ring.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_157447 (h0 : function.extfun (finset Type) (has_mem.mem (random_gen linarith.comp))) : @discrete_topology.{0} (random_gen.{0} linarith.comp) (@finset.pi.empty.{1 0} Type topological_space.{0} (random_gen.{0} linarith.comp) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (random_gen.{0} linarith.comp)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_157448 (h0 : function.extfun nat fin) : @group.fg.{0} (has_Inf.{0} pos) (@matrix.vec_empty.{0} (group.{0} (has_Inf.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_157449 (h0 : topological_space (has_zero ennreal)) : locally_compact_space (has_zero ennreal) := sorry --non-trivial
lemma new_lemma_157450 (h0 : has_scalar (add_comm_semigroup fun_info) ereal) : has_faithful_scalar (add_comm_semigroup fun_info) ereal := sorry --non-trivial
lemma new_lemma_157451 (h0 : functor.add_const (monoid (has_neg pos)) pos) : @monoid.fg.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 0} (monoid.{0} (has_neg.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_157452 (h0 : measurable_space std_gen) (h1 : has_inf std_gen) : has_measurable_inf std_gen := sorry --non-trivial
lemma new_lemma_157453 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @add_monoid.fg.{1} (add_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_monoid.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 add_monoid.{1}) (add_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_157454 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (encodable to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_157455 (h0 : not (function.extfun Type add_monoid -> false)) : @add_monoid.fg.{0} (bin_tree.{0} (has_top.{0} (semiring.{0} (semiring.{0} (semiring.{0} unsigned))))) (@function.extfun_app.{2 1} Type add_monoid.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_monoid.{0}) h0) (bin_tree.{0} (has_top.{0} (semiring.{0} (semiring.{0} (semiring.{0} unsigned))))))  := sorry --non-trivial
lemma new_lemma_157456 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (measurable_space.dynkin_system.{0} unsigned) (@function.extfun_app.{2 1} Type add_group.{0} h0 (measurable_space.dynkin_system.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157457 (h0 : function.extfun Type ring) : @rank_condition.{0} (linear_ordered_add_comm_group.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_ordered_add_comm_group.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_157458 (h0 : group (free_add_monoid (semiring unsigned))) : normalizer_condition (free_add_monoid (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_157459 (h1 : preorder (mul_one_class (mul_one_class string.iterator_imp))) (h2 : set (mul_one_class (mul_one_class string.iterator_imp))) : set.is_pwo h2 := sorry --non-trivial
lemma new_lemma_157460 (h0 : topological_space (with_bot (comm_ring linarith.ineq))) : t0_space (with_bot (comm_ring linarith.ineq)) := sorry --non-trivial
lemma new_lemma_157461 (h0 : topological_space (comm_ring (has_ssubset (random_gen reducibility_hints)))) : t0_space (comm_ring (has_ssubset (random_gen reducibility_hints))) := sorry --non-trivial
lemma new_lemma_157462 (h0 : add_group (non_unital_non_assoc_semiring (mul_one_class fun_info))) : is_add_cyclic (non_unital_non_assoc_semiring (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_157463 (h0 : complete_lattice (linear_ordered_semiring (random_gen (random_gen num)))) : complete_lattice.is_Sup_finite_compact (linear_ordered_semiring (random_gen (random_gen num))) := sorry --non-trivial
lemma new_lemma_157464 (h0 : ring (has_neg_part (has_add environment.implicit_infer_kind))) : strong_rank_condition (has_neg_part (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_157465 (h1 : topological_space (add_monoid linarith.ineq)) : path_connected_space (add_monoid linarith.ineq) := sorry --non-trivial
lemma new_lemma_157466 (h0 : functor.add_const (uniform_space (normed_comm_ring Type)) environment.implicit_infer_kind) : @complete_space.{1} (normed_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (uniform_space.{1} (normed_comm_ring.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_157467 (h0 : fin has_zero.zero) : @t0_space.{1} (complete_distrib_lattice.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@matrix.vec_empty.{2} (function.extfun.{3 2} (Type 1) topological_space.{1}) h0) (complete_distrib_lattice.{1} Type))  := sorry --non-trivial
lemma new_lemma_157468 (h0 : functor.add_const (add_group (ring name)) (has_neg Type)) : @is_add_cyclic.{0} (ring.{0} name) (@functor.add_const.run.{0 1} (add_group.{0} (ring.{0} name)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_157469 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (add_cancel_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_cancel_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157470 (h0 : set (add_comm_semigroup (add_comm_semigroup (add_comm_semigroup std_gen)) -> char)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_157471 (h0 : functor.add_const (list (has_dist empty)) empty) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157472 (h0 : functor.add_const (ring (complete_distrib_lattice environment.implicit_infer_kind)) name) : @strong_rank_condition.{0} (complete_distrib_lattice.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (complete_distrib_lattice.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_157473 (h0 : ring pos) : is_principal_ideal_ring pos := sorry --non-trivial
lemma new_lemma_157474 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (has_bot.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_bot.{0} name))  := sorry --non-trivial
lemma new_lemma_157475 (h0 : not (topological_space (add_cancel_comm_monoid to_additive.value_type) -> false)) : @path_connected_space.{0} (add_cancel_comm_monoid.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (add_cancel_comm_monoid.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_157476 (h0 : cancel_comm_monoid_with_zero (linear_ordered_comm_ring (semiring empty))) : unique_factorization_monoid (linear_ordered_comm_ring (semiring empty)) := sorry --non-trivial
lemma new_lemma_157477 (h0 : functor.add_const Prop (has_norm (has_norm (semiring empty)))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_157478 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (has_neg.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_neg.{0} empty))  := sorry --non-trivial
lemma new_lemma_157479 (h0 : uniform_space (has_nndist (option unsigned))) : complete_space (has_nndist (option unsigned)) := sorry --non-trivial
lemma new_lemma_157480 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (canonically_linear_ordered_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (canonically_linear_ordered_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_157481 (h0 : functor.add_const (monoid (ring name)) (has_neg (has_neg name))) : @monoid.fg.{0} (ring.{0} name) (@functor.add_const.run.{0 0} (monoid.{0} (ring.{0} name)) (has_neg.{0} (has_neg.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_157482 (h0 : prod (has_one unsigned) (has_one unsigned)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_157483 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (add_right_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type monoid.{0} h0 (add_right_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_157484 (h0 : topological_space (denumerable (distrib_lattice (complete_semilattice_Sup (has_norm string_imp))))) : t0_space (denumerable (distrib_lattice (complete_semilattice_Sup (has_norm string_imp)))) := sorry --non-trivial
lemma new_lemma_157485 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (has_Inf.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_Inf.{0} name))  := sorry --non-trivial
lemma new_lemma_157486 (h0 : has_mem.mem (metric_space linarith.comp) has_emptyc.emptyc) : @is_add_cyclic.{0} (metric_space.{0} linarith.comp) (@finset.pi.empty.{1 0} Type add_group.{0} (metric_space.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_157487 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (has_inter congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_157488 (h0 : add_group (with_one (has_top fun_info))) : is_add_cyclic (with_one (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_157489 (h0 : filter (linear_ordered_comm_ring unsigned)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_157490 (h0 : function.extfun (Type 1) complete_lattice) : @is_atomistic.{1} (comm_semigroup.{1} Type) (@function.extfun_app.{3 2} (Type 1) complete_lattice.{1} h0 (comm_semigroup.{1} Type))  := sorry --non-trivial
lemma new_lemma_157491 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (has_Sup.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_Sup.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_157492 (h0 : fin has_zero.zero) : @has_exists_mul_of_le.{1} (has_Inf.{1} Type) (@matrix.vec_empty.{1} (ordered_comm_monoid.{1} (has_Inf.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_157493 (h0 : functor.add_const (function.extfun (Type 1) complete_lattice) name) : @complete_lattice.is_Sup_finite_compact.{1} (ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) complete_lattice.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) complete_lattice.{1}) name h0) (ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_157494 (h0 : functor.add_const (topological_space (normed_comm_ring name)) name) : @sequential_space.{0} (normed_comm_ring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_157495 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (add_right_cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (add_right_cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157496 (h0 : list (has_inv (random_gen string_imp))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_157497 (h0 : topological_space (has_bot (sub_neg_monoid (has_pos_part pos)))) : preconnected_space (has_bot (sub_neg_monoid (has_pos_part pos))) := sorry --non-trivial
lemma new_lemma_157498 (h0 : not (semiring (complete_linear_order unsigned) -> false)) : @is_noetherian_ring.{0} (complete_linear_order.{0} unsigned) (@classical.by_contradiction'.{1} (semiring.{0} (complete_linear_order.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_157499 (h0 : topological_space (normed_lattice_add_comm_group (has_add real))) : preconnected_space (normed_lattice_add_comm_group (has_add real)) := sorry --non-trivial
lemma new_lemma_157500 (h0 : functor.add_const (topological_space (simple_graph linarith.comp)) (finset (has_Inf Type))) : @totally_separated_space.{0} (simple_graph.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (simple_graph.{0} linarith.comp)) (finset.{1} (has_Inf.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_157501 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (measure_theory.measure_space.{0} num) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (measure_theory.measure_space.{0} num))  := sorry --non-trivial
lemma new_lemma_157502 (h0 : left_cancel_semigroup unsigned -> subsingleton_info -> left_cancel_semigroup unsigned) : right_commutative h0 := sorry --non-trivial
lemma new_lemma_157503 (h0 : function.extfun ((finset Type -> Prop) -> Prop) (function.extfun (finset Type -> Prop))) : @path_connected_space.{0} (with_one.{0} (has_norm.{0} (random_gen.{0} (random_gen.{0} linarith.comp_source)))) (@finset.pi.empty.{1 0} Type topological_space.{0} (with_one.{0} (has_norm.{0} (random_gen.{0} (random_gen.{0} linarith.comp_source)))) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_one.{0} (has_norm.{0} (random_gen.{0} (random_gen.{0} linarith.comp_source))))) (@function.extfun_app.{2 0} (finset.{1} Type → Prop) (function.extfun.{2 0} (finset.{1} Type)) (@function.extfun_app.{2 0} ((finset.{1} Type → Prop) → Prop) (function.extfun.{2 0} (finset.{1} Type → Prop)) h0 (function.extfun.{2 0} (finset.{1} Type))) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_one.{0} (has_norm.{0} (random_gen.{0} (random_gen.{0} linarith.comp_source)))))) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_157504 (h0 : complete_lattice (encodable (has_nnnorm (has_nnnorm char)))) : complete_lattice.is_Sup_finite_compact (encodable (has_nnnorm (has_nnnorm char))) := sorry --non-trivial
lemma new_lemma_157505 (h0 : functor.comp topological_space uniform_space.core unsigned) : @totally_disconnected_space.{0} (uniform_space.core.{0} unsigned) (@functor.comp.run.{0 0 0} topological_space.{0} uniform_space.core.{0} unsigned h0)  := sorry --non-trivial
lemma new_lemma_157506 (h0 : functor.add_const (group (preorder unsigned)) num) : @group.fg.{0} (preorder.{0} unsigned) (@functor.add_const.run.{0 0} (group.{0} (preorder.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_157507 (h0 : list (non_assoc_semiring (has_top (mul_zero_class (ordered_cancel_comm_monoid congr_arg_kind))))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_157508 (h0 : ring (ordered_cancel_add_comm_monoid (option unsigned))) : is_domain (ordered_cancel_add_comm_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_157509 (h0 : group (has_to_string (has_add (ring (ring (ring Type)))))) : is_simple_group (has_to_string (has_add (ring (ring (ring Type))))) := sorry --non-trivial
lemma new_lemma_157510 (h0 : uniform_space (add_comm_monoid Type)) : complete_space (add_comm_monoid Type) := sorry --non-trivial
lemma new_lemma_157511 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157512 (h0 : fin has_zero.zero) : @is_add_cyclic.{0} (normed_lattice_add_comm_group.{0} pos) (@function.extfun_app.{2 1} Type add_group.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type add_group.{0}) h0) (normed_lattice_add_comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_157513 (h0 : function.extfun Type topological_space) : @t0_space.{0} (canonically_ordered_add_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_add_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157514 (h0 : functor.comp topological_space has_to_string Type) : @locally_compact_space.{1} (has_to_string.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} has_to_string.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_157515 (h0 : measurable_space (has_Inf (has_Inf pos))) (h1 : uniform_space (boolean_algebra (measure_theory.measure (has_Inf (has_Inf pos))))) : separated_space (boolean_algebra (measure_theory.measure (has_Inf (has_Inf pos)))) := sorry --non-trivial
lemma new_lemma_157516 (h1 : function.extfun Type uniform_space) : @complete_space.{0} fun_info (@function.extfun_app.{2 1} Type uniform_space.{0} h1 fun_info)  := sorry --non-trivial
lemma new_lemma_157517 (h0 : ring (has_norm (semiring (semiring empty)))) : is_domain (has_norm (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_157518 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @path_connected_space.{0} (comm_semigroup.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (comm_semigroup.{0} pos)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_157519 (h1 : group (has_emptyc linarith.comp_source)) : is_cyclic (has_emptyc linarith.comp_source) := sorry --non-trivial
lemma new_lemma_157520 (h0 : complete_lattice (normed_comm_ring (option name))) : complete_lattice.is_Sup_finite_compact (normed_comm_ring (option name)) := sorry --non-trivial
lemma new_lemma_157521 (h0 : complete_lattice (boolean_algebra (has_pos_part (has_pos_part linarith.comp)))) : is_compactly_generated (boolean_algebra (has_pos_part (has_pos_part linarith.comp))) := sorry --non-trivial
lemma new_lemma_157522 (h0 : ring (distrib (has_nnnorm (has_nnnorm (random_gen (random_gen linarith.ineq)))))) : rank_condition (distrib (has_nnnorm (has_nnnorm (random_gen (random_gen linarith.ineq))))) := sorry --non-trivial
lemma new_lemma_157523 (h0 : not (group (has_one empty) -> false)) : @is_cyclic.{0} (has_one.{0} empty) (@classical.by_contradiction'.{1} (group.{0} (has_one.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_157524 (h0 : function.extfun Type (functor.add_const (topological_space (cancel_monoid empty)))) : @path_connected_space.{0} (cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} empty)) congr_arg_kind (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (cancel_monoid.{0} empty))) h0 congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157525 (h0 : fin has_zero.zero) : @normalizer_condition.{0} (has_Inf.{0} pos) (@matrix.vec_empty.{0} (group.{0} (has_Inf.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_157526 (h0 : ulower pnat) (h1 : list pnat) (h2 : pnat) : pnat.coprime (list.ilast' (ulower.up h0) h1) h2 := sorry --non-trivial
lemma new_lemma_157527 (h0 : complete_lattice (random_gen (with_bot (with_bot (random_gen linarith.comp_source))))) : is_atomistic (random_gen (with_bot (with_bot (random_gen linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_157528 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (finset.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (finset.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157529 (h0 : group (add_comm_monoid (has_nndist (finset linarith.comp)))) : group.fg (add_comm_monoid (has_nndist (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_157530 (h0 : ring (mul_one_class string.iterator_imp)) : rank_condition (mul_one_class string.iterator_imp) := sorry --non-trivial
lemma new_lemma_157531 (h0 : Type -> Type) (h1 : nat) (h2 : topological_space (nat.iterate h0 h1 ordering)) : totally_disconnected_space (nat.iterate h0 h1 ordering) := sorry --non-trivial
lemma new_lemma_157532 (h0 : topological_space (left_cancel_monoid (semiring num))) : normal_space (left_cancel_monoid (semiring num)) := sorry --non-trivial
lemma new_lemma_157533 (h0 : add_monoid (has_star (semiring (semiring (semiring (semiring (semiring num))))))) : add_monoid.fg (has_star (semiring (semiring (semiring (semiring (semiring num)))))) := sorry --non-trivial
lemma new_lemma_157534 (h0 : functor.add_const (topological_space (semigroup environment.implicit_infer_kind)) Type) : @sequential_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (semigroup.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_157535 (h0 : empty -> Prop) (h1 : ordinal) (h2 : has_lt.lt h1 (ordinal.type well_ordering_rel)) : ordinal.bfamily_of_family h0 h1 h2 := sorry --non-trivial
lemma new_lemma_157536 (h0 : topological_space (has_neg (has_Inf Type))) : normal_space (has_neg (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_157537 (h0 : topological_space (boolean_algebra Type)) : preconnected_space (boolean_algebra Type) := sorry --non-trivial
lemma new_lemma_157538 (h0 : topological_space (linear_ordered_add_comm_group (random_gen (comm_ring (random_gen fun_info))))) : irreducible_space (linear_ordered_add_comm_group (random_gen (comm_ring (random_gen fun_info)))) := sorry --non-trivial
lemma new_lemma_157539 (h1 : complete_lattice (distrib (has_ssubset (random_gen (random_gen char))))) : complete_lattice.is_Sup_finite_compact (distrib (has_ssubset (random_gen (random_gen char)))) := sorry --non-trivial
lemma new_lemma_157540 (h0 : ring (has_dist (option (option (option empty))))) : rank_condition (has_dist (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_157541 (h0 : add_group (metric_space linarith.ineq)) : is_add_cyclic (metric_space linarith.ineq) := sorry --non-trivial
lemma new_lemma_157542 (h0 : complete_lattice (comm_monoid (option empty))) : is_atomistic (comm_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_157543 (h1 : topological_space enat) (h2 h3 : nat) (h4 : thunk (preorder enat)) : order_topology enat := sorry --non-trivial
lemma new_lemma_157544 (h0 : fin has_zero.zero) : @path_connected_space.{0} (complete_distrib_lattice.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (complete_distrib_lattice.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_157545 (h0 : cancel_monoid (linear_ordered_field ennreal) -> cancel_monoid (linear_ordered_field ennreal) -> Prop) : is_symm (cancel_monoid (linear_ordered_field ennreal)) h0 := sorry --non-trivial
lemma new_lemma_157546 (h0 : topological_space (cancel_monoid (has_neg name))) : sequential_space (cancel_monoid (has_neg name)) := sorry --non-trivial
lemma new_lemma_157547 (h0 : topological_space (boolean_algebra (finset unsigned))) : irreducible_space (boolean_algebra (finset unsigned)) := sorry --non-trivial
lemma new_lemma_157548 (h0 : functor.add_const (semiring (with_bot num)) unsigned) : @is_noetherian_ring.{0} (with_bot.{0} num) (@functor.add_const.run.{0 0} (semiring.{0} (with_bot.{0} num)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_157549 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (has_inv.{0} fun_info) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_inv.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_157550 (h0 : not (topological_space (uniform_space (uniform_space char)) -> false)) : @path_connected_space.{0} (uniform_space.{0} (uniform_space.{0} char)) (@classical.by_contradiction'.{1} (topological_space.{0} (uniform_space.{0} (uniform_space.{0} char))) h0)  := sorry --non-trivial
lemma new_lemma_157551 (h0 : functor.add_const (topological_space (has_to_string Type)) linarith.comp) : @irreducible_space.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_to_string.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157552 (h0 : functor.add_const Prop (canonically_ordered_comm_semiring (has_add linarith.comp))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_157553 (h0 : uniform_space (mul_one_class (finset Type))) : separated_space (mul_one_class (finset Type)) := sorry --non-trivial
lemma new_lemma_157554 (h0 : group (ring (has_zero (has_zero pos)))) : is_simple_group (ring (has_zero (has_zero pos))) := sorry --non-trivial
lemma new_lemma_157555 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @is_simple_group.{1} Type (@function.extfun_app.{3 2} (Type 1) group.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 group.{1}) Type)  := sorry --non-trivial
lemma new_lemma_157556 (h0 : monoid (finset (option (option ennreal)))) : monoid.fg (finset (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_157557 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @unique_factorization_monoid.{0} (canonically_ordered_monoid.{0} pos) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 cancel_comm_monoid_with_zero.{0}) (canonically_ordered_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_157558 (h0 : group (measurable_space.dynkin_system empty)) : normalizer_condition (measurable_space.dynkin_system empty) := sorry --non-trivial
lemma new_lemma_157559 (h0 : topological_space (canonically_ordered_monoid pos)) : irreducible_space (canonically_ordered_monoid pos) := sorry --non-trivial
lemma new_lemma_157560 (h0 : not (uniform_space congr_arg_kind -> false)) : @complete_space.{0} congr_arg_kind (@classical.by_contradiction'.{1} (uniform_space.{0} congr_arg_kind) h0)  := sorry --non-trivial
lemma new_lemma_157561 (h0 : not (ring (normed_group fun_info) -> false)) : @rank_condition.{0} (normed_group.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (normed_group.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_157562 (h1 : topological_space (has_ssubset char)) (h2 : group (topological_space.opens (has_ssubset char))) : is_cyclic (topological_space.opens (has_ssubset char)) := sorry --non-trivial
lemma new_lemma_157563 (h0 : ring (encodable (random_gen linarith.ineq))) : rank_condition (encodable (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_157564 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} name (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) name)  := sorry --non-trivial
lemma new_lemma_157565 (h0 : uniform_space znum) : complete_space znum := sorry --non-trivial
lemma new_lemma_157566 (h0 : functor.add_const (add_group (simple_graph linarith.comp)) linarith.comp) : @is_add_cyclic.{0} (simple_graph.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_group.{0} (simple_graph.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157567 (h0 : fin has_zero.zero) : @preirreducible_space.{0} (complete_distrib_lattice.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (complete_distrib_lattice.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_157568 (h0 : ring (has_inv (random_gen (random_gen fun_info)))) : is_domain (has_inv (random_gen (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_157569 (h0 : functor.add_const (topological_space (has_neg_part environment.implicit_infer_kind)) name) : @discrete_topology.{0} (has_neg_part.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_157570 (h1 : group (topological_space fun_info)) : is_cyclic (topological_space fun_info) := sorry --non-trivial
lemma new_lemma_157571 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (mul_zero_class.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (mul_zero_class.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_157572 (h0 : functor.add_const (semiring (has_zero Type)) pos) : @is_noetherian_ring.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (semiring.{1} (has_zero.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_157573 (h0 : topological_space (has_zero (has_to_string pos))) : totally_disconnected_space (has_zero (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_157574 (h0 : add_group (comm_group environment.implicit_infer_kind)) : is_add_cyclic (comm_group environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_157575 (h0 : group (has_sub congr_arg_kind)) : is_cyclic (has_sub congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157576 (h0 : complete_lattice (encodable unsigned)) : is_atomistic (encodable unsigned) := sorry --non-trivial
lemma new_lemma_157577 (h0 : topological_space (linear_ordered_semiring (semiring (semiring (semiring congr_arg_kind))))) : totally_disconnected_space (linear_ordered_semiring (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_157578 (h0 : topological_space (with_one (random_gen num))) : irreducible_space (with_one (random_gen num)) := sorry --non-trivial
lemma new_lemma_157579 (h0 : add_group (plift (has_edist (option (option unsigned))))) : is_add_cyclic (plift (has_edist (option (option unsigned)))) := sorry --non-trivial
lemma new_lemma_157580 (h0 : fun_info -> fun_info -> bool) : is_dec_refl h0 := sorry --non-trivial
lemma new_lemma_157581 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (add_cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_157582 (h0 : topological_space (has_emptyc (has_top (has_top congr_arg_kind)))) : locally_compact_space (has_emptyc (has_top (has_top congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_157583 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @topological_space.separable_space.{0} (has_inter.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_inter.{0} num))  := sorry --non-trivial
lemma new_lemma_157584 (h0 : functor.add_const (function.extfun Type ring) (ring linarith.comp)) : @is_principal_ideal_ring.{0} (normed_comm_ring.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) (ring.{0} linarith.comp) h0) (normed_comm_ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_157585 (h0 : list (linear_order unsigned)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_157586 (h0 : uniform_space (normed_comm_ring (has_Inf Type))) : separated_space (normed_comm_ring (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_157587 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (ordered_comm_ring.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_ring.{0} name))  := sorry --non-trivial
lemma new_lemma_157588 (h0 : ring (semilattice_inf (has_top (has_top fun_info)))) : strong_rank_condition (semilattice_inf (has_top (has_top fun_info))) := sorry --non-trivial
lemma new_lemma_157589 (h0 : topological_space (has_pos_part (sub_neg_monoid real))) : preirreducible_space (has_pos_part (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_157590 (h0 : ring (pseudo_metric_space ennreal)) : is_principal_ideal_ring (pseudo_metric_space ennreal) := sorry --non-trivial
lemma new_lemma_157591 (h0 : uniform_space (plift congr_arg_kind)) : complete_space (plift congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157592 (h0 : topological_space (add_comm_monoid (has_Inf (has_neg name)))) : preconnected_space (add_comm_monoid (has_Inf (has_neg name))) := sorry --non-trivial
lemma new_lemma_157593 (h0 : add_group (topological_space (comm_ring char))) : is_add_cyclic (topological_space (comm_ring char)) := sorry --non-trivial
lemma new_lemma_157594 (h0 : functor.comp semiring comm_group Type) : @is_noetherian_ring.{1} (comm_group.{1} Type) (@functor.comp.run.{1 1 1} semiring.{1} comm_group.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_157595 (h0 : functor.add_const (fin has_zero.zero) pos) : @archimedean.{0} (has_to_string.{0} name) (@matrix.vec_empty.{0} (ordered_add_comm_monoid.{0} (has_to_string.{0} name)) (@function.extfun_app.{1 1} nat fin (@matrix.vec_empty.{0} (function.extfun.{1 1} nat fin) (@function.extfun_app.{1 1} nat fin (@matrix.vec_empty.{0} (function.extfun.{1 1} nat fin) (@functor.add_const.run.{0 0} (fin (@has_zero.zero.{0} nat nat.has_zero)) pos h0)) (@has_zero.zero.{0} nat nat.has_zero))) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_157596 (h0 : set (add_comm_semigroup ereal -> ereal)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_157597 (h0 : functor.add_const (uniform_space (has_zero name)) environment.implicit_infer_kind) : @complete_space.{0} (has_zero.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_zero.{0} name)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_157598 (h0 : functor.add_const (topological_space (add_cancel_monoid pos)) (ring (finset pos))) : @loc_path_connected_space.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} pos)) (ring.{0} (finset.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_157599 (h0 : functor.add_const (uniform_space (has_neg linarith.comp)) (finset linarith.comp)) : @complete_space.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_neg.{0} linarith.comp)) (finset.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_157600 (h0 : not (topological_space (id linarith.comp) -> false)) : @locally_compact_space.{0} (@id.{2} Type linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (@id.{2} Type linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_157601 (h0 : list (add_cancel_monoid (boolean_algebra (add_comm_monoid (has_add (ring unsigned)))))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_157602 (h0 : measurable_space (has_le environment.projection_info)) (h1 : filter (has_le environment.projection_info)) : filter.is_measurably_generated h1 := sorry --non-trivial
lemma new_lemma_157603 (h0 : topological_space (has_emptyc empty)) : totally_disconnected_space (has_emptyc empty) := sorry --non-trivial
lemma new_lemma_157604 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (ordered_comm_group.{0} empty) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (ordered_comm_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_157605 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (semiring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (semiring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_157606 (h0 : functor.add_const (topological_space (has_pos_part pos)) Type) : @regular_space.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (has_pos_part.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_157607 (h0 : add_monoid (ring (has_neg (finset pos)))) : add_monoid.fg (ring (has_neg (finset pos))) := sorry --non-trivial
lemma new_lemma_157608 (h1 : not (topological_space (has_ssubset enat) -> false)) : @path_connected_space.{0} (has_ssubset.{0} enat) (@classical.by_contradiction'.{1} (topological_space.{0} (has_ssubset.{0} enat)) h1)  := sorry --non-trivial
lemma new_lemma_157609 (h0 : ring reducibility_hints) : rank_condition reducibility_hints := sorry --non-trivial
lemma new_lemma_157610 (h0 : functor.add_const (monoid (has_zero pos)) environment.implicit_infer_kind) : @monoid.fg.{0} (has_zero.{0} pos) (@functor.add_const.run.{0 0} (monoid.{0} (has_zero.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_157611 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (has_neg_part unsigned)) := sorry --non-trivial
lemma new_lemma_157612 (h0 : ring (with_one (has_norm (semiring unsigned)))) : is_domain (with_one (has_norm (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_157613 (h0 : function.extfun Type (functor.add_const (complete_lattice (normed_linear_ordered_group unsigned)))) : @complete_lattice.is_Sup_finite_compact.{0} (normed_linear_ordered_group.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (normed_linear_ordered_group.{0} unsigned)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (complete_lattice.{0} (normed_linear_ordered_group.{0} unsigned))) h0 empty))  := sorry --non-trivial
lemma new_lemma_157614 (h0 : functor.add_const (topological_space ennreal) ennreal) : path_connected_space ennreal := sorry --non-trivial
lemma new_lemma_157615 (h0 : topological_space (canonically_linear_ordered_monoid real)) : normal_space (canonically_linear_ordered_monoid real) := sorry --non-trivial
lemma new_lemma_157616 (h0 : uniform_space (has_bot (comm_semigroup (has_Inf (sub_neg_monoid real))))) : separated_space (has_bot (comm_semigroup (has_Inf (sub_neg_monoid real)))) := sorry --non-trivial
lemma new_lemma_157617 (h1 : measurable_space (has_append fun_info)) (h2 : has_sup (has_append fun_info)) : has_measurable_sup (has_append fun_info) := sorry --non-trivial
lemma new_lemma_157618 (h0 : functor.comp uniform_space comm_group pos) : @separated_space.{0} (comm_group.{0} pos) (@functor.comp.run.{0 0 0} uniform_space.{0} comm_group.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_157619 (h1 : uniform_space (has_append (denumerable (denumerable char)))) : complete_space (has_append (denumerable (denumerable char))) := sorry --non-trivial
lemma new_lemma_157620 (h0 : topological_space (boolean_algebra (comm_group (has_add name)))) : irreducible_space (boolean_algebra (comm_group (has_add name))) := sorry --non-trivial
lemma new_lemma_157621 (h0 : ordered_comm_monoid (has_bot (has_Inf linarith.comp))) : has_exists_mul_of_le (has_bot (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_157622 (h0 : uniform_space (metric_space (semiring linarith.comp))) : separated_space (metric_space (semiring linarith.comp)) := sorry --non-trivial
lemma new_lemma_157623 (h0 : complete_lattice (with_one (has_top to_additive.value_type))) : is_atomistic (with_one (has_top to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_157624 (h0 : topological_space (with_one num)) : t0_space (with_one num) := sorry --non-trivial
lemma new_lemma_157625 (h0 : not (add_group (normed_group fun_info) -> false)) : @is_add_cyclic.{0} (normed_group.{0} fun_info) (@classical.by_contradiction'.{1} (add_group.{0} (normed_group.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_157626 (h0 : group (has_top (has_nnnorm (has_nnnorm linarith.comp_source)))) : group.fg (has_top (has_nnnorm (has_nnnorm linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_157627 (h0 : not (has_mem.mem (with_bot linarith.comp) has_emptyc.emptyc -> false)) : @path_connected_space.{0} (with_bot.{0} linarith.comp) (@finset.pi.empty.{1 0} Type topological_space.{0} (with_bot.{0} linarith.comp) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_bot.{0} linarith.comp) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_157628 (h0 : functor.add_const (uniform_space (has_neg environment.implicit_infer_kind)) linarith.comp) : @complete_space.{0} (has_neg.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_neg.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157629 (h0 : topological_space (non_unital_non_assoc_semiring fun_info)) (h1 : has_div (non_unital_non_assoc_semiring fun_info)) : has_continuous_div (non_unital_non_assoc_semiring fun_info) := sorry --non-trivial
lemma new_lemma_157630 (h0 : ordered_comm_monoid (has_to_string name)) : has_exists_mul_of_le (has_to_string name) := sorry --non-trivial
lemma new_lemma_157631 (h0 : ordered_comm_monoid (has_zero linarith.comp)) : has_exists_mul_of_le (has_zero linarith.comp) := sorry --non-trivial
lemma new_lemma_157632 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (complete_linear_order.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (complete_linear_order.{0} num))  := sorry --non-trivial
lemma new_lemma_157633 (h0 : not (topological_space (semi_normed_comm_ring (has_ssubset (has_ssubset linarith.comp_source))) -> false)) : @path_connected_space.{0} (semi_normed_comm_ring.{0} (has_ssubset.{0} (has_ssubset.{0} linarith.comp_source))) (@classical.by_contradiction'.{1} (topological_space.{0} (semi_normed_comm_ring.{0} (has_ssubset.{0} (has_ssubset.{0} linarith.comp_source)))) h0)  := sorry --non-trivial
lemma new_lemma_157634 (h0 : list (finset (has_Inf (finset pos)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_157635 (h0 : group (pseudo_metric_space (finset Type))) : group.fg (pseudo_metric_space (finset Type)) := sorry --non-trivial
lemma new_lemma_157636 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (add_left_cancel_semigroup unsigned)) := sorry --non-trivial
lemma new_lemma_157637 (h0 : function.extfun Type group) : @normalizer_condition.{0} (has_neg_part.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (has_neg_part.{0} name))  := sorry --non-trivial
lemma new_lemma_157638 (h0 : functor.add_const (ring (generalized_boolean_algebra name)) pos) : @is_domain.{0} (generalized_boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (generalized_boolean_algebra.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_157639 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (normed_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (normed_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157640 (h0 : functor.add_const (topological_space (has_pos_part pos)) linarith.comp) : @sequential_space.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_pos_part.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157641 (h0 : fin has_zero.zero) : @group.fg.{1} (has_pos_part.{1} Type) (@matrix.vec_empty.{1} (group.{1} (has_pos_part.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_157642 (h0 : functor.add_const (semiring (has_Inf pos)) (ring (ring pos))) : @is_noetherian_ring.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 0} (semiring.{0} (has_Inf.{0} pos)) (ring.{0} (ring.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_157643 (h0 : prod (sub_neg_monoid (has_Inf linarith.comp)) (sub_neg_monoid (has_Inf linarith.comp))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_157644 (h0 : ring (add_left_cancel_semigroup (semiring unsigned))) : is_domain (add_left_cancel_semigroup (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_157645 (h0 : function.extfun nat fin) : @loc_path_connected_space.{1} (ordered_comm_ring.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (ordered_comm_ring.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_157646 (h0 : not (complete_lattice (normed_field linarith.ineq) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (normed_field.{0} linarith.ineq) (@classical.by_contradiction'.{1} (complete_lattice.{0} (normed_field.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_157647 (h0 : ring (ring (finset Type))) : is_domain (ring (finset Type)) := sorry --non-trivial
lemma new_lemma_157648 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (non_assoc_semiring.{0} empty) (@function.extfun_app.{2 1} Type add_group.{0} h0 (non_assoc_semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_157649 (h0 : complete_lattice (add_group (has_norm unsigned))) : complete_lattice.is_Sup_finite_compact (add_group (has_norm unsigned)) := sorry --non-trivial
lemma new_lemma_157650 (h0 : functor.add_const (topological_space (generalized_boolean_algebra Type)) name) : @locally_compact_space.{1} (generalized_boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (generalized_boolean_algebra.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_157651 (h0 : add_group (random_gen (has_nnnorm fun_info))) : is_add_cyclic (random_gen (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_157652 (h0 : functor.add_const (filter (add_cancel_monoid Type)) linarith.comp) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157653 (h0 : group (has_top (has_top linarith.comp_source))) : is_cyclic (has_top (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_157654 (h1 : topological_space (div_inv_monoid to_additive.value_type)) : t0_space (div_inv_monoid to_additive.value_type) := sorry --non-trivial
lemma new_lemma_157655 (h1 : ring (dlist linarith.ineq)) : rank_condition (dlist linarith.ineq) := sorry --non-trivial
lemma new_lemma_157656 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (has_top.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_top.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_157657 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (metric_space.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (metric_space.{0} num))  := sorry --non-trivial
lemma new_lemma_157658 (h0 : complete_lattice (has_norm unsigned)) : is_atomistic (has_norm unsigned) := sorry --non-trivial
lemma new_lemma_157659 (h0 : topological_space (semigroup (normed_comm_ring (has_Inf linarith.comp)))) : sequential_space (semigroup (normed_comm_ring (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_157660 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_noetherian_ring.{0} (has_add.{0} name) (@function.extfun_app.{2 1} Type semiring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 semiring.{0}) (has_add.{0} name))  := sorry --non-trivial
lemma new_lemma_157661 (h0 : functor.add_const (ring (bin_tree num)) (semiring num)) : @is_domain.{0} (bin_tree.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (bin_tree.{0} num)) (semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_157662 (h1 : monoid (denumerable to_additive.value_type)) : monoid.fg (denumerable to_additive.value_type) := sorry --non-trivial
lemma new_lemma_157663 (h0 : functor.add_const (topological_space (has_to_string pos)) unsigned) : @totally_separated_space.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} pos)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_157664 (h0 : complete_lattice (has_Inf (has_add pos))) : complete_lattice.is_Sup_finite_compact (has_Inf (has_add pos)) := sorry --non-trivial
lemma new_lemma_157665 (h0 : filter (linear_ordered_field congr_arg_kind)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_157666 (h0 : functor.add_const (topological_space (cancel_monoid name)) name) : @loc_path_connected_space.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_157667 (h0 : topological_space (pseudo_metric_space (option (option unsigned)))) : t0_space (pseudo_metric_space (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_157668 (h0 : functor.add_const (monoid (monoid empty)) ennreal) : @monoid.fg.{0} (monoid.{0} empty) (@functor.add_const.run.{0 0} (monoid.{0} (monoid.{0} empty)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_157669 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (metric_space.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (metric_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_157670 (h0 : not (ring (fintype fun_info) -> false)) : @is_domain.{0} (fintype.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (fintype.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_157671 (h0 : topological_space (measurable_space (comm_ring (has_norm linarith.ineq)))) : t0_space (measurable_space (comm_ring (has_norm linarith.ineq))) := sorry --non-trivial
lemma new_lemma_157672 (h0 : functor.add_const (function.extfun Type semiring) environment.implicit_infer_kind) : @is_noetherian_ring.{0} (has_to_string.{0} linarith.comp) (@function.extfun_app.{2 1} Type semiring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type semiring.{0}) environment.implicit_infer_kind h0) (has_to_string.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_157673 (h0 : function.extfun Type topological_space) : @normal_space.{0} (has_bot.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_bot.{0} pos))  := sorry --non-trivial
lemma new_lemma_157674 (h0 : group (add_cancel_monoid (has_nndist name))) : group.fg (add_cancel_monoid (has_nndist name)) := sorry --non-trivial
lemma new_lemma_157675 (h0 : functor.add_const (ordered_comm_monoid (add_cancel_monoid environment.implicit_infer_kind)) Type) : @has_exists_mul_of_le.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_157676 (h0 : topological_space (has_add (option unsigned))) : t1_space (has_add (option unsigned)) := sorry --non-trivial
lemma new_lemma_157677 (h0 : ring (linear_ordered_cancel_comm_monoid (semiring (semiring empty)))) : rank_condition (linear_ordered_cancel_comm_monoid (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_157678 (h0 : preorder bool) (h1 : set bool) : set.is_pwo h1 := sorry --non-trivial
lemma new_lemma_157679 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (add_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type semiring.{0} h0 (add_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_157680 (h1 : topological_space (semi_normed_comm_ring fun_info)) : t0_space (semi_normed_comm_ring fun_info) := sorry --non-trivial
lemma new_lemma_157681 (h0 : group (has_nndist (has_nndist pos))) : is_simple_group (has_nndist (has_nndist pos)) := sorry --non-trivial
lemma new_lemma_157682 (h0 : topological_space (complete_distrib_lattice (has_add environment.implicit_infer_kind))) : totally_disconnected_space (complete_distrib_lattice (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_157683 (h0 : complete_lattice (add_cancel_comm_monoid reducibility_hints)) : complete_lattice.is_Sup_finite_compact (add_cancel_comm_monoid reducibility_hints) := sorry --non-trivial
lemma new_lemma_157684 (h0 : not (group (has_sub congr_arg_kind) -> false)) : @group.fg.{0} (has_sub.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (group.{0} (has_sub.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_157685 (h0 : ring (has_top (random_gen fun_info))) : is_domain (has_top (random_gen fun_info)) := sorry --non-trivial
lemma new_lemma_157686 (h0 : functor.add_const (ordered_comm_monoid (has_Inf Type)) Type) : @has_exists_mul_of_le.{1} (has_Inf.{1} Type) (@functor.add_const.run.{1 1} (ordered_comm_monoid.{1} (has_Inf.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_157687 (h0 : functor.add_const (finset (comm_group environment.implicit_infer_kind)) (has_neg environment.implicit_infer_kind)) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157688 (h0 : topological_space (with_one (has_inv fun_info))) : path_connected_space (with_one (has_inv fun_info)) := sorry --non-trivial
lemma new_lemma_157689 (h0 : finset (canonically_ordered_monoid Type)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_157690 (h0 : topological_space (has_zero (ring unsigned))) : preconnected_space (has_zero (ring unsigned)) := sorry --non-trivial
lemma new_lemma_157691 (h0 : functor.add_const (ordered_comm_monoid (add_comm_monoid Type)) pos) : @has_exists_mul_of_le.{1} (add_comm_monoid.{1} Type) (@functor.add_const.run.{1 0} (ordered_comm_monoid.{1} (add_comm_monoid.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_157692 (h0 : topological_space (sub_neg_monoid (has_Inf (has_add pos)))) : normal_space (sub_neg_monoid (has_Inf (has_add pos))) := sorry --non-trivial
lemma new_lemma_157693 (h0 : ring (add_cancel_monoid (has_pos_part Type))) : is_principal_ideal_ring (add_cancel_monoid (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_157694 (h0 : not (group (normed_group num) -> false)) : @normalizer_condition.{0} (normed_group.{0} num) (@classical.by_contradiction'.{1} (group.{0} (normed_group.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_157695 (h3 : has_lt fun_info) : no_max_order fun_info := sorry --non-trivial
lemma new_lemma_157696 (h0 : add_group (cancel_monoid (has_add Type))) : is_add_cyclic (cancel_monoid (has_add Type)) := sorry --non-trivial
lemma new_lemma_157697 (h0 : group (has_to_string (has_Inf pos))) : is_simple_group (has_to_string (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_157698 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (left_cancel_semigroup.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (left_cancel_semigroup.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157699 (h0 : ring (ring (finset linarith.comp))) : is_domain (ring (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_157700 (h0 : ring (simple_graph (has_add linarith.comp))) : rank_condition (simple_graph (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_157701 (h0 : ordered_comm_monoid (sub_neg_monoid (finset (finset pos)))) : has_exists_mul_of_le (sub_neg_monoid (finset (finset pos))) := sorry --non-trivial
lemma new_lemma_157702 (h0 : topological_space (monoid ennreal)) : discrete_topology (monoid ennreal) := sorry --non-trivial
lemma new_lemma_157703 (h0 : topological_space (boolean_algebra (complete_semilattice_Sup Type))) : normal_space (boolean_algebra (complete_semilattice_Sup Type)) := sorry --non-trivial
lemma new_lemma_157704 (h0 : topological_space (comm_semigroup (has_add real))) : locally_compact_space (comm_semigroup (has_add real)) := sorry --non-trivial
lemma new_lemma_157705 (h0 : function.extfun Type monoid) : @monoid.fg.{0} name (@function.extfun_app.{2 1} Type monoid.{0} h0 name)  := sorry --non-trivial
lemma new_lemma_157706 (h0 : function.extfun Type (functor.add_const (ring (omega_complete_partial_order empty)))) : @rank_condition.{0} (omega_complete_partial_order.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (omega_complete_partial_order.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ring.{0} (omega_complete_partial_order.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_157707 (h0 : functor.add_const (add_group (has_add name)) pos) : @is_add_cyclic.{0} (has_add.{0} name) (@functor.add_const.run.{0 0} (add_group.{0} (has_add.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_157708 (h0 : list (canonically_ordered_comm_semiring (has_pos_part Type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_157709 (h0 : topological_space (finset empty)) (h1 : group (finset empty)) : topological_group (finset empty) := sorry --non-trivial
lemma new_lemma_157710 (h0 : ring (semi_normed_comm_ring (has_ssubset char))) : strong_rank_condition (semi_normed_comm_ring (has_ssubset char)) := sorry --non-trivial
lemma new_lemma_157711 (h0 : group (option ennreal)) : group.fg (option ennreal) := sorry --non-trivial
lemma new_lemma_157712 (h0 : functor.add_const (group (boolean_algebra name)) name) : @normalizer_condition.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (group.{0} (boolean_algebra.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_157713 (h0 : topological_space (finset (option (option name)))) : loc_path_connected_space (finset (option (option name))) := sorry --non-trivial
lemma new_lemma_157714 (h0 : group (linear_ordered_field (option ennreal))) : is_cyclic (linear_ordered_field (option ennreal)) := sorry --non-trivial
lemma new_lemma_157715 (h0 : function.extfun nat fin) : @totally_separated_space.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@matrix.vec_empty.{2} (function.extfun.{3 2} (Type 1) topological_space.{1}) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero))) (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_157716 (h0 : cancel_comm_monoid_with_zero (has_nndist (option (option num)))) : unique_factorization_monoid (has_nndist (option (option num))) := sorry --non-trivial
lemma new_lemma_157717 (h0 : ring (add_cancel_monoid (comm_group (comm_group name)))) : rank_condition (add_cancel_monoid (comm_group (comm_group name))) := sorry --non-trivial
lemma new_lemma_157718 (h0 : ring (div_inv_monoid to_additive.value_type)) : rank_condition (div_inv_monoid to_additive.value_type) := sorry --non-trivial
lemma new_lemma_157719 (h0 : uniform_space (with_bot (random_gen (random_gen linarith.comp_source)))) : complete_space (with_bot (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_157720 (h0 : ring (non_unital_non_assoc_semiring (mul_one_class (mul_one_class char)))) : rank_condition (non_unital_non_assoc_semiring (mul_one_class (mul_one_class char))) := sorry --non-trivial
lemma new_lemma_157721 (h0 : topological_space (has_bot (has_neg real))) : path_connected_space (has_bot (has_neg real)) := sorry --non-trivial
lemma new_lemma_157722 (h0 : topological_space (semigroup ennreal)) : discrete_topology (semigroup ennreal) := sorry --non-trivial
lemma new_lemma_157723 (h0 : topological_space (has_edist (option empty))) : t1_space (has_edist (option empty)) := sorry --non-trivial
lemma new_lemma_157724 (h0 : ring (fintype bool)) : strong_rank_condition (fintype bool) := sorry --non-trivial
lemma new_lemma_157725 (h0 : functor.comp complete_lattice with_one fun_info) : @complete_lattice.is_Sup_finite_compact.{0} (with_one.{0} fun_info) (@functor.comp.run.{0 0 0} complete_lattice.{0} with_one.{0} fun_info h0)  := sorry --non-trivial
lemma new_lemma_157726 (h0 : group (sub_neg_monoid (has_Inf real))) : is_cyclic (sub_neg_monoid (has_Inf real)) := sorry --non-trivial
lemma new_lemma_157727 (h0 : functor.add_const (uniform_space (boolean_algebra linarith.comp)) (has_to_string pos)) : @separated_space.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (boolean_algebra.{0} linarith.comp)) (has_to_string.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_157728 (h0 : complete_lattice (dlist linarith.comp_source)) : complete_lattice.is_Sup_finite_compact (dlist linarith.comp_source) := sorry --non-trivial
lemma new_lemma_157729 (h0 : topological_space ereal) : t2_space ereal := sorry --non-trivial
lemma new_lemma_157730 (h0 : topological_space (has_add (option pos))) : path_connected_space (has_add (option pos)) := sorry --non-trivial
lemma new_lemma_157731 (h1 : complete_lattice (complete_semilattice_Sup char)) : is_compactly_generated (complete_semilattice_Sup char) := sorry --non-trivial
lemma new_lemma_157732 (h0 : complete_lattice (free_monoid (random_gen char))) : is_compactly_generated (free_monoid (random_gen char)) := sorry --non-trivial
lemma new_lemma_157733 (h0 : ring (has_div (mul_one_class (mul_one_class linarith.comp_source)))) : strong_rank_condition (has_div (mul_one_class (mul_one_class linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_157734 (h0 : topological_space (complete_distrib_lattice (has_Inf Type))) : t0_space (complete_distrib_lattice (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_157735 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (bin_tree.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type monoid.{0} h0 (bin_tree.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_157736 (h0 : uniform_space (has_add (has_pos_part linarith.comp))) : complete_space (has_add (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_157737 (h0 : complete_lattice (semigroup empty)) : complete_lattice.is_Sup_finite_compact (semigroup empty) := sorry --non-trivial
lemma new_lemma_157738 (h0 : not (ring (add_monoid to_additive.value_type) -> false)) : @strong_rank_condition.{0} (add_monoid.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (add_monoid.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_157739 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (linear_ordered_comm_ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (linear_ordered_comm_ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157740 (h0 : function.extfun (Type 1) add_monoid) : @add_monoid.fg.{1} (add_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_monoid.{1} h0 (add_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_157741 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (boolean_algebra.core.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (boolean_algebra.core.{0} pos))  := sorry --non-trivial
lemma new_lemma_157742 (h0 : ring (random_gen (mul_one_class (mul_one_class (mul_one_class reducibility_hints))))) : rank_condition (random_gen (mul_one_class (mul_one_class (mul_one_class reducibility_hints)))) := sorry --non-trivial
lemma new_lemma_157743 (h0 : add_monoid (complete_linear_order (semiring (semiring (semiring (semiring empty)))))) : add_monoid.fg (complete_linear_order (semiring (semiring (semiring (semiring empty))))) := sorry --non-trivial
lemma new_lemma_157744 (h0 : topological_space (has_zero num)) : irreducible_space (has_zero num) := sorry --non-trivial
lemma new_lemma_157745 (h0 : topological_space (free_add_monoid empty)) : loc_path_connected_space (free_add_monoid empty) := sorry --non-trivial
lemma new_lemma_157746 (h1 : add_group (has_ssubset reducibility_hints)) : is_add_cyclic (has_ssubset reducibility_hints) := sorry --non-trivial
lemma new_lemma_157747 (h0 : topological_space (boolean_algebra (normed_comm_ring pos))) : preirreducible_space (boolean_algebra (normed_comm_ring pos)) := sorry --non-trivial
lemma new_lemma_157748 (h0 : not (topological_space (has_union linarith.comp) -> false)) : @t0_space.{0} (has_union.{0} linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (has_union.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_157749 (h0 : topological_space (has_neg congr_arg_kind)) : preconnected_space (has_neg congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157750 (h0 : not (function.extfun Type complete_lattice -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (@id.{2} Type congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (@id.{2} Type congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157751 (h0 : has_neg (complete_distrib_lattice pos) -> has_neg (complete_distrib_lattice pos) -> Prop) : is_symm (has_neg (complete_distrib_lattice pos)) h0 := sorry --non-trivial
lemma new_lemma_157752 (h0 : functor.add_const (topological_space (ring Type)) linarith.comp) : @preconnected_space.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (ring.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157753 (h0 : topological_space (simple_graph (finset Type))) : preconnected_space (simple_graph (finset Type)) := sorry --non-trivial
lemma new_lemma_157754 (h0 : finset (simple_graph (ring (has_neg Type)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_157755 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (add_right_cancel_monoid.{0} num) (@function.extfun_app.{2 1} Type add_group.{0} h0 (add_right_cancel_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_157756 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (with_one.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (with_one.{0} num))  := sorry --non-trivial
lemma new_lemma_157757 (h0 : functor.add_const (topological_space (complete_distrib_lattice pos)) real) : @locally_compact_space.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} pos)) real h0)  := sorry --non-trivial
lemma new_lemma_157758 (h0 : group (add_cancel_monoid (has_add (has_nndist environment.implicit_infer_kind)))) : group.fg (add_cancel_monoid (has_add (has_nndist environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_157759 (h0 : finset (normed_group (semiring unsigned))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_157760 (h0 : group (normed_comm_ring (has_add linarith.comp))) : normalizer_condition (normed_comm_ring (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_157761 (h0 : measurable_space (mul_one_class environment.projection_info)) (h1 : measure_theory.measure (mul_one_class environment.projection_info)) : measure_theory.measure.is_complete h1 := sorry --non-trivial
lemma new_lemma_157762 (h0 : functor.add_const (semiring (has_nndist environment.implicit_infer_kind)) environment.implicit_infer_kind) : @is_noetherian_ring.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (semiring.{0} (has_nndist.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_157763 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (has_dist.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_dist.{0} empty))  := sorry --non-trivial
lemma new_lemma_157764 (h0 : option (ring (non_unital_non_assoc_semiring (mul_one_class (uniform_space (mul_one_class enat)))))) (h1 : ring (non_unital_non_assoc_semiring (mul_one_class (uniform_space (mul_one_class enat))))) : rank_condition (non_unital_non_assoc_semiring (mul_one_class (uniform_space (mul_one_class enat)))) := sorry --non-trivial
lemma new_lemma_157765 (h0 : functor.add_const (ordered_comm_monoid (has_nndist linarith.comp)) Type) : @has_exists_mul_of_le.{0} (has_nndist.{0} linarith.comp) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (has_nndist.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_157766 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @irreducible_space.{1} (add_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (add_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_157767 (h0 : topological_space (with_bot (semiring fun_info))) : normal_space (with_bot (semiring fun_info)) := sorry --non-trivial
lemma new_lemma_157768 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (cancel_monoid.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_157769 (h0 : fin has_zero.zero) : @is_principal_ideal_ring.{1} (has_pos_part.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (has_pos_part.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_157770 (h0 : has_mem.mem (metric_space num) has_emptyc.emptyc) : @discrete_topology.{0} (metric_space.{0} num) (@finset.pi.empty.{1 0} Type topological_space.{0} (metric_space.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_157771 (h2 : topological_space (linear_ordered_add_comm_group char)) : t0_space (linear_ordered_add_comm_group char) := sorry --non-trivial
lemma new_lemma_157772 (h1 : measurable_space std_gen) (h2 : has_sup std_gen) : has_measurable_sup std_gen := sorry --non-trivial
lemma new_lemma_157773 (h0 : topological_space (mul_zero_class (has_nndist unsigned))) : preirreducible_space (mul_zero_class (has_nndist unsigned)) := sorry --non-trivial
lemma new_lemma_157774 (h0 : ring (has_compl (has_lt linarith.comp_source))) : is_domain (has_compl (has_lt linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_157775 (h0 : topological_space (has_dist (option empty))) : t1_space (has_dist (option empty)) := sorry --non-trivial
lemma new_lemma_157776 (h1 : add_group (non_unital_non_assoc_semiring reducibility_hints)) : is_add_cyclic (non_unital_non_assoc_semiring reducibility_hints) := sorry --non-trivial
lemma new_lemma_157777 (h0 : function.extfun nat fin) : @separated_space.{1} (add_comm_monoid.{1} Type) (@matrix.vec_empty.{1} (uniform_space.{1} (add_comm_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_157778 (h0 : topological_space (has_one (has_norm (has_norm num)))) : preirreducible_space (has_one (has_norm (has_norm num))) := sorry --non-trivial
lemma new_lemma_157779 (h0 : functor.add_const (ordered_add_comm_monoid (ring name)) pos) : @archimedean.{0} (ring.{0} name) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (ring.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_157780 (h0 : topological_space (has_append (random_gen (random_gen (random_gen to_additive.value_type))))) : t0_space (has_append (random_gen (random_gen (random_gen to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_157781 (h0 : ordered_add_comm_monoid (has_add (has_to_string linarith.comp))) : archimedean (has_add (has_to_string linarith.comp)) := sorry --non-trivial
lemma new_lemma_157782 (h0 : add_group (finset (finset (has_pos_part (finset (has_add linarith.comp)))))) : is_add_cyclic (finset (finset (has_pos_part (finset (has_add linarith.comp))))) := sorry --non-trivial
lemma new_lemma_157783 (h0 : topological_space (complete_semilattice_Sup (random_gen linarith.ineq))) : locally_compact_space (complete_semilattice_Sup (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_157784 (h0 : add_group (add_left_cancel_monoid (has_nnnorm (has_nnnorm fun_info)))) : is_add_cyclic (add_left_cancel_monoid (has_nnnorm (has_nnnorm fun_info))) := sorry --non-trivial
lemma new_lemma_157785 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_157786 (h0 : uniform_space (add_left_cancel_monoid znum)) : complete_space (add_left_cancel_monoid znum) := sorry --non-trivial
lemma new_lemma_157787 (h0 : complete_lattice (uniform_space (has_lt (random_gen (random_gen char))))) : is_compactly_generated (uniform_space (has_lt (random_gen (random_gen char)))) := sorry --non-trivial
lemma new_lemma_157788 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (omega_complete_partial_order.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (omega_complete_partial_order.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157789 (h0 : monoid (has_neg (has_to_string name))) : monoid.fg (has_neg (has_to_string name)) := sorry --non-trivial
lemma new_lemma_157790 (h0 : functor.add_const Prop (ring linarith.comp)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_157791 (h0 : ring (normed_comm_ring (ring Type))) : strong_rank_condition (normed_comm_ring (ring Type)) := sorry --non-trivial
lemma new_lemma_157792 (h0 : ring (comm_ring (has_top linarith.comp_source))) : is_domain (comm_ring (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_157793 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157794 (h1 h2 : num -> num -> Prop) : subrelation h1 h2 := sorry --non-trivial
lemma new_lemma_157795 (h0 : topological_space (option (option ennreal))) : irreducible_space (option (option ennreal)) := sorry --non-trivial
lemma new_lemma_157796 (h0 : functor.comp topological_space comm_group Type) : @path_connected_space.{1} (comm_group.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} comm_group.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_157797 (h1 : fun_info -> fun_info) (h2 : fun_info) : function.is_fixed_pt h1 h2 := sorry --non-trivial
lemma new_lemma_157798 (h0 : not (function.extfun Type add_group -> false)) : @is_add_cyclic.{0} (with_one.{0} num) (@function.extfun_app.{2 1} Type add_group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_group.{0}) h0) (with_one.{0} num))  := sorry --non-trivial
lemma new_lemma_157799 (h0 : functor.add_const (ordered_add_comm_monoid (generalized_boolean_algebra name)) (has_neg name)) : @archimedean.{0} (generalized_boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (generalized_boolean_algebra.{0} name)) (has_neg.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_157800 (h0 : comm_ring (lattice to_additive.value_type) -> comm_ring (lattice to_additive.value_type) -> Prop) : is_trans (comm_ring (lattice to_additive.value_type)) h0 := sorry --non-trivial
lemma new_lemma_157801 (h0 : group (has_pos_part real)) : normalizer_condition (has_pos_part real) := sorry --non-trivial
lemma new_lemma_157802 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (ordered_cancel_add_comm_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_cancel_add_comm_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_157803 (h0 : functor.add_const Prop (has_to_string (ring Type))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_157804 (h0 : has_mem.mem group has_emptyc.emptyc) : @normalizer_condition.{0} (normed_group.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) group.{0} h0) (normed_group.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_157805 (h0 : topological_space (metric_space (semiring (semiring (metric_space num))))) : discrete_topology (metric_space (semiring (semiring (metric_space num)))) := sorry --non-trivial
lemma new_lemma_157806 (h0 : add_group (non_unital_non_assoc_semiring (mul_one_class enat))) : is_add_cyclic (non_unital_non_assoc_semiring (mul_one_class enat)) := sorry --non-trivial
lemma new_lemma_157807 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @preirreducible_space.{0} (has_norm.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (has_norm.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_157808 (h0 : group (semigroup num)) : is_cyclic (semigroup num) := sorry --non-trivial
lemma new_lemma_157809 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (normed_group.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_group.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_157810 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @topological_space.separable_space.{1} (add_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (add_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_157811 (h0 : functor.add_const (topological_space (cancel_monoid name)) linarith.comp) : @t1_space.{0} (cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (cancel_monoid.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157812 (h0 : group (simple_graph name)) : normalizer_condition (simple_graph name) := sorry --non-trivial
lemma new_lemma_157813 (h0 : ring (has_zero (finset Type))) : strong_rank_condition (has_zero (finset Type)) := sorry --non-trivial
lemma new_lemma_157814 (h0 : uniform_space (bin_tree (semiring unsigned))) : separated_space (bin_tree (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_157815 (h0 : complete_lattice (has_zero (ring (has_add Type)))) : is_atomistic (has_zero (ring (has_add Type))) := sorry --non-trivial
lemma new_lemma_157816 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (add_comm_monoid pos)) := sorry --non-trivial
lemma new_lemma_157817 (h0 : function.extfun Type group) : @normalizer_condition.{0} (cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157818 (h0 : ring (linear_ordered_add_comm_group (has_top linarith.comp_source))) : is_domain (linear_ordered_add_comm_group (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_157819 (h0 : not (group (complete_semilattice_Sup to_additive.value_type) -> false)) : @group.fg.{0} (complete_semilattice_Sup.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (group.{0} (complete_semilattice_Sup.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_157820 (h0 : ring (topological_space name)) : strong_rank_condition (topological_space name) := sorry --non-trivial
lemma new_lemma_157821 (h0 : complete_lattice (normed_field environment.projection_info)) : complete_lattice.is_Sup_finite_compact (normed_field environment.projection_info) := sorry --non-trivial
lemma new_lemma_157822 (h0 : topological_space (has_inter (option (option ennreal)))) : totally_separated_space (has_inter (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_157823 (h0 : measurable_space (has_add (with_zero fun_info))) (h1 : has_div (has_add (with_zero fun_info))) : has_measurable_div (has_add (with_zero fun_info)) := sorry --non-trivial
lemma new_lemma_157824 (h0 : uniform_space (topological_space (has_nnnorm (has_nnnorm char)))) : complete_space (topological_space (has_nnnorm (has_nnnorm char))) := sorry --non-trivial
lemma new_lemma_157825 (h0 : function.extfun Type topological_space) : @t0_space.{0} (non_assoc_semiring.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (non_assoc_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_157826 (h0 : filter (has_append (has_nnnorm linarith.ineq))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_157827 (h0 : topological_space (ordered_comm_ring (ring Type))) : discrete_topology (ordered_comm_ring (ring Type)) := sorry --non-trivial
lemma new_lemma_157828 (h1 : topological_space (has_emptyc string_imp)) : totally_disconnected_space (has_emptyc string_imp) := sorry --non-trivial
lemma new_lemma_157829 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (dlist.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (dlist.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_157830 (h0 : add_group (distrib_lattice (has_inv linarith.ineq))) : is_add_cyclic (distrib_lattice (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_157831 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (normed_comm_ring.{0} num) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (normed_comm_ring.{0} num))  := sorry --non-trivial
lemma new_lemma_157832 (h0 : topological_space (has_neg (has_neg Type))) : sequential_space (has_neg (has_neg Type)) := sorry --non-trivial
lemma new_lemma_157833 (h0 : function.extfun Type group) : @group.fg.{0} (has_union.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} h0 (has_union.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157834 (h0 : topological_space (has_top (semiring num))) : totally_disconnected_space (has_top (semiring num)) := sorry --non-trivial
lemma new_lemma_157835 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (option num)) := sorry --non-trivial
lemma new_lemma_157836 (h0 : topological_space (random_gen (with_bot string_imp))) : t0_space (random_gen (with_bot string_imp)) := sorry --non-trivial
lemma new_lemma_157837 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (has_norm.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (has_norm.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_157838 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type add_group.{0} h0 (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_157839 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (add_comm_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_comm_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_157840 (h0 : topological_space (generalized_boolean_algebra (sub_neg_monoid (sub_neg_monoid pos)))) : t1_space (generalized_boolean_algebra (sub_neg_monoid (sub_neg_monoid pos))) := sorry --non-trivial
lemma new_lemma_157841 (h0 : group (cancel_monoid (option ennreal))) : normalizer_condition (cancel_monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_157842 (h0 : functor.add_const (complete_lattice (semigroup name)) name) : @is_compactly_generated.{0} (semigroup.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (semigroup.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_157843 (h0 : functor.add_const (function.extfun (Type 1) group) Type) : @normalizer_condition.{1} (ordered_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) group.{1}) Type h0) (ordered_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_157844 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (distrib_lattice.{0} char) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (distrib_lattice.{0} char))  := sorry --non-trivial
lemma new_lemma_157845 (h0 : topological_space (mul_one_class enat)) : totally_disconnected_space (mul_one_class enat) := sorry --non-trivial
lemma new_lemma_157846 (h0 : function.extfun Type topological_space) : @t0_space.{0} (has_nndist.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_nndist.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_157847 (h0 : topological_space (generalized_boolean_algebra Type)) : sequential_space (generalized_boolean_algebra Type) := sorry --non-trivial
lemma new_lemma_157848 (h0 : functor.add_const (add_monoid (ordered_comm_monoid pos)) linarith.comp) : @add_monoid.fg.{0} (ordered_comm_monoid.{0} pos) (@functor.add_const.run.{0 0} (add_monoid.{0} (ordered_comm_monoid.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157849 (h0 : group (comm_ring (has_top linarith.comp_source))) : group.fg (comm_ring (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_157850 (h0 : functor.add_const (topological_space (has_add linarith.comp)) environment.implicit_infer_kind) : @preirreducible_space.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} linarith.comp)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_157851 (h0 : functor.add_const (functor.add_const (functor.add_const Prop Type) linarith.comp) (has_neg Type)) : functor.add_const.run (functor.add_const.run (functor.add_const.run h0)) := sorry --non-trivial
lemma new_lemma_157852 (h5 : ring environment.projection_info) : is_domain environment.projection_info := sorry --non-trivial
lemma new_lemma_157853 (h0 : monoid (has_nndist (has_add (add_cancel_monoid (has_add (has_add (add_cancel_monoid name))))))) : monoid.fg (has_nndist (has_add (add_cancel_monoid (has_add (has_add (add_cancel_monoid name)))))) := sorry --non-trivial
lemma new_lemma_157854 (h0 : topological_space (linear_ordered_field (option (option (option (option unsigned)))))) : irreducible_space (linear_ordered_field (option (option (option (option unsigned))))) := sorry --non-trivial
lemma new_lemma_157855 (h0 : group (measurable_space empty)) : group.fg (measurable_space empty) := sorry --non-trivial
lemma new_lemma_157856 (h0 : not (ring (linear_ordered_semiring congr_arg_kind) -> false)) : @strong_rank_condition.{0} (linear_ordered_semiring.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (ring.{0} (linear_ordered_semiring.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_157857 (h2 : add_group (has_add (has_nnnorm fun_info))) : is_add_cyclic (has_add (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_157858 (h0 : topological_space (boolean_algebra.core (option (option (option pos))))) : regular_space (boolean_algebra.core (option (option (option pos)))) := sorry --non-trivial
lemma new_lemma_157859 (h1 : uniform_space (has_nnnorm string_imp)) : complete_space (has_nnnorm string_imp) := sorry --non-trivial
lemma new_lemma_157860 (h0 : complete_lattice (monoid (option ennreal))) : is_atomistic (monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_157861 (h0 : function.extfun nat fin) : @monoid.fg.{0} (canonically_linear_ordered_monoid.{0} real) (@matrix.vec_empty.{0} (monoid.{0} (canonically_linear_ordered_monoid.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_157862 (h0 : ring (has_norm (has_norm empty))) : is_domain (has_norm (has_norm empty)) := sorry --non-trivial
lemma new_lemma_157863 (h0 : topological_space (add_left_cancel_semigroup (semiring empty))) : discrete_topology (add_left_cancel_semigroup (semiring empty)) := sorry --non-trivial
lemma new_lemma_157864 (h0 : functor.add_const (complete_lattice znum) (option empty)) : @is_compactly_generated.{0} znum (@functor.add_const.run.{0 0} (complete_lattice.{0} znum) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_157865 (h0 : function.extfun (finset Type) (has_mem.mem (has_norm linarith.comp_source))) : @strong_rank_condition.{0} (has_norm.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type ring.{0} (has_norm.{0} linarith.comp_source) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_norm.{0} linarith.comp_source)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_157866 (h0 : topological_space (complete_distrib_lattice (option unsigned))) : path_connected_space (complete_distrib_lattice (option unsigned)) := sorry --non-trivial
lemma new_lemma_157867 (h0 : ring (distrib (random_gen char))) : rank_condition (distrib (random_gen char)) := sorry --non-trivial
lemma new_lemma_157868 (h0 : functor.add_const (topological_space (has_Inf Type)) Type) : @regular_space.{1} (has_Inf.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (has_Inf.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_157869 (h0 : functor.add_const (ring (linear_ordered_cancel_comm_monoid empty)) empty) : @rank_condition.{0} (linear_ordered_cancel_comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (linear_ordered_cancel_comm_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_157870 (h0 : function.extfun (finset Type) (has_mem.mem (random_gen num))) : @complete_space.{0} (random_gen.{0} num) (@finset.pi.empty.{1 0} Type uniform_space.{0} (random_gen.{0} num) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (random_gen.{0} num)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_157871 (h0 : ring (denumerable (with_bot to_additive.value_type))) : is_domain (denumerable (with_bot to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_157872 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : palindrome (function.extfun_app (function.extfun_app h0 list) (ring Type)) := sorry --non-trivial
lemma new_lemma_157873 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring pos)) unsigned) : @t1_space.{0} (canonically_ordered_comm_semiring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_comm_semiring.{0} pos)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_157874 (h0 : topological_space (generalized_boolean_algebra (has_add name))) : t1_space (generalized_boolean_algebra (has_add name)) := sorry --non-trivial
lemma new_lemma_157875 (h0 : ring (filter empty)) : rank_condition (filter empty) := sorry --non-trivial
lemma new_lemma_157876 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (has_top.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_top.{0} empty))  := sorry --non-trivial
lemma new_lemma_157877 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem ring)) : @strong_rank_condition.{0} (semiring.{0} linarith.ineq) (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) ring.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (semiring.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_157878 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (linear_ordered_comm_ring num)) := sorry --non-trivial
lemma new_lemma_157879 (h0 : topological_space (boolean_algebra (has_Inf (boolean_algebra pos)))) : totally_disconnected_space (boolean_algebra (has_Inf (boolean_algebra pos))) := sorry --non-trivial
lemma new_lemma_157880 (h0 : function.extfun Type topological_space) : @normal_space.{0} (comm_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (comm_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157881 (h0 : group (canonically_ordered_monoid linarith.comp)) : is_simple_group (canonically_ordered_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_157882 (h0 : functor.add_const (ordered_comm_monoid (ordered_comm_monoid linarith.comp)) Type) : @has_exists_mul_of_le.{0} (ordered_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (ordered_comm_monoid.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_157883 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (measure_theory.measure_space.{0} empty) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (measure_theory.measure_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_157884 (h0 : group (has_zero (has_neg (ring (has_add Type))))) : normalizer_condition (has_zero (has_neg (ring (has_add Type)))) := sorry --non-trivial
lemma new_lemma_157885 (h0 : function.extfun Type (functor.add_const (ring (finset environment.implicit_infer_kind)))) : @strong_rank_condition.{0} (finset.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (finset.{0} environment.implicit_infer_kind)) name (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ring.{0} (finset.{0} environment.implicit_infer_kind))) h0 name))  := sorry --non-trivial
lemma new_lemma_157886 (h0 : ordered_add_comm_monoid (ordered_comm_monoid (has_Inf name))) : archimedean (ordered_comm_monoid (has_Inf name)) := sorry --non-trivial
lemma new_lemma_157887 (h0 : topological_space (has_nndist (boolean_algebra.core Type))) : t1_space (has_nndist (boolean_algebra.core Type)) := sorry --non-trivial
lemma new_lemma_157888 (h0 : uniform_space (ordered_comm_group (option unsigned))) : separated_space (ordered_comm_group (option unsigned)) := sorry --non-trivial
lemma new_lemma_157889 (h0 : functor.add_const (topological_space (semigroup Type)) (has_pos_part (has_pos_part linarith.comp))) : @irreducible_space.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (semigroup.{1} Type)) (has_pos_part.{0} (has_pos_part.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_157890 (h0 : topological_space (add_left_cancel_monoid (has_top num))) : t0_space (add_left_cancel_monoid (has_top num)) := sorry --non-trivial
lemma new_lemma_157891 (h0 : topological_space (has_compl (has_inv linarith.ineq))) : path_connected_space (has_compl (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_157892 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (complete_distrib_lattice.{0} real) (@function.extfun_app.{2 1} Type monoid.{0} h0 (complete_distrib_lattice.{0} real))  := sorry --non-trivial
lemma new_lemma_157893 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (measurable_space.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (measurable_space.{0} num))  := sorry --non-trivial
lemma new_lemma_157894 (h0 : uniform_space (complete_linear_order unsigned)) : separated_space (complete_linear_order unsigned) := sorry --non-trivial
lemma new_lemma_157895 (h0 : group (denumerable (has_nnnorm fun_info))) : is_cyclic (denumerable (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_157896 (h0 : ring (mul_one_class ereal)) : rank_condition (mul_one_class ereal) := sorry --non-trivial
lemma new_lemma_157897 (h0 : topological_space stieltjes_function) : totally_separated_space stieltjes_function := sorry --non-trivial
lemma new_lemma_157898 (h0 : functor.add_const (uniform_space (semigroup linarith.comp)) name) : @complete_space.{0} (semigroup.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (semigroup.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_157899 (h0 : set (distrib (has_compl (mul_one_class (has_nnnorm std_gen))))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_157900 (h0 : ring (add_comm_monoid (comm_group linarith.comp))) : is_domain (add_comm_monoid (comm_group linarith.comp)) := sorry --non-trivial
lemma new_lemma_157901 (h0 : group (has_emptyc linarith.comp)) : group.fg (has_emptyc linarith.comp) := sorry --non-trivial
lemma new_lemma_157902 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (ring.{0} num) (@function.extfun_app.{2 1} Type add_group.{0} h0 (ring.{0} num))  := sorry --non-trivial
lemma new_lemma_157903 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (has_neg_part.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (has_neg_part.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_157904 (h1 : topological_space (with_one linarith.ineq)) : totally_separated_space (with_one linarith.ineq) := sorry --non-trivial
lemma new_lemma_157905 (h0 : finset (ordered_ring num)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_157906 (h0 : topological_space (distrib string_imp)) : t0_space (distrib string_imp) := sorry --non-trivial
lemma new_lemma_157907 (h0 : not (function.extfun Type topological_space -> false)) : @irreducible_space.{0} (linear_ordered_add_comm_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (linear_ordered_add_comm_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157908 (h0 : group (sub_neg_monoid (boolean_algebra.core pos))) : is_cyclic (sub_neg_monoid (boolean_algebra.core pos)) := sorry --non-trivial
lemma new_lemma_157909 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (linear_ordered_comm_ring.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (linear_ordered_comm_ring.{0} empty))  := sorry --non-trivial
lemma new_lemma_157910 (h0 : group (has_pos_part (has_pos_part pos))) : normalizer_condition (has_pos_part (has_pos_part pos)) := sorry --non-trivial
lemma new_lemma_157911 (h0 : finset (finset (has_Inf environment.implicit_infer_kind))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_157912 (h0 : ring (nondiscrete_normed_field (normed_field char))) : strong_rank_condition (nondiscrete_normed_field (normed_field char)) := sorry --non-trivial
lemma new_lemma_157913 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} congr_arg_kind (@function.extfun_app.{2 1} Type ring.{0} h0 congr_arg_kind)  := sorry --non-trivial
lemma new_lemma_157914 (h1 : ring (set fun_info)) : strong_rank_condition (set fun_info) := sorry --non-trivial
lemma new_lemma_157915 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (finset.{0} num) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (finset.{0} num))  := sorry --non-trivial
lemma new_lemma_157916 (h0 : complete_lattice (bin_tree (semiring unsigned))) : complete_lattice.is_Sup_finite_compact (bin_tree (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_157917 (h0 : not (function.extfun Type ring -> false)) : @strong_rank_condition.{0} znum (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) znum)  := sorry --non-trivial
lemma new_lemma_157918 (h0 : functor.add_const (ordered_add_comm_monoid (has_to_string unsigned)) (option (option (option pos)))) : @archimedean.{0} (has_to_string.{0} unsigned) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (has_to_string.{0} unsigned)) (option.{0} (option.{0} (option.{0} pos))) h0)  := sorry --non-trivial
lemma new_lemma_157919 (h0 : topological_space (semigroup (has_neg linarith.comp))) : t1_space (semigroup (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_157920 (h0 : topological_space (has_ssubset (random_gen (has_ssubset char)))) : totally_disconnected_space (has_ssubset (random_gen (has_ssubset char))) := sorry --non-trivial
lemma new_lemma_157921 (h0 : cancel_comm_monoid_with_zero (generalized_boolean_algebra (has_Inf real))) : unique_factorization_monoid (generalized_boolean_algebra (has_Inf real)) := sorry --non-trivial
lemma new_lemma_157922 (h0 : partial_order (has_add (has_add Type))) (h1 : order_top (has_add (has_add Type))) : is_coatomic (has_add (has_add Type)) := sorry --non-trivial
lemma new_lemma_157923 (h0 : topological_space linarith.comp) : totally_separated_space linarith.comp := sorry --non-trivial
lemma new_lemma_157924 (h0 : semiring (canonically_ordered_comm_semiring (finset (complete_distrib_lattice name)))) : is_noetherian_ring (canonically_ordered_comm_semiring (finset (complete_distrib_lattice name))) := sorry --non-trivial
lemma new_lemma_157925 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @t1_space.{1} (semigroup.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (semigroup.{1} Type))  := sorry --non-trivial
lemma new_lemma_157926 (h0 : cancel_comm_monoid_with_zero (normed_comm_ring name)) : unique_factorization_monoid (normed_comm_ring name) := sorry --non-trivial
lemma new_lemma_157927 (h0 : functor.add_const (function.extfun Type uniform_space) linarith.comp) : @separated_space.{0} (simple_graph.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) linarith.comp h0) (simple_graph.{0} pos))  := sorry --non-trivial
lemma new_lemma_157928 (h0 : complete_lattice (has_add (finset linarith.comp))) : is_compactly_generated (has_add (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_157929 (h0 : group (semigroup congr_arg_kind)) : is_cyclic (semigroup congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157930 (h0 : functor.add_const (ring (boolean_algebra pos)) (ring Type)) : @rank_condition.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 1} (ring.{0} (boolean_algebra.{0} pos)) (ring.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_157931 (h1 : complete_lattice (non_unital_non_assoc_semiring (mul_one_class string_imp))) : is_compactly_generated (non_unital_non_assoc_semiring (mul_one_class string_imp)) := sorry --non-trivial
lemma new_lemma_157932 (h0 : functor.add_const (topological_space (has_union num)) unsigned) : @locally_compact_space.{0} (has_union.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (has_union.{0} num)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_157933 (h0 : not (function.extfun Type ring -> false)) : @strong_rank_condition.{0} (has_emptyc.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (has_emptyc.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_157934 (h0 : monoid (mul_zero_class nnreal)) : monoid.fg (mul_zero_class nnreal) := sorry --non-trivial
lemma new_lemma_157935 (h2 : ring (distrib fun_info)) : rank_condition (distrib fun_info) := sorry --non-trivial
lemma new_lemma_157936 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (semiring.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (semiring.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_157937 (h0 : functor.add_const (list (add_cancel_monoid pos)) Type) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157938 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (as_linear_order.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_group.{0} h0 (as_linear_order.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_157939 (h0 : group (add_comm_monoid pos)) : group.fg (add_comm_monoid pos) := sorry --non-trivial
lemma new_lemma_157940 (h0 : functor.add_const (ring (cancel_monoid ennreal)) (comm_group name)) : @strong_rank_condition.{0} (cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (ring.{0} (cancel_monoid.{0} ennreal)) (comm_group.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_157941 (h0 : not (topological_space (semi_normed_ring string.iterator_imp) -> false)) : @t0_space.{0} (semi_normed_ring.{0} string.iterator_imp) (@classical.by_contradiction'.{1} (topological_space.{0} (semi_normed_ring.{0} string.iterator_imp)) h0)  := sorry --non-trivial
lemma new_lemma_157942 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (semigroup.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (semigroup.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_157943 (h0 : fin has_zero.zero) : @preconnected_space.{0} (sub_neg_monoid.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (sub_neg_monoid.{0} pos)) (@function.extfun_app.{1 1} nat fin (@matrix.vec_empty.{0} (function.extfun.{1 1} nat fin) h0) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_157944 (h0 : complete_lattice (ring unsigned)) : complete_lattice.is_Sup_finite_compact (ring unsigned) := sorry --non-trivial
lemma new_lemma_157945 (h0 : topological_space (with_bot congr_arg_kind)) : t1_space (with_bot congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157946 (h0 : ring (measurable_space linarith.ineq)) : strong_rank_condition (measurable_space linarith.ineq) := sorry --non-trivial
lemma new_lemma_157947 (h1 : num -> num -> Prop) : is_total_preorder num h1 := sorry --non-trivial
lemma new_lemma_157948 (h0 : monoid (linear_order congr_arg_kind)) : monoid.fg (linear_order congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157949 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (semiring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semiring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_157950 (h0 : topological_space (semi_normed_comm_ring linarith.comp_source)) (h1 : add_group (semi_normed_comm_ring linarith.comp_source)) : topological_add_group (semi_normed_comm_ring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_157951 (h0 : group (canonically_ordered_monoid (sub_neg_monoid real))) : normalizer_condition (canonically_ordered_monoid (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_157952 (h1 : complete_lattice (add_left_cancel_monoid (finset char))) : complete_lattice.is_Sup_finite_compact (add_left_cancel_monoid (finset char)) := sorry --non-trivial
lemma new_lemma_157953 (h0 : functor.add_const (group (normed_comm_ring pos)) pos) : @normalizer_condition.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (normed_comm_ring.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_157954 (h2 : topological_space (has_div string.iterator_imp)) : t0_space (has_div string.iterator_imp) := sorry --non-trivial
lemma new_lemma_157955 (h0 : has_mem.mem (function.extfun Type) has_emptyc.emptyc) : @complete_space.{0} (has_emptyc.{0} linarith.ineq) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@finset.pi.empty.{2 1} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) (function.extfun.{2 1} Type) h0) uniform_space.{0}) (has_emptyc.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_157956 (h0 : ring (normed_comm_ring unsigned)) : is_principal_ideal_ring (normed_comm_ring unsigned) := sorry --non-trivial
lemma new_lemma_157957 (h0 : not (function.extfun Type complete_lattice -> false)) : @is_compactly_generated.{0} (with_bot.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (with_bot.{0} empty))  := sorry --non-trivial
lemma new_lemma_157958 (h0 : not (complete_lattice (has_compl (has_nnnorm char)) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (has_compl.{0} (has_nnnorm.{0} char)) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_compl.{0} (has_nnnorm.{0} char))) h0)  := sorry --non-trivial
lemma new_lemma_157959 (h0 : functor.add_const (topological_space (plift empty)) congr_arg_kind) : @t0_space.{1} (plift.{1} empty) (@functor.add_const.run.{1 0} (topological_space.{1} (plift.{1} empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_157960 (h0 : ring (finset (has_to_string unsigned))) : rank_condition (finset (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_157961 (h0 : group (semigroup environment.implicit_infer_kind)) : is_simple_group (semigroup environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_157962 (h2 : set (ereal -> add_comm_semigroup enat)) : set.separates_points h2 := sorry --non-trivial
lemma new_lemma_157963 (h0 : function.extfun Type topological_space) : @normal_space.{0} (canonically_linear_ordered_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_linear_ordered_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_157964 (h0 : topological_space (left_cancel_semigroup (semiring empty))) : totally_separated_space (left_cancel_semigroup (semiring empty)) := sorry --non-trivial
lemma new_lemma_157965 (h0 : topological_space (has_nndist (complete_distrib_lattice pos))) : irreducible_space (has_nndist (complete_distrib_lattice pos)) := sorry --non-trivial
lemma new_lemma_157966 (h0 : complete_lattice (semi_normed_comm_ring (random_gen char))) : is_compactly_generated (semi_normed_comm_ring (random_gen char)) := sorry --non-trivial
lemma new_lemma_157967 (h0 : uniform_space (measurable_space congr_arg_kind)) : separated_space (measurable_space congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157968 (h0 : functor.add_const (topological_space (add_cancel_monoid environment.implicit_infer_kind)) linarith.comp) : @discrete_topology.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_157969 (h0 : ring (mul_one_class (nondiscrete_normed_field (normed_field enat)))) : strong_rank_condition (mul_one_class (nondiscrete_normed_field (normed_field enat))) := sorry --non-trivial
lemma new_lemma_157970 (h0 : function.extfun Type topological_space) : @t1_space.{0} (canonically_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (canonically_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_157971 (h0 : functor.add_const (ring (canonically_ordered_comm_semiring name)) name) : @rank_condition.{0} (canonically_ordered_comm_semiring.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (canonically_ordered_comm_semiring.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_157972 (h0 : ring (has_ssubset (mul_one_class fun_info))) : rank_condition (has_ssubset (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_157973 (h0 : list (ring (boolean_algebra (boolean_algebra (boolean_algebra environment.implicit_infer_kind))))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_157974 (h0 : uniform_space (finset (option (option (option (option (option congr_arg_kind))))))) : separated_space (finset (option (option (option (option (option congr_arg_kind)))))) := sorry --non-trivial
lemma new_lemma_157975 (h0 : functor.add_const (group (add_comm_monoid Type)) pos) : @normalizer_condition.{1} (add_comm_monoid.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (add_comm_monoid.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_157976 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (has_bot.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_bot.{0} real))  := sorry --non-trivial
lemma new_lemma_157977 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (random_gen.{0} linarith.ineq) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (random_gen.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_157978 (h1 : ring (normed_field (random_gen to_additive.value_type))) : rank_condition (normed_field (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_157979 (h0 : not (topological_space (has_append string.iterator_imp) -> false)) : @totally_disconnected_space.{0} (has_append.{0} string.iterator_imp) (@classical.by_contradiction'.{1} (topological_space.{0} (has_append.{0} string.iterator_imp)) h0)  := sorry --non-trivial
lemma new_lemma_157980 (h0 : ordered_add_comm_monoid (generalized_boolean_algebra (finset (ring (has_neg linarith.comp))))) : archimedean (generalized_boolean_algebra (finset (ring (has_neg linarith.comp)))) := sorry --non-trivial
lemma new_lemma_157981 (h0 : list (ordered_comm_group congr_arg_kind)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_157982 (h0 : topological_space (has_nndist (finset (has_add name)))) : t1_space (has_nndist (finset (has_add name))) := sorry --non-trivial
lemma new_lemma_157983 (h1 : complete_lattice congr_arg_kind) : is_compactly_generated congr_arg_kind := sorry --non-trivial
lemma new_lemma_157984 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @irreducible_space.{0} to_additive.value_type (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) to_additive.value_type)  := sorry --non-trivial
lemma new_lemma_157985 (h0 : add_monoid (semi_normed_comm_ring (random_gen (random_gen char)))) (h1 : ring (ordered_comm_ring (add_units (semi_normed_comm_ring (random_gen (random_gen char)))))) : is_domain (ordered_comm_ring (add_units (semi_normed_comm_ring (random_gen (random_gen char))))) := sorry --non-trivial
lemma new_lemma_157986 (h0 : setoid to_additive.value_type) (h1 : ring (has_nnnorm (mul_one_class (bin_tree (mul_one_class (quotient h0)))))) : is_domain (has_nnnorm (mul_one_class (bin_tree (mul_one_class (quotient h0))))) := sorry --non-trivial
lemma new_lemma_157987 (h0 : functor.add_const (functor.add_const Prop (add_cancel_monoid linarith.comp)) Type) : functor.add_const.run (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157988 (h0 : functor.add_const (ordered_comm_monoid (ring linarith.comp)) (has_nndist Type)) : @has_exists_mul_of_le.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (ring.{0} linarith.comp)) (has_nndist.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_157989 (h0 : topological_space (non_assoc_semiring unsigned)) : t0_space (non_assoc_semiring unsigned) := sorry --non-trivial
lemma new_lemma_157990 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (normed_comm_ring.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_comm_ring.{0} name))  := sorry --non-trivial
lemma new_lemma_157991 (h0 : fin has_zero.zero) : @has_exists_mul_of_le.{0} (generalized_boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type ordered_comm_monoid.{0}) h0) (generalized_boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_157992 (h0 : topological_space (has_add congr_arg_kind)) : normal_space (has_add congr_arg_kind) := sorry --non-trivial
lemma new_lemma_157993 (h0 : not (cancel_comm_monoid_with_zero (has_sub empty) -> false)) : @unique_factorization_monoid.{0} (has_sub.{0} empty) (@classical.by_contradiction'.{1} (cancel_comm_monoid_with_zero.{0} (has_sub.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_157994 (h0 : not (group (metric_space char) -> false)) : @is_cyclic.{0} (metric_space.{0} char) (@classical.by_contradiction'.{1} (group.{0} (metric_space.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_157995 (h0 : functor.add_const (ring (ordered_ring empty)) empty) : @is_principal_ideal_ring.{0} (ordered_ring.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (ordered_ring.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_157996 (h0 : topological_space (ring (has_neg linarith.comp))) : preconnected_space (ring (has_neg linarith.comp)) := sorry --non-trivial
lemma new_lemma_157997 (h2 : ring (semi_normed_comm_ring enat)) : is_domain (semi_normed_comm_ring enat) := sorry --non-trivial
lemma new_lemma_157998 (h0 : functor.add_const (filter (boolean_algebra pos)) (has_zero pos)) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_157999 (h0 : topological_space (ordered_comm_ring (ring name))) : discrete_topology (ordered_comm_ring (ring name)) := sorry --non-trivial
lemma new_lemma_158000 (h0 : functor.add_const (complete_lattice (partial_order num)) (semiring unsigned)) : @is_atomistic.{0} (partial_order.{0} num) (@functor.add_const.run.{0 0} (complete_lattice.{0} (partial_order.{0} num)) (semiring.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_158001 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (denumerable.{0} string_imp) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (denumerable.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_158002 (h0 : functor.add_const (function.extfun Type ring) environment.implicit_infer_kind) : @is_domain.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) environment.implicit_infer_kind h0) (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_158003 (h0 : function.extfun Type (prod (add_cancel_monoid ennreal))) : id_rel (function.extfun_app h0 (add_cancel_monoid ennreal)) := sorry --non-trivial
lemma new_lemma_158004 (h0 : ring (with_bot (has_norm (has_norm num)))) : is_domain (with_bot (has_norm (has_norm num))) := sorry --non-trivial
lemma new_lemma_158005 (h0 : ring (canonically_linear_ordered_monoid ennreal)) : is_principal_ideal_ring (canonically_linear_ordered_monoid ennreal) := sorry --non-trivial
lemma new_lemma_158006 (h0 : uniform_space (ordered_comm_monoid (has_neg Type))) : complete_space (ordered_comm_monoid (has_neg Type)) := sorry --non-trivial
lemma new_lemma_158007 (h0 : topological_space (normed_group (semiring (semiring (has_top linarith.comp))))) : preirreducible_space (normed_group (semiring (semiring (has_top linarith.comp)))) := sorry --non-trivial
lemma new_lemma_158008 (h0 : set (enat -> char)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_158009 (h0 : not (topological_space (comm_ring (comm_ring (comm_ring (has_nnnorm linarith.ineq)))) -> false)) : @t0_space.{0} (comm_ring.{0} (comm_ring.{0} (comm_ring.{0} (has_nnnorm.{0} linarith.ineq)))) (@classical.by_contradiction'.{1} (topological_space.{0} (comm_ring.{0} (comm_ring.{0} (comm_ring.{0} (has_nnnorm.{0} linarith.ineq))))) h0)  := sorry --non-trivial
lemma new_lemma_158010 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (linear_ordered_field.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (linear_ordered_field.{0} num))  := sorry --non-trivial
lemma new_lemma_158011 (h0 : complete_lattice (normed_comm_ring (semiring unsigned))) : complete_lattice.is_Sup_finite_compact (normed_comm_ring (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_158012 (h2 : topological_space (mul_one_class (add_comm_semigroup std_gen))) : path_connected_space (mul_one_class (add_comm_semigroup std_gen)) := sorry --non-trivial
lemma new_lemma_158013 (h0 : functor.add_const (ordered_add_comm_monoid (has_add linarith.comp)) (has_neg Type)) : @archimedean.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 1} (ordered_add_comm_monoid.{0} (has_add.{0} linarith.comp)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_158014 (h0 : ordered_comm_monoid (generalized_boolean_algebra (has_bot real))) : has_exists_mul_of_le (generalized_boolean_algebra (has_bot real)) := sorry --non-trivial
lemma new_lemma_158015 (h0 : functor.comp add_monoid has_to_string linarith.comp) : @add_monoid.fg.{0} (has_to_string.{0} linarith.comp) (@functor.comp.run.{0 0 0} add_monoid.{0} has_to_string.{0} linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158016 (h0 : topological_space (has_to_string (has_to_string (has_to_string (has_to_string pos))))) : path_connected_space (has_to_string (has_to_string (has_to_string (has_to_string pos)))) := sorry --non-trivial
lemma new_lemma_158017 (h0 : uniform_space (distrib_lattice (has_inv fun_info))) : complete_space (distrib_lattice (has_inv fun_info)) := sorry --non-trivial
lemma new_lemma_158018 (h0 : functor.add_const (add_group (has_zero name)) ennreal) : @is_add_cyclic.{0} (has_zero.{0} name) (@functor.add_const.run.{0 0} (add_group.{0} (has_zero.{0} name)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_158019 (h0 : topological_space (canonically_ordered_comm_semiring (finset (cancel_monoid name)))) : regular_space (canonically_ordered_comm_semiring (finset (cancel_monoid name))) := sorry --non-trivial
lemma new_lemma_158020 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preconnected_space.{0} (has_nndist.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_nndist.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_158021 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (has_top.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_top.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158022 (h0 : functor.add_const (topological_space (boolean_algebra.core Type)) Type) : @irreducible_space.{1} (boolean_algebra.core.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (boolean_algebra.core.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_158023 (h0 : topological_space (non_unital_non_assoc_semiring linarith.ineq)) : totally_disconnected_space (non_unital_non_assoc_semiring linarith.ineq) := sorry --non-trivial
lemma new_lemma_158024 (h0 : not (topological_space (add_cancel_comm_monoid char) -> false)) : @t0_space.{0} (add_cancel_comm_monoid.{0} char) (@classical.by_contradiction'.{1} (topological_space.{0} (add_cancel_comm_monoid.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_158025 (h0 : group (topological_space (has_ssubset linarith.ineq))) : is_cyclic (topological_space (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158026 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @topological_space.separable_space.{0} (add_cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (add_cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_158027 (h0 : complete_lattice (add_group (has_union (has_union linarith.comp)))) : is_atomistic (add_group (has_union (has_union linarith.comp))) := sorry --non-trivial
lemma new_lemma_158028 (h0 : topological_space (linear_ordered_comm_ring (plift (group_with_zero congr_arg_kind)))) : irreducible_space (linear_ordered_comm_ring (plift (group_with_zero congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_158029 (h0 : functor.add_const (function.extfun (Type 1) list) environment.implicit_infer_kind) : palindrome (function.extfun_app (functor.add_const.run h0) (has_zero Type)) := sorry --non-trivial
lemma new_lemma_158030 (h0 : functor.add_const (topological_space (generalized_boolean_algebra pos)) (has_add pos)) : @preconnected_space.{0} (generalized_boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (generalized_boolean_algebra.{0} pos)) (has_add.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_158031 (h0 : complete_lattice (semi_normed_comm_ring std_gen)) : complete_lattice.is_Sup_finite_compact (semi_normed_comm_ring std_gen) := sorry --non-trivial
lemma new_lemma_158032 (h0 : group (id (semiring (semiring (semiring unsigned))))) : normalizer_condition (id (semiring (semiring (semiring unsigned)))) := sorry --non-trivial
lemma new_lemma_158033 (h0 : complete_lattice (comm_group name)) : complete_lattice.is_Sup_finite_compact (comm_group name) := sorry --non-trivial
lemma new_lemma_158034 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : countable_Inter_filter (function.extfun_app (function.extfun_app h0 filter) (has_inter ennreal)) := sorry --non-trivial
lemma new_lemma_158035 (h0 : group (complete_distrib_lattice (ordered_comm_monoid (has_add linarith.comp)))) : is_cyclic (complete_distrib_lattice (ordered_comm_monoid (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_158036 (h0 : functor.add_const (topological_space (comm_group pos)) pos) : @locally_compact_space.{0} (comm_group.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_158037 (h0 : topological_space (non_unital_non_assoc_semiring char)) : t0_space (non_unital_non_assoc_semiring char) := sorry --non-trivial
lemma new_lemma_158038 (h0 : ordered_add_comm_monoid (monoid (semiring (option empty)))) : archimedean (monoid (semiring (option empty))) := sorry --non-trivial
lemma new_lemma_158039 (h0 : functor.add_const (topological_space (add_comm_monoid pos)) pos) : @locally_compact_space.{0} (add_comm_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (add_comm_monoid.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_158040 (h0 : add_group (with_one (has_nnnorm linarith.ineq))) : is_add_cyclic (with_one (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158041 (h0 : filter (has_to_string (has_add (finset (finset pos))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_158042 (h0 : topological_space (has_compl string_imp)) : path_connected_space (has_compl string_imp) := sorry --non-trivial
lemma new_lemma_158043 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (complete_semilattice_Sup.{0} string_imp) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (complete_semilattice_Sup.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_158044 (h0 : group (has_neg (semigroup (has_pos_part Type)))) : is_cyclic (has_neg (semigroup (has_pos_part Type))) := sorry --non-trivial
lemma new_lemma_158045 (h0 : functor.add_const (topological_space (ordered_comm_ring linarith.comp)) Type) : @t1_space.{0} (ordered_comm_ring.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (ordered_comm_ring.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_158046 (h0 : function.extfun nat fin) : @archimedean.{0} (canonically_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type ordered_add_comm_monoid.{0}) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero))) (canonically_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_158047 (h0 : not (topological_space (has_sub linarith.comp) -> false)) : @path_connected_space.{0} (has_sub.{0} linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (has_sub.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_158048 (h0 : topological_space (sub_neg_monoid (has_pos_part linarith.comp))) : loc_path_connected_space (sub_neg_monoid (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_158049 (h0 : not (uniform_space (denumerable to_additive.value_type) -> false)) : @complete_space.{0} (denumerable.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (uniform_space.{0} (denumerable.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_158050 (h0 : add_group (simple_graph (simple_graph (mul_one_class linarith.comp_source)))) : is_add_cyclic (simple_graph (simple_graph (mul_one_class linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_158051 (h0 : ordered_comm_monoid (add_comm_monoid (comm_group (comm_group Type)))) : has_exists_mul_of_le (add_comm_monoid (comm_group (comm_group Type))) := sorry --non-trivial
lemma new_lemma_158052 (h0 : not (function.extfun Type group -> false)) : @is_cyclic.{0} (has_nnnorm.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (has_nnnorm.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_158053 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (normed_linear_ordered_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (normed_linear_ordered_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158054 (h0 : functor.comp topological_space has_nndist (option pos)) : @topological_space.separable_space.{0} (has_nndist.{0} (option.{0} pos)) (@functor.comp.run.{0 0 0} topological_space.{0} has_nndist.{0} (option.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_158055 (h0 : ring (mul_zero_class (add_comm_monoid Type))) : is_domain (mul_zero_class (add_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_158056 (h0 : functor.add_const (group (bin_tree congr_arg_kind)) unsigned) : @group.fg.{0} (bin_tree.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (group.{0} (bin_tree.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158057 (h0 : functor.add_const (topological_space (has_neg pos)) (ring Type)) : @t1_space.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (has_neg.{0} pos)) (ring.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_158058 (h0 : not (group (has_ssubset linarith.ineq) -> false)) : @is_cyclic.{0} (has_ssubset.{0} linarith.ineq) (@classical.by_contradiction'.{1} (group.{0} (has_ssubset.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_158059 (h0 : uniform_space (linear_ordered_field (has_dist empty))) : separated_space (linear_ordered_field (has_dist empty)) := sorry --non-trivial
lemma new_lemma_158060 (h0 : topological_space (mul_zero_class (has_add Type))) : preirreducible_space (mul_zero_class (has_add Type)) := sorry --non-trivial
lemma new_lemma_158061 (h0 : topological_space (simple_graph (ring (has_Inf (ring pos))))) : totally_disconnected_space (simple_graph (ring (has_Inf (ring pos)))) := sorry --non-trivial
lemma new_lemma_158062 (h1 : uniform_space (div_inv_monoid (has_nnnorm fun_info))) : complete_space (div_inv_monoid (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_158063 (h0 : functor.add_const (add_group (comm_group Type)) Type) : @is_add_cyclic.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 1} (add_group.{1} (comm_group.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_158064 (h0 : topological_space (generalized_boolean_algebra (ring pos))) : preconnected_space (generalized_boolean_algebra (ring pos)) := sorry --non-trivial
lemma new_lemma_158065 (h0 : functor.add_const (topological_space (canonically_ordered_monoid linarith.comp)) Type) : @topological_space.separable_space.{0} (canonically_ordered_monoid.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (canonically_ordered_monoid.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_158066 (h1 : complete_lattice (non_unital_non_assoc_semiring string.iterator_imp)) : complete_lattice.is_Sup_finite_compact (non_unital_non_assoc_semiring string.iterator_imp) := sorry --non-trivial
lemma new_lemma_158067 (h0 : semiring (ordered_comm_monoid (finset (finset pos)))) : is_noetherian_ring (ordered_comm_monoid (finset (finset pos))) := sorry --non-trivial
lemma new_lemma_158068 (h0 : topological_space char) (h1 : has_sup char) : has_continuous_sup char := sorry --non-trivial
lemma new_lemma_158069 (h0 : function.extfun Type topological_space) : @t0_space.{0} (with_one.{0} (semiring.{0} empty)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_one.{0} (semiring.{0} empty)))  := sorry --non-trivial
lemma new_lemma_158070 (h0 : function.extfun nat fin) : @regular_space.{1} (has_add.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (has_add.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_158071 (h0 : topological_space (complete_distrib_lattice (comm_group name))) : topological_space.separable_space (complete_distrib_lattice (comm_group name)) := sorry --non-trivial
lemma new_lemma_158072 (h0 : topological_space (has_Inf (has_Inf linarith.comp))) : path_connected_space (has_Inf (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_158073 (h0 : functor.add_const (list (ordered_comm_monoid linarith.comp)) linarith.comp) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_158074 (h0 : uniform_space (comm_ring (comm_ring (denumerable char)))) : complete_space (comm_ring (comm_ring (denumerable char))) := sorry --non-trivial
lemma new_lemma_158075 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (metric_space.{0} empty) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (metric_space.{0} empty))  := sorry --non-trivial
lemma new_lemma_158076 (h0 : has_mem.mem (semiring linarith.comp_source) has_emptyc.emptyc) : @is_add_cyclic.{0} (semiring.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type add_group.{0} (semiring.{0} linarith.comp_source) h0)  := sorry --non-trivial
lemma new_lemma_158077 (h0 : semiring unsigned) : is_noetherian_ring unsigned := sorry --non-trivial
lemma new_lemma_158078 (h0 : filter (has_neg (finset (add_cancel_monoid ennreal)))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_158079 (h1 : prod (mul_one_class linarith.ineq) (mul_one_class linarith.ineq)) : set.diagonal (mul_one_class linarith.ineq) h1 := sorry --non-trivial
lemma new_lemma_158080 (h0 : functor.add_const (group (has_nndist Type)) (ring Type)) : @is_simple_group.{1} (has_nndist.{1} Type) (@functor.add_const.run.{1 1} (group.{1} (has_nndist.{1} Type)) (ring.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_158081 (h0 : topological_space (monoid (option num))) : t1_space (monoid (option num)) := sorry --non-trivial
lemma new_lemma_158082 (h0 : group (has_neg (finset (finset (finset (finset pos)))))) : group.fg (has_neg (finset (finset (finset (finset pos))))) := sorry --non-trivial
lemma new_lemma_158083 (h0 : topological_space (cancel_monoid empty)) : totally_separated_space (cancel_monoid empty) := sorry --non-trivial
lemma new_lemma_158084 (h0 : topological_space (with_bot (random_gen (random_gen (random_gen linarith.comp_source))))) : path_connected_space (with_bot (random_gen (random_gen (random_gen linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_158085 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (has_add.{0} (option.{0} pos)) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_add.{0} (option.{0} pos)))  := sorry --non-trivial
lemma new_lemma_158086 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (measurable_space.dynkin_system.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (measurable_space.dynkin_system.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158087 (h0 : complete_lattice (free_add_monoid (option unsigned))) : complete_lattice.is_Sup_finite_compact (free_add_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_158088 (h0 : filter (sub_neg_monoid name)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_158089 (h0 : functor.add_const (functor.add_const (complete_lattice linarith.comp) pos) pos) : @is_compactly_generated.{0} linarith.comp (@functor.add_const.run.{0 0} (complete_lattice.{0} linarith.comp) pos (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (complete_lattice.{0} linarith.comp) pos) pos h0))  := sorry --non-trivial
lemma new_lemma_158090 (h0 : complete_lattice (measurable_space linarith.comp)) : complete_lattice.is_Sup_finite_compact (measurable_space linarith.comp) := sorry --non-trivial
lemma new_lemma_158091 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (finset.{0} empty) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (finset.{0} empty))  := sorry --non-trivial
lemma new_lemma_158092 (h0 : topological_space (normed_comm_ring (boolean_algebra.core name))) : t0_space (normed_comm_ring (boolean_algebra.core name)) := sorry --non-trivial
lemma new_lemma_158093 (h0 : topological_space (finset (option (option unsigned)))) : totally_disconnected_space (finset (option (option unsigned))) := sorry --non-trivial
lemma new_lemma_158094 (h0 : group (cancel_monoid (add_cancel_monoid name))) : is_cyclic (cancel_monoid (add_cancel_monoid name)) := sorry --non-trivial
lemma new_lemma_158095 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (canonically_ordered_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (canonically_ordered_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_158096 (h0 : add_group (measurable_space (has_top linarith.comp))) : is_add_cyclic (measurable_space (has_top linarith.comp)) := sorry --non-trivial
lemma new_lemma_158097 (h0 : functor.add_const (ordered_add_comm_monoid (ring Type)) name) : @archimedean.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (ordered_add_comm_monoid.{1} (ring.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_158098 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @normal_space.{0} (semigroup.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (semigroup.{0} pos))  := sorry --non-trivial
lemma new_lemma_158099 (h0 : not (function.extfun Type semiring -> false)) : @is_noetherian_ring.{0} (add_right_cancel_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type semiring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type semiring.{0}) h0) (add_right_cancel_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158100 (h0 : group (has_Inf (ring linarith.comp))) : normalizer_condition (has_Inf (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_158101 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @is_domain.{0} (has_sub.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) ring.{0}) (has_sub.{0} num))  := sorry --non-trivial
lemma new_lemma_158102 (h0 : group (boolean_algebra (has_to_string (has_to_string name)))) : is_cyclic (boolean_algebra (has_to_string (has_to_string name))) := sorry --non-trivial
lemma new_lemma_158103 (h0 : complete_lattice (has_add unsigned)) : is_atomistic (has_add unsigned) := sorry --non-trivial
lemma new_lemma_158104 (h0 : topological_space (has_ssubset linarith.comp_source)) : path_connected_space (has_ssubset linarith.comp_source) := sorry --non-trivial
lemma new_lemma_158105 (h0 : add_group (uniform_space (distrib (mul_one_class fun_info)))) : is_add_cyclic (uniform_space (distrib (mul_one_class fun_info))) := sorry --non-trivial
lemma new_lemma_158106 (h0 : topological_space (has_neg_part (has_add (has_add (has_add unsigned))))) : preirreducible_space (has_neg_part (has_add (has_add (has_add unsigned)))) := sorry --non-trivial
lemma new_lemma_158107 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (left_cancel_monoid.{0} num) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (left_cancel_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_158108 (h1 : topological_space (has_div reducibility_hints)) : t0_space (has_div reducibility_hints) := sorry --non-trivial
lemma new_lemma_158109 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_158110 (h1 : group (topological_space to_additive.value_type)) : is_cyclic (topological_space to_additive.value_type) := sorry --non-trivial
lemma new_lemma_158111 (h0 : topological_space (with_zero (has_nnnorm string_imp))) : path_connected_space (with_zero (has_nnnorm string_imp)) := sorry --non-trivial
lemma new_lemma_158112 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (has_edist.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_edist.{0} empty))  := sorry --non-trivial
lemma new_lemma_158113 (h0 : topological_space (has_pos_part (has_Inf (ordered_comm_monoid Type)))) : totally_disconnected_space (has_pos_part (has_Inf (ordered_comm_monoid Type))) := sorry --non-trivial
lemma new_lemma_158114 (h0 : add_group (as_linear_order empty)) : is_add_cyclic (as_linear_order empty) := sorry --non-trivial
lemma new_lemma_158115 (h0 : topological_space (generalized_boolean_algebra (has_neg (has_neg pos)))) : totally_separated_space (generalized_boolean_algebra (has_neg (has_neg pos))) := sorry --non-trivial
lemma new_lemma_158116 (h0 : topological_space (generalized_boolean_algebra (has_add Type))) : regular_space (generalized_boolean_algebra (has_add Type)) := sorry --non-trivial
lemma new_lemma_158117 (h0 : function.extfun Type ordered_comm_monoid) : @has_exists_mul_of_le.{0} (comm_semigroup.{0} real) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} h0 (comm_semigroup.{0} real))  := sorry --non-trivial
lemma new_lemma_158118 (h0 : topological_space (ordered_comm_ring (sub_neg_monoid pos))) : normal_space (ordered_comm_ring (sub_neg_monoid pos)) := sorry --non-trivial
lemma new_lemma_158119 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @topological_space.separable_space.{1} (has_zero.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (has_zero.{1} Type))  := sorry --non-trivial
lemma new_lemma_158120 (h0 : ring (encodable (has_nnnorm linarith.ineq))) : is_domain (encodable (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158121 (h0 : function.extfun Type topological_space) : @normal_space.{0} (has_Sup.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_Sup.{0} empty))  := sorry --non-trivial
lemma new_lemma_158122 (h0 : not (group (denumerable to_additive.value_type) -> false)) : @is_cyclic.{0} (denumerable.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (group.{0} (denumerable.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_158123 (h0 : has_le (semi_normed_ring linarith.ineq)) (h1 : bounded_order (semi_normed_ring linarith.ineq)) : is_simple_order (semi_normed_ring linarith.ineq) := sorry --non-trivial
lemma new_lemma_158124 (h0 : functor.comp topological_space ring environment.implicit_infer_kind) : @preconnected_space.{0} (ring.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} topological_space.{0} ring.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_158125 (h0 : monoid (add_cancel_monoid (add_comm_monoid name))) : monoid.fg (add_cancel_monoid (add_comm_monoid name)) := sorry --non-trivial
lemma new_lemma_158126 (h0 : topological_space (measurable_space string_imp)) : t0_space (measurable_space string_imp) := sorry --non-trivial
lemma new_lemma_158127 (h0 : add_group (finset (finset linarith.comp))) : is_add_cyclic (finset (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_158128 (h0 : topological_space (semiring linarith.ineq)) : path_connected_space (semiring linarith.ineq) := sorry --non-trivial
lemma new_lemma_158129 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring unsigned)) pos) : @preirreducible_space.{0} (canonically_ordered_comm_semiring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_comm_semiring.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_158130 (h0 : functor.add_const (filter (canonically_ordered_comm_semiring unsigned)) pos) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_158131 (h0 : functor.add_const (monoid (boolean_algebra linarith.comp)) (finset (ring pos))) : @monoid.fg.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (monoid.{0} (boolean_algebra.{0} linarith.comp)) (finset.{0} (ring.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_158132 (h0 : function.extfun Type (functor.add_const (topological_space (option empty)))) : @irreducible_space.{0} (option.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (option.{0} empty)) num (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (option.{0} empty))) h0 num))  := sorry --non-trivial
lemma new_lemma_158133 (h0 : topological_space (boolean_algebra.core (has_to_string (has_add Type)))) : regular_space (boolean_algebra.core (has_to_string (has_add Type))) := sorry --non-trivial
lemma new_lemma_158134 (h0 : functor.add_const (list (has_add Type)) name) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_158135 (h0 : function.extfun (finset Type) (has_mem.mem (has_one empty))) : @normal_space.{0} (has_one.{0} empty) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_one.{0} empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_one.{0} empty)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_158136 (h0 : functor.add_const Prop (has_nndist (finset Type))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_158137 (h0 : topological_space (has_Inf (has_neg (has_neg pos)))) : path_connected_space (has_Inf (has_neg (has_neg pos))) := sorry --non-trivial
lemma new_lemma_158138 (h0 : has_neg (has_dist linarith.ineq)) (h1 : measurable_space (has_dist linarith.ineq)) : has_measurable_neg (has_dist linarith.ineq) := sorry --non-trivial
lemma new_lemma_158139 (h0 : group (has_norm linarith.comp_source)) : normalizer_condition (has_norm linarith.comp_source) := sorry --non-trivial
lemma new_lemma_158140 (h0 : function.extfun Type group) : @normalizer_condition.{0} auto.case_option (@function.extfun_app.{2 1} Type group.{0} h0 auto.case_option)  := sorry --non-trivial
lemma new_lemma_158141 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (normed_lattice_add_comm_group.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (normed_lattice_add_comm_group.{0} name))  := sorry --non-trivial
lemma new_lemma_158142 (h0 : functor.add_const (function.extfun Type add_group) pos) : @is_add_cyclic.{0} (has_Inf.{0} name) (@function.extfun_app.{2 1} Type add_group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type add_group.{0}) pos h0) (has_Inf.{0} name))  := sorry --non-trivial
lemma new_lemma_158143 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (has_neg_part unsigned)) := sorry --non-trivial
lemma new_lemma_158144 (h0 : not (uniform_space (has_lt (metric_space to_additive.value_type)) -> false)) : @complete_space.{0} (has_lt.{0} (metric_space.{0} to_additive.value_type)) (@classical.by_contradiction'.{1} (uniform_space.{0} (has_lt.{0} (metric_space.{0} to_additive.value_type))) h0)  := sorry --non-trivial
lemma new_lemma_158145 (h0 : left_cancel_semigroup (left_cancel_semigroup num) -> left_cancel_semigroup (left_cancel_semigroup num) -> Prop) : is_strict_order (left_cancel_semigroup (left_cancel_semigroup num)) h0 := sorry --non-trivial
lemma new_lemma_158146 (h0 : functor.add_const (semiring (has_neg linarith.comp)) linarith.comp) : @is_noetherian_ring.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 0} (semiring.{0} (has_neg.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158147 (h1 : uniform_space (encodable linarith.comp_source)) : complete_space (encodable linarith.comp_source) := sorry --non-trivial
lemma new_lemma_158148 (h0 : group (has_ssubset (has_nnnorm (has_nnnorm string.iterator_imp)))) : is_cyclic (has_ssubset (has_nnnorm (has_nnnorm string.iterator_imp))) := sorry --non-trivial
lemma new_lemma_158149 (h0 : add_monoid (has_to_string (has_add pos))) : add_monoid.fg (has_to_string (has_add pos)) := sorry --non-trivial
lemma new_lemma_158150 (h0 : is_empty (add_monoid (complete_linear_order congr_arg_kind) -> false)) : @add_monoid.fg.{0} (complete_linear_order.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (add_monoid.{0} (complete_linear_order.{0} congr_arg_kind)) (@is_empty.elim'.{0 0} (add_monoid.{0} (complete_linear_order.{0} congr_arg_kind) → false) false h0))  := sorry --non-trivial
lemma new_lemma_158151 (h1 : topological_space (dlist (has_ssubset string_imp))) : path_connected_space (dlist (has_ssubset string_imp)) := sorry --non-trivial
lemma new_lemma_158152 (h0 : group (has_top (random_gen congr_arg_kind))) : normalizer_condition (has_top (random_gen congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_158153 (h0 : not (ring (div_inv_monoid fun_info) -> false)) : @strong_rank_condition.{0} (div_inv_monoid.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (div_inv_monoid.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_158154 (h0 : add_group (has_norm (has_top num))) (h1 : add_subgroup (has_norm (has_top num))) : add_subgroup.normal h1 := sorry --non-trivial
lemma new_lemma_158155 (h0 : ring (filter empty)) : is_principal_ideal_ring (filter empty) := sorry --non-trivial
lemma new_lemma_158156 (h0 : function.extfun (set unsigned) (fun (x : set unsigned), Prop)) : is_countably_spanning (function.extfun_app h0) := sorry --non-trivial
lemma new_lemma_158157 (h0 : complete_lattice (canonically_linear_ordered_monoid congr_arg_kind)) : is_compactly_generated (canonically_linear_ordered_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_158158 (h0 : group (boolean_algebra (has_to_string (has_to_string (comm_group Type))))) : normalizer_condition (boolean_algebra (has_to_string (has_to_string (comm_group Type)))) := sorry --non-trivial
lemma new_lemma_158159 (h0 : function.extfun (finset Type) (has_mem.mem (with_one num))) : @discrete_topology.{0} (with_one.{0} num) (@finset.pi.empty.{1 0} Type topological_space.{0} (with_one.{0} num) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_one.{0} num)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_158160 (h0 : semiring (has_nndist (mul_zero_class name))) : is_noetherian_ring (has_nndist (mul_zero_class name)) := sorry --non-trivial
lemma new_lemma_158161 (h0 : topological_space (group_with_zero empty)) : totally_separated_space (group_with_zero empty) := sorry --non-trivial
lemma new_lemma_158162 (h0 : topological_space (has_add (has_to_string unsigned))) : t1_space (has_add (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_158163 (h0 : function.extfun nat fin) : @is_simple_group.{0} (normed_lattice_add_comm_group.{0} pos) (@matrix.vec_empty.{0} (group.{0} (normed_lattice_add_comm_group.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_158164 (h1 : not (group (complete_semilattice_Sup congr_arg_kind) -> false)) : @normalizer_condition.{0} (complete_semilattice_Sup.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (group.{0} (complete_semilattice_Sup.{0} congr_arg_kind)) h1)  := sorry --non-trivial
lemma new_lemma_158165 (h2 : set (nondiscrete_normed_field enat -> enat)) : set.separates_points h2 := sorry --non-trivial
lemma new_lemma_158166 (h0 : function.extfun (Type 1) topological_space) : @irreducible_space.{1} (semigroup.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (semigroup.{1} Type))  := sorry --non-trivial
lemma new_lemma_158167 (h0 : function.extfun Type ring) : @rank_condition.{0} (has_zero.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_158168 (h0 : group (has_union (has_norm empty))) : group.fg (has_union (has_norm empty)) := sorry --non-trivial
lemma new_lemma_158169 (h0 : topological_space (comm_group (cancel_monoid name))) : sequential_space (comm_group (cancel_monoid name)) := sorry --non-trivial
lemma new_lemma_158170 (h0 : set (non_unital_non_assoc_semiring char)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_158171 (h0 : topological_space (boolean_algebra (finset (finset linarith.comp)))) : regular_space (boolean_algebra (finset (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_158172 (h0 : filter (with_zero (has_inv to_additive.value_type))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_158173 (h0 : complete_lattice (uniform_space (mul_one_class linarith.ineq))) : is_compactly_generated (uniform_space (mul_one_class linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158174 (h0 : function.extfun Type (functor.add_const (list (ordered_ring congr_arg_kind)))) : palindrome (functor.add_const.run (function.extfun_app h0 (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_158175 (h1 : topological_space (linear_ordered_semiring (has_top num))) : irreducible_space (linear_ordered_semiring (has_top num)) := sorry --non-trivial
lemma new_lemma_158176 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (with_bot.{0} linarith.ineq) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (with_bot.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_158177 (h0 : functor.add_const (topological_space (monoid ennreal)) unsigned) : @discrete_topology.{0} (monoid.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (monoid.{0} ennreal)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158178 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (boolean_algebra.core.{0} name) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (boolean_algebra.core.{0} name))  := sorry --non-trivial
lemma new_lemma_158179 (h0 : ring (add_monoid (fintype (has_ssubset linarith.comp_source)))) : is_domain (add_monoid (fintype (has_ssubset linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_158180 (h0 : functor.add_const (function.extfun (Type 1) group) pos) : @is_cyclic.{1} (normed_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) pos h0) (normed_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_158181 (h1 : set (semi_normed_ring to_additive.value_type)) : set.finite h1 := sorry --non-trivial
lemma new_lemma_158182 (h0 : complete_lattice (add_left_cancel_semigroup num)) : complete_lattice.is_Sup_finite_compact (add_left_cancel_semigroup num) := sorry --non-trivial
lemma new_lemma_158183 (h0 : functor.add_const (ring (partial_order num)) unsigned) : @strong_rank_condition.{0} (partial_order.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (partial_order.{0} num)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158184 (h0 : list (semi_normed_comm_ring (has_norm (has_ssubset to_additive.value_type)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_158185 (h0 : functor.add_const (topological_space (boolean_algebra unsigned)) environment.implicit_infer_kind) : @preirreducible_space.{0} (boolean_algebra.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} unsigned)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_158186 (h0 : group (id (has_inv linarith.ineq))) : group.fg (id (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158187 (h0 : ring (semigroup (finset pos))) : is_domain (semigroup (finset pos)) := sorry --non-trivial
lemma new_lemma_158188 (h0 : topological_space (with_bot (has_norm (has_top linarith.comp_source)))) : path_connected_space (with_bot (has_norm (has_top linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_158189 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_neg_part.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_neg_part.{0} pos))  := sorry --non-trivial
lemma new_lemma_158190 (h0 : ring (non_unital_non_assoc_semiring (random_gen (random_gen linarith.comp_source)))) : strong_rank_condition (non_unital_non_assoc_semiring (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_158191 (h0 : topological_space (finset (has_to_string (has_to_string name)))) : path_connected_space (finset (has_to_string (has_to_string name))) := sorry --non-trivial
lemma new_lemma_158192 (h0 : ring (canonically_linear_ordered_monoid real)) : strong_rank_condition (canonically_linear_ordered_monoid real) := sorry --non-trivial
lemma new_lemma_158193 (h0 : complete_lattice (has_edist (option empty))) : complete_lattice.is_Sup_finite_compact (has_edist (option empty)) := sorry --non-trivial
lemma new_lemma_158194 (h0 : ring (add_comm_semigroup string.iterator_imp)) : rank_condition (add_comm_semigroup string.iterator_imp) := sorry --non-trivial
lemma new_lemma_158195 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (monoid.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_158196 (h0 : topological_space (has_nndist (has_add name))) : preconnected_space (has_nndist (has_add name)) := sorry --non-trivial
lemma new_lemma_158197 (h0 : topological_space (normed_linear_ordered_group (semiring (semiring unsigned)))) : totally_separated_space (normed_linear_ordered_group (semiring (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_158198 (h0 : ring (semi_normed_ring (uniform_space linarith.ineq))) : strong_rank_condition (semi_normed_ring (uniform_space linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158199 (h0 : complete_lattice (semi_normed_comm_ring char)) : is_atomistic (semi_normed_comm_ring char) := sorry --non-trivial
lemma new_lemma_158200 (h0 : functor.comp topological_space has_to_string pos) : @path_connected_space.{0} (has_to_string.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} has_to_string.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_158201 (h0 : function.extfun Type (prod (normed_comm_ring name))) : id_rel (function.extfun_app h0 (normed_comm_ring name)) := sorry --non-trivial
lemma new_lemma_158202 (h0 : semiring (has_neg linarith.comp)) : is_noetherian_ring (has_neg linarith.comp) := sorry --non-trivial
lemma new_lemma_158203 (h0 : topological_space (has_nnnorm (mul_one_class reducibility_hints))) : totally_disconnected_space (has_nnnorm (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_158204 (h0 : topological_space (has_norm (has_top fun_info))) : totally_disconnected_space (has_norm (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_158205 (h0 : functor.add_const (uniform_space (has_zero linarith.comp)) Type) : @complete_space.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 1} (uniform_space.{0} (has_zero.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_158206 (h0 : functor.add_const (topological_space (has_to_string Type)) pos) : @locally_compact_space.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_to_string.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_158207 (h0 : topological_space (comm_group ennreal)) : sequential_space (comm_group ennreal) := sorry --non-trivial
lemma new_lemma_158208 (h0 : functor.add_const (topological_space (cancel_monoid Type)) Type) : @path_connected_space.{1} (cancel_monoid.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (cancel_monoid.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_158209 (h0 : not (has_mem.mem (has_emptyc congr_arg_kind) has_emptyc.emptyc -> false)) : @totally_separated_space.{0} (has_emptyc.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_emptyc.{0} congr_arg_kind) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_emptyc.{0} congr_arg_kind) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_158210 (h0 : topological_space (encodable (linear_ordered_add_comm_group (random_gen linarith.comp_source)))) : locally_compact_space (encodable (linear_ordered_add_comm_group (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_158211 (h0 : group (has_add (option name))) : is_simple_group (has_add (option name)) := sorry --non-trivial
lemma new_lemma_158212 (h0 : functor.add_const (topological_space (add_comm_monoid unsigned)) name) : @normal_space.{0} (add_comm_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (add_comm_monoid.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_158213 (h0 : ring (cancel_monoid (option (comm_group (option (has_neg_part pos)))))) : is_domain (cancel_monoid (option (comm_group (option (has_neg_part pos))))) := sorry --non-trivial
lemma new_lemma_158214 (h0 : has_lt (normed_field (normed_field linarith.ineq))) : no_max_order (normed_field (normed_field linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158215 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (ordered_comm_ring.{0} pos) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (ordered_comm_ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_158216 (h0 : functor.add_const (function.extfun (Type 1) topological_space) (has_Inf pos)) : @loc_path_connected_space.{1} (has_neg.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) (has_Inf.{0} pos) h0) (has_neg.{1} Type))  := sorry --non-trivial
lemma new_lemma_158217 (h0 : not (list (has_top to_additive.value_type) -> false)) : list.nodup (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_158218 (h0 : topological_space (generalized_boolean_algebra (generalized_boolean_algebra Type))) : irreducible_space (generalized_boolean_algebra (generalized_boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_158219 (h0 : set (has_div linarith.ineq)) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_158220 (h0 : monoid (measurable_space.dynkin_system (has_top (semiring empty)))) : monoid.fg (measurable_space.dynkin_system (has_top (semiring empty))) := sorry --non-trivial
lemma new_lemma_158221 (h1 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (@id.{2} Type congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (@id.{2} Type congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158222 (h0 : topological_space (has_div (mul_one_class linarith.ineq))) : path_connected_space (has_div (mul_one_class linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158223 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_158224 (h0 : topological_space (has_inv (has_nnnorm (has_nnnorm (has_nnnorm fun_info))))) : path_connected_space (has_inv (has_nnnorm (has_nnnorm (has_nnnorm fun_info)))) := sorry --non-trivial
lemma new_lemma_158225 (h0 : topological_space (has_norm (has_norm (has_top linarith.comp_source)))) : locally_compact_space (has_norm (has_norm (has_top linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_158226 (h0 : ring (comm_ring (mul_one_class reducibility_hints))) : rank_condition (comm_ring (mul_one_class reducibility_hints)) := sorry --non-trivial
lemma new_lemma_158227 (h0 : not (topological_space (metric_space congr_arg_kind) -> false)) : @t0_space.{0} (metric_space.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (metric_space.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_158228 (h2 : set (semi_normed_ring string.iterator_imp)) : set.finite h2 := sorry --non-trivial
lemma new_lemma_158229 (h0 : ordered_add_comm_monoid (normed_group (semiring empty))) : archimedean (normed_group (semiring empty)) := sorry --non-trivial
lemma new_lemma_158230 (h1 : function.extfun Type group) : @normalizer_condition.{0} (has_norm.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} h1 (has_norm.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_158231 (h0 : uniform_space (has_top (has_inv (has_norm (has_norm (has_norm fun_info)))))) : complete_space (has_top (has_inv (has_norm (has_norm (has_norm fun_info))))) := sorry --non-trivial
lemma new_lemma_158232 (h1 : function.extfun Type topological_space) : @preirreducible_space.{0} (has_union.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (has_union.{0} empty))  := sorry --non-trivial
lemma new_lemma_158233 (h0 : function.extfun (Type 1) complete_lattice) : @complete_lattice.is_Sup_finite_compact.{1} (has_to_string.{1} Type) (@function.extfun_app.{3 2} (Type 1) complete_lattice.{1} h0 (has_to_string.{1} Type))  := sorry --non-trivial
lemma new_lemma_158234 (h0 : functor.add_const (topological_space (has_Sup unsigned)) num) : @t0_space.{0} (has_Sup.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Sup.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_158235 (h0 : ring (has_le string.iterator_imp)) : is_domain (has_le string.iterator_imp) := sorry --non-trivial
lemma new_lemma_158236 (h0 : not (function.extfun Type monoid -> false)) : @monoid.fg.{0} (@id.{2} Type unsigned) (@function.extfun_app.{2 1} Type monoid.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type monoid.{0}) h0) (@id.{2} Type unsigned))  := sorry --non-trivial
lemma new_lemma_158237 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (boolean_algebra.core.{0} name) (@function.extfun_app.{2 1} Type monoid.{0} h0 (boolean_algebra.core.{0} name))  := sorry --non-trivial
lemma new_lemma_158238 (h0 : topological_space (add_comm_monoid real)) : totally_disconnected_space (add_comm_monoid real) := sorry --non-trivial
lemma new_lemma_158239 (h1 : ring (with_one linarith.comp_source)) : rank_condition (with_one linarith.comp_source) := sorry --non-trivial
lemma new_lemma_158240 (h0 : fin has_zero.zero) : @add_monoid.fg.{0} (boolean_algebra.{0} real) (@matrix.vec_empty.{0} (add_monoid.{0} (boolean_algebra.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_158241 (h0 : functor.add_const (cancel_comm_monoid_with_zero (add_cancel_comm_monoid empty)) empty) : @unique_factorization_monoid.{0} (add_cancel_comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (add_cancel_comm_monoid.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_158242 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (filter.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (filter.{0} empty))  := sorry --non-trivial
lemma new_lemma_158243 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (pseudo_metric_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (pseudo_metric_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158244 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (normed_comm_ring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type monoid.{0} h0 (normed_comm_ring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_158245 (h0 : ring (complete_distrib_lattice (has_bot (has_Inf real)))) : rank_condition (complete_distrib_lattice (has_bot (has_Inf real))) := sorry --non-trivial
lemma new_lemma_158246 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (ring.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (ring.{0} name))  := sorry --non-trivial
lemma new_lemma_158247 (h1 : topological_space (add_comm_semigroup std_gen)) : path_connected_space (add_comm_semigroup std_gen) := sorry --non-trivial
lemma new_lemma_158248 (h0 : ring (ring (has_to_string environment.implicit_infer_kind))) : is_domain (ring (has_to_string environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_158249 (h0 : not (topological_space congr_arg_kind -> false)) : @locally_compact_space.{0} congr_arg_kind (@classical.by_contradiction'.{1} (topological_space.{0} congr_arg_kind) h0)  := sorry --non-trivial
lemma new_lemma_158250 (h0 : functor.add_const (functor.add_const (list Type) linarith.comp) name) : palindrome (functor.add_const.run (functor.add_const.run h0)) := sorry --non-trivial
lemma new_lemma_158251 (h0 : uniform_space (preorder (option empty))) : complete_space (preorder (option empty)) := sorry --non-trivial
lemma new_lemma_158252 (h0 : function.extfun (Type 1) ring) : @strong_rank_condition.{1} (has_add.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} h0 (has_add.{1} Type))  := sorry --non-trivial
lemma new_lemma_158253 (h0 : ordered_add_comm_monoid (has_zero (has_neg (has_neg pos)))) : archimedean (has_zero (has_neg (has_neg pos))) := sorry --non-trivial
lemma new_lemma_158254 (h0 : complete_lattice (has_add (has_add (sub_neg_monoid real)))) : is_atomistic (has_add (has_add (sub_neg_monoid real))) := sorry --non-trivial
lemma new_lemma_158255 (h0 : not (topological_space (has_top num) -> false)) : @locally_compact_space.{0} (has_top.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (has_top.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_158256 (h0 : uniform_space (complete_linear_order (semiring (semiring (semiring (semiring empty)))))) : separated_space (complete_linear_order (semiring (semiring (semiring (semiring empty))))) := sorry --non-trivial
lemma new_lemma_158257 (h0 : topological_space (add_cancel_monoid (has_add (comm_group name)))) : normal_space (add_cancel_monoid (has_add (comm_group name))) := sorry --non-trivial
lemma new_lemma_158258 (h0 : functor.add_const (topological_space (linear_ordered_comm_monoid_with_zero unsigned)) congr_arg_kind) : @preirreducible_space.{0} (linear_ordered_comm_monoid_with_zero.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (linear_ordered_comm_monoid_with_zero.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_158259 (h0 : not (topological_space (has_div to_additive.value_type) -> false)) : @t0_space.{0} (has_div.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (has_div.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_158260 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @rank_condition.{0} (has_edist.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) ring.{0}) (has_edist.{0} empty))  := sorry --non-trivial
lemma new_lemma_158261 (h0 : functor.add_const (uniform_space (simple_graph linarith.comp)) Type) : @complete_space.{0} (simple_graph.{0} linarith.comp) (@functor.add_const.run.{0 1} (uniform_space.{0} (simple_graph.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_158262 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (free_add_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (free_add_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158263 (h0 : functor.add_const (topological_space (normed_comm_ring name)) linarith.comp) : @preirreducible_space.{0} (normed_comm_ring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (normed_comm_ring.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158264 (h0 : topological_space (mul_zero_class (has_nndist name))) : t0_space (mul_zero_class (has_nndist name)) := sorry --non-trivial
lemma new_lemma_158265 (h0 : functor.add_const (topological_space (ring Type)) environment.implicit_infer_kind) : @loc_path_connected_space.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (ring.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_158266 (h0 : functor.add_const (topological_space (has_to_string pos)) environment.implicit_infer_kind) : @preconnected_space.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_158267 (h0 : fin has_zero.zero) : @has_exists_mul_of_le.{1} (has_add.{1} Type) (@matrix.vec_empty.{1} (ordered_comm_monoid.{1} (has_add.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_158268 (h0 : set (normed_field (has_ssubset fun_info) -> linarith.comp_source)) : set.separates_points h0 := sorry --non-trivial
lemma new_lemma_158269 (h0 : complete_lattice (measure_theory.measure_space (semiring (semiring (semiring num))))) : is_atomistic (measure_theory.measure_space (semiring (semiring (semiring num)))) := sorry --non-trivial
lemma new_lemma_158270 (h0 : functor.add_const (topological_space (add_comm_monoid linarith.comp)) name) : @totally_disconnected_space.{0} (add_comm_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (add_comm_monoid.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_158271 (h0 : not (function.extfun Type topological_space -> false)) : @totally_disconnected_space.{0} (linear_ordered_semiring.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (linear_ordered_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_158272 (h0 : topological_space (has_to_string (has_neg_part (has_to_string Type)))) : t0_space (has_to_string (has_neg_part (has_to_string Type))) := sorry --non-trivial
lemma new_lemma_158273 (h0 : functor.add_const (topological_space (ordered_comm_ring Type)) pos) : @t0_space.{1} (ordered_comm_ring.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (ordered_comm_ring.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_158274 (h0 : function.extfun Type topological_space) : @regular_space.{0} (ordered_comm_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_158275 (h0 : topological_space (pseudo_metric_space (option unsigned))) : locally_compact_space (pseudo_metric_space (option unsigned)) := sorry --non-trivial
lemma new_lemma_158276 (h0 : cancel_comm_monoid_with_zero (has_Sup (option empty))) : unique_factorization_monoid (has_Sup (option empty)) := sorry --non-trivial
lemma new_lemma_158277 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (linear_ordered_cancel_comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (linear_ordered_cancel_comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_158278 (h0 : functor.add_const (function.extfun Type ring) congr_arg_kind) : @strong_rank_condition.{0} (add_group.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type ring.{0}) congr_arg_kind h0) (add_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_158279 (h0 : name -> name -> Prop) : is_strict_order name h0 := sorry --non-trivial
lemma new_lemma_158280 (h0 : functor.add_const Prop (has_add real)) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_158281 (h0 : monoid to_additive.value_type) : monoid.fg to_additive.value_type := sorry --non-trivial
lemma new_lemma_158282 (h0 : topological_space (has_add (has_add (has_bot (has_Inf (sub_neg_monoid real)))))) : preconnected_space (has_add (has_add (has_bot (has_Inf (sub_neg_monoid real))))) := sorry --non-trivial
lemma new_lemma_158283 (h0 : topological_space (boolean_algebra (has_neg_part (add_cancel_monoid name)))) : preirreducible_space (boolean_algebra (has_neg_part (add_cancel_monoid name))) := sorry --non-trivial
lemma new_lemma_158284 (h0 : functor.add_const (cancel_comm_monoid_with_zero (left_cancel_monoid num)) (semiring num)) : @unique_factorization_monoid.{0} (left_cancel_monoid.{0} num) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (left_cancel_monoid.{0} num)) (semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_158285 (h0 : topological_space (ring (has_neg (has_neg (has_neg (has_neg Type)))))) : preconnected_space (ring (has_neg (has_neg (has_neg (has_neg Type))))) := sorry --non-trivial
lemma new_lemma_158286 (h4 : topological_space (nondiscrete_normed_field (add_comm_semigroup string.iterator_imp))) (h5 : preorder (nondiscrete_normed_field (add_comm_semigroup string.iterator_imp))) : order_closed_topology (nondiscrete_normed_field (add_comm_semigroup string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_158287 (h0 : functor.add_const (topological_space (left_cancel_monoid empty)) num) : @topological_space.separable_space.{0} (left_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_monoid.{0} empty)) num h0)  := sorry --non-trivial
lemma new_lemma_158288 (h0 : functor.add_const (add_group (boolean_algebra.core pos)) pos) : @is_add_cyclic.{0} (boolean_algebra.core.{0} pos) (@functor.add_const.run.{0 0} (add_group.{0} (boolean_algebra.core.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_158289 (h0 : topological_space (nondiscrete_normed_field (normed_field enat))) (h1 : set (nondiscrete_normed_field (normed_field enat))) : is_path_connected h1 := sorry --non-trivial
lemma new_lemma_158290 (h0 : topological_space (has_zero (has_pos_part linarith.comp))) : regular_space (has_zero (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_158291 (h0 : add_monoid (has_nndist (finset environment.implicit_infer_kind))) : add_monoid.fg (has_nndist (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_158292 (h0 : functor.add_const (complete_lattice (normed_linear_ordered_group unsigned)) empty) : @is_atomistic.{0} (normed_linear_ordered_group.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (normed_linear_ordered_group.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_158293 (h1 : ring (normed_field to_additive.value_type)) : strong_rank_condition (normed_field to_additive.value_type) := sorry --non-trivial
lemma new_lemma_158294 (h0 : linarith.comp_source -> fun_info -> fun_info) : left_commutative h0 := sorry --non-trivial
lemma new_lemma_158295 (h0 : functor.add_const (add_monoid (complete_distrib_lattice linarith.comp)) pos) : @add_monoid.fg.{0} (complete_distrib_lattice.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_monoid.{0} (complete_distrib_lattice.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_158296 (h0 : group (boolean_algebra (add_comm_monoid name))) : normalizer_condition (boolean_algebra (add_comm_monoid name)) := sorry --non-trivial
lemma new_lemma_158297 (h0 : functor.add_const (functor.add_const (group linarith.comp) linarith.comp) linarith.comp) : @normalizer_condition.{0} linarith.comp (@functor.add_const.run.{0 0} (group.{0} linarith.comp) linarith.comp (@functor.add_const.run.{0 0} (functor.add_const.{0 0} (group.{0} linarith.comp) linarith.comp) linarith.comp h0))  := sorry --non-trivial
lemma new_lemma_158298 (h0 : ring (add_comm_monoid (has_add (comm_group (has_neg_part name))))) : is_domain (add_comm_monoid (has_add (comm_group (has_neg_part name)))) := sorry --non-trivial
lemma new_lemma_158299 (h0 : topological_space (has_Inf (has_neg name))) : t1_space (has_Inf (has_neg name)) := sorry --non-trivial
lemma new_lemma_158300 (h0 : function.extfun Type (functor.add_const Prop)) : functor.add_const.run (function.extfun_app h0 (comm_group pos)) := sorry --non-trivial
lemma new_lemma_158301 (h0 : topological_space (omega_complete_partial_order linarith.ineq)) : totally_disconnected_space (omega_complete_partial_order linarith.ineq) := sorry --non-trivial
lemma new_lemma_158302 (h0 : functor.add_const (topological_space (boolean_algebra environment.implicit_infer_kind)) name) : @irreducible_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_158303 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} to_additive.value_type (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) to_additive.value_type)  := sorry --non-trivial
lemma new_lemma_158304 (h0 : cancel_comm_monoid_with_zero (monoid ennreal)) : unique_factorization_monoid (monoid ennreal) := sorry --non-trivial
lemma new_lemma_158305 (h0 : function.extfun Type group) : @normalizer_condition.{0} (boolean_algebra.core.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (boolean_algebra.core.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158306 (h3 : complete_lattice congr_arg_kind) : complete_lattice.is_Sup_finite_compact congr_arg_kind := sorry --non-trivial
lemma new_lemma_158307 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (normed_comm_ring.{0} num) (@function.extfun_app.{2 1} Type ring.{0} h0 (normed_comm_ring.{0} num))  := sorry --non-trivial
lemma new_lemma_158308 (h0 : functor.add_const (ordered_add_comm_monoid (add_cancel_monoid empty)) unsigned) : @archimedean.{0} (add_cancel_monoid.{0} empty) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (add_cancel_monoid.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158309 (h2 : has_lt (normed_field reducibility_hints)) : no_max_order (normed_field reducibility_hints) := sorry --non-trivial
lemma new_lemma_158310 (h0 : ring (distrib (has_nnnorm (has_nnnorm (random_gen (random_gen (random_gen char))))))) : rank_condition (distrib (has_nnnorm (has_nnnorm (random_gen (random_gen (random_gen char)))))) := sorry --non-trivial
lemma new_lemma_158311 (h0 : topological_space (boolean_algebra (has_Inf (has_pos_part (finset Type))))) : totally_disconnected_space (boolean_algebra (has_Inf (has_pos_part (finset Type)))) := sorry --non-trivial
lemma new_lemma_158312 (h0 : complete_lattice (ordered_comm_group (option empty))) : complete_lattice.is_Sup_finite_compact (ordered_comm_group (option empty)) := sorry --non-trivial
lemma new_lemma_158313 (h0 : filter (non_assoc_semiring (semiring (semiring (semiring unsigned))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_158314 (h0 : group (complete_distrib_lattice environment.implicit_infer_kind)) : is_simple_group (complete_distrib_lattice environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_158315 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (with_one.{0} (random_gen.{0} linarith.comp_source)) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (with_one.{0} (random_gen.{0} linarith.comp_source)))  := sorry --non-trivial
lemma new_lemma_158316 (h0 : functor.add_const (monoid (has_to_string Type)) pos) : @monoid.fg.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (monoid.{1} (has_to_string.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_158317 (h0 : complete_lattice (plift empty)) : is_compactly_generated (plift empty) := sorry --non-trivial
lemma new_lemma_158318 (h0 : functor.add_const (complete_lattice (add_cancel_monoid environment.implicit_infer_kind)) linarith.comp) : @is_atomistic.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158319 (h0 : functor.add_const (ordered_add_comm_monoid (add_comm_monoid pos)) Type) : @archimedean.{0} (add_comm_monoid.{0} pos) (@functor.add_const.run.{0 1} (ordered_add_comm_monoid.{0} (add_comm_monoid.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_158320 (h0 : filter (add_cancel_monoid (finset pos))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_158321 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (has_zero.{0} num) (@function.extfun_app.{2 1} Type semiring.{0} h0 (has_zero.{0} num))  := sorry --non-trivial
lemma new_lemma_158322 (h0 : function.extfun Type topological_space) : @normal_space.{0} (has_star.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_star.{0} empty))  := sorry --non-trivial
lemma new_lemma_158323 (h0 : topological_space (has_to_string (has_to_string pos))) : loc_path_connected_space (has_to_string (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_158324 (h0 : list (comm_ring (comm_ring (dlist to_additive.value_type)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_158325 (h0 : add_monoid (linear_ordered_comm_ring (non_assoc_semiring (has_top congr_arg_kind)))) : add_monoid.fg (linear_ordered_comm_ring (non_assoc_semiring (has_top congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_158326 (h0 : functor.add_const (topological_space (simple_graph linarith.comp)) Type) : @sequential_space.{0} (simple_graph.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (simple_graph.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_158327 (h0 : not (group (dlist char) -> false)) : @is_cyclic.{0} (dlist.{0} char) (@classical.by_contradiction'.{1} (group.{0} (dlist.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_158328 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (has_to_string.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_to_string.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_158329 (h0 : topological_space (linear_ordered_comm_group_with_zero std_gen)) (h1 : preorder (linear_ordered_comm_group_with_zero std_gen)) : order_closed_topology (linear_ordered_comm_group_with_zero std_gen) := sorry --non-trivial
lemma new_lemma_158330 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (with_bot.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (with_bot.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158331 (h0 : semiring (normed_lattice_add_comm_group Type)) : is_noetherian_ring (normed_lattice_add_comm_group Type) := sorry --non-trivial
lemma new_lemma_158332 (h0 : has_zero num -> has_zero num -> Prop) : is_symm (has_zero num) h0 := sorry --non-trivial
lemma new_lemma_158333 (h0 : functor.add_const (add_group (add_cancel_monoid ennreal)) (option (option (option pos)))) : @is_add_cyclic.{0} (add_cancel_monoid.{0} ennreal) (@functor.add_const.run.{0 0} (add_group.{0} (add_cancel_monoid.{0} ennreal)) (option.{0} (option.{0} (option.{0} pos))) h0)  := sorry --non-trivial
lemma new_lemma_158334 (h1 : ring (semi_normed_ring linarith.comp_source)) : strong_rank_condition (semi_normed_ring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_158335 (h0 : functor.add_const (function.extfun Type topological_space) Type) : @preirreducible_space.{0} (has_Inf.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) Type h0) (has_Inf.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_158336 (h0 : function.extfun Type ring) : @rank_condition.{0} (add_semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (add_semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158337 (h0 : topological_space (distrib (random_gen (random_gen (random_gen (random_gen char)))))) : t0_space (distrib (random_gen (random_gen (random_gen (random_gen char))))) := sorry --non-trivial
lemma new_lemma_158338 (h0 : not (function.extfun Type complete_lattice -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (has_one.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (has_one.{0} empty))  := sorry --non-trivial
lemma new_lemma_158339 (h0 : fin has_zero.zero) : @normalizer_condition.{0} (has_add.{0} pos) (@matrix.vec_empty.{0} (group.{0} (has_add.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_158340 (h0 : functor.add_const (ring (comm_group Type)) Type) : @is_principal_ideal_ring.{1} (comm_group.{1} Type) (@functor.add_const.run.{1 1} (ring.{1} (comm_group.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_158341 (h0 : topological_space (has_Inf name)) : irreducible_space (has_Inf name) := sorry --non-trivial
lemma new_lemma_158342 (h1 : topological_space (random_gen (has_nnnorm char))) : path_connected_space (random_gen (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_158343 (h0 : ring (measure_theory.measure_space (semiring unsigned))) : strong_rank_condition (measure_theory.measure_space (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_158344 (h0 : complete_lattice (boolean_algebra pos)) : is_compactly_generated (boolean_algebra pos) := sorry --non-trivial
lemma new_lemma_158345 (h0 : functor.add_const (topological_space (has_Inf linarith.comp)) (has_Inf (has_add linarith.comp))) : @irreducible_space.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} linarith.comp)) (has_Inf.{0} (has_add.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_158346 (h0 : topological_space (free_add_monoid unsigned)) : preirreducible_space (free_add_monoid unsigned) := sorry --non-trivial
lemma new_lemma_158347 (h0 : function.extfun (Type 1) add_group) : @is_add_cyclic.{1} (ordered_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_group.{1} h0 (ordered_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_158348 (h0 : function.extfun Type (functor.add_const (topological_space name))) : @locally_compact_space.{0} name (@functor.add_const.run.{0 0} (topological_space.{0} name) congr_arg_kind (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} name)) h0 congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158349 (h0 : functor.add_const (topological_space (has_nndist name)) unsigned) : @preirreducible_space.{0} (has_nndist.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158350 (h0 : add_group (complete_distrib_lattice (finset environment.implicit_infer_kind))) : is_add_cyclic (complete_distrib_lattice (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_158351 (h0 : functor.add_const (list (has_zero unsigned)) Type) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_158352 (h0 : ring (semigroup (has_add Type))) : is_principal_ideal_ring (semigroup (has_add Type)) := sorry --non-trivial
lemma new_lemma_158353 (h0 : add_group (linear_order (option (option empty)))) : is_add_cyclic (linear_order (option (option empty))) := sorry --non-trivial
lemma new_lemma_158354 (h3 h4 : multiset (mul_one_class environment.projection_info)) : multiset.subset h3 h4 := sorry --non-trivial
lemma new_lemma_158355 (h0 : ring (dlist string_imp)) : strong_rank_condition (dlist string_imp) := sorry --non-trivial
lemma new_lemma_158356 (h0 : functor.add_const (topological_space (has_neg_part environment.implicit_infer_kind)) unsigned) : @path_connected_space.{0} (has_neg_part.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} environment.implicit_infer_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158357 (h0 : function.extfun Type (functor.add_const (topological_space ennreal))) : t1_space ennreal := sorry --non-trivial
lemma new_lemma_158358 (h0 : cancel_comm_monoid_with_zero (comm_semigroup (sub_neg_monoid real))) : unique_factorization_monoid (comm_semigroup (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_158359 (h1 : not (add_group (uniform_space reducibility_hints) -> false)) : @is_add_cyclic.{0} (uniform_space.{0} reducibility_hints) (@classical.by_contradiction'.{1} (add_group.{0} (uniform_space.{0} reducibility_hints)) h1)  := sorry --non-trivial
lemma new_lemma_158360 (h0 : semiring (has_nndist (cancel_monoid (has_nndist pos)))) : is_noetherian_ring (has_nndist (cancel_monoid (has_nndist pos))) := sorry --non-trivial
lemma new_lemma_158361 (h0 : functor.add_const (list (has_neg_part name)) unsigned) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_158362 (h0 : topological_space (comm_group linarith.comp)) : totally_separated_space (comm_group linarith.comp) := sorry --non-trivial
lemma new_lemma_158363 (h0 : functor.add_const (ordered_comm_monoid (semigroup unsigned)) Type) : @has_exists_mul_of_le.{0} (semigroup.{0} unsigned) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (semigroup.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_158364 (h0 : functor.add_const (cancel_comm_monoid_with_zero (boolean_algebra.core unsigned)) pos) : @unique_factorization_monoid.{0} (boolean_algebra.core.{0} unsigned) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (boolean_algebra.core.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_158365 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (has_to_string.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_to_string.{0} name))  := sorry --non-trivial
lemma new_lemma_158366 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (semigroup ennreal)) := sorry --non-trivial
lemma new_lemma_158367 (h0 : ring (ordered_comm_monoid real)) : is_domain (ordered_comm_monoid real) := sorry --non-trivial
lemma new_lemma_158368 (h0 : functor.add_const (uniform_space (boolean_algebra Type)) environment.implicit_infer_kind) : @complete_space.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (uniform_space.{1} (boolean_algebra.{1} Type)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_158369 (h0 : complete_lattice (has_sub num)) : is_compactly_generated (has_sub num) := sorry --non-trivial
lemma new_lemma_158370 (h0 : list (has_neg (finset name))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_158371 (h0 : functor.add_const (semiring (simple_graph linarith.comp)) Type) : @is_noetherian_ring.{0} (simple_graph.{0} linarith.comp) (@functor.add_const.run.{0 1} (semiring.{0} (simple_graph.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_158372 (h0 : filter (has_one (semiring linarith.comp))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_158373 (h0 : empty -> empty -> Prop) (h1 : set empty) : set.unbounded h0 h1 := sorry --non-trivial
lemma new_lemma_158374 (h0 : topological_space (has_emptyc to_additive.value_type)) : totally_disconnected_space (has_emptyc to_additive.value_type) := sorry --non-trivial
lemma new_lemma_158375 (h0 : complete_lattice (canonically_ordered_add_monoid (comm_monoid unsigned))) : is_atomistic (canonically_ordered_add_monoid (comm_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_158376 (h0 : topological_space (as_linear_order unsigned)) : preirreducible_space (as_linear_order unsigned) := sorry --non-trivial
lemma new_lemma_158377 (h0 : ordered_add_comm_monoid (has_add (finset environment.implicit_infer_kind))) : archimedean (has_add (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_158378 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (pseudo_metric_space.{0} unsigned) (@function.extfun_app.{2 1} Type monoid.{0} h0 (pseudo_metric_space.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158379 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (ordered_comm_monoid.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_comm_monoid.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_158380 (h0 : topological_space (complete_distrib_lattice (boolean_algebra.core name))) : preirreducible_space (complete_distrib_lattice (boolean_algebra.core name)) := sorry --non-trivial
lemma new_lemma_158381 (h0 : list nnreal) : palindrome h0 := sorry --non-trivial
lemma new_lemma_158382 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (add_cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158383 (h0 : functor.add_const (topological_space (has_zero environment.implicit_infer_kind)) Type) : @discrete_topology.{0} (has_zero.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (has_zero.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_158384 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_ssubset.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_ssubset.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_158385 (h0 : complete_lattice (has_lt (metric_space linarith.comp_source))) : complete_lattice.is_Sup_finite_compact (has_lt (metric_space linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_158386 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (has_inter.{0} ennreal) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (has_inter.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_158387 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (has_norm.{0} fun_info) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (has_norm.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_158388 (h0 : complete_lattice (normed_group to_additive.value_type)) : is_compactly_generated (normed_group to_additive.value_type) := sorry --non-trivial
lemma new_lemma_158389 (h0 : add_group (has_Inf pos)) : is_add_cyclic (has_Inf pos) := sorry --non-trivial
lemma new_lemma_158390 (h0 : complete_lattice (topological_space (comm_ring char))) : is_compactly_generated (topological_space (comm_ring char)) := sorry --non-trivial
lemma new_lemma_158391 (h1 : function.extfun Type complete_lattice) : @is_atomistic.{0} (random_gen.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type complete_lattice.{0} h1 (random_gen.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_158392 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (comm_ring.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (comm_ring.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_158393 (h1 : group (has_top to_additive.value_type)) : group.fg (has_top to_additive.value_type) := sorry --non-trivial
lemma new_lemma_158394 (h0 : topological_space (linear_ordered_comm_ring (option (semiring unsigned)))) : t1_space (linear_ordered_comm_ring (option (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_158395 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (normed_comm_ring.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_comm_ring.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_158396 (h0 : complete_lattice (boolean_algebra (has_Inf real))) : is_compactly_generated (boolean_algebra (has_Inf real)) := sorry --non-trivial
lemma new_lemma_158397 (h0 : functor.add_const (topological_space nnreal) empty) : locally_compact_space nnreal := sorry --non-trivial
lemma new_lemma_158398 (h0 : functor.add_const (topological_space auto.case_option) (option (option (option (option (option empty)))))) : @irreducible_space.{0} auto.case_option (@functor.add_const.run.{0 0} (topological_space.{0} auto.case_option) (option.{0} (option.{0} (option.{0} (option.{0} (option.{0} empty))))) h0)  := sorry --non-trivial
lemma new_lemma_158399 (h0 : topological_space (cancel_monoid (boolean_algebra (boolean_algebra name)))) : normal_space (cancel_monoid (boolean_algebra (boolean_algebra name))) := sorry --non-trivial
lemma new_lemma_158400 (h0 : topological_space (monoid num)) : topological_space.separable_space (monoid num) := sorry --non-trivial
lemma new_lemma_158401 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (filter.{0} unsigned) (@function.extfun_app.{2 1} Type add_group.{0} h0 (filter.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158402 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_simple_group.{0} (has_zero.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_zero.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_158403 (h0 : ring (add_semigroup congr_arg_kind)) : rank_condition (add_semigroup congr_arg_kind) := sorry --non-trivial
lemma new_lemma_158404 (h0 : topological_space (left_cancel_semigroup unsigned)) : totally_separated_space (left_cancel_semigroup unsigned) := sorry --non-trivial
lemma new_lemma_158405 (h0 : topological_space (linear_order (semiring (semiring empty)))) : irreducible_space (linear_order (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_158406 (h1 : has_mem.mem (with_one congr_arg_kind) has_emptyc.emptyc) : @irreducible_space.{0} (with_one.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type topological_space.{0} (with_one.{0} congr_arg_kind) h1)  := sorry --non-trivial
lemma new_lemma_158407 (h0 : function.extfun Type group) : @is_cyclic.{0} real.angle (@function.extfun_app.{2 1} Type group.{0} h0 real.angle)  := sorry --non-trivial
lemma new_lemma_158408 (h0 : topological_space (monoid unsigned)) : t1_space (monoid unsigned) := sorry --non-trivial
lemma new_lemma_158409 (h0 : topological_space (normed_lattice_add_comm_group (has_bot Type))) : t1_space (normed_lattice_add_comm_group (has_bot Type)) := sorry --non-trivial
lemma new_lemma_158410 (h0 : topological_space (has_nndist linarith.comp)) : normal_space (has_nndist linarith.comp) := sorry --non-trivial
lemma new_lemma_158411 (h0 : cancel_comm_monoid_with_zero (has_sub num)) : unique_factorization_monoid (has_sub num) := sorry --non-trivial
lemma new_lemma_158412 (h0 : ring (semigroup (has_nndist pos))) : is_domain (semigroup (has_nndist pos)) := sorry --non-trivial
lemma new_lemma_158413 (h0 : semiring (filter empty)) : is_noetherian_ring (filter empty) := sorry --non-trivial
lemma new_lemma_158414 (h2 : topological_space (complete_semilattice_Sup (normed_group (has_emptyc congr_arg_kind)))) : irreducible_space (complete_semilattice_Sup (normed_group (has_emptyc congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_158415 (h0 : complete_lattice (has_compl linarith.comp_source)) : is_compactly_generated (has_compl linarith.comp_source) := sorry --non-trivial
lemma new_lemma_158416 (h0 : uniform_space (ordered_cancel_add_comm_monoid (option ennreal))) : separated_space (ordered_cancel_add_comm_monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_158417 (h0 : not (ring (comm_ring fun_info) -> false)) : @rank_condition.{0} (comm_ring.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (comm_ring.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_158418 (h0 : fin has_zero.zero) : @path_connected_space.{0} (ordered_comm_monoid.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (ordered_comm_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_158419 (h0 : functor.add_const (complete_lattice pos) (mul_zero_class (has_add pos))) : @complete_lattice.is_Sup_finite_compact.{0} pos (@functor.add_const.run.{0 0} (complete_lattice.{0} pos) (mul_zero_class.{0} (has_add.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_158420 (h0 : functor.add_const (topological_space (semigroup Type)) pos) : @discrete_topology.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (semigroup.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_158421 (h0 : cancel_comm_monoid_with_zero (has_add (ordered_comm_monoid (ordered_comm_monoid pos)))) : unique_factorization_monoid (has_add (ordered_comm_monoid (ordered_comm_monoid pos))) := sorry --non-trivial
lemma new_lemma_158422 (h0 : topological_space (has_to_string (has_neg_part Type))) : locally_compact_space (has_to_string (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_158423 (h0 : add_comm_group (linear_ordered_add_comm_group linarith.comp_source)) (h1 : has_norm (linear_ordered_add_comm_group linarith.comp_source)) : normed_group.core (linear_ordered_add_comm_group linarith.comp_source) := sorry --non-trivial
lemma new_lemma_158424 (h0 : topological_space (non_assoc_semiring (semiring (semiring (semiring (semiring (semiring num))))))) : irreducible_space (non_assoc_semiring (semiring (semiring (semiring (semiring (semiring num)))))) := sorry --non-trivial
lemma new_lemma_158425 (h0 : functor.add_const (topological_space (has_pos_part pos)) linarith.comp) : @regular_space.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_pos_part.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158426 (h0 : monoid (mul_zero_class pos)) : monoid.fg (mul_zero_class pos) := sorry --non-trivial
lemma new_lemma_158427 (h0 : topological_space (boolean_algebra (has_Inf Type))) : totally_separated_space (boolean_algebra (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_158428 (h0 : topological_space (semi_normed_comm_ring linarith.comp_source)) : t0_space (semi_normed_comm_ring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_158429 (h0 : functor.add_const (topological_space (finset unsigned)) unsigned) : @path_connected_space.{0} (finset.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158430 (h1 : ring (semi_normed_comm_ring (random_gen (has_ssubset (random_gen char))))) : strong_rank_condition (semi_normed_comm_ring (random_gen (has_ssubset (random_gen char)))) := sorry --non-trivial
lemma new_lemma_158431 (h0 : topological_space (as_linear_order (has_norm empty))) : normal_space (as_linear_order (has_norm empty)) := sorry --non-trivial
lemma new_lemma_158432 (h0 : not (uniform_space (has_sub congr_arg_kind) -> false)) : @separated_space.{0} (has_sub.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (uniform_space.{0} (has_sub.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_158433 (h0 : functor.add_const (topological_space (free_add_monoid unsigned)) unsigned) : @t0_space.{0} (free_add_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (free_add_monoid.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158434 (h0 : multiset (uniform_space linarith.comp_source)) (h1 : nat) (h2 : vector (multiset (uniform_space linarith.comp_source)) (has_add.add h1 has_one.one)) : multiset.disjoint h0 (vector.last h2) := sorry --non-trivial
lemma new_lemma_158435 (h0 : topological_space (normed_comm_ring (option empty))) : irreducible_space (normed_comm_ring (option empty)) := sorry --non-trivial
lemma new_lemma_158436 (h1 : list (has_emptyc (random_gen linarith.comp_source))) : list.nodup h1 := sorry --non-trivial
lemma new_lemma_158437 (h0 : functor.add_const (ordered_add_comm_monoid (semigroup pos)) Type) : @archimedean.{0} (semigroup.{0} pos) (@functor.add_const.run.{0 1} (ordered_add_comm_monoid.{0} (semigroup.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_158438 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (linear_ordered_field.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (linear_ordered_field.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158439 (h0 : functor.add_const (topological_space (add_cancel_monoid environment.implicit_infer_kind)) Type) : @topological_space.separable_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (topological_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_158440 (h0 : functor.add_const (function.extfun (Type 1) uniform_space) linarith.comp) : @separated_space.{1} (normed_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) uniform_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) uniform_space.{1}) linarith.comp h0) (normed_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_158441 (h0 : uniform_space (normed_group linarith.comp)) : complete_space (normed_group linarith.comp) := sorry --non-trivial
lemma new_lemma_158442 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (group_with_zero.{0} ennreal) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (group_with_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_158443 (h0 : topological_space (has_add (has_nnnorm (has_inv (plift fun_info))))) : totally_disconnected_space (has_add (has_nnnorm (has_inv (plift fun_info)))) := sorry --non-trivial
lemma new_lemma_158444 (h0 : ring (comm_ring (distrib_lattice string_imp))) : rank_condition (comm_ring (distrib_lattice string_imp)) := sorry --non-trivial
lemma new_lemma_158445 (h0 : topological_space (add_cancel_monoid (finset (has_add ennreal)))) : locally_compact_space (add_cancel_monoid (finset (has_add ennreal))) := sorry --non-trivial
lemma new_lemma_158446 (h0 : monoid string_imp) (h1 : complete_lattice (star_monoid string_imp)) : complete_lattice.is_Sup_finite_compact (star_monoid string_imp) := sorry --non-trivial
lemma new_lemma_158447 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (has_add.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_add.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158448 (h0 : filter (has_neg (boolean_algebra unsigned))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_158449 (h0 : linear_ordered_field (option (option (option pos))) -> linear_ordered_field (option (option (option pos))) -> Prop) : is_symm (linear_ordered_field (option (option (option pos)))) h0 := sorry --non-trivial
lemma new_lemma_158450 (h0 : functor.add_const (functor.add_const (function.extfun Type group) linarith.comp) (finset linarith.comp)) : @group.fg.{0} (has_zero.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) linarith.comp (@functor.add_const.run.{1 0} (functor.add_const.{1 0} (function.extfun.{2 1} Type group.{0}) linarith.comp) (finset.{0} linarith.comp) h0)) (has_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_158451 (h0 : filter (linear_ordered_comm_ring (semiring unsigned))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_158452 (h0 : functor.add_const (monoid (linear_order Type)) (ring (has_zero (ring (has_to_string Type))))) : @monoid.fg.{1} (linear_order.{1} Type) (@functor.add_const.run.{1 1} (monoid.{1} (linear_order.{1} Type)) (ring.{1} (has_zero.{1} (ring.{1} (has_to_string.{1} Type)))) h0)  := sorry --non-trivial
lemma new_lemma_158453 (h0 : topological_space (add_comm_monoid (finset (sub_neg_monoid real)))) : t1_space (add_comm_monoid (finset (sub_neg_monoid real))) := sorry --non-trivial
lemma new_lemma_158454 (h0 : has_mem.mem ring has_emptyc.emptyc) : @strong_rank_condition.{0} real.angle (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} h0) real.angle)  := sorry --non-trivial
lemma new_lemma_158455 (h0 : semiring (has_append to_additive.value_type)) (h1 : not (ideal (has_append to_additive.value_type) -> false)) : ideal.is_prime (classical.by_contradiction' h1) := sorry --non-trivial
lemma new_lemma_158456 (h0 : not (ring (distrib_lattice complex) -> false)) : @is_domain.{0} (distrib_lattice.{0} complex) (@classical.by_contradiction'.{1} (ring.{0} (distrib_lattice.{0} complex)) h0)  := sorry --non-trivial
lemma new_lemma_158457 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (ordered_cancel_add_comm_monoid.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_cancel_add_comm_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_158458 (h0 : filter (has_emptyc (has_top (has_top num)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_158459 (h0 : uniform_space (has_neg ennreal)) : complete_space (has_neg ennreal) := sorry --non-trivial
lemma new_lemma_158460 (h0 : topological_space (ring (has_neg (has_neg (has_to_string Type))))) : normal_space (ring (has_neg (has_neg (has_to_string Type)))) := sorry --non-trivial
lemma new_lemma_158461 (h0 : list linarith.comp) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_158462 (h0 : complete_lattice (has_le (mul_one_class fun_info))) : complete_lattice.is_Sup_finite_compact (has_le (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_158463 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @monoid.fg.{0} (monoid.{0} empty) (@function.extfun_app.{2 1} Type monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 monoid.{0}) (monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_158464 (h0 : topological_space char) (h1 : topological_space (ultrafilter (metric_space (topological_space.compacts char)))) (h2 : preorder (ultrafilter (metric_space (topological_space.compacts char)))) : order_closed_topology (ultrafilter (metric_space (topological_space.compacts char))) := sorry --non-trivial
lemma new_lemma_158465 (h1 : complete_lattice (with_one (has_top linarith.comp_source))) : is_compactly_generated (with_one (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_158466 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : functor.add_const.run (function.extfun_app (function.extfun_app h0 (functor.add_const Prop)) znum) := sorry --non-trivial
lemma new_lemma_158467 (h0 : functor.comp uniform_space canonically_ordered_comm_semiring name) : @complete_space.{0} (canonically_ordered_comm_semiring.{0} name) (@functor.comp.run.{0 0 0} uniform_space.{0} canonically_ordered_comm_semiring.{0} name h0)  := sorry --non-trivial
lemma new_lemma_158468 (h1 : topological_space (normed_field to_additive.value_type)) (h2 : preorder (normed_field to_additive.value_type)) : order_closed_topology (normed_field to_additive.value_type) := sorry --non-trivial
lemma new_lemma_158469 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preconnected_space.{0} (add_cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_158470 (h0 : functor.add_const (ordered_comm_monoid (comm_group linarith.comp)) (has_add pos)) : @has_exists_mul_of_le.{0} (comm_group.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (comm_group.{0} linarith.comp)) (has_add.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_158471 (h0 : cancel_comm_monoid_with_zero (plift (semiring (semiring (semiring num))))) : unique_factorization_monoid (plift (semiring (semiring (semiring num)))) := sorry --non-trivial
lemma new_lemma_158472 (h0 : topological_space (topological_space (has_lt linarith.ineq))) : t0_space (topological_space (has_lt linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158473 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (has_add.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_add.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_158474 (h0 : functor.add_const (topological_space (semigroup linarith.comp)) linarith.comp) : @sequential_space.{0} (semigroup.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158475 (h0 : function.extfun Type topological_space) : @preconnected_space.{0} (ring.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} num))  := sorry --non-trivial
lemma new_lemma_158476 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (encodable.{0} char) (@function.extfun_app.{2 1} Type ring.{0} h0 (encodable.{0} char))  := sorry --non-trivial
lemma new_lemma_158477 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem ring)) : @is_domain.{0} (linear_ordered_semiring.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) ring.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (linear_ordered_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_158478 (h1 : has_mem.mem (measurable_space congr_arg_kind) has_emptyc.emptyc) : @totally_disconnected_space.{0} (measurable_space.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type topological_space.{0} (measurable_space.{0} congr_arg_kind) h1)  := sorry --non-trivial
lemma new_lemma_158479 (h0 : add_group (has_to_string pos)) : is_add_cyclic (has_to_string pos) := sorry --non-trivial
lemma new_lemma_158480 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} environment.implicit_infer_kind (@function.extfun_app.{2 1} Type topological_space.{0} h0 environment.implicit_infer_kind)  := sorry --non-trivial
lemma new_lemma_158481 (h0 : functor.add_const (topological_space (has_neg_part unsigned)) linarith.comp) : @discrete_topology.{0} (has_neg_part.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158482 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (linear_ordered_field.{0} unsigned) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (linear_ordered_field.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158483 (h0 : functor.add_const (topological_space (has_neg name)) name) : @totally_separated_space.{0} (has_neg.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_158484 (h0 : topological_space (has_nnnorm (has_nnnorm (has_nnnorm reducibility_hints)))) : t0_space (has_nnnorm (has_nnnorm (has_nnnorm reducibility_hints))) := sorry --non-trivial
lemma new_lemma_158485 (h0 : uniform_space (has_neg name)) : separated_space (has_neg name) := sorry --non-trivial
lemma new_lemma_158486 (h1 : topological_space (random_gen (random_gen char))) : path_connected_space (random_gen (random_gen char)) := sorry --non-trivial
lemma new_lemma_158487 (h0 : add_monoid (has_zero (has_add (finset (finset (finset (has_to_string pos))))))) : add_monoid.fg (has_zero (has_add (finset (finset (finset (has_to_string pos)))))) := sorry --non-trivial
lemma new_lemma_158488 (h0 : functor.add_const (topological_space (preorder num)) (semiring num)) : @topological_space.separable_space.{0} (preorder.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (preorder.{0} num)) (semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_158489 (h0 : functor.add_const (group (boolean_algebra name)) pos) : @is_cyclic.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (group.{0} (boolean_algebra.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_158490 (h0 : group (has_union (add_group (semiring num)))) : is_cyclic (has_union (add_group (semiring num))) := sorry --non-trivial
lemma new_lemma_158491 (h0 : functor.add_const (monoid (boolean_algebra.core unsigned)) (boolean_algebra pos)) : @monoid.fg.{0} (boolean_algebra.core.{0} unsigned) (@functor.add_const.run.{0 0} (monoid.{0} (boolean_algebra.core.{0} unsigned)) (boolean_algebra.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_158492 (h0 : list (ring (boolean_algebra linarith.comp))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_158493 (h0 : topological_space (ordered_comm_monoid (generalized_boolean_algebra linarith.comp))) : locally_compact_space (ordered_comm_monoid (generalized_boolean_algebra linarith.comp)) := sorry --non-trivial
lemma new_lemma_158494 (h0 : functor.add_const (complete_lattice (semigroup unsigned)) unsigned) : @is_atomistic.{0} (semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (semigroup.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158495 (h0 : functor.add_const (ordered_add_comm_monoid (complete_distrib_lattice pos)) (complete_distrib_lattice (ring name))) : @archimedean.{0} (complete_distrib_lattice.{0} pos) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (complete_distrib_lattice.{0} pos)) (complete_distrib_lattice.{0} (ring.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_158496 (h0 : functor.add_const (filter (has_zero linarith.comp)) (has_neg (finset environment.implicit_infer_kind))) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_158497 (h0 : functor.add_const (topological_space (has_add linarith.comp)) pos) : @regular_space.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_158498 (h0 : topological_space (ring linarith.comp)) : totally_disconnected_space (ring linarith.comp) := sorry --non-trivial
lemma new_lemma_158499 (h0 : functor.add_const (function.extfun Type topological_space) pos) : @topological_space.separable_space.{0} (has_neg.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos h0) (has_neg.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_158500 (h0 : not (ring (linear_ordered_comm_group_with_zero reducibility_hints) -> false)) : @strong_rank_condition.{0} (linear_ordered_comm_group_with_zero.{0} reducibility_hints) (@classical.by_contradiction'.{1} (ring.{0} (linear_ordered_comm_group_with_zero.{0} reducibility_hints)) h0)  := sorry --non-trivial
lemma new_lemma_158501 (h0 : topological_space (has_zero (has_add (measurable_space linarith.comp)))) : loc_path_connected_space (has_zero (has_add (measurable_space linarith.comp))) := sorry --non-trivial
lemma new_lemma_158502 (h0 : topological_space (has_zero (normed_comm_ring environment.implicit_infer_kind))) : path_connected_space (has_zero (normed_comm_ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_158503 (h0 : functor.add_const (ordered_add_comm_monoid (canonically_ordered_add_monoid unsigned)) unsigned) : @archimedean.{0} (canonically_ordered_add_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (canonically_ordered_add_monoid.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158504 (h0 : functor.add_const (finset (ring name)) linarith.comp) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_158505 (h0 : topological_space (free_add_monoid empty)) : path_connected_space (free_add_monoid empty) := sorry --non-trivial
lemma new_lemma_158506 (h0 : functor.add_const (group (has_Inf Type)) linarith.comp) : @group.fg.{1} (has_Inf.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (has_Inf.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158507 (h0 : has_mem.mem ring has_emptyc.emptyc) : @is_domain.{0} (has_emptyc.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} h0) (has_emptyc.{0} empty))  := sorry --non-trivial
lemma new_lemma_158508 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (has_top.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_top.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_158509 (h0 : functor.add_const (ring (has_zero Type)) Type) : @rank_condition.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 1} (ring.{1} (has_zero.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_158510 (h0 : group (has_add fun_info)) : is_cyclic (has_add fun_info) := sorry --non-trivial
lemma new_lemma_158511 (h0 : uniform_space (ordered_comm_ring (has_add (has_add linarith.comp)))) : separated_space (ordered_comm_ring (has_add (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_158512 (h0 : topological_space (cancel_monoid (finset Type))) : topological_space.separable_space (cancel_monoid (finset Type)) := sorry --non-trivial
lemma new_lemma_158513 (h0 : topological_space (linear_ordered_cancel_comm_monoid (option (semiring empty)))) : path_connected_space (linear_ordered_cancel_comm_monoid (option (semiring empty))) := sorry --non-trivial
lemma new_lemma_158514 (h0 : functor.add_const (function.extfun (Type 1) ring) Type) : @is_principal_ideal_ring.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) ring.{1}) Type h0) (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_158515 (h0 : ordered_add_comm_monoid (canonically_ordered_comm_semiring (option ennreal))) : archimedean (canonically_ordered_comm_semiring (option ennreal)) := sorry --non-trivial
lemma new_lemma_158516 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (has_add pos)) := sorry --non-trivial
lemma new_lemma_158517 (h0 : topological_space (topological_space (has_top (random_gen fun_info)))) : locally_compact_space (topological_space (has_top (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_158518 (h1 : topological_space (has_norm fun_info)) : t0_space (has_norm fun_info) := sorry --non-trivial
lemma new_lemma_158519 (h0 h1 : multiset fun_info) : multiset.le h0 h1 := sorry --non-trivial
lemma new_lemma_158520 (h0 : add_group (normed_field (normed_field (has_nnnorm fun_info)))) : is_add_cyclic (normed_field (normed_field (has_nnnorm fun_info))) := sorry --non-trivial
lemma new_lemma_158521 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (add_comm_monoid.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_comm_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_158522 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (has_to_string.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (has_to_string.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158523 (h0 : group (normed_group (has_norm empty))) : group.fg (normed_group (has_norm empty)) := sorry --non-trivial
lemma new_lemma_158524 (h0 : functor.add_const (topological_space (boolean_algebra Type)) (comm_group Type)) : @t1_space.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (boolean_algebra.{1} Type)) (comm_group.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_158525 (h0 : not (complete_lattice (has_emptyc to_additive.value_type) -> false)) : @is_atomistic.{0} (has_emptyc.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (complete_lattice.{0} (has_emptyc.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_158526 (h0 : topological_space (fintype (linear_ordered_add_comm_group (has_top (has_top fun_info))))) : locally_compact_space (fintype (linear_ordered_add_comm_group (has_top (has_top fun_info)))) := sorry --non-trivial
lemma new_lemma_158527 (h1 : topological_space (simple_graph ereal)) : totally_disconnected_space (simple_graph ereal) := sorry --non-trivial
lemma new_lemma_158528 (h0 : order_hom nat Prop) : @monotonic_sequence_limit.{0} Prop (@complete_semilattice_Inf.to_partial_order.{0} Prop (@complete_lattice.to_complete_semilattice_Inf.{0} Prop Prop.complete_lattice)) h0  := sorry --non-trivial
lemma new_lemma_158529 (h0 : functor.add_const (function.extfun Type add_group) (has_neg environment.implicit_infer_kind)) : @is_add_cyclic.{0} (has_zero.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type add_group.{0}) (has_neg.{0} environment.implicit_infer_kind) h0) (has_zero.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_158530 (h1 : function.extfun Type topological_space) : @path_connected_space.{0} (with_bot.{0} string_imp) (@function.extfun_app.{2 1} Type topological_space.{0} h1 (with_bot.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_158531 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (semiring.{0} num) (@function.extfun_app.{2 1} Type monoid.{0} h0 (semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_158532 (h0 : complete_lattice auto.case_option) : is_atomistic auto.case_option := sorry --non-trivial
lemma new_lemma_158533 (h0 : add_monoid (partial_order congr_arg_kind)) : add_monoid.fg (partial_order congr_arg_kind) := sorry --non-trivial
lemma new_lemma_158534 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (ring name)) := sorry --non-trivial
lemma new_lemma_158535 (h0 : group (semigroup (semigroup (semigroup name)))) : group.fg (semigroup (semigroup (semigroup name))) := sorry --non-trivial
lemma new_lemma_158536 (h0 : ring (distrib_lattice (has_nnnorm (has_nnnorm (has_nnnorm linarith.ineq))))) : is_domain (distrib_lattice (has_nnnorm (has_nnnorm (has_nnnorm linarith.ineq)))) := sorry --non-trivial
lemma new_lemma_158537 (h0 : topological_space (has_neg_part (option (option name)))) : discrete_topology (has_neg_part (option (option name))) := sorry --non-trivial
lemma new_lemma_158538 (h0 : ring (linear_ordered_add_comm_group_with_top string_imp)) : strong_rank_condition (linear_ordered_add_comm_group_with_top string_imp) := sorry --non-trivial
lemma new_lemma_158539 (h0 : add_group (has_bot empty)) : is_add_cyclic (has_bot empty) := sorry --non-trivial
lemma new_lemma_158540 (h0 : add_group (with_bot (has_inv (has_inv fun_info)))) : is_add_cyclic (with_bot (has_inv (has_inv fun_info))) := sorry --non-trivial
lemma new_lemma_158541 (h0 : topological_space (measure_theory.measure_space (has_top unsigned))) : preirreducible_space (measure_theory.measure_space (has_top unsigned)) := sorry --non-trivial
lemma new_lemma_158542 (h0 : measurable_space (measurable_space.dynkin_system unsigned)) (h1 : has_mul (measurable_space.dynkin_system unsigned)) : has_measurable_mul₂ (measurable_space.dynkin_system unsigned) := sorry --non-trivial
lemma new_lemma_158543 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (mul_zero_class.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (mul_zero_class.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_158544 (h0 : functor.add_const (add_group (has_neg_part Type)) Type) : @is_add_cyclic.{1} (has_neg_part.{1} Type) (@functor.add_const.run.{1 1} (add_group.{1} (has_neg_part.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_158545 (h0 : preorder (has_bot pos)) (h1 : topological_space (has_bot pos)) : Inf_convergence_class (has_bot pos) := sorry --non-trivial
lemma new_lemma_158546 (h2 : ring (add_right_cancel_monoid to_additive.value_type)) : rank_condition (add_right_cancel_monoid to_additive.value_type) := sorry --non-trivial
lemma new_lemma_158547 (h0 : has_lt (mul_one_class (has_neg_part to_additive.value_type))) : no_max_order (mul_one_class (has_neg_part to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_158548 (h0 : uniform_space (with_bot (has_norm congr_arg_kind))) : complete_space (with_bot (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_158549 (h0 : filter (boolean_algebra (finset pos))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_158550 (h0 : add_group (complete_semilattice_Sup (has_inv (has_top to_additive.value_type)))) : is_add_cyclic (complete_semilattice_Sup (has_inv (has_top to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_158551 (h0 : complete_lattice (id (has_norm congr_arg_kind))) : complete_lattice.is_Sup_finite_compact (id (has_norm congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_158552 (h0 : functor.add_const (group (comm_group name)) name) : @normalizer_condition.{0} (comm_group.{0} name) (@functor.add_const.run.{0 0} (group.{0} (comm_group.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_158553 (h0 : monoid (ordered_comm_monoid (finset pos))) : monoid.fg (ordered_comm_monoid (finset pos)) := sorry --non-trivial
lemma new_lemma_158554 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (finset.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type semiring.{0} h0 (finset.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_158555 (h0 : complete_lattice (distrib_lattice string_imp)) : is_compactly_generated (distrib_lattice string_imp) := sorry --non-trivial
lemma new_lemma_158556 (h0 : group (monoid (option unsigned))) : is_cyclic (monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_158557 (h0 : set (has_compl (mul_one_class enat))) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_158558 (h0 : monoid (measure_theory.measure_space num)) : monoid.fg (measure_theory.measure_space num) := sorry --non-trivial
lemma new_lemma_158559 (h0 : functor.add_const (add_monoid (mul_zero_class environment.implicit_infer_kind)) pos) : @add_monoid.fg.{0} (mul_zero_class.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (add_monoid.{0} (mul_zero_class.{0} environment.implicit_infer_kind)) pos h0)  := sorry --non-trivial
lemma new_lemma_158560 (h0 : ring (complete_semilattice_Sup (has_emptyc congr_arg_kind))) : strong_rank_condition (complete_semilattice_Sup (has_emptyc congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_158561 (h0 : topological_space (partial_order congr_arg_kind)) : loc_path_connected_space (partial_order congr_arg_kind) := sorry --non-trivial
lemma new_lemma_158562 (h0 : functor.add_const (filter (has_to_string name)) linarith.comp) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_158563 (h0 : has_mem.mem (linear_ordered_add_comm_group (has_top linarith.comp_source)) has_emptyc.emptyc) : @irreducible_space.{0} (linear_ordered_add_comm_group.{0} (has_top.{0} linarith.comp_source)) (@finset.pi.empty.{1 0} Type topological_space.{0} (linear_ordered_add_comm_group.{0} (has_top.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_158564 (h1 : uniform_space (with_bot string_imp)) : complete_space (with_bot string_imp) := sorry --non-trivial
lemma new_lemma_158565 (h0 : functor.add_const (group (semigroup Type)) unsigned) : @is_cyclic.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (semigroup.{1} Type)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158566 (h0 : functor.add_const (semiring (plift num)) empty) : @is_noetherian_ring.{1} (plift.{1} num) (@functor.add_const.run.{1 0} (semiring.{1} (plift.{1} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_158567 (h0 : not (function.extfun Type topological_space -> false)) : @totally_separated_space.{0} (with_one.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (with_one.{0} num))  := sorry --non-trivial
lemma new_lemma_158568 (h0 : functor.add_const (topological_space (has_pos_part pos)) (ring (has_add pos))) : @locally_compact_space.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_pos_part.{0} pos)) (ring.{0} (has_add.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_158569 (h0 : function.extfun Type topological_space) : @topological_space.separable_space.{0} (add_comm_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_comm_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158570 (h0 : function.extfun nat fin) : @sequential_space.{0} (ordered_comm_ring.{0} pos) (@matrix.vec_empty.{0} (topological_space.{0} (ordered_comm_ring.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_158571 (h0 : not (function.extfun Type complete_lattice -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (semiring.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_158572 (h0 : functor.add_const (function.extfun Type finset) unsigned) : finset.nonempty (function.extfun_app (functor.add_const.run h0) (add_comm_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_158573 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (finset empty)) := sorry --non-trivial
lemma new_lemma_158574 (h0 : topological_space (linear_ordered_comm_group (option empty))) : topological_space.separable_space (linear_ordered_comm_group (option empty)) := sorry --non-trivial
lemma new_lemma_158575 (h0 : functor.add_const (function.extfun Type add_monoid) congr_arg_kind) : @add_monoid.fg.{0} (has_star.{0} num) (@function.extfun_app.{2 1} Type add_monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type add_monoid.{0}) congr_arg_kind h0) (has_star.{0} num))  := sorry --non-trivial
lemma new_lemma_158576 (h0 : ordered_add_comm_monoid (has_pos_part (ring (has_add linarith.comp)))) : archimedean (has_pos_part (ring (has_add linarith.comp))) := sorry --non-trivial
lemma new_lemma_158577 (h2 : ring (fintype fun_info)) : strong_rank_condition (fintype fun_info) := sorry --non-trivial
lemma new_lemma_158578 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (group_with_zero.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type add_group.{0} h0 (group_with_zero.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158579 (h0 : fin has_zero.zero) : @regular_space.{1} (has_Inf.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (has_Inf.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_158580 (h0 : functor.add_const (finset (boolean_algebra.core environment.implicit_infer_kind)) name) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_158581 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_bot.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_bot.{0} empty))  := sorry --non-trivial
lemma new_lemma_158582 (h0 : add_group (mul_one_class fun_info)) : is_add_cyclic (mul_one_class fun_info) := sorry --non-trivial
lemma new_lemma_158583 (h0 : topological_space auto.case_option) : irreducible_space auto.case_option := sorry --non-trivial
lemma new_lemma_158584 (h0 : complete_lattice (has_Sup (semiring (semiring empty)))) : is_compactly_generated (has_Sup (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_158585 (h0 : topological_space (with_bot (semiring congr_arg_kind))) : t0_space (with_bot (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_158586 (h0 : topological_space (random_gen to_additive.value_type)) : t0_space (random_gen to_additive.value_type) := sorry --non-trivial
lemma new_lemma_158587 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (metric_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (metric_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158588 (h0 : Prop -> num) (h1 : coe_sort (set.range h0)) : set.range_splitting h0 h1 := sorry --non-trivial
lemma new_lemma_158589 (h0 : topological_space (has_Sup unsigned)) : discrete_topology (has_Sup unsigned) := sorry --non-trivial
lemma new_lemma_158590 (h1 : topological_space (distrib (denumerable (metric_space (metric_space to_additive.value_type))))) : path_connected_space (distrib (denumerable (metric_space (metric_space to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_158591 (h2 : topological_space (random_gen string_imp)) : totally_disconnected_space (random_gen string_imp) := sorry --non-trivial
lemma new_lemma_158592 (h0 : ring (plift (bin_tree (option unsigned)))) : strong_rank_condition (plift (bin_tree (option unsigned))) := sorry --non-trivial
lemma new_lemma_158593 (h0 : topological_space (has_bot (has_add (sub_neg_monoid (has_add (sub_neg_monoid (has_bot real))))))) : preirreducible_space (has_bot (has_add (sub_neg_monoid (has_add (sub_neg_monoid (has_bot real)))))) := sorry --non-trivial
lemma new_lemma_158594 (h0 : functor.add_const (topological_space (add_cancel_monoid linarith.comp)) Type) : @loc_path_connected_space.{0} (add_cancel_monoid.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (add_cancel_monoid.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_158595 (h0 : complete_lattice (cancel_monoid (option empty))) : is_compactly_generated (cancel_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_158596 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (has_ssubset.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_ssubset.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_158597 (h0 : prod (cancel_monoid ennreal) (cancel_monoid ennreal)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_158598 (h0 : list (ring (option (option pos)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_158599 (h0 : ring (cancel_monoid (semigroup name))) : is_domain (cancel_monoid (semigroup name)) := sorry --non-trivial
lemma new_lemma_158600 (h0 : complete_lattice (random_gen (has_ssubset linarith.ineq))) : complete_lattice.is_Sup_finite_compact (random_gen (has_ssubset linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158601 (h0 : topological_space (ordered_comm_monoid (has_Inf name))) : preirreducible_space (ordered_comm_monoid (has_Inf name)) := sorry --non-trivial
lemma new_lemma_158602 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (has_ssubset.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_ssubset.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_158603 (h0 : functor.add_const (topological_space (has_zero pos)) linarith.comp) : @irreducible_space.{0} (has_zero.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158604 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (has_emptyc linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_158605 (h0 : ring (has_ssubset (mul_one_class string_imp))) : is_domain (has_ssubset (mul_one_class string_imp)) := sorry --non-trivial
lemma new_lemma_158606 (h0 : group (has_norm (has_top linarith.comp_source))) : group.fg (has_norm (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_158607 (h0 : add_group (parser congr_arg_kind)) : is_add_cyclic (parser congr_arg_kind) := sorry --non-trivial
lemma new_lemma_158608 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (finset.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (finset.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_158609 (h0 : function.extfun Type topological_space) : @normal_space.{0} (semiring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semiring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_158610 (h0 : not (function.extfun Type finset -> false)) : finset.nonempty (function.extfun_app (classical.by_contradiction' h0) (option congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_158611 (h0 : topological_space (boolean_algebra (has_add linarith.comp))) : t0_space (boolean_algebra (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_158612 (h0 : topological_space (ordered_comm_monoid (has_nndist Type))) : preconnected_space (ordered_comm_monoid (has_nndist Type)) := sorry --non-trivial
lemma new_lemma_158613 (h0 : functor.add_const (topological_space (has_add real)) real) : @t1_space.{0} (has_add.{0} real) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} real)) real h0)  := sorry --non-trivial
lemma new_lemma_158614 (h0 : topological_space (non_unital_non_assoc_semiring fun_info)) (h1 : add_group (non_unital_non_assoc_semiring fun_info)) : topological_add_group (non_unital_non_assoc_semiring fun_info) := sorry --non-trivial
lemma new_lemma_158615 (h0 : topological_space (has_zero (finset (finset (finset linarith.comp))))) : regular_space (has_zero (finset (finset (finset linarith.comp)))) := sorry --non-trivial
lemma new_lemma_158616 (h0 : topological_space (with_one (semiring (has_top (semiring unsigned))))) : locally_compact_space (with_one (semiring (has_top (semiring unsigned)))) := sorry --non-trivial
lemma new_lemma_158617 (h0 : topological_space (has_add (boolean_algebra.core (boolean_algebra.core pos)))) : totally_disconnected_space (has_add (boolean_algebra.core (boolean_algebra.core pos))) := sorry --non-trivial
lemma new_lemma_158618 (h0 : group (semiring (has_top (has_top linarith.ineq)))) : normalizer_condition (semiring (has_top (has_top linarith.ineq))) := sorry --non-trivial
lemma new_lemma_158619 (h0 : functor.add_const (topological_space (left_cancel_semigroup unsigned)) unsigned) : @totally_disconnected_space.{0} (left_cancel_semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (left_cancel_semigroup.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158620 (h0 : topological_space (has_neg (has_add (finset (finset linarith.comp))))) : t0_space (has_neg (has_add (finset (finset linarith.comp)))) := sorry --non-trivial
lemma new_lemma_158621 (h0 : not (topological_space (normed_field linarith.ineq) -> false)) : @totally_disconnected_space.{0} (normed_field.{0} linarith.ineq) (@classical.by_contradiction'.{1} (topological_space.{0} (normed_field.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_158622 (h0 : list (plift (filter unsigned))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_158623 (h0 : complete_lattice (finset (has_pos_part linarith.comp))) : complete_lattice.is_Sup_finite_compact (finset (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_158624 (h0 : functor.add_const (topological_space (semigroup Type)) pos) : @preconnected_space.{1} (semigroup.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (semigroup.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_158625 (h0 : functor.add_const (group (ring environment.implicit_infer_kind)) linarith.comp) : @is_simple_group.{0} (ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (ring.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158626 (h0 : topological_space (semigroup (has_zero linarith.comp))) : t1_space (semigroup (has_zero linarith.comp)) := sorry --non-trivial
lemma new_lemma_158627 (h0 : not (function.extfun Type topological_space -> false)) : @totally_disconnected_space.{0} (add_right_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (add_right_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_158628 (h0 : topological_space (boolean_algebra.core (option ennreal))) : loc_path_connected_space (boolean_algebra.core (option ennreal)) := sorry --non-trivial
lemma new_lemma_158629 (h0 : ring (normed_field (semi_normed_ring linarith.comp_source))) : rank_condition (normed_field (semi_normed_ring linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_158630 (h0 : uniform_space (canonically_ordered_monoid (sub_neg_monoid (has_pos_part (has_pos_part pos))))) : separated_space (canonically_ordered_monoid (sub_neg_monoid (has_pos_part (has_pos_part pos)))) := sorry --non-trivial
lemma new_lemma_158631 (h0 : functor.add_const (topological_space (finset environment.implicit_infer_kind)) unsigned) : @regular_space.{0} (finset.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} environment.implicit_infer_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158632 (h3 : ring (add_monoid fun_info)) : strong_rank_condition (add_monoid fun_info) := sorry --non-trivial
lemma new_lemma_158633 (h0 : topological_space (has_add (finset linarith.comp))) : preconnected_space (has_add (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_158634 (h0 : semiring (sub_neg_monoid (finset pos))) : is_noetherian_ring (sub_neg_monoid (finset pos)) := sorry --non-trivial
lemma new_lemma_158635 (h0 : function.extfun Type group) : @is_cyclic.{0} (linear_ordered_semiring.{0} num) (@function.extfun_app.{2 1} Type group.{0} h0 (linear_ordered_semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_158636 (h0 : topological_space (add_comm_monoid (has_add unsigned))) : t1_space (add_comm_monoid (has_add unsigned)) := sorry --non-trivial
lemma new_lemma_158637 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (mul_zero_class.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (mul_zero_class.{0} pos))  := sorry --non-trivial
lemma new_lemma_158638 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring unsigned)) linarith.comp) : @topological_space.separable_space.{0} (canonically_ordered_comm_semiring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_comm_semiring.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158639 (h0 : functor.add_const (filter (has_nndist environment.implicit_infer_kind)) environment.implicit_infer_kind) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_158640 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (canonically_ordered_monoid name)) := sorry --non-trivial
lemma new_lemma_158641 (h0 : uniform_space (add_monoid reducibility_hints)) : complete_space (add_monoid reducibility_hints) := sorry --non-trivial
lemma new_lemma_158642 (h0 : uniform_space (linear_ordered_comm_ring (semiring empty))) : separated_space (linear_ordered_comm_ring (semiring empty)) := sorry --non-trivial
lemma new_lemma_158643 (h0 : add_group (normed_lattice_add_comm_group (has_Inf (has_Inf (has_add (has_add pos)))))) : is_add_cyclic (normed_lattice_add_comm_group (has_Inf (has_Inf (has_add (has_add pos))))) := sorry --non-trivial
lemma new_lemma_158644 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (pseudo_metric_space unsigned)) := sorry --non-trivial
lemma new_lemma_158645 (h0 : function.extfun (finset Type) (has_mem.mem (with_bot empty))) : @is_domain.{0} (with_bot.{0} empty) (@finset.pi.empty.{1 0} Type ring.{0} (with_bot.{0} empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_bot.{0} empty)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_158646 (h0 : finset (measure_theory.measure_space empty)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_158647 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t1_space.{0} (sub_neg_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (sub_neg_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_158648 (h0 : list (cancel_monoid (option pos))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_158649 (h0 : topological_space (partial_order (semiring congr_arg_kind))) : locally_compact_space (partial_order (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_158650 (h0 : functor.add_const (add_monoid (has_nndist pos)) unsigned) : @add_monoid.fg.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 0} (add_monoid.{0} (has_nndist.{0} pos)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158651 (h0 : topological_space (generalized_boolean_algebra name)) : totally_separated_space (generalized_boolean_algebra name) := sorry --non-trivial
lemma new_lemma_158652 (h0 : functor.add_const (ordered_add_comm_monoid (has_Sup unsigned)) congr_arg_kind) : @archimedean.{0} (has_Sup.{0} unsigned) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (has_Sup.{0} unsigned)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_158653 (h0 : measurable_space fun_info) (h1 : has_mul fun_info) (h2 : not (measure_theory.measure fun_info -> false)) : measure_theory.measure.is_mul_left_invariant (classical.by_contradiction' h2) := sorry --non-trivial
lemma new_lemma_158654 (h0 : group (boolean_algebra.core (option (option pos)))) : is_cyclic (boolean_algebra.core (option (option pos))) := sorry --non-trivial
lemma new_lemma_158655 (h0 : list (has_neg (option (option ennreal)))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_158656 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (normed_group.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (normed_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158657 (h0 : filter (id num)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_158658 (h0 : functor.add_const (ring (has_pos_part pos)) (has_neg (has_add Type))) : @rank_condition.{0} (has_pos_part.{0} pos) (@functor.add_const.run.{0 1} (ring.{0} (has_pos_part.{0} pos)) (has_neg.{1} (has_add.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_158659 (h0 : topological_space (ordered_comm_monoid (has_neg (has_Inf (has_neg Type))))) : path_connected_space (ordered_comm_monoid (has_neg (has_Inf (has_neg Type)))) := sorry --non-trivial
lemma new_lemma_158660 (h0 : not (function.extfun Type uniform_space -> false)) : @complete_space.{0} (option.{0} num) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (option.{0} num))  := sorry --non-trivial
lemma new_lemma_158661 (h0 : functor.add_const (semiring (ring pos)) environment.implicit_infer_kind) : @is_noetherian_ring.{0} (ring.{0} pos) (@functor.add_const.run.{0 0} (semiring.{0} (ring.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_158662 (h0 : function.extfun Type topological_space) : @normal_space.{0} (add_cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (add_cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158663 (h0 : topological_space (normed_lattice_add_comm_group (has_add Type))) : totally_disconnected_space (normed_lattice_add_comm_group (has_add Type)) := sorry --non-trivial
lemma new_lemma_158664 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @add_monoid.fg.{0} (normed_comm_ring.{0} name) (@function.extfun_app.{2 1} Type add_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_monoid.{0}) (normed_comm_ring.{0} name))  := sorry --non-trivial
lemma new_lemma_158665 (h0 : not (uniform_space (option num) -> false)) : @separated_space.{0} (option.{0} num) (@classical.by_contradiction'.{1} (uniform_space.{0} (option.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_158666 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (linear_ordered_field.{0} unsigned) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (linear_ordered_field.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158667 (h0 : functor.add_const (filter (ring pos)) Type) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_158668 (h0 : topological_space (normed_linear_ordered_group empty)) : topological_space.separable_space (normed_linear_ordered_group empty) := sorry --non-trivial
lemma new_lemma_158669 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @unique_factorization_monoid.{1} Type (@function.extfun_app.{3 2} (Type 1) cancel_comm_monoid_with_zero.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 cancel_comm_monoid_with_zero.{1}) Type)  := sorry --non-trivial
lemma new_lemma_158670 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (with_one.{0} (semiring.{0} (semiring.{0} (random_gen.{0} (has_top.{0} (has_top.{0} linarith.comp)))))) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_one.{0} (semiring.{0} (semiring.{0} (random_gen.{0} (has_top.{0} (has_top.{0} linarith.comp)))))))  := sorry --non-trivial
lemma new_lemma_158671 (h0 : functor.add_const (complete_lattice (ring linarith.comp)) name) : @is_compactly_generated.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (complete_lattice.{0} (ring.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_158672 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @irreducible_space.{0} (measurable_space.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (measurable_space.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_158673 (h0 : ring (has_dist fun_info)) : is_domain (has_dist fun_info) := sorry --non-trivial
lemma new_lemma_158674 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (comm_semigroup.{0} real) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (comm_semigroup.{0} real))  := sorry --non-trivial
lemma new_lemma_158675 (h0 : complete_lattice linarith.ineq) : complete_lattice.is_Sup_finite_compact linarith.ineq := sorry --non-trivial
lemma new_lemma_158676 (h0 : ring (has_to_string name)) : rank_condition (has_to_string name) := sorry --non-trivial
lemma new_lemma_158677 (h2 : topological_space (mul_one_class (mul_one_class enat))) : totally_disconnected_space (mul_one_class (mul_one_class enat)) := sorry --non-trivial
lemma new_lemma_158678 (h0 : function.extfun (finset Type) (has_mem.mem (linear_ordered_add_comm_group fun_info))) : @is_compactly_generated.{0} (linear_ordered_add_comm_group.{0} fun_info) (@finset.pi.empty.{1 0} Type complete_lattice.{0} (linear_ordered_add_comm_group.{0} fun_info) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (linear_ordered_add_comm_group.{0} fun_info)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_158679 (h0 : functor.add_const (semiring (has_to_string linarith.comp)) linarith.comp) : @is_noetherian_ring.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 0} (semiring.{0} (has_to_string.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158680 (h1 : filter (denumerable char)) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_158681 (h0 : functor.add_const (function.extfun Type uniform_space) name) : @separated_space.{0} (comm_group.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) name h0) (comm_group.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_158682 (h0 : finset (has_zero (has_neg (finset Type)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_158683 (h0 : ring (has_append string_imp)) : is_domain (has_append string_imp) := sorry --non-trivial
lemma new_lemma_158684 (h0 : ring (has_union (semiring unsigned))) : is_domain (has_union (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_158685 (h0 : functor.add_const (function.extfun Type group) Type) : @normalizer_condition.{0} (add_comm_monoid.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type group.{0}) Type h0) (add_comm_monoid.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_158686 (h0 : functor.add_const (group Type) (has_zero pos)) : @is_simple_group.{1} Type (@functor.add_const.run.{1 0} (group.{1} Type) (has_zero.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_158687 (h0 : not (topological_space (has_union congr_arg_kind) -> false)) : @t0_space.{0} (has_union.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (topological_space.{0} (has_union.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_158688 (h0 : functor.add_const (ordered_add_comm_monoid (has_neg pos)) Type) : @archimedean.{0} (has_neg.{0} pos) (@functor.add_const.run.{0 1} (ordered_add_comm_monoid.{0} (has_neg.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_158689 (h5 : topological_space (add_comm_semigroup reducibility_hints)) : totally_disconnected_space (add_comm_semigroup reducibility_hints) := sorry --non-trivial
lemma new_lemma_158690 (h0 : ring (semi_normed_comm_ring string.iterator_imp)) : strong_rank_condition (semi_normed_comm_ring string.iterator_imp) := sorry --non-trivial
lemma new_lemma_158691 (h0 : topological_space (has_dist (option (option (option num))))) : path_connected_space (has_dist (option (option (option num)))) := sorry --non-trivial
lemma new_lemma_158692 (h0 : topological_space (has_add (has_Inf linarith.comp))) : totally_disconnected_space (has_add (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_158693 (h0 : fin has_zero.zero) : @preconnected_space.{1} (sub_neg_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (sub_neg_monoid.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_158694 (h0 : topological_space (linear_ordered_comm_ring unsigned)) : preirreducible_space (linear_ordered_comm_ring unsigned) := sorry --non-trivial
lemma new_lemma_158695 (h0 : functor.add_const (filter (boolean_algebra environment.implicit_infer_kind)) pos) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_158696 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (semigroup.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semigroup.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158697 (h1 : topological_space (has_nnnorm (denumerable char))) : path_connected_space (has_nnnorm (denumerable char)) := sorry --non-trivial
lemma new_lemma_158698 (h0 : uniform_space (mul_zero_class (has_add pos))) : complete_space (mul_zero_class (has_add pos)) := sorry --non-trivial
lemma new_lemma_158699 (h0 : function.extfun (Type 1) ordered_comm_monoid) : @has_exists_mul_of_le.{1} (complete_distrib_lattice.{1} Type) (@function.extfun_app.{3 2} (Type 1) ordered_comm_monoid.{1} h0 (complete_distrib_lattice.{1} Type))  := sorry --non-trivial
lemma new_lemma_158700 (h0 : topological_space (cancel_monoid pos)) : totally_disconnected_space (cancel_monoid pos) := sorry --non-trivial
lemma new_lemma_158701 (h0 : fin has_zero.zero) : @is_simple_group.{0} (normed_lattice_add_comm_group.{0} real) (@function.extfun_app.{2 1} Type group.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type group.{0}) h0) (normed_lattice_add_comm_group.{0} real))  := sorry --non-trivial
lemma new_lemma_158702 (h0 : function.extfun nat fin) : @complete_space.{0} (has_pos_part.{0} linarith.comp) (@matrix.vec_empty.{0} (uniform_space.{0} (has_pos_part.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_158703 (h0 : ring (dlist (random_gen string_imp))) : is_domain (dlist (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_158704 (h0 : group (semiring (semiring congr_arg_kind))) : normalizer_condition (semiring (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_158705 (h0 : ring (add_cancel_comm_monoid (metric_space to_additive.value_type))) : is_domain (add_cancel_comm_monoid (metric_space to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_158706 (h0 : topological_space (normed_field (random_gen reducibility_hints))) : path_connected_space (normed_field (random_gen reducibility_hints)) := sorry --non-trivial
lemma new_lemma_158707 (h0 : group (has_top (has_nnnorm (has_nnnorm (random_gen to_additive.value_type))))) : is_cyclic (has_top (has_nnnorm (has_nnnorm (random_gen to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_158708 (h0 : topological_space (comm_monoid (semiring (semiring empty)))) : totally_disconnected_space (comm_monoid (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_158709 (h0 : functor.add_const (topological_space (add_cancel_monoid linarith.comp)) Type) : @preconnected_space.{0} (add_cancel_monoid.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (add_cancel_monoid.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_158710 (h0 : group (option (option (partial_order (semigroup empty))))) : normalizer_condition (option (option (partial_order (semigroup empty)))) := sorry --non-trivial
lemma new_lemma_158711 (h0 : not (topological_space (non_assoc_semiring empty) -> false)) : @discrete_topology.{0} (non_assoc_semiring.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (non_assoc_semiring.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_158712 (h0 : topological_space (has_one (semiring empty))) : preirreducible_space (has_one (semiring empty)) := sorry --non-trivial
lemma new_lemma_158713 (h0 : topological_space (linear_order (semiring empty))) : topological_space.separable_space (linear_order (semiring empty)) := sorry --non-trivial
lemma new_lemma_158714 (h0 : functor.add_const (function.extfun Type group) environment.implicit_infer_kind) : @normalizer_condition.{0} (has_nndist.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) environment.implicit_infer_kind h0) (has_nndist.{0} pos))  := sorry --non-trivial
lemma new_lemma_158715 (h0 : topological_space (has_top (semiring (semiring empty)))) : discrete_topology (has_top (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_158716 (h0 : complete_lattice (has_nndist (has_nndist pos))) : is_compactly_generated (has_nndist (has_nndist pos)) := sorry --non-trivial
lemma new_lemma_158717 (h0 : topological_space (comm_group (comm_group pos))) : discrete_topology (comm_group (comm_group pos)) := sorry --non-trivial
lemma new_lemma_158718 (h0 : functor.add_const (function.extfun nat fin) Type) : @is_principal_ideal_ring.{0} (ordered_comm_monoid.{0} real) (@function.extfun_app.{2 1} Type ring.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type ring.{0}) (@function.extfun_app.{1 1} nat fin (@functor.add_const.run.{0 1} (function.extfun.{1 1} nat fin) Type h0) (@has_zero.zero.{0} nat nat.has_zero))) (ordered_comm_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_158719 (h0 : functor.add_const Prop (has_nndist (has_nndist (has_add name)))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_158720 (h1 : ring (random_gen int)) : strong_rank_condition (random_gen int) := sorry --non-trivial
lemma new_lemma_158721 (h0 : topological_space (has_neg_part (ring (comm_group (boolean_algebra pos))))) : t1_space (has_neg_part (ring (comm_group (boolean_algebra pos)))) := sorry --non-trivial
lemma new_lemma_158722 (h0 h1 : function.extfun (Type -> Type) (function.extfun Type)) : @has_measurable_sup₂.{0} (denumerable.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type measurable_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 measurable_space.{0}) (denumerable.{0} linarith.comp_source)) (@function.extfun_app.{2 1} Type has_sup.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h1 has_sup.{0}) (denumerable.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_158723 (h0 : topological_space (boolean_algebra.core (ring linarith.comp))) : preirreducible_space (boolean_algebra.core (ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_158724 (h0 : fin has_zero.zero) : @discrete_topology.{0} (has_pos_part.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_pos_part.{0} real))  := sorry --non-trivial
lemma new_lemma_158725 (h0 : ring (comm_ring (has_ssubset (random_gen linarith.ineq)))) : rank_condition (comm_ring (has_ssubset (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_158726 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_neg name)) name) : @unique_factorization_monoid.{0} (has_neg.{0} name) (@functor.add_const.run.{0 0} (cancel_comm_monoid_with_zero.{0} (has_neg.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_158727 (h0 : topological_space (has_neg_part (has_add (finset pos)))) : t1_space (has_neg_part (has_add (finset pos))) := sorry --non-trivial
lemma new_lemma_158728 (h1 h2 h3 : multiset (normed_field ereal)) (h4 : Prop) (h5 : decidable h4) : multiset.subset h1 (ite h4 h2 h3) := sorry --non-trivial
lemma new_lemma_158729 (h0 : topological_space (semiring to_additive.value_type)) : totally_disconnected_space (semiring to_additive.value_type) := sorry --non-trivial
lemma new_lemma_158730 (h0 : topological_space (normed_field char)) (h1 : set (normed_field char)) : is_path_connected h1 := sorry --non-trivial
lemma new_lemma_158731 (h0 : add_group (random_gen (has_nnnorm linarith.ineq))) : is_add_cyclic (random_gen (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158732 (h0 : nat) (h1 : vector pnat (nat.succ h0)) (h2 : ulower pnat) : pnat.coprime (vector.head h1) (ulower.up h2) := sorry --non-trivial
lemma new_lemma_158733 (h0 : topological_space (has_top (has_top (has_top to_additive.value_type)))) : locally_compact_space (has_top (has_top (has_top to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_158734 (h0 : topological_space (has_pos_part (has_neg pos))) : loc_path_connected_space (has_pos_part (has_neg pos)) := sorry --non-trivial
lemma new_lemma_158735 (h0 : not (function.extfun Type ring -> false)) : @is_domain.{0} to_additive.value_type (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) to_additive.value_type)  := sorry --non-trivial
lemma new_lemma_158736 (h0 : list string_imp) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_158737 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_158738 (h0 : function.extfun (Type 1) topological_space) : @locally_compact_space.{1} (has_neg.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (has_neg.{1} Type))  := sorry --non-trivial
lemma new_lemma_158739 (h0 : function.extfun Type add_monoid) : add_monoid.fg real := sorry --non-trivial
lemma new_lemma_158740 (h0 : not (function.extfun Type monoid -> false)) : @monoid.fg.{0} (normed_group.{0} num) (@function.extfun_app.{2 1} Type monoid.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type monoid.{0}) h0) (normed_group.{0} num))  := sorry --non-trivial
lemma new_lemma_158741 (h0 : function.extfun Type topological_space) : @t1_space.{0} (has_dist.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_dist.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158742 (h0 : measurable_space (has_ssubset (has_ssubset (mul_one_class (mul_one_class environment.projection_info))))) (h1 : filter (has_ssubset (has_ssubset (mul_one_class (mul_one_class environment.projection_info))))) : filter.is_measurably_generated h1 := sorry --non-trivial
lemma new_lemma_158743 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (left_cancel_semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (left_cancel_semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158744 (h0 : ring (linear_ordered_add_comm_group (has_norm string_imp))) : is_domain (linear_ordered_add_comm_group (has_norm string_imp)) := sorry --non-trivial
lemma new_lemma_158745 (h0 : filter (add_cancel_monoid (has_neg_part name))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_158746 (h0 : functor.add_const (topological_space (pseudo_metric_space ennreal)) (option name)) : @sequential_space.{0} (pseudo_metric_space.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (pseudo_metric_space.{0} ennreal)) (option.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_158747 (h0 : fin has_zero.zero) : @add_monoid.fg.{1} (has_Inf.{1} Type) (@matrix.vec_empty.{1} (add_monoid.{1} (has_Inf.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_158748 (h0 : topological_space (has_union (has_norm fun_info))) : normal_space (has_union (has_norm fun_info)) := sorry --non-trivial
lemma new_lemma_158749 (h1 : ring (measurable_space (has_norm linarith.comp))) : is_domain (measurable_space (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_158750 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (linear_ordered_add_comm_group linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158751 (h0 : functor.comp topological_space boolean_algebra.core ennreal) : @topological_space.separable_space.{0} (boolean_algebra.core.{0} ennreal) (@functor.comp.run.{0 0 0} topological_space.{0} boolean_algebra.core.{0} ennreal h0)  := sorry --non-trivial
lemma new_lemma_158752 (h0 : topological_space (comm_group (has_add (semigroup (has_add Type))))) : loc_path_connected_space (comm_group (has_add (semigroup (has_add Type)))) := sorry --non-trivial
lemma new_lemma_158753 (h0 : complete_lattice (add_cancel_monoid (finset pos))) : complete_lattice.is_Sup_finite_compact (add_cancel_monoid (finset pos)) := sorry --non-trivial
lemma new_lemma_158754 (h0 : fin has_zero.zero) : @is_compactly_generated.{0} linarith.comp (@matrix.vec_empty.{0} (complete_lattice.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_158755 (h0 : ring (semigroup (has_neg (normed_comm_ring pos)))) : is_principal_ideal_ring (semigroup (has_neg (normed_comm_ring pos))) := sorry --non-trivial
lemma new_lemma_158756 (h0 h1 : multiset (linear_ordered_comm_group_with_zero enat)) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_158757 (h0 : topological_space (boolean_algebra (has_pos_part (has_Inf (has_Inf (normed_comm_ring pos)))))) : loc_path_connected_space (boolean_algebra (has_pos_part (has_Inf (has_Inf (normed_comm_ring pos))))) := sorry --non-trivial
lemma new_lemma_158758 (h2 : not (group (with_bot num) -> false)) : @normalizer_condition.{0} (with_bot.{0} num) (@classical.by_contradiction'.{1} (group.{0} (with_bot.{0} num)) h2)  := sorry --non-trivial
lemma new_lemma_158759 (h0 : topological_space (has_Inf (ring pos))) : topological_space.separable_space (has_Inf (ring pos)) := sorry --non-trivial
lemma new_lemma_158760 (h0 : topological_space (measure_theory.measure_space (semiring (semiring (semiring empty))))) : path_connected_space (measure_theory.measure_space (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_158761 (h0 : complete_lattice (has_nnnorm linarith.ineq)) : is_compactly_generated (has_nnnorm linarith.ineq) := sorry --non-trivial
lemma new_lemma_158762 (h0 : topological_space (comm_ring (random_gen (has_nnnorm to_additive.value_type)))) : path_connected_space (comm_ring (random_gen (has_nnnorm to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_158763 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (measurable_space.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type ring.{0} h0 (measurable_space.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_158764 (h0 : cancel_comm_monoid_with_zero (measurable_space.dynkin_system congr_arg_kind)) : unique_factorization_monoid (measurable_space.dynkin_system congr_arg_kind) := sorry --non-trivial
lemma new_lemma_158765 (h0 : topological_space (simple_graph (option num))) : irreducible_space (simple_graph (option num)) := sorry --non-trivial
lemma new_lemma_158766 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (has_top.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_top.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158767 (h0 : not (function.extfun Type topological_space -> false)) : @locally_compact_space.{0} (mul_zero_class.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (mul_zero_class.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158768 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (has_inter.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_inter.{0} empty))  := sorry --non-trivial
lemma new_lemma_158769 (h0 : functor.add_const (ring (boolean_algebra Type)) (ring (mul_one_class (has_add linarith.comp)))) : @is_principal_ideal_ring.{1} (boolean_algebra.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (boolean_algebra.{1} Type)) (ring.{0} (mul_one_class.{0} (has_add.{0} linarith.comp))) h0)  := sorry --non-trivial
lemma new_lemma_158770 (h0 : topological_space (with_bot fun_info)) : irreducible_space (with_bot fun_info) := sorry --non-trivial
lemma new_lemma_158771 (h0 : functor.add_const (topological_space (plift congr_arg_kind)) empty) : @discrete_topology.{1} (plift.{1} congr_arg_kind) (@functor.add_const.run.{1 0} (topological_space.{1} (plift.{1} congr_arg_kind)) empty h0)  := sorry --non-trivial
lemma new_lemma_158772 (h0 : topological_space (normed_group string_imp)) : totally_disconnected_space (normed_group string_imp) := sorry --non-trivial
lemma new_lemma_158773 (h0 : topological_space (add_comm_monoid (finset Type))) : regular_space (add_comm_monoid (finset Type)) := sorry --non-trivial
lemma new_lemma_158774 (h0 : function.extfun Type topological_space) : @t0_space.{0} (has_emptyc.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_emptyc.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_158775 (h0 : topological_space (has_to_string pos)) : t0_space (has_to_string pos) := sorry --non-trivial
lemma new_lemma_158776 (h0 : not (has_mem.mem (with_bot num) has_emptyc.emptyc -> false)) : @totally_disconnected_space.{0} (with_bot.{0} num) (@finset.pi.empty.{1 0} Type topological_space.{0} (with_bot.{0} num) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_bot.{0} num) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_158777 (h0 : ring (has_dist (option num))) : rank_condition (has_dist (option num)) := sorry --non-trivial
lemma new_lemma_158778 (h0 : function.extfun Type (functor.add_const (topological_space (omega_complete_partial_order empty)))) : @loc_path_connected_space.{0} (omega_complete_partial_order.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (omega_complete_partial_order.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} (omega_complete_partial_order.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_158779 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (has_top.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_top.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_158780 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (has_dist.{0} empty) (@function.extfun_app.{2 1} Type monoid.{0} h0 (has_dist.{0} empty))  := sorry --non-trivial
lemma new_lemma_158781 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (mul_zero_class.{0} name) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (mul_zero_class.{0} name))  := sorry --non-trivial
lemma new_lemma_158782 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (random_gen.{0} (has_top.{0} (has_top.{0} fun_info))) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (random_gen.{0} (has_top.{0} (has_top.{0} fun_info))))  := sorry --non-trivial
lemma new_lemma_158783 (h0 : complete_lattice (comm_semigroup (comm_semigroup Type))) : is_compactly_generated (comm_semigroup (comm_semigroup Type)) := sorry --non-trivial
lemma new_lemma_158784 (h0 : has_neg fun_info) (h1 : measurable_space fun_info) : has_measurable_neg fun_info := sorry --non-trivial
lemma new_lemma_158785 (h0 : topological_space (linear_ordered_semiring (has_top linarith.comp))) : totally_separated_space (linear_ordered_semiring (has_top linarith.comp)) := sorry --non-trivial
lemma new_lemma_158786 (h0 : topological_space (generalized_boolean_algebra (has_nndist (has_nndist pos)))) : discrete_topology (generalized_boolean_algebra (has_nndist (has_nndist pos))) := sorry --non-trivial
lemma new_lemma_158787 (h0 : ordered_add_comm_monoid (pseudo_metric_space (option pos))) : archimedean (pseudo_metric_space (option pos)) := sorry --non-trivial
lemma new_lemma_158788 (h0 : functor.add_const (semiring (metric_space linarith.comp)) Type) : @is_noetherian_ring.{0} (metric_space.{0} linarith.comp) (@functor.add_const.run.{0 1} (semiring.{0} (metric_space.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_158789 (h2 : complete_lattice (simple_graph (metric_space to_additive.value_type))) : complete_lattice.is_Sup_finite_compact (simple_graph (metric_space to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_158790 (h0 : topological_space (add_comm_semigroup (add_comm_semigroup linarith.ineq))) : path_connected_space (add_comm_semigroup (add_comm_semigroup linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158791 (h0 : functor.add_const (topological_space (has_neg name)) linarith.comp) : @discrete_topology.{0} (has_neg.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158792 (h0 : pseudo_metric_space (has_add (has_bot (has_Inf (has_add real))))) (h1 : add_monoid (has_add (has_bot (has_Inf (has_add real))))) : has_lipschitz_add (has_add (has_bot (has_Inf (has_add real)))) := sorry --non-trivial
lemma new_lemma_158793 (h0 : topological_space (has_union (semiring (semiring empty)))) : irreducible_space (has_union (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_158794 (h0 : ring (add_comm_monoid congr_arg_kind)) : is_domain (add_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_158795 (h0 : filter (has_add pos)) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_158796 (h0 : has_mem.mem (has_top linarith.comp) has_emptyc.emptyc) : @t0_space.{0} (has_top.{0} linarith.comp) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_top.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_158797 (h0 : has_mem.mem (normed_group num) has_emptyc.emptyc) : @monoid.fg.{0} (normed_group.{0} num) (@finset.pi.empty.{1 0} Type monoid.{0} (normed_group.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_158798 (h0 : function.extfun Type group) : @is_simple_group.{0} (cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_158799 (h0 : topological_space (normed_group empty)) : t0_space (normed_group empty) := sorry --non-trivial
lemma new_lemma_158800 (h0 : functor.add_const (topological_space (has_neg name)) Type) : @loc_path_connected_space.{0} (has_neg.{0} name) (@functor.add_const.run.{0 1} (topological_space.{0} (has_neg.{0} name)) Type h0)  := sorry --non-trivial
lemma new_lemma_158801 (h0 : ring (generalized_boolean_algebra (has_neg name))) : is_domain (generalized_boolean_algebra (has_neg name)) := sorry --non-trivial
lemma new_lemma_158802 (h0 : function.extfun Type group) : @is_simple_group.{0} (canonically_linear_ordered_monoid.{0} ennreal) (@function.extfun_app.{2 1} Type group.{0} h0 (canonically_linear_ordered_monoid.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_158803 (h0 : monoid (has_top (has_inv (has_top (has_inv linarith.comp_source))))) : monoid.fg (has_top (has_inv (has_top (has_inv linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_158804 (h0 : functor.add_const (ordered_add_comm_monoid (left_cancel_semigroup empty)) empty) : @archimedean.{0} (left_cancel_semigroup.{0} empty) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (left_cancel_semigroup.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_158805 (h0 : topological_space (has_neg (has_neg_part name))) : normal_space (has_neg (has_neg_part name)) := sorry --non-trivial
lemma new_lemma_158806 (h0 : list (semi_normed_comm_ring (random_gen linarith.ineq))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_158807 (h0 : ring (has_union (semiring (has_top congr_arg_kind)))) : strong_rank_condition (has_union (semiring (has_top congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_158808 (h0 : function.extfun nat fin) : @group.fg.{0} (has_bot.{0} pos) (@matrix.vec_empty.{0} (group.{0} (has_bot.{0} pos)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_158809 (h0 : functor.add_const (ring (has_zero linarith.comp)) linarith.comp) : @strong_rank_condition.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (has_zero.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158810 (h0 : function.extfun Type group) : @is_cyclic.{0} (@id.{2} Type unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (@id.{2} Type unsigned))  := sorry --non-trivial
lemma new_lemma_158811 (h0 : topological_space (simple_graph (has_neg (has_neg (boolean_algebra.core linarith.comp))))) : regular_space (simple_graph (has_neg (has_neg (boolean_algebra.core linarith.comp)))) := sorry --non-trivial
lemma new_lemma_158812 (h0 : functor.add_const (function.extfun (Type 1) uniform_space) linarith.comp) : @separated_space.{1} (has_pos_part.{1} Type) (@function.extfun_app.{3 2} (Type 1) uniform_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) uniform_space.{1}) linarith.comp h0) (has_pos_part.{1} Type))  := sorry --non-trivial
lemma new_lemma_158813 (h0 : complete_lattice bool) : is_compactly_generated bool := sorry --non-trivial
lemma new_lemma_158814 (h0 : functor.add_const (function.extfun (Type 1) cancel_comm_monoid_with_zero) pos) : @unique_factorization_monoid.{1} (has_add.{1} Type) (@function.extfun_app.{3 2} (Type 1) cancel_comm_monoid_with_zero.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) cancel_comm_monoid_with_zero.{1}) pos h0) (has_add.{1} Type))  := sorry --non-trivial
lemma new_lemma_158815 (h0 : topological_space (ring (has_Inf (has_neg (ring (has_add pos)))))) : t1_space (ring (has_Inf (has_neg (ring (has_add pos))))) := sorry --non-trivial
lemma new_lemma_158816 (h0 : complete_lattice (add_cancel_monoid (has_pos_part Type))) : is_compactly_generated (add_cancel_monoid (has_pos_part Type)) := sorry --non-trivial
lemma new_lemma_158817 (h0 : topological_space (comm_ring (has_top (random_gen fun_info)))) : locally_compact_space (comm_ring (has_top (random_gen fun_info))) := sorry --non-trivial
lemma new_lemma_158818 (h2 : ring (linear_ordered_comm_group_with_zero to_additive.value_type)) : is_domain (linear_ordered_comm_group_with_zero to_additive.value_type) := sorry --non-trivial
lemma new_lemma_158819 (h0 : topological_space (with_one (random_gen char))) : path_connected_space (with_one (random_gen char)) := sorry --non-trivial
lemma new_lemma_158820 (h0 : ordered_add_comm_monoid (generalized_boolean_algebra (has_Inf (has_Inf (boolean_algebra.core pos))))) : archimedean (generalized_boolean_algebra (has_Inf (has_Inf (boolean_algebra.core pos)))) := sorry --non-trivial
lemma new_lemma_158821 (h0 : topological_space (normed_lattice_add_comm_group pos)) : sequential_space (normed_lattice_add_comm_group pos) := sorry --non-trivial
lemma new_lemma_158822 (h0 : topological_space (measure_theory.measure_space (semiring (semiring (semiring empty))))) : t1_space (measure_theory.measure_space (semiring (semiring (semiring empty)))) := sorry --non-trivial
lemma new_lemma_158823 (h0 : function.extfun Type (functor.comp topological_space normed_comm_ring)) : @preirreducible_space.{0} (normed_comm_ring.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} normed_comm_ring.{0} pos (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} topological_space.{0} normed_comm_ring.{0}) h0 pos))  := sorry --non-trivial
lemma new_lemma_158824 (h0 : ring (has_one (has_norm (has_norm (has_norm empty))))) : rank_condition (has_one (has_norm (has_norm (has_norm empty)))) := sorry --non-trivial
lemma new_lemma_158825 (h0 : group (boolean_algebra (finset pos))) : is_simple_group (boolean_algebra (finset pos)) := sorry --non-trivial
lemma new_lemma_158826 (h0 : functor.add_const (topological_space (add_cancel_monoid pos)) (ring name)) : @discrete_topology.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} pos)) (ring.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_158827 (h0 : cancel_comm_monoid_with_zero (add_cancel_monoid (has_zero pos))) : unique_factorization_monoid (add_cancel_monoid (has_zero pos)) := sorry --non-trivial
lemma new_lemma_158828 (h0 : functor.add_const (ring (has_nndist environment.implicit_infer_kind)) linarith.comp) : @strong_rank_condition.{0} (has_nndist.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (ring.{0} (has_nndist.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158829 (h0 : ring (linear_ordered_field (option empty))) : rank_condition (linear_ordered_field (option empty)) := sorry --non-trivial
lemma new_lemma_158830 (h0 : not (uniform_space (with_bot linarith.comp) -> false)) : @complete_space.{0} (with_bot.{0} linarith.comp) (@classical.by_contradiction'.{1} (uniform_space.{0} (with_bot.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_158831 (h0 : add_group (has_append to_additive.value_type)) : is_add_cyclic (has_append to_additive.value_type) := sorry --non-trivial
lemma new_lemma_158832 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (partial_order.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (partial_order.{0} empty))  := sorry --non-trivial
lemma new_lemma_158833 (h0 : functor.add_const (ordered_add_comm_monoid (add_cancel_monoid unsigned)) Type) : @archimedean.{0} (add_cancel_monoid.{0} unsigned) (@functor.add_const.run.{0 1} (ordered_add_comm_monoid.{0} (add_cancel_monoid.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_158834 (h0 : has_mem.mem complete_lattice has_emptyc.emptyc) : @complete_lattice.is_Sup_finite_compact.{0} (normed_group.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) complete_lattice.{0} h0) (normed_group.{0} num))  := sorry --non-trivial
lemma new_lemma_158835 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @path_connected_space.{0} (semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158836 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (has_star.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_star.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158837 (h0 : complete_lattice (has_union (semiring (semiring congr_arg_kind)))) : complete_lattice.is_Sup_finite_compact (has_union (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_158838 (h0 : topological_space (canonically_ordered_monoid (has_neg name))) : discrete_topology (canonically_ordered_monoid (has_neg name)) := sorry --non-trivial
lemma new_lemma_158839 (h0 : topological_space (pseudo_metric_space ennreal)) : topological_space.separable_space (pseudo_metric_space ennreal) := sorry --non-trivial
lemma new_lemma_158840 (h0 : filter (measurable_space.dynkin_system num)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_158841 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (monoid_with_zero.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (monoid_with_zero.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158842 (h0 : not (function.extfun Type add_group -> false)) : @is_add_cyclic.{0} (has_norm.{0} linarith.ineq) (@function.extfun_app.{2 1} Type add_group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_group.{0}) h0) (has_norm.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_158843 (h0 : topological_space (normed_field char)) : path_connected_space (normed_field char) := sorry --non-trivial
lemma new_lemma_158844 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (preorder.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (preorder.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158845 (h1 : uniform_space (has_norm to_additive.value_type)) : complete_space (has_norm to_additive.value_type) := sorry --non-trivial
lemma new_lemma_158846 (h0 : functor.add_const (group (comm_group pos)) (semigroup environment.implicit_infer_kind)) : @is_simple_group.{0} (comm_group.{0} pos) (@functor.add_const.run.{0 0} (group.{0} (comm_group.{0} pos)) (semigroup.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_158847 (h0 : list (has_inv (has_norm to_additive.value_type))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_158848 (h0 : topological_space (pseudo_metric_space unsigned)) : irreducible_space (pseudo_metric_space unsigned) := sorry --non-trivial
lemma new_lemma_158849 (h0 : topological_space (semigroup empty)) : totally_separated_space (semigroup empty) := sorry --non-trivial
lemma new_lemma_158850 (h0 : topological_space (has_bot (comm_semigroup name))) : locally_compact_space (has_bot (comm_semigroup name)) := sorry --non-trivial
lemma new_lemma_158851 (h1 : ring (distrib (has_nnnorm char))) : rank_condition (distrib (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_158852 (h0 : functor.comp group canonically_ordered_comm_semiring Type) : @group.fg.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.comp.run.{1 1 1} group.{1} canonically_ordered_comm_semiring.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_158853 (h0 : functor.add_const (topological_space (option congr_arg_kind)) num) : @locally_compact_space.{0} (option.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (option.{0} congr_arg_kind)) num h0)  := sorry --non-trivial
lemma new_lemma_158854 (h0 : has_mem.mem (with_bot num) has_emptyc.emptyc) : @discrete_topology.{0} (with_bot.{0} num) (@finset.pi.empty.{1 0} Type topological_space.{0} (with_bot.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_158855 (h0 : topological_space (measurable_space.dynkin_system empty)) (h1 : function.extfun (measurable_space.dynkin_system empty) (fun (x : measurable_space.dynkin_system empty), Prop)) : is_totally_separated (function.extfun_app h1) := sorry --non-trivial
lemma new_lemma_158856 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @path_connected_space.{0} (normed_lattice_add_comm_group.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_lattice_add_comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_158857 (h0 : topological_space (mul_one_class (add_comm_semigroup linarith.ineq))) : t0_space (mul_one_class (add_comm_semigroup linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158858 (h2 : add_group (has_ssubset to_additive.value_type)) : is_add_cyclic (has_ssubset to_additive.value_type) := sorry --non-trivial
lemma new_lemma_158859 (h0 : topological_space (generalized_boolean_algebra (has_add real))) : path_connected_space (generalized_boolean_algebra (has_add real)) := sorry --non-trivial
lemma new_lemma_158860 (h0 : functor.add_const (topological_space (sub_neg_monoid pos)) linarith.comp) : @irreducible_space.{0} (sub_neg_monoid.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (sub_neg_monoid.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158861 (h0 : topological_space (pseudo_metric_space pos)) : t1_space (pseudo_metric_space pos) := sorry --non-trivial
lemma new_lemma_158862 (h0 : ring (with_bot (random_gen (random_gen (random_gen string_imp))))) : is_domain (with_bot (random_gen (random_gen (random_gen string_imp)))) := sorry --non-trivial
lemma new_lemma_158863 (h0 : functor.add_const Prop (option (option (option (option (option pos)))))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_158864 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @is_simple_group.{1} (generalized_boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 group.{1}) (generalized_boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_158865 (h0 : complete_lattice (simple_graph (has_neg pos))) : is_compactly_generated (simple_graph (has_neg pos)) := sorry --non-trivial
lemma new_lemma_158866 (h0 : functor.add_const (complete_lattice (normed_comm_ring environment.implicit_infer_kind)) linarith.comp) : @is_compactly_generated.{0} (normed_comm_ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (normed_comm_ring.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158867 (h0 : function.extfun Type topological_space) : @t1_space.{0} (finset.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (finset.{0} empty))  := sorry --non-trivial
lemma new_lemma_158868 (h0 : functor.add_const (ring (add_group num)) num) : @rank_condition.{0} (add_group.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (add_group.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_158869 (h0 : function.extfun (finset Type) (has_mem.mem (has_top linarith.comp_source))) : @discrete_topology.{0} (has_top.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_top.{0} linarith.comp_source) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_top.{0} linarith.comp_source)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_158870 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (has_neg.{0} ennreal) (@function.extfun_app.{2 1} Type add_group.{0} h0 (has_neg.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_158871 (h0 : topological_space (preorder (semiring empty))) : totally_disconnected_space (preorder (semiring empty)) := sorry --non-trivial
lemma new_lemma_158872 (h0 : function.extfun (finset Type -> Prop) (function.extfun (finset Type))) : @irreducible_space.{0} (rel.{0 0} empty empty) (@finset.pi.empty.{1 0} Type topological_space.{0} (rel.{0 0} empty empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (rel.{0 0} empty empty)) (@function.extfun_app.{2 0} (finset.{1} Type → Prop) (function.extfun.{2 0} (finset.{1} Type)) h0 (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (rel.{0 0} empty empty))) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_158873 (h0 : complete_lattice (has_div char)) : is_compactly_generated (has_div char) := sorry --non-trivial
lemma new_lemma_158874 (h0 : functor.add_const (topological_space (add_cancel_monoid environment.implicit_infer_kind)) name) : @discrete_topology.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_158875 (h1 : topological_space (uniform_space string_imp)) : path_connected_space (uniform_space string_imp) := sorry --non-trivial
lemma new_lemma_158876 (h0 : fin has_zero.zero) : @regular_space.{0} (boolean_algebra.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (boolean_algebra.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_158877 (h0 : not (topological_space congr_arg_kind -> false)) : @discrete_topology.{0} congr_arg_kind (@classical.by_contradiction'.{1} (topological_space.{0} congr_arg_kind) h0)  := sorry --non-trivial
lemma new_lemma_158878 (h0 : group (semiring (semiring unsigned))) : is_cyclic (semiring (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_158879 (h0 : uniform_space (canonically_ordered_comm_semiring pos)) : separated_space (canonically_ordered_comm_semiring pos) := sorry --non-trivial
lemma new_lemma_158880 (h0 : functor.add_const (topological_space (option empty)) (semiring (semiring num))) : @normal_space.{0} (option.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (option.{0} empty)) (semiring.{0} (semiring.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_158881 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (option.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (option.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_158882 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (finset.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (finset.{0} empty))  := sorry --non-trivial
lemma new_lemma_158883 (h0 : has_neg ereal) (h1 : measurable_space ereal) : has_measurable_neg ereal := sorry --non-trivial
lemma new_lemma_158884 (h0 : complete_lattice (has_to_string (has_neg (finset linarith.comp)))) : complete_lattice.is_Sup_finite_compact (has_to_string (has_neg (finset linarith.comp))) := sorry --non-trivial
lemma new_lemma_158885 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (has_union.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_union.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_158886 (h0 : complete_lattice (has_zero (finset name))) : complete_lattice.is_Sup_finite_compact (has_zero (finset name)) := sorry --non-trivial
lemma new_lemma_158887 (h0 : group (ordered_comm_monoid (monoid Type))) : normalizer_condition (ordered_comm_monoid (monoid Type)) := sorry --non-trivial
lemma new_lemma_158888 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (has_bot.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_bot.{0} pos))  := sorry --non-trivial
lemma new_lemma_158889 (h0 : functor.add_const (topological_space (complete_distrib_lattice unsigned)) name) : @sequential_space.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_158890 (h0 : filter (has_add congr_arg_kind)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_158891 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring unsigned)) linarith.comp) : @loc_path_connected_space.{0} (canonically_ordered_comm_semiring.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_comm_semiring.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158892 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @is_domain.{0} (ordered_comm_ring.{0} name) (@function.extfun_app.{2 1} Type ring.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type ring.{0}) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero))) (ordered_comm_ring.{0} name))  := sorry --non-trivial
lemma new_lemma_158893 (h0 : functor.add_const (ordered_comm_monoid (has_pos_part linarith.comp)) (has_add linarith.comp)) : @has_exists_mul_of_le.{0} (has_pos_part.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (has_pos_part.{0} linarith.comp)) (has_add.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_158894 (h0 : functor.add_const (semiring (boolean_algebra.core Type)) Type) : @is_noetherian_ring.{1} (boolean_algebra.core.{1} Type) (@functor.add_const.run.{1 1} (semiring.{1} (boolean_algebra.core.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_158895 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (linear_ordered_semiring num)) := sorry --non-trivial
lemma new_lemma_158896 (h0 : ordered_add_comm_monoid (boolean_algebra.core (has_nndist name))) : archimedean (boolean_algebra.core (has_nndist name)) := sorry --non-trivial
lemma new_lemma_158897 (h1 : add_group (mul_one_class (mul_one_class (mul_one_class (mul_one_class ereal))))) : is_add_cyclic (mul_one_class (mul_one_class (mul_one_class (mul_one_class ereal)))) := sorry --non-trivial
lemma new_lemma_158898 (h0 : group fun_info) : is_cyclic fun_info := sorry --non-trivial
lemma new_lemma_158899 (h0 : functor.add_const (topological_space (right_cancel_semigroup empty)) (option empty)) : @preirreducible_space.{0} (right_cancel_semigroup.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (right_cancel_semigroup.{0} empty)) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_158900 (h0 : function.extfun Type (functor.add_const (topological_space environment.implicit_infer_kind))) : @irreducible_space.{0} environment.implicit_infer_kind (@functor.add_const.run.{0 0} (topological_space.{0} environment.implicit_infer_kind) name (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (topological_space.{0} environment.implicit_infer_kind)) h0 name))  := sorry --non-trivial
lemma new_lemma_158901 (h0 : functor.add_const (ring (has_Inf pos)) name) : @is_principal_ideal_ring.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (has_Inf.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_158902 (h0 : cancel_comm_monoid_with_zero Type) : unique_factorization_monoid Type := sorry --non-trivial
lemma new_lemma_158903 (h0 : ordered_comm_monoid (has_to_string (ring (finset (ring (finset environment.implicit_infer_kind)))))) : has_exists_mul_of_le (has_to_string (ring (finset (ring (finset environment.implicit_infer_kind))))) := sorry --non-trivial
lemma new_lemma_158904 (h0 : topological_space (normed_comm_ring environment.implicit_infer_kind)) : regular_space (normed_comm_ring environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_158905 (h0 : ring (has_neg_part (comm_group name))) : strong_rank_condition (has_neg_part (comm_group name)) := sorry --non-trivial
lemma new_lemma_158906 (h0 : functor.add_const (topological_space auto.case_option) unsigned) : @locally_compact_space.{0} auto.case_option (@functor.add_const.run.{0 0} (topological_space.{0} auto.case_option) unsigned h0)  := sorry --non-trivial
lemma new_lemma_158907 (h0 : group (random_gen (has_nnnorm linarith.ineq))) : is_cyclic (random_gen (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_158908 (h0 : semiring (normed_comm_ring (has_to_string (has_neg_part pos)))) : is_noetherian_ring (normed_comm_ring (has_to_string (has_neg_part pos))) := sorry --non-trivial
lemma new_lemma_158909 (h0 : has_mem.mem (semiring num) has_emptyc.emptyc) : @path_connected_space.{0} (semiring.{0} num) (@finset.pi.empty.{1 0} Type topological_space.{0} (semiring.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_158910 (h0 : topological_space (plift empty)) : path_connected_space (plift empty) := sorry --non-trivial
lemma new_lemma_158911 (h0 : group (group_with_zero congr_arg_kind)) : is_simple_group (group_with_zero congr_arg_kind) := sorry --non-trivial
lemma new_lemma_158912 (h0 : topological_space (with_one (semiring num))) : locally_compact_space (with_one (semiring num)) := sorry --non-trivial
lemma new_lemma_158913 (h0 : has_mem.mem (has_top fun_info) has_emptyc.emptyc) : @irreducible_space.{0} (has_top.{0} fun_info) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_top.{0} fun_info) h0)  := sorry --non-trivial
lemma new_lemma_158914 (h0 : functor.add_const (ordered_add_comm_monoid (has_neg linarith.comp)) pos) : @archimedean.{0} (has_neg.{0} linarith.comp) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (has_neg.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_158915 (h0 : std_gen -> std_gen -> Prop) (h1 : set std_gen) : set.bounded (flip h0) h1 := sorry --non-trivial
lemma new_lemma_158916 (h0 : not (function.extfun Type topological_space -> false)) : @path_connected_space.{0} (has_union.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_union.{0} num))  := sorry --non-trivial
lemma new_lemma_158917 (h0 : function.extfun Type (prod (has_star unsigned))) : id_rel (function.extfun_app h0 (has_star unsigned)) := sorry --non-trivial
lemma new_lemma_158918 (h0 : function.extfun Type topological_space) : @t1_space.{0} (has_to_string.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_to_string.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_158919 (h1 : topological_space (encodable fun_info)) : t0_space (encodable fun_info) := sorry --non-trivial
lemma new_lemma_158920 (h0 : cancel_comm_monoid_with_zero (with_one congr_arg_kind)) : unique_factorization_monoid (with_one congr_arg_kind) := sorry --non-trivial
lemma new_lemma_158921 (h0 : topological_space (has_neg (has_neg_part (has_neg_part environment.implicit_infer_kind)))) : locally_compact_space (has_neg (has_neg_part (has_neg_part environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_158922 (h0 : topological_space (generalized_boolean_algebra (has_bot real))) : locally_compact_space (generalized_boolean_algebra (has_bot real)) := sorry --non-trivial
lemma new_lemma_158923 (h0 : add_group (has_neg (finset environment.implicit_infer_kind))) : is_add_cyclic (has_neg (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_158924 (h0 : topological_space (complete_distrib_lattice (option empty))) : irreducible_space (complete_distrib_lattice (option empty)) := sorry --non-trivial
lemma new_lemma_158925 (h0 : ring (semi_normed_ring (mul_one_class fun_info))) : rank_condition (semi_normed_ring (mul_one_class fun_info)) := sorry --non-trivial
lemma new_lemma_158926 (h0 : group (comm_group (has_to_string unsigned))) : normalizer_condition (comm_group (has_to_string unsigned)) := sorry --non-trivial
lemma new_lemma_158927 (h0 : topological_space (normed_comm_ring (has_Inf (finset pos)))) : path_connected_space (normed_comm_ring (has_Inf (finset pos))) := sorry --non-trivial
lemma new_lemma_158928 (h0 : function.extfun Type uniform_space) : @separated_space.{0} (comm_group.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_158929 (h0 : functor.add_const (topological_space (add_cancel_monoid Type)) name) : @normal_space.{1} (add_cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (add_cancel_monoid.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_158930 (h1 : ring (has_append (has_ssubset fun_info))) : rank_condition (has_append (has_ssubset fun_info)) := sorry --non-trivial
lemma new_lemma_158931 (h0 : topological_space (add_cancel_monoid (emetric_space Type))) : t0_space (add_cancel_monoid (emetric_space Type)) := sorry --non-trivial
lemma new_lemma_158932 (h0 : topological_space (ordered_comm_monoid (has_add (ordered_comm_ring Type)))) : t1_space (ordered_comm_monoid (has_add (ordered_comm_ring Type))) := sorry --non-trivial
lemma new_lemma_158933 (h0 : functor.add_const (topological_space (has_nndist Type)) (has_to_string Type)) : @regular_space.{1} (has_nndist.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (has_nndist.{1} Type)) (has_to_string.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_158934 (h0 : fin has_zero.zero) : @preirreducible_space.{0} (canonically_ordered_comm_semiring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@matrix.vec_empty.{1} (function.extfun.{2 1} Type topological_space.{0}) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) h0)) (canonically_ordered_comm_semiring.{0} pos))  := sorry --non-trivial
lemma new_lemma_158935 (h0 : ordered_add_comm_monoid (linear_ordered_semiring (random_gen num))) : archimedean (linear_ordered_semiring (random_gen num)) := sorry --non-trivial
lemma new_lemma_158936 (h0 : topological_space (has_to_string (boolean_algebra.core Type))) : t1_space (has_to_string (boolean_algebra.core Type)) := sorry --non-trivial
lemma new_lemma_158937 (h0 : not (function.extfun Type topological_space -> false)) : totally_separated_space int := sorry --non-trivial
lemma new_lemma_158938 (h0 : ring (has_pos_part (has_bot (ordered_comm_monoid Type)))) : is_domain (has_pos_part (has_bot (ordered_comm_monoid Type))) := sorry --non-trivial
lemma new_lemma_158939 (h0 : functor.add_const (ordered_add_comm_monoid (finset pos)) linarith.comp) : @archimedean.{0} (finset.{0} pos) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (finset.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158940 (h0 : topological_space (ordered_comm_ring (has_Inf real))) : regular_space (ordered_comm_ring (has_Inf real)) := sorry --non-trivial
lemma new_lemma_158941 (h0 : topological_space (has_neg unsigned)) : preconnected_space (has_neg unsigned) := sorry --non-trivial
lemma new_lemma_158942 (h0 : finset (normed_comm_ring (has_nndist ennreal))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_158943 (h0 : topological_space (add_comm_monoid (comm_group Type))) : sequential_space (add_comm_monoid (comm_group Type)) := sorry --non-trivial
lemma new_lemma_158944 (h0 : functor.add_const (uniform_space (cancel_monoid linarith.comp)) name) : @separated_space.{0} (cancel_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (uniform_space.{0} (cancel_monoid.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_158945 (h0 : functor.add_const (monoid (boolean_algebra linarith.comp)) Type) : @monoid.fg.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 1} (monoid.{0} (boolean_algebra.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_158946 (h3 : filter (comm_ring to_additive.value_type)) : filter.ne_bot h3 := sorry --non-trivial
lemma new_lemma_158947 (h0 : not (function.extfun Type topological_space -> false)) : @locally_compact_space.{0} (with_bot.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (with_bot.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_158948 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (add_cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type monoid.{0} h0 (add_cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_158949 (h0 : topological_space (mul_zero_class Type)) : discrete_topology (mul_zero_class Type) := sorry --non-trivial
lemma new_lemma_158950 (h0 : fin has_zero.zero) : @t1_space.{0} (canonically_linear_ordered_add_monoid.{0} name) (@matrix.vec_empty.{0} (topological_space.{0} (canonically_linear_ordered_add_monoid.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_158951 (h1 : ring (has_emptyc congr_arg_kind)) : is_domain (has_emptyc congr_arg_kind) := sorry --non-trivial
lemma new_lemma_158952 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normal_space.{0} (boolean_algebra.core.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (boolean_algebra.core.{0} pos))  := sorry --non-trivial
lemma new_lemma_158953 (h0 : functor.add_const (topological_space (has_nndist unsigned)) name) : @loc_path_connected_space.{0} (has_nndist.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_158954 (h0 : ring (has_compl (comm_ring to_additive.value_type))) : rank_condition (has_compl (comm_ring to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_158955 (h0 : group (has_norm num)) : is_cyclic (has_norm num) := sorry --non-trivial
lemma new_lemma_158956 (h0 : functor.add_const (list (ring linarith.comp)) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_158957 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (canonically_ordered_monoid.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (canonically_ordered_monoid.{0} real))  := sorry --non-trivial
lemma new_lemma_158958 (h0 : topological_space (with_one (has_nnnorm fun_info))) : t0_space (with_one (has_nnnorm fun_info)) := sorry --non-trivial
lemma new_lemma_158959 (h1 : topological_space (div_inv_monoid char)) : path_connected_space (div_inv_monoid char) := sorry --non-trivial
lemma new_lemma_158960 (h0 : functor.add_const (topological_space (finset pos)) pos) : @path_connected_space.{0} (finset.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (finset.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_158961 (h0 : not (lattice (encodable fun_info) -> false)) : @is_modular_lattice.{0} (encodable.{0} fun_info) (@classical.by_contradiction'.{1} (lattice.{0} (encodable.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_158962 (h0 : functor.add_const (complete_lattice (ordered_ring empty)) congr_arg_kind) : @complete_lattice.is_Sup_finite_compact.{0} (ordered_ring.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (ordered_ring.{0} empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_158963 (h0 : uniform_space (add_comm_monoid congr_arg_kind)) : complete_space (add_comm_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_158964 (h0 : ring (with_bot (has_top fun_info))) : is_domain (with_bot (has_top fun_info)) := sorry --non-trivial
lemma new_lemma_158965 (h0 : function.extfun Type filter) : countable_Inter_filter (function.extfun_app h0 (group_with_zero ennreal)) := sorry --non-trivial
lemma new_lemma_158966 (h0 : set (normed_comm_ring pos)) (h1 : function.extfun (normed_comm_ring pos) (fun (x : normed_comm_ring pos), Prop)) (h2 : normed_comm_ring pos) : set.diff h0 (function.extfun_app h1) h2 := sorry --non-trivial
lemma new_lemma_158967 (h0 : topological_space (semigroup (ring (ring Type)))) : regular_space (semigroup (ring (ring Type))) := sorry --non-trivial
lemma new_lemma_158968 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (has_top.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_top.{0} num))  := sorry --non-trivial
lemma new_lemma_158969 (h0 : not (topological_space znum -> false)) : @t0_space.{0} znum (@classical.by_contradiction'.{1} (topological_space.{0} znum) h0)  := sorry --non-trivial
lemma new_lemma_158970 (h0 : topological_space (add_cancel_monoid (finset environment.implicit_infer_kind))) : discrete_topology (add_cancel_monoid (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_158971 (h0 : topological_space (ordered_cancel_add_comm_monoid (has_to_string ennreal))) : loc_path_connected_space (ordered_cancel_add_comm_monoid (has_to_string ennreal)) := sorry --non-trivial
lemma new_lemma_158972 (h0 : ring (uniform_space (mul_one_class (mul_one_class linarith.ineq)))) : is_domain (uniform_space (mul_one_class (mul_one_class linarith.ineq))) := sorry --non-trivial
lemma new_lemma_158973 (h0 : finset (has_zero linarith.comp)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_158974 (h0 : semiring (normed_lattice_add_comm_group unsigned)) : is_noetherian_ring (normed_lattice_add_comm_group unsigned) := sorry --non-trivial
lemma new_lemma_158975 (h0 : functor.add_const (topological_space (ring pos)) linarith.comp) : @locally_compact_space.{0} (ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_158976 (h0 : add_group (linear_ordered_field num)) : is_add_cyclic (linear_ordered_field num) := sorry --non-trivial
lemma new_lemma_158977 (h0 : topological_space (semigroup (option ennreal))) : irreducible_space (semigroup (option ennreal)) := sorry --non-trivial
lemma new_lemma_158978 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (linear_ordered_field.{0} ennreal) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (linear_ordered_field.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_158979 (h0 : function.extfun (Type 1) ring) : @is_domain.{1} (simple_graph.{1} Type) (@function.extfun_app.{3 2} (Type 1) ring.{1} h0 (simple_graph.{1} Type))  := sorry --non-trivial
lemma new_lemma_158980 (h0 : monoid (random_gen (has_norm (random_gen linarith.ineq)))) : monoid.fg (random_gen (has_norm (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_158981 (h2 h3 : multiset ereal) : multiset.le h2 h3 := sorry --non-trivial
lemma new_lemma_158982 (h0 : function.extfun (finset Type) (has_mem.mem (has_emptyc empty))) : @is_add_cyclic.{0} (has_emptyc.{0} empty) (@finset.pi.empty.{1 0} Type add_group.{0} (has_emptyc.{0} empty) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_emptyc.{0} empty)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_158983 (h0 : topological_space (ring (ring (has_Inf pos)))) : loc_path_connected_space (ring (ring (has_Inf pos))) := sorry --non-trivial
lemma new_lemma_158984 (h0 : uniform_space (semi_normed_ring fun_info)) : complete_space (semi_normed_ring fun_info) := sorry --non-trivial
lemma new_lemma_158985 (h0 : functor.add_const (ring (boolean_algebra unsigned)) environment.implicit_infer_kind) : @rank_condition.{0} (boolean_algebra.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.{0} unsigned)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_158986 (h0 : functor.add_const (function.extfun Type ordered_add_comm_monoid) Type) : @archimedean.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type ordered_add_comm_monoid.{0}) Type h0) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_158987 (h0 : ring (semiring (semiring empty))) : rank_condition (semiring (semiring empty)) := sorry --non-trivial
lemma new_lemma_158988 (h0 : group (has_ssubset (random_gen (has_top linarith.comp_source)))) : group.fg (has_ssubset (random_gen (has_top linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_158989 (h0 : functor.comp topological_space has_nndist Type) : @irreducible_space.{1} (has_nndist.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} has_nndist.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_158990 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @rank_condition.{0} (add_semigroup.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (add_semigroup.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_158991 (h0 : topological_space (option num)) : topological_space.separable_space (option num) := sorry --non-trivial
lemma new_lemma_158992 (h0 : topological_space (has_nndist (add_comm_monoid pos))) : t1_space (has_nndist (add_comm_monoid pos)) := sorry --non-trivial
lemma new_lemma_158993 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (semi_normed_comm_ring string_imp)) := sorry --non-trivial
lemma new_lemma_158994 (h0 : filter (cancel_monoid (comm_group (comm_group name)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_158995 (h0 : complete_lattice (left_cancel_semigroup (semiring unsigned))) : is_atomistic (left_cancel_semigroup (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_158996 (h0 : functor.add_const (function.extfun Type ordered_add_comm_monoid) Type) : @archimedean.{0} (has_to_string.{0} name) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type ordered_add_comm_monoid.{0}) Type h0) (has_to_string.{0} name))  := sorry --non-trivial
lemma new_lemma_158997 (h0 : group (normed_lattice_add_comm_group (has_bot (has_add (has_add (has_add (has_Inf real))))))) : is_cyclic (normed_lattice_add_comm_group (has_bot (has_add (has_add (has_add (has_Inf real)))))) := sorry --non-trivial
lemma new_lemma_158998 (h1 : add_group (comm_ring (denumerable fun_info))) : is_add_cyclic (comm_ring (denumerable fun_info)) := sorry --non-trivial
lemma new_lemma_158999 (h1 : has_neg (normed_field linarith.comp_source)) (h2 : measurable_space (normed_field linarith.comp_source)) : has_measurable_neg (normed_field linarith.comp_source) := sorry --non-trivial
lemma new_lemma_159000 (h0 : linarith.comp_source -> topological_space (has_compl linarith.ineq)) (h1 : ordinal) (h2 : has_lt.lt h1 (ordinal.type well_ordering_rel)) : @path_connected_space.{0} (has_compl.{0} linarith.ineq) (@ordinal.bfamily_of_family.{0 0} (topological_space.{0} (has_compl.{0} linarith.ineq)) linarith.comp_source h0 h1 h2)  := sorry --non-trivial
lemma new_lemma_159001 (h0 : topological_space (boolean_algebra.core (finset (has_nndist (finset pos))))) : t1_space (boolean_algebra.core (finset (has_nndist (finset pos)))) := sorry --non-trivial
lemma new_lemma_159002 (h0 : not (complete_lattice (complete_semilattice_Sup fun_info) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (complete_semilattice_Sup.{0} fun_info) (@classical.by_contradiction'.{1} (complete_lattice.{0} (complete_semilattice_Sup.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_159003 (h0 : topological_space (omega_complete_partial_order (semiring (semiring empty)))) : irreducible_space (omega_complete_partial_order (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_159004 (h0 : group (complete_linear_order (semiring (semiring (bin_tree num))))) : is_cyclic (complete_linear_order (semiring (semiring (bin_tree num)))) := sorry --non-trivial
lemma new_lemma_159005 (h0 : topological_space (semiring congr_arg_kind)) : irreducible_space (semiring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_159006 (h0 : functor.add_const (topological_space (has_Inf linarith.comp)) linarith.comp) : @t1_space.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159007 (h0 : monoid (has_to_string (boolean_algebra name))) : monoid.fg (has_to_string (boolean_algebra name)) := sorry --non-trivial
lemma new_lemma_159008 (h1 : topological_space (distrib string_imp)) (h2 : add_group (distrib string_imp)) : topological_add_group (distrib string_imp) := sorry --non-trivial
lemma new_lemma_159009 (h0 : topological_space (has_neg (has_add (boolean_algebra.core unsigned)))) : totally_separated_space (has_neg (has_add (boolean_algebra.core unsigned))) := sorry --non-trivial
lemma new_lemma_159010 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (has_sdiff.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_sdiff.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159011 (h0 : complete_lattice (semi_normed_ring (metric_space linarith.comp_source))) : is_compactly_generated (semi_normed_ring (metric_space linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_159012 (h0 : functor.comp topological_space pseudo_metric_space pos) : @irreducible_space.{0} (pseudo_metric_space.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} pseudo_metric_space.{0} pos (@functor.comp.run.{0 0 0} topological_space.{0} pseudo_metric_space.{0} pos h0))  := sorry --non-trivial
lemma new_lemma_159013 (h0 : complete_lattice (boolean_algebra (has_add linarith.comp))) : complete_lattice.is_Sup_finite_compact (boolean_algebra (has_add linarith.comp)) := sorry --non-trivial
lemma new_lemma_159014 (h0 : set (has_div (has_compl linarith.comp_source))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_159015 (h0 : topological_space (topological_space (has_nnnorm char))) : totally_disconnected_space (topological_space (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_159016 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (measurable_space.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (measurable_space.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_159017 (h0 : function.extfun (Type 1) topological_space) : @irreducible_space.{1} (ordered_comm_ring.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (ordered_comm_ring.{1} Type))  := sorry --non-trivial
lemma new_lemma_159018 (h0 : functor.add_const (topological_space (canonically_linear_ordered_monoid unsigned)) pos) : @path_connected_space.{0} (canonically_linear_ordered_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_linear_ordered_monoid.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_159019 (h0 : ordered_comm_monoid (linear_ordered_field (option pos))) : has_exists_mul_of_le (linear_ordered_field (option pos)) := sorry --non-trivial
lemma new_lemma_159020 (h0 : topological_space (has_neg environment.implicit_infer_kind)) : totally_disconnected_space (has_neg environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_159021 (h0 : function.extfun nat fin) : @totally_separated_space.{0} (canonically_ordered_monoid.{0} linarith.comp) (@matrix.vec_empty.{0} (topological_space.{0} (canonically_ordered_monoid.{0} linarith.comp)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_159022 (h0 : topological_space (add_cancel_monoid (has_neg environment.implicit_infer_kind))) : totally_disconnected_space (add_cancel_monoid (has_neg environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_159023 (h0 h1 : multiset environment.projection_info) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_159024 (h0 : fin has_zero.zero) : @is_simple_group.{1} (comm_semigroup.{1} Type) (@matrix.vec_empty.{1} (group.{1} (comm_semigroup.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_159025 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @is_simple_group.{1} (ordered_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 group.{1}) (ordered_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_159026 (h0 : function.extfun Type monoid) : @monoid.fg.{0} num (@function.extfun_app.{2 1} Type monoid.{0} h0 num)  := sorry --non-trivial
lemma new_lemma_159027 (h0 : functor.add_const (ring (has_nndist pos)) Type) : @is_domain.{0} (has_nndist.{0} pos) (@functor.add_const.run.{0 1} (ring.{0} (has_nndist.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_159028 (h0 : ordered_comm_monoid (complete_distrib_lattice (has_pos_part (boolean_algebra Type)))) : has_exists_mul_of_le (complete_distrib_lattice (has_pos_part (boolean_algebra Type))) := sorry --non-trivial
lemma new_lemma_159029 (h0 : group (linear_ordered_comm_group unsigned)) : group.fg (linear_ordered_comm_group unsigned) := sorry --non-trivial
lemma new_lemma_159030 (h0 : topological_space (cancel_monoid (semigroup name))) : path_connected_space (cancel_monoid (semigroup name)) := sorry --non-trivial
lemma new_lemma_159031 (h0 : topological_space (has_compl linarith.comp_source)) (h1 : add_group (has_compl linarith.comp_source)) : topological_add_group (has_compl linarith.comp_source) := sorry --non-trivial
lemma new_lemma_159032 (h0 : functor.add_const (finset (generalized_boolean_algebra linarith.comp)) (has_add pos)) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159033 (h0 : functor.add_const (function.extfun Type monoid) name) : @monoid.fg.{0} (canonically_ordered_comm_semiring.{0} pos) (@function.extfun_app.{2 1} Type monoid.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type monoid.{0}) name h0) (canonically_ordered_comm_semiring.{0} pos))  := sorry --non-trivial
lemma new_lemma_159034 (h0 : topological_space (has_add (comm_semigroup real))) : path_connected_space (has_add (comm_semigroup real)) := sorry --non-trivial
lemma new_lemma_159035 (h0 : topological_space (has_Inf (has_neg (has_neg linarith.comp)))) : topological_space.separable_space (has_Inf (has_neg (has_neg linarith.comp))) := sorry --non-trivial
lemma new_lemma_159036 (h0 : function.extfun nat fin) : @archimedean.{1} (ordered_comm_ring.{1} Type) (@matrix.vec_empty.{1} (ordered_add_comm_monoid.{1} (ordered_comm_ring.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_159037 (h0 : functor.add_const (function.extfun Type group) pos) : @normalizer_condition.{0} (has_Inf.{0} linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) pos h0) (has_Inf.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_159038 (h0 : functor.add_const (function.extfun Type topological_space) Type) : @sequential_space.{0} (add_cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) Type h0) (add_cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_159039 (h0 : filter (measurable_space (has_norm (has_norm congr_arg_kind)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159040 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : palindrome (function.extfun_app (function.extfun_app h0 list) (add_cancel_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_159041 (h0 : function.extfun Type group -> Prop) (h1 : Exists (fun (x : function.extfun Type group), h0 x)) : @is_cyclic.{0} (has_star.{0} num) (@function.extfun_app.{2 1} Type group.{0} (@classical.some.{2} (function.extfun.{2 1} Type group.{0}) h0 h1) (has_star.{0} num))  := sorry --non-trivial
lemma new_lemma_159042 (h0 : ring (add_cancel_monoid (has_add name))) : is_principal_ideal_ring (add_cancel_monoid (has_add name)) := sorry --non-trivial
lemma new_lemma_159043 (h0 : function.extfun Type group) : @normalizer_condition.{0} (partial_order.{0} num) (@function.extfun_app.{2 1} Type group.{0} h0 (partial_order.{0} num))  := sorry --non-trivial
lemma new_lemma_159044 (h1 : group (complete_semilattice_Sup (has_nnnorm string_imp))) : is_cyclic (complete_semilattice_Sup (has_nnnorm string_imp)) := sorry --non-trivial
lemma new_lemma_159045 (h0 : functor.add_const (group (ordered_ring empty)) empty) : @group.fg.{0} (ordered_ring.{0} empty) (@functor.add_const.run.{0 0} (group.{0} (ordered_ring.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_159046 (h0 : functor.add_const (function.extfun Type uniform_space) (finset linarith.comp)) : @complete_space.{0} (has_to_string.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) (finset.{0} linarith.comp) h0) (has_to_string.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_159047 (h1 : set (add_comm_semigroup (mul_one_class ereal) -> std_gen)) : set.separates_points h1 := sorry --non-trivial
lemma new_lemma_159048 (h1 : ring (has_append (has_nnnorm (has_ssubset (has_nnnorm string_imp))))) : is_domain (has_append (has_nnnorm (has_ssubset (has_nnnorm string_imp)))) := sorry --non-trivial
lemma new_lemma_159049 (h0 : add_monoid (add_comm_monoid (has_to_string name))) : add_monoid.fg (add_comm_monoid (has_to_string name)) := sorry --non-trivial
lemma new_lemma_159050 (h0 : not (ring (semiring fun_info) -> false)) : @rank_condition.{0} (semiring.{0} fun_info) (@classical.by_contradiction'.{1} (ring.{0} (semiring.{0} fun_info)) h0)  := sorry --non-trivial
lemma new_lemma_159051 (h0 : functor.add_const (topological_space (has_Inf pos)) (has_neg linarith.comp)) : @regular_space.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} pos)) (has_neg.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_159052 (h0 : group (random_gen to_additive.value_type)) : group.fg (random_gen to_additive.value_type) := sorry --non-trivial
lemma new_lemma_159053 (h0 : not (topological_space (semiring linarith.comp) -> false)) : @normal_space.{0} (semiring.{0} linarith.comp) (@id.{1} (topological_space.{0} (semiring.{0} linarith.comp)) (@classical.by_contradiction'.{1} (topological_space.{0} (semiring.{0} linarith.comp)) h0))  := sorry --non-trivial
lemma new_lemma_159054 (h0 : uniform_space (has_zero (ordered_ring pos))) : complete_space (has_zero (ordered_ring pos)) := sorry --non-trivial
lemma new_lemma_159055 (h0 : ring (has_ssubset std_gen)) : is_domain (has_ssubset std_gen) := sorry --non-trivial
lemma new_lemma_159056 (h0 : ring (normed_comm_ring linarith.ineq)) : strong_rank_condition (normed_comm_ring linarith.ineq) := sorry --non-trivial
lemma new_lemma_159057 (h0 : ordered_comm_monoid (generalized_boolean_algebra (has_add (has_pos_part Type)))) : has_exists_mul_of_le (generalized_boolean_algebra (has_add (has_pos_part Type))) := sorry --non-trivial
lemma new_lemma_159058 (h0 : functor.comp topological_space ring pos) : @discrete_topology.{0} (ring.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} ring.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_159059 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (measurable_space.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ring.{0} h0 (measurable_space.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159060 (h0 : topological_space (has_nndist (option ennreal))) : normal_space (has_nndist (option ennreal)) := sorry --non-trivial
lemma new_lemma_159061 (h0 : list (finset Type)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_159062 (h0 : functor.add_const (topological_space (canonically_ordered_comm_semiring unsigned)) Type) : @totally_disconnected_space.{0} (canonically_ordered_comm_semiring.{0} unsigned) (@functor.add_const.run.{0 1} (topological_space.{0} (canonically_ordered_comm_semiring.{0} unsigned)) Type h0)  := sorry --non-trivial
lemma new_lemma_159063 (h0 : group (sub_neg_monoid (has_Inf (has_pos_part pos)))) : is_simple_group (sub_neg_monoid (has_Inf (has_pos_part pos))) := sorry --non-trivial
lemma new_lemma_159064 (h0 : functor.add_const (topological_space (comm_group unsigned)) ennreal) : @t1_space.{0} (comm_group.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} unsigned)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_159065 (h0 : complete_lattice (has_top (has_top (has_norm (has_norm fun_info))))) : is_compactly_generated (has_top (has_top (has_norm (has_norm fun_info)))) := sorry --non-trivial
lemma new_lemma_159066 (h0 : uniform_space (linear_ordered_field (option ennreal))) : separated_space (linear_ordered_field (option ennreal)) := sorry --non-trivial
lemma new_lemma_159067 (h0 : functor.add_const (group (finset linarith.comp)) (finset pos)) : @is_cyclic.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (finset.{0} linarith.comp)) (finset.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_159068 (h0 : topological_space (has_nndist Type)) : preirreducible_space (has_nndist Type) := sorry --non-trivial
lemma new_lemma_159069 (h0 : function.extfun Type (functor.add_const (list (normed_linear_ordered_group empty)))) : list.nodup (functor.add_const.run (function.extfun_app h0 num)) := sorry --non-trivial
lemma new_lemma_159070 (h0 : not (complete_lattice nnreal -> false)) : @is_compactly_generated.{0} nnreal (@classical.by_contradiction'.{1} (complete_lattice.{0} nnreal) h0)  := sorry --non-trivial
lemma new_lemma_159071 (h0 : topological_space (has_Inf (has_Inf pos))) : t0_space (has_Inf (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_159072 (h0 : functor.add_const (topological_space (comm_monoid unsigned)) unsigned) : @preirreducible_space.{0} (comm_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_monoid.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_159073 (h0 : topological_space (add_right_cancel_monoid unsigned)) : path_connected_space (add_right_cancel_monoid unsigned) := sorry --non-trivial
lemma new_lemma_159074 (h0 : not (topological_space (fintype to_additive.value_type) -> false)) : @path_connected_space.{0} (fintype.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (topological_space.{0} (fintype.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_159075 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t1_space.{0} (has_zero.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_zero.{0} name))  := sorry --non-trivial
lemma new_lemma_159076 (h0 : functor.add_const (topological_space (has_neg_part Type)) linarith.comp) : @discrete_topology.{1} (has_neg_part.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_neg_part.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159077 (h0 : topological_space (is_R_or_C (option (option (option (option (option unsigned))))))) : t1_space (is_R_or_C (option (option (option (option (option unsigned)))))) := sorry --non-trivial
lemma new_lemma_159078 (h0 : topological_space (ordered_comm_group (option empty))) : loc_path_connected_space (ordered_comm_group (option empty)) := sorry --non-trivial
lemma new_lemma_159079 (h0 : not (filter (non_assoc_semiring unsigned) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_159080 (h0 : ordered_comm_monoid (boolean_algebra.core (has_to_string Type))) : has_exists_mul_of_le (boolean_algebra.core (has_to_string Type)) := sorry --non-trivial
lemma new_lemma_159081 (h0 : functor.add_const (ring (has_repr pos)) pos) : @strong_rank_condition.{0} (has_repr.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (has_repr.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_159082 (h0 : complete_lattice (random_gen char)) : is_compactly_generated (random_gen char) := sorry --non-trivial
lemma new_lemma_159083 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (has_emptyc.{0} linarith.comp) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (has_emptyc.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_159084 (h0 : filter (with_one empty)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159085 (h0 : ring (has_add (normed_comm_ring linarith.comp))) : is_domain (has_add (normed_comm_ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_159086 (h0 : complete_lattice (semi_normed_comm_ring (has_inv to_additive.value_type))) : is_compactly_generated (semi_normed_comm_ring (has_inv to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_159087 (h0 : functor.add_const (topological_space (has_add pos)) ennreal) : @normal_space.{0} (has_add.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_add.{0} pos)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_159088 (h0 : topological_space (canonically_ordered_monoid (has_bot (has_bot (has_bot Type))))) : path_connected_space (canonically_ordered_monoid (has_bot (has_bot (has_bot Type)))) := sorry --non-trivial
lemma new_lemma_159089 (h0 : list (has_norm (comm_ring (has_top linarith.ineq)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_159090 (h0 : add_group (semigroup (mul_zero_class Type))) : is_add_cyclic (semigroup (mul_zero_class Type)) := sorry --non-trivial
lemma new_lemma_159091 (h0 : complete_lattice (canonically_linear_ordered_monoid pos)) : is_compactly_generated (canonically_linear_ordered_monoid pos) := sorry --non-trivial
lemma new_lemma_159092 (h0 : topological_space (add_left_cancel_semigroup unsigned)) : totally_separated_space (add_left_cancel_semigroup unsigned) := sorry --non-trivial
lemma new_lemma_159093 (h0 : complete_lattice (has_norm (random_gen (random_gen linarith.comp_source)))) : is_atomistic (has_norm (random_gen (random_gen linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_159094 (h0 : functor.add_const (ordered_add_comm_monoid (has_neg Type)) (normed_comm_ring environment.implicit_infer_kind)) : @archimedean.{1} (has_neg.{1} Type) (@functor.add_const.run.{1 0} (ordered_add_comm_monoid.{1} (has_neg.{1} Type)) (normed_comm_ring.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_159095 (h0 : topological_space (boolean_algebra.core unsigned)) : regular_space (boolean_algebra.core unsigned) := sorry --non-trivial
lemma new_lemma_159096 (h0 : functor.add_const (group (has_zero environment.implicit_infer_kind)) name) : @is_simple_group.{0} (has_zero.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (has_zero.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_159097 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (cancel_monoid.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (cancel_monoid.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_159098 (h0 : ordered_comm_monoid (boolean_algebra.core (add_cancel_monoid environment.implicit_infer_kind))) : has_exists_mul_of_le (boolean_algebra.core (add_cancel_monoid environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_159099 (h0 : function.extfun Type topological_space) : @t0_space.{0} (ring.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} name))  := sorry --non-trivial
lemma new_lemma_159100 (h0 : function.extfun Type (functor.add_const (ordered_comm_monoid pos))) : @has_exists_mul_of_le.{0} pos (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} pos) unsigned (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (ordered_comm_monoid.{0} pos)) h0 unsigned))  := sorry --non-trivial
lemma new_lemma_159101 (h0 : add_group (add_semigroup unsigned)) : is_add_cyclic (add_semigroup unsigned) := sorry --non-trivial
lemma new_lemma_159102 (h0 : topological_space (linear_ordered_add_comm_group (random_gen (random_gen linarith.ineq)))) : path_connected_space (linear_ordered_add_comm_group (random_gen (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_159103 (h0 : group (ordered_comm_monoid (finset linarith.comp))) : is_cyclic (ordered_comm_monoid (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_159104 (h0 : filter (with_zero string_imp)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159105 (h0 : group (has_top (measurable_space (has_top num)))) : is_cyclic (has_top (measurable_space (has_top num))) := sorry --non-trivial
lemma new_lemma_159106 (h0 : functor.comp ring has_neg name) : @is_domain.{0} (has_neg.{0} name) (@functor.comp.run.{0 0 0} ring.{0} has_neg.{0} name h0)  := sorry --non-trivial
lemma new_lemma_159107 (h0 : group (has_Sup (semiring (semiring (option num))))) : normalizer_condition (has_Sup (semiring (semiring (option num)))) := sorry --non-trivial
lemma new_lemma_159108 (h0 : topological_space (has_compl (random_gen reducibility_hints))) : path_connected_space (has_compl (random_gen reducibility_hints)) := sorry --non-trivial
lemma new_lemma_159109 (h1 : filter (has_top (complete_semilattice_Sup string_imp))) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_159110 (h0 : semiring (canonically_ordered_comm_semiring (finset (finset pos)))) : is_noetherian_ring (canonically_ordered_comm_semiring (finset (finset pos))) := sorry --non-trivial
lemma new_lemma_159111 (h0 : add_monoid (has_zero (cancel_monoid (comm_group pos)))) : add_monoid.fg (has_zero (cancel_monoid (comm_group pos))) := sorry --non-trivial
lemma new_lemma_159112 (h0 : functor.add_const (topological_space (linear_order unsigned)) empty) : @loc_path_connected_space.{0} (linear_order.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (linear_order.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_159113 (h0 : group (has_neg_part (comm_group name))) : is_cyclic (has_neg_part (comm_group name)) := sorry --non-trivial
lemma new_lemma_159114 (h0 : topological_space (monoid num)) : preconnected_space (monoid num) := sorry --non-trivial
lemma new_lemma_159115 (h0 : not (function.extfun Type monoid -> false)) : @monoid.fg.{0} (with_one.{0} unsigned) (@function.extfun_app.{2 1} Type monoid.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type monoid.{0}) h0) (with_one.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159116 (h0 : measurable_space (add_comm_semigroup environment.projection_info)) (h1 : filter (add_comm_semigroup environment.projection_info)) : filter.is_measurably_generated h1 := sorry --non-trivial
lemma new_lemma_159117 (h0 : topological_space (linear_ordered_semiring (random_gen to_additive.value_type))) : path_connected_space (linear_ordered_semiring (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_159118 (h0 : not (function.extfun Type ring -> false)) : @strong_rank_condition.{0} (has_top.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (has_top.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_159119 (h0 : complete_lattice (with_one (has_nnnorm (has_nnnorm fun_info)))) : is_compactly_generated (with_one (has_nnnorm (has_nnnorm fun_info))) := sorry --non-trivial
lemma new_lemma_159120 (h0 : topological_space (add_monoid to_additive.value_type)) : totally_disconnected_space (add_monoid to_additive.value_type) := sorry --non-trivial
lemma new_lemma_159121 (h0 : functor.add_const (function.extfun Type topological_space) Type) : @totally_disconnected_space.{0} (has_Inf.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type topological_space.{0}) Type h0) (has_Inf.{0} pos))  := sorry --non-trivial
lemma new_lemma_159122 (h0 : functor.add_const (complete_lattice (semiring empty)) congr_arg_kind) : @complete_lattice.is_Sup_finite_compact.{0} (semiring.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (semiring.{0} empty)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_159123 (h1 : ring (distrib char)) : strong_rank_condition (distrib char) := sorry --non-trivial
lemma new_lemma_159124 (h0 : group (with_bot (random_gen string_imp))) : group.fg (with_bot (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_159125 (h0 : ring (add_cancel_monoid (boolean_algebra Type))) : rank_condition (add_cancel_monoid (boolean_algebra Type)) := sorry --non-trivial
lemma new_lemma_159126 (h0 : functor.add_const (function.extfun Type uniform_space) pos) : @complete_space.{0} (boolean_algebra.{0} linarith.comp) (@function.extfun_app.{2 1} Type uniform_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type uniform_space.{0}) pos h0) (boolean_algebra.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_159127 (h3 : group (semi_normed_comm_ring char)) : is_cyclic (semi_normed_comm_ring char) := sorry --non-trivial
lemma new_lemma_159128 (h0 : add_group (linear_ordered_comm_ring congr_arg_kind)) : add_group.fg (linear_ordered_comm_ring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_159129 (h0 : not (add_monoid (measurable_space congr_arg_kind) -> false)) : @add_monoid.fg.{0} (measurable_space.{0} congr_arg_kind) (@classical.by_contradiction'.{1} (add_monoid.{0} (measurable_space.{0} congr_arg_kind)) h0)  := sorry --non-trivial
lemma new_lemma_159130 (h0 : topological_space (add_comm_monoid name)) : irreducible_space (add_comm_monoid name) := sorry --non-trivial
lemma new_lemma_159131 (h0 : complete_lattice (linear_ordered_comm_monoid_with_zero (option (option (option empty))))) : is_compactly_generated (linear_ordered_comm_monoid_with_zero (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_159132 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @t0_space.{1} (comm_group.{1} (has_add.{1} (has_add.{1} (has_add.{1} (comm_group.{1} (has_add.{1} Type)))))) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 topological_space.{1}) (comm_group.{1} (has_add.{1} (has_add.{1} (has_add.{1} (comm_group.{1} (has_add.{1} Type)))))))  := sorry --non-trivial
lemma new_lemma_159133 (h1 : topological_space (fintype char)) : path_connected_space (fintype char) := sorry --non-trivial
lemma new_lemma_159134 (h0 : filter (has_bot empty)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159135 (h0 : not (topological_space (bin_tree num) -> false)) : @totally_disconnected_space.{0} (bin_tree.{0} num) (@classical.by_contradiction'.{1} (topological_space.{0} (bin_tree.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_159136 (h0 : functor.add_const (complete_lattice (mul_zero_class num)) unsigned) : @is_compactly_generated.{0} (mul_zero_class.{0} num) (@functor.add_const.run.{0 0} (complete_lattice.{0} (mul_zero_class.{0} num)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_159137 (h0 : function.extfun Type ring) : @rank_condition.{0} num (@function.extfun_app.{2 1} Type ring.{0} h0 num)  := sorry --non-trivial
lemma new_lemma_159138 (h0 : topological_space (linear_order linarith.ineq)) : t0_space (linear_order linarith.ineq) := sorry --non-trivial
lemma new_lemma_159139 (h0 : topological_space (measurable_space (id linarith.comp))) : discrete_topology (measurable_space (id linarith.comp)) := sorry --non-trivial
lemma new_lemma_159140 (h0 : group (measurable_space empty)) : is_cyclic (measurable_space empty) := sorry --non-trivial
lemma new_lemma_159141 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preconnected_space.{0} (has_pos_part.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_pos_part.{0} name))  := sorry --non-trivial
lemma new_lemma_159142 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preconnected_space.{0} (semigroup.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (semigroup.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_159143 (h0 : topological_space (has_inter num)) : preconnected_space (has_inter num) := sorry --non-trivial
lemma new_lemma_159144 (h2 : set (char -> linarith.ineq)) : set.separates_points h2 := sorry --non-trivial
lemma new_lemma_159145 (h0 : ring (has_one (has_one linarith.comp))) : is_domain (has_one (has_one linarith.comp)) := sorry --non-trivial
lemma new_lemma_159146 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (semilattice_inf.{0} (semiring.{0} unsigned)) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semilattice_inf.{0} (semiring.{0} unsigned)))  := sorry --non-trivial
lemma new_lemma_159147 (h0 : group (sub_neg_monoid (has_Inf linarith.comp))) : is_cyclic (sub_neg_monoid (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_159148 (h0 : functor.add_const (function.extfun (Type 1) add_monoid) pos) : @add_monoid.fg.{1} (add_cancel_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) add_monoid.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) add_monoid.{1}) pos h0) (add_cancel_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_159149 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (ordered_cancel_add_comm_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ordered_cancel_add_comm_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159150 (h0 : fin has_zero.zero) : @is_cyclic.{0} (has_bot.{0} pos) (@matrix.vec_empty.{0} (group.{0} (has_bot.{0} pos)) h0)  := sorry --non-trivial
lemma new_lemma_159151 (h0 : uniform_space linarith.ineq) (h1 : topological_space (uniform_space.separation_quotient linarith.ineq)) : t0_space (uniform_space.separation_quotient linarith.ineq) := sorry --non-trivial
lemma new_lemma_159152 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (has_one.{0} linarith.comp) (@function.extfun_app.{2 1} Type monoid.{0} h0 (has_one.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_159153 (h0 : function.extfun nat fin) : @discrete_topology.{1} (canonically_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (canonically_ordered_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_159154 (h0 : has_mem.mem (metric_space (semiring (has_top num))) has_emptyc.emptyc) : filter.ne_bot (finset.pi.empty filter (metric_space (semiring (has_top num))) h0) := sorry --non-trivial
lemma new_lemma_159155 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_domain.{0} (add_group.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (add_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_159156 (h0 : functor.add_const (uniform_space (has_Inf name)) (has_Inf name)) : @complete_space.{0} (has_Inf.{0} name) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_Inf.{0} name)) (has_Inf.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_159157 (h0 : cancel_comm_monoid_with_zero (add_cancel_monoid pos)) : unique_factorization_monoid (add_cancel_monoid pos) := sorry --non-trivial
lemma new_lemma_159158 (h0 : add_monoid (has_zero (has_to_string (has_add (finset pos))))) : add_monoid.fg (has_zero (has_to_string (has_add (finset pos)))) := sorry --non-trivial
lemma new_lemma_159159 (h0 : string_imp -> dlist (random_gen string_imp)) (h1 : function.extfun Type topological_space) : @t0_space.{0} (dlist.{0} (random_gen.{0} string_imp)) (@topological_space.coinduced.{0 0} string_imp (dlist.{0} (random_gen.{0} string_imp)) h0 (@function.extfun_app.{2 1} Type topological_space.{0} h1 string_imp))  := sorry --non-trivial
lemma new_lemma_159160 (h0 : functor.add_const (topological_space (linear_ordered_add_comm_group_with_top pos)) Type) : @irreducible_space.{0} (linear_ordered_add_comm_group_with_top.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (linear_ordered_add_comm_group_with_top.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_159161 (h0 : topological_space (comm_group (has_neg_part pos))) : preconnected_space (comm_group (has_neg_part pos)) := sorry --non-trivial
lemma new_lemma_159162 (h0 : set (set (has_nnnorm linarith.ineq))) (h1 : has_nnnorm linarith.ineq) : set.sInter h0 h1 := sorry --non-trivial
lemma new_lemma_159163 (h0 : ring (left_cancel_semigroup linarith.comp_source)) : rank_condition (left_cancel_semigroup linarith.comp_source) := sorry --non-trivial
lemma new_lemma_159164 (h0 : ring (cancel_monoid ennreal)) : invariant_basis_number (cancel_monoid ennreal) := sorry --non-trivial
lemma new_lemma_159165 (h0 : topological_space (finset (has_add name))) : t0_space (finset (has_add name)) := sorry --non-trivial
lemma new_lemma_159166 (h0 : complete_lattice (ordered_comm_ring (has_Inf Type))) : is_compactly_generated (ordered_comm_ring (has_Inf Type)) := sorry --non-trivial
lemma new_lemma_159167 (h0 : prod (has_star (semiring congr_arg_kind)) (has_star (semiring congr_arg_kind))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_159168 (h0 : has_mem.mem uniform_space has_emptyc.emptyc) : @complete_space.{0} (measurable_space.{0} fun_info) (@function.extfun_app.{2 1} Type uniform_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) uniform_space.{0} h0) (measurable_space.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_159169 (h0 : ring (lex to_additive.value_type)) : strong_rank_condition (lex to_additive.value_type) := sorry --non-trivial
lemma new_lemma_159170 (h0 : topological_space (complete_distrib_lattice (has_neg pos))) : normal_space (complete_distrib_lattice (has_neg pos)) := sorry --non-trivial
lemma new_lemma_159171 (h0 : functor.add_const (uniform_space (has_to_string pos)) (ring name)) : @separated_space.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_to_string.{0} pos)) (ring.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_159172 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (cancel_monoid.{0} name) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (cancel_monoid.{0} name))  := sorry --non-trivial
lemma new_lemma_159173 (h0 : function.extfun Type topological_space) : @normal_space.{0} (has_nndist.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_nndist.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_159174 (h0 : not (ring (bin_tree empty) -> false)) : @rank_condition.{0} (bin_tree.{0} empty) (@classical.by_contradiction'.{1} (ring.{0} (bin_tree.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_159175 (h0 : topological_space (semilattice_inf real)) : path_connected_space (semilattice_inf real) := sorry --non-trivial
lemma new_lemma_159176 (h0 : complete_lattice (boolean_algebra.core (has_add pos))) : complete_lattice.is_Sup_finite_compact (boolean_algebra.core (has_add pos)) := sorry --non-trivial
lemma new_lemma_159177 (h4 : complete_lattice (normed_field string.iterator_imp)) : complete_lattice.is_Sup_finite_compact (normed_field string.iterator_imp) := sorry --non-trivial
lemma new_lemma_159178 (h0 : functor.add_const (group (boolean_algebra.core empty)) (option num)) : @normalizer_condition.{0} (boolean_algebra.core.{0} empty) (@functor.add_const.run.{0 0} (group.{0} (boolean_algebra.core.{0} empty)) (option.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_159179 (h0 : functor.add_const (complete_lattice (mul_zero_class ennreal)) unsigned) : @is_atomistic.{0} (mul_zero_class.{0} ennreal) (@functor.add_const.run.{0 0} (complete_lattice.{0} (mul_zero_class.{0} ennreal)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_159180 (h0 : topological_space (normed_group (random_gen (random_gen (has_top fun_info))))) : totally_separated_space (normed_group (random_gen (random_gen (has_top fun_info)))) := sorry --non-trivial
lemma new_lemma_159181 (h0 : group (has_bot num)) : normalizer_condition (has_bot num) := sorry --non-trivial
lemma new_lemma_159182 (h0 : add_monoid (sub_neg_monoid (has_Inf real))) : add_monoid.fg (sub_neg_monoid (has_Inf real)) := sorry --non-trivial
lemma new_lemma_159183 (h2 : topological_space (has_ssubset to_additive.value_type)) : t0_space (has_ssubset to_additive.value_type) := sorry --non-trivial
lemma new_lemma_159184 (h0 : not (function.extfun Type monoid -> false)) : @monoid.fg.{0} (with_one.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type monoid.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type monoid.{0}) h0) (with_one.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159185 (h0 : cancel_comm_monoid_with_zero (has_norm (semiring congr_arg_kind))) : unique_factorization_monoid (has_norm (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_159186 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (filter.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (filter.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159187 (h0 : set (has_one string_imp)) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_159188 (h0 : functor.add_const (topological_space (add_cancel_comm_monoid empty)) unsigned) : @path_connected_space.{0} (add_cancel_comm_monoid.{0} empty) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_comm_monoid.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_159189 (h0 : ring (metric_space unsigned)) : is_domain (metric_space unsigned) := sorry --non-trivial
lemma new_lemma_159190 (h0 : has_mem.mem (random_gen congr_arg_kind) has_emptyc.emptyc) : @is_domain.{0} (random_gen.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type ring.{0} (random_gen.{0} congr_arg_kind) h0)  := sorry --non-trivial
lemma new_lemma_159191 (h0 : functor.add_const (topological_space (complete_distrib_lattice linarith.comp)) pos) : @totally_disconnected_space.{0} (complete_distrib_lattice.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_159192 (h0 : add_group (add_group (semiring (semiring congr_arg_kind)))) : is_add_cyclic (add_group (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_159193 (h0 : functor.add_const (topological_space (has_zero pos)) pos) : @t1_space.{0} (has_zero.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_159194 (h0 : not (function.extfun Type ring -> false)) : @is_principal_ideal_ring.{0} (bin_tree.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (bin_tree.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159195 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (monoid_with_zero.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (monoid_with_zero.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159196 (h0 : topological_space (boolean_algebra (has_add unsigned))) : loc_path_connected_space (boolean_algebra (has_add unsigned)) := sorry --non-trivial
lemma new_lemma_159197 (h0 : functor.add_const (filter (normed_comm_ring linarith.comp)) (ring pos)) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159198 (h0 : ordered_add_comm_monoid (boolean_algebra real)) : archimedean (boolean_algebra real) := sorry --non-trivial
lemma new_lemma_159199 (h1 : topological_space (has_compl reducibility_hints)) : t0_space (has_compl reducibility_hints) := sorry --non-trivial
lemma new_lemma_159200 (h0 : complete_lattice (add_comm_monoid (option unsigned))) : is_compactly_generated (add_comm_monoid (option unsigned)) := sorry --non-trivial
lemma new_lemma_159201 (h0 : topological_space (measure_theory.measure_space num)) : path_connected_space (measure_theory.measure_space num) := sorry --non-trivial
lemma new_lemma_159202 (h0 : ring (with_bot fun_info)) : is_domain (with_bot fun_info) := sorry --non-trivial
lemma new_lemma_159203 (h0 : cancel_comm_monoid_with_zero (uniform_space (option num))) : unique_factorization_monoid (uniform_space (option num)) := sorry --non-trivial
lemma new_lemma_159204 (h0 : monoid (id (random_gen (random_gen to_additive.value_type)))) : monoid.fg (id (random_gen (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_159205 (h0 : topological_space (has_inter (option ennreal))) : topological_space.separable_space (has_inter (option ennreal)) := sorry --non-trivial
lemma new_lemma_159206 (h0 : filter (bin_tree (option (option unsigned)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159207 (h0 : topological_space (sub_neg_monoid (has_Inf (has_neg Type)))) : normal_space (sub_neg_monoid (has_Inf (has_neg Type))) := sorry --non-trivial
lemma new_lemma_159208 (h0 : functor.add_const (cancel_comm_monoid_with_zero (has_nndist linarith.comp)) Type) : @unique_factorization_monoid.{0} (has_nndist.{0} linarith.comp) (@functor.add_const.run.{0 1} (cancel_comm_monoid_with_zero.{0} (has_nndist.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_159209 (h1 : not (ring (has_append char) -> false)) : @is_domain.{0} (has_append.{0} char) (@classical.by_contradiction'.{1} (ring.{0} (has_append.{0} char)) h1)  := sorry --non-trivial
lemma new_lemma_159210 (h0 : function.extfun Type topological_space) : @normal_space.{0} (linear_order.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_order.{0} empty))  := sorry --non-trivial
lemma new_lemma_159211 (h1 : monoid (random_gen num)) : monoid.fg (random_gen num) := sorry --non-trivial
lemma new_lemma_159212 (h0 : not (topological_space (with_one empty) -> false)) : @path_connected_space.{0} (with_one.{0} empty) (@classical.by_contradiction'.{1} (topological_space.{0} (with_one.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_159213 (h0 : set (has_le linarith.comp_source)) : set.finite h0 := sorry --non-trivial
lemma new_lemma_159214 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (has_to_string.{0} name) (@function.extfun_app.{2 1} Type monoid.{0} h0 (has_to_string.{0} name))  := sorry --non-trivial
lemma new_lemma_159215 (h0 : functor.add_const (add_group (left_cancel_semigroup empty)) empty) : @is_add_cyclic.{0} (left_cancel_semigroup.{0} empty) (@functor.add_const.run.{0 0} (add_group.{0} (left_cancel_semigroup.{0} empty)) empty h0)  := sorry --non-trivial
lemma new_lemma_159216 (h0 : topological_space (linear_ordered_comm_monoid_with_zero unsigned)) : locally_compact_space (linear_ordered_comm_monoid_with_zero unsigned) := sorry --non-trivial
lemma new_lemma_159217 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (monoid_with_zero.{0} (option.{0} ennreal)) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (monoid_with_zero.{0} (option.{0} ennreal)))  := sorry --non-trivial
lemma new_lemma_159218 (h0 : add_monoid (has_pos_part real)) : add_monoid.fg (has_pos_part real) := sorry --non-trivial
lemma new_lemma_159219 (h1 : set real.angle) : set.finite h1 := sorry --non-trivial
lemma new_lemma_159220 (h0 : topological_space (random_gen (random_gen (random_gen (random_gen linarith.comp_source))))) : t0_space (random_gen (random_gen (random_gen (random_gen linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_159221 (h0 : group (normed_comm_ring (comm_group (comm_group name)))) : is_cyclic (normed_comm_ring (comm_group (comm_group name))) := sorry --non-trivial
lemma new_lemma_159222 (h0 : function.extfun (Type 1 -> Type 1) (function.extfun (Type 1))) : @is_noetherian_ring.{1} (ordered_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) semiring.{1} (@function.extfun_app.{3 3} (Type 1 → Type 1) (function.extfun.{3 2} (Type 1)) h0 semiring.{1}) (ordered_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_159223 (h0 : topological_space (canonically_ordered_comm_semiring (comm_group Type))) : preirreducible_space (canonically_ordered_comm_semiring (comm_group Type)) := sorry --non-trivial
lemma new_lemma_159224 (h0 : function.extfun Type topological_space) : @sequential_space.{0} (has_zero.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_zero.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_159225 (h0 : function.extfun nat fin) : @is_principal_ideal_ring.{1} (ordered_comm_ring.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (ordered_comm_ring.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_159226 (h0 : topological_space (ring (ordered_ring (ring Type)))) : preirreducible_space (ring (ordered_ring (ring Type))) := sorry --non-trivial
lemma new_lemma_159227 (h0 : function.extfun Type ordered_comm_monoid) : @has_exists_mul_of_le.{0} (complete_distrib_lattice.{0} name) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} h0 (complete_distrib_lattice.{0} name))  := sorry --non-trivial
lemma new_lemma_159228 (h1 : uniform_space (dlist linarith.ineq)) : complete_space (dlist linarith.ineq) := sorry --non-trivial
lemma new_lemma_159229 (h0 : filter (has_inter ennreal)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159230 (h0 : topological_space (has_zero linarith.comp)) : path_connected_space (has_zero linarith.comp) := sorry --non-trivial
lemma new_lemma_159231 (h0 : ring (has_norm num)) : rank_condition (has_norm num) := sorry --non-trivial
lemma new_lemma_159232 (h0 : topological_space (linear_ordered_cancel_comm_monoid empty)) : topological_space.separable_space (linear_ordered_cancel_comm_monoid empty) := sorry --non-trivial
lemma new_lemma_159233 (h0 : ordered_add_comm_monoid (has_Inf (finset linarith.comp))) : archimedean (has_Inf (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_159234 (h0 : functor.add_const (group (add_cancel_monoid pos)) Type) : @is_cyclic.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 1} (group.{0} (add_cancel_monoid.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_159235 (h0 : complete_lattice (semiring (semiring congr_arg_kind))) : is_compactly_generated (semiring (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_159236 (h1 : group (linear_ordered_add_comm_group fun_info)) : group.fg (linear_ordered_add_comm_group fun_info) := sorry --non-trivial
lemma new_lemma_159237 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @path_connected_space.{0} to_additive.value_type (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) to_additive.value_type)  := sorry --non-trivial
lemma new_lemma_159238 (h0 h1 : set (char -> enat)) : set.separates_points (set.union h0 h1) := sorry --non-trivial
lemma new_lemma_159239 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (simple_graph.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (simple_graph.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159240 (h1 : topological_space (with_one (with_bot (with_bot (with_bot linarith.comp_source))))) : totally_separated_space (with_one (with_bot (with_bot (with_bot linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_159241 (h0 : functor.add_const (topological_space (has_to_string Type)) name) : @locally_compact_space.{1} (has_to_string.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_to_string.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_159242 (h0 : function.extfun Type ordered_comm_monoid) : @has_exists_mul_of_le.{0} (has_neg_part.{0} ennreal) (@function.extfun_app.{2 1} Type ordered_comm_monoid.{0} h0 (has_neg_part.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_159243 (h0 : uniform_space (canonically_ordered_monoid (has_pos_part pos))) : complete_space (canonically_ordered_monoid (has_pos_part pos)) := sorry --non-trivial
lemma new_lemma_159244 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem complete_lattice)) : @complete_lattice.is_Sup_finite_compact.{0} (has_emptyc.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) complete_lattice.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) complete_lattice.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (has_emptyc.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_159245 (h0 : functor.add_const (topological_space (has_Inf Type)) linarith.comp) : @preirreducible_space.{1} (has_Inf.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_Inf.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159246 (h0 : add_group (option (ring unsigned))) : is_add_cyclic (option (ring unsigned)) := sorry --non-trivial
lemma new_lemma_159247 (h0 : ring (has_zero name)) : strong_rank_condition (has_zero name) := sorry --non-trivial
lemma new_lemma_159248 (h0 : ordered_comm_monoid (ordered_comm_monoid (has_add (has_add (has_add (has_add real)))))) : has_exists_mul_of_le (ordered_comm_monoid (has_add (has_add (has_add (has_add real))))) := sorry --non-trivial
lemma new_lemma_159249 (h0 : topological_space (omega_complete_partial_order (semiring unsigned))) : irreducible_space (omega_complete_partial_order (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_159250 (h0 : function.extfun Type topological_space) : @t0_space.{0} (group_with_zero.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (group_with_zero.{0} num))  := sorry --non-trivial
lemma new_lemma_159251 (h0 : function.extfun Type (functor.add_const (uniform_space (canonically_linear_ordered_monoid empty)))) : @complete_space.{0} (canonically_linear_ordered_monoid.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (canonically_linear_ordered_monoid.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (uniform_space.{0} (canonically_linear_ordered_monoid.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_159252 (h0 : complete_lattice (random_gen (has_compl string.iterator_imp))) : is_compactly_generated (random_gen (has_compl string.iterator_imp)) := sorry --non-trivial
lemma new_lemma_159253 (h0 : topological_space (linear_ordered_comm_monoid_with_zero (semiring (semiring empty)))) : totally_separated_space (linear_ordered_comm_monoid_with_zero (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_159254 (h0 : finset (is_R_or_C num)) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_159255 (h0 : ordered_add_comm_monoid (group_with_zero num)) : archimedean (group_with_zero num) := sorry --non-trivial
lemma new_lemma_159256 (h0 : prod (normed_group empty) (normed_group empty)) : id_rel h0 := sorry --non-trivial
lemma new_lemma_159257 (h0 : ring string.iterator) : rank_condition string.iterator := sorry --non-trivial
lemma new_lemma_159258 (h0 : ring (semigroup (option pos))) : rank_condition (semigroup (option pos)) := sorry --non-trivial
lemma new_lemma_159259 (h0 : list (has_inner (option (option (option (option (option (option empty)))))) unsigned)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_159260 (h0 : topological_space (complete_linear_order (semiring num))) : topological_space.separable_space (complete_linear_order (semiring num)) := sorry --non-trivial
lemma new_lemma_159261 (h0 : has_mem.mem to_additive.value_type has_emptyc.emptyc) : @separated_space.{0} to_additive.value_type (@finset.pi.empty.{1 0} Type uniform_space.{0} to_additive.value_type h0)  := sorry --non-trivial
lemma new_lemma_159262 (h0 : finset (preorder (semiring unsigned))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_159263 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (ordered_comm_group.{0} (option.{0} empty)) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (ordered_comm_group.{0} (option.{0} empty)))  := sorry --non-trivial
lemma new_lemma_159264 (h0 : filter (linear_ordered_comm_monoid_with_zero empty)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159265 (h0 : ring (with_one (semiring (semiring (semiring congr_arg_kind))))) : strong_rank_condition (with_one (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_159266 (h0 : topological_space (generalized_boolean_algebra (sub_neg_monoid pos))) : discrete_topology (generalized_boolean_algebra (sub_neg_monoid pos)) := sorry --non-trivial
lemma new_lemma_159267 (h0 : ordered_add_comm_monoid (has_edist num)) : archimedean (has_edist num) := sorry --non-trivial
lemma new_lemma_159268 (h0 : topological_space (add_comm_monoid (has_bot (sub_neg_monoid pos)))) : regular_space (add_comm_monoid (has_bot (sub_neg_monoid pos))) := sorry --non-trivial
lemma new_lemma_159269 (h0 : ring (finset (option (option ennreal)))) : strong_rank_condition (finset (option (option ennreal))) := sorry --non-trivial
lemma new_lemma_159270 (h0 : not (topological_space (add_group linarith.comp) -> false)) : @totally_separated_space.{0} (add_group.{0} linarith.comp) (@classical.by_contradiction'.{1} (topological_space.{0} (add_group.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_159271 (h0 : topological_space (plift (option empty))) : discrete_topology (plift (option empty)) := sorry --non-trivial
lemma new_lemma_159272 (h0 : functor.add_const (function.extfun Type topological_space) name) : @normal_space.{0} (boolean_algebra.core.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) name h0) (boolean_algebra.core.{0} name))  := sorry --non-trivial
lemma new_lemma_159273 (h0 : topological_space (has_lt (has_nnnorm linarith.ineq))) : t0_space (has_lt (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_159274 (h0 : ordered_comm_monoid (ordered_comm_monoid (ring (boolean_algebra.core pos)))) : has_exists_mul_of_le (ordered_comm_monoid (ring (boolean_algebra.core pos))) := sorry --non-trivial
lemma new_lemma_159275 (h0 : functor.add_const (complete_lattice (has_neg_part ennreal)) ennreal) : @is_atomistic.{0} (has_neg_part.{0} ennreal) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_neg_part.{0} ennreal)) ennreal h0)  := sorry --non-trivial
lemma new_lemma_159276 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : filter.ne_bot (function.extfun_app (function.extfun_app h0 filter) (has_dist empty)) := sorry --non-trivial
lemma new_lemma_159277 (h0 : topological_space (has_to_string environment.implicit_infer_kind)) : t1_space (has_to_string environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_159278 (h0 : functor.add_const (fin has_zero.zero) real) : @is_atomistic.{0} (canonically_ordered_monoid.{0} pos) (@matrix.vec_empty.{0} (complete_lattice.{0} (canonically_ordered_monoid.{0} pos)) (@functor.add_const.run.{0 0} (fin (@has_zero.zero.{0} nat nat.has_zero)) real h0))  := sorry --non-trivial
lemma new_lemma_159279 (h0 : group (has_emptyc (has_top linarith.comp_source))) : is_cyclic (has_emptyc (has_top linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_159280 (h0 : ordered_comm_monoid (complete_distrib_lattice (sub_neg_monoid (sub_neg_monoid Type)))) : has_exists_mul_of_le (complete_distrib_lattice (sub_neg_monoid (sub_neg_monoid Type))) := sorry --non-trivial
lemma new_lemma_159281 (h0 : function.extfun Type measurable_space) (h1 : function.extfun (Type 1) has_mul) : @set.center.{1} Type (@function.extfun_app.{3 2} (Type 1) has_mul.{1} h1 Type) (@measure_theory.measure.{0} (has_edist.{0} empty) (@function.extfun_app.{2 1} Type measurable_space.{0} h0 (has_edist.{0} empty)))  := sorry --non-trivial
lemma new_lemma_159282 (h0 : functor.add_const (ring (has_edist num)) congr_arg_kind) : @is_domain.{0} (has_edist.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (has_edist.{0} num)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_159283 (h0 : monoid (linear_ordered_add_comm_group (random_gen (random_gen (random_gen fun_info))))) : monoid.fg (linear_ordered_add_comm_group (random_gen (random_gen (random_gen fun_info)))) := sorry --non-trivial
lemma new_lemma_159284 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (dlist.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (dlist.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_159285 (h0 : topological_space (complete_distrib_lattice (option num))) : discrete_topology (complete_distrib_lattice (option num)) := sorry --non-trivial
lemma new_lemma_159286 (h0 : uniform_space (complete_linear_order congr_arg_kind)) : complete_space (complete_linear_order congr_arg_kind) := sorry --non-trivial
lemma new_lemma_159287 (h0 : topological_space num) : normal_space num := sorry --non-trivial
lemma new_lemma_159288 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (complete_semilattice_Sup.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (complete_semilattice_Sup.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_159289 (h0 : topological_space (complete_distrib_lattice (has_add pos))) : regular_space (complete_distrib_lattice (has_add pos)) := sorry --non-trivial
lemma new_lemma_159290 (h1 : group (linear_ordered_add_comm_group (random_gen string_imp))) : is_cyclic (linear_ordered_add_comm_group (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_159291 (h0 : group (random_gen (has_top (has_top linarith.comp_source)))) : normalizer_condition (random_gen (has_top (has_top linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_159292 (h0 : has_mem.mem (has_norm linarith.comp) has_emptyc.emptyc) : @is_domain.{0} (has_norm.{0} linarith.comp) (@finset.pi.empty.{1 0} Type ring.{0} (has_norm.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_159293 (h0 : topological_space (has_norm (semiring empty))) : path_connected_space (has_norm (semiring empty)) := sorry --non-trivial
lemma new_lemma_159294 (h0 : functor.add_const (topological_space (has_add Type)) linarith.comp) : @irreducible_space.{1} (has_add.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_add.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159295 (h0 : topological_space (complete_distrib_lattice Type)) : totally_separated_space (complete_distrib_lattice Type) := sorry --non-trivial
lemma new_lemma_159296 (h0 : ring (has_inv string_imp)) : rank_condition (has_inv string_imp) := sorry --non-trivial
lemma new_lemma_159297 (h0 : add_monoid (mul_zero_class (finset (canonically_linear_ordered_monoid (has_to_string pos))))) : add_monoid.fg (mul_zero_class (finset (canonically_linear_ordered_monoid (has_to_string pos)))) := sorry --non-trivial
lemma new_lemma_159298 (h1 : measurable_space (nondiscrete_normed_field string.iterator_imp)) (h2 : measure_theory.measure (nondiscrete_normed_field string.iterator_imp)) : measure_theory.is_finite_measure h2 := sorry --non-trivial
lemma new_lemma_159299 (h0 : functor.add_const (topological_space (ordered_comm_ring name)) pos) : @sequential_space.{0} (ordered_comm_ring.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_comm_ring.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_159300 (h0 : topological_space (has_add (has_neg_part name))) : topological_space.separable_space (has_add (has_neg_part name)) := sorry --non-trivial
lemma new_lemma_159301 (h0 : topological_space (boolean_algebra (has_bot name))) : t1_space (boolean_algebra (has_bot name)) := sorry --non-trivial
lemma new_lemma_159302 (h0 : complete_lattice (simple_graph (option unsigned))) : is_atomistic (simple_graph (option unsigned)) := sorry --non-trivial
lemma new_lemma_159303 (h0 : ring (uniform_space (has_nnnorm real))) : is_domain (uniform_space (has_nnnorm real)) := sorry --non-trivial
lemma new_lemma_159304 (h0 : topological_space (generalized_boolean_algebra (has_Inf (has_Inf linarith.comp)))) : locally_compact_space (generalized_boolean_algebra (has_Inf (has_Inf linarith.comp))) := sorry --non-trivial
lemma new_lemma_159305 (h0 : group (comm_group (ring Type))) : group.fg (comm_group (ring Type)) := sorry --non-trivial
lemma new_lemma_159306 (h0 : topological_space (normed_comm_ring (has_pos_part (ring pos)))) : t0_space (normed_comm_ring (has_pos_part (ring pos))) := sorry --non-trivial
lemma new_lemma_159307 (h0 : measurable_space std_gen) (h3 : filter std_gen) : filter.is_measurably_generated h3 := sorry --non-trivial
lemma new_lemma_159308 (h0 : topological_space (has_add (sub_neg_monoid (has_Inf (ordered_comm_monoid pos))))) : discrete_topology (has_add (sub_neg_monoid (has_Inf (ordered_comm_monoid pos)))) := sorry --non-trivial
lemma new_lemma_159309 (h0 : group (has_neg pos)) : is_cyclic (has_neg pos) := sorry --non-trivial
lemma new_lemma_159310 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (with_zero.{0} string_imp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (with_zero.{0} string_imp))  := sorry --non-trivial
lemma new_lemma_159311 (h0 : add_group (has_dist unsigned)) : is_add_cyclic (has_dist unsigned) := sorry --non-trivial
lemma new_lemma_159312 (h0 : topological_space (has_dist unsigned)) : normal_space (has_dist unsigned) := sorry --non-trivial
lemma new_lemma_159313 (h0 : topological_space (mul_zero_class (finset (finset name)))) : t0_space (mul_zero_class (finset (finset name))) := sorry --non-trivial
lemma new_lemma_159314 (h0 : functor.add_const (group (has_pos_part linarith.comp)) (has_neg (has_neg name))) : @group.fg.{0} (has_pos_part.{0} linarith.comp) (@functor.add_const.run.{0 0} (group.{0} (has_pos_part.{0} linarith.comp)) (has_neg.{0} (has_neg.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_159315 (h0 : add_group (has_add (has_neg (ring Type)))) : is_add_cyclic (has_add (has_neg (ring Type))) := sorry --non-trivial
lemma new_lemma_159316 (h0 : functor.add_const (monoid (has_neg environment.implicit_infer_kind)) (finset linarith.comp)) : @monoid.fg.{0} (has_neg.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (monoid.{0} (has_neg.{0} environment.implicit_infer_kind)) (finset.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_159317 (h0 : function.extfun Type group) : @is_cyclic.{0} (pseudo_metric_space.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (pseudo_metric_space.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159318 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @complete_space.{0} (normed_group.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) uniform_space.{0}) (normed_group.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_159319 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (omega_complete_partial_order.{0} empty) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (omega_complete_partial_order.{0} empty))  := sorry --non-trivial
lemma new_lemma_159320 (h0 : semiring enat) (h1 : ideal enat) : ideal.is_prime h1 := sorry --non-trivial
lemma new_lemma_159321 (h0 : group (canonically_linear_ordered_monoid (has_Inf (ordered_comm_monoid (has_Inf Type))))) : group.fg (canonically_linear_ordered_monoid (has_Inf (ordered_comm_monoid (has_Inf Type)))) := sorry --non-trivial
lemma new_lemma_159322 (h0 : list (finset (option ennreal))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_159323 (h0 : list (add_cancel_comm_monoid num)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_159324 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (monoid_with_zero.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (monoid_with_zero.{0} pos))  := sorry --non-trivial
lemma new_lemma_159325 (h0 : add_group (has_inv (has_nnnorm linarith.comp_source))) : is_add_cyclic (has_inv (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_159326 (h0 : functor.add_const (ring (canonically_ordered_add_monoid empty)) (option empty)) : @is_domain.{0} (canonically_ordered_add_monoid.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (canonically_ordered_add_monoid.{0} empty)) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_159327 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : filter.ne_bot (function.extfun_app (function.extfun_app h0 filter) (add_comm_monoid unsigned)) := sorry --non-trivial
lemma new_lemma_159328 (h0 : function.extfun Type add_group) : @is_add_cyclic.{0} (dlist.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type add_group.{0} h0 (dlist.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_159329 (h0 : functor.add_const (topological_space (semigroup environment.implicit_infer_kind)) linarith.comp) : @topological_space.separable_space.{0} (semigroup.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (semigroup.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159330 (h0 : ring (canonically_linear_ordered_monoid (has_neg name))) : is_domain (canonically_linear_ordered_monoid (has_neg name)) := sorry --non-trivial
lemma new_lemma_159331 (h0 : list (normed_comm_ring (finset environment.implicit_infer_kind))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_159332 (h0 : topological_space (has_Inf (has_neg (has_neg name)))) : t1_space (has_Inf (has_neg (has_neg name))) := sorry --non-trivial
lemma new_lemma_159333 (h0 : functor.add_const (topological_space (comm_group ennreal)) unsigned) : @totally_separated_space.{0} (comm_group.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} ennreal)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_159334 (h0 : ring (has_union (has_union (has_union linarith.comp)))) : rank_condition (has_union (has_union (has_union linarith.comp))) := sorry --non-trivial
lemma new_lemma_159335 (h0 : topological_space (has_pos_part (ordered_comm_monoid Type))) : sequential_space (has_pos_part (ordered_comm_monoid Type)) := sorry --non-trivial
lemma new_lemma_159336 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (pseudo_metric_space.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (pseudo_metric_space.{0} pos))  := sorry --non-trivial
lemma new_lemma_159337 (h0 : ring (cancel_monoid (finset Type))) : strong_rank_condition (cancel_monoid (finset Type)) := sorry --non-trivial
lemma new_lemma_159338 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_disconnected_space.{0} (add_group.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (add_group.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159339 (h0 : complete_lattice (measurable_space (with_bot linarith.comp_source))) : complete_lattice.is_Sup_finite_compact (measurable_space (with_bot linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_159340 (h0 : ordered_add_comm_monoid (has_to_string (ring (finset (has_neg (has_neg pos)))))) : archimedean (has_to_string (ring (finset (has_neg (has_neg pos))))) := sorry --non-trivial
lemma new_lemma_159341 (h1 : not (uniform_space (distrib linarith.comp_source) -> false)) : @complete_space.{0} (distrib.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (uniform_space.{0} (distrib.{0} linarith.comp_source)) h1)  := sorry --non-trivial
lemma new_lemma_159342 (h0 : topological_space (add_cancel_monoid (has_neg_part Type))) : preconnected_space (add_cancel_monoid (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_159343 (h0 : functor.add_const (filter (normed_comm_ring unsigned)) environment.implicit_infer_kind) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159344 (h0 : add_monoid (ordered_comm_ring Type)) : add_monoid.fg (ordered_comm_ring Type) := sorry --non-trivial
lemma new_lemma_159345 (h0 h1 : multiset (nondiscrete_normed_field enat)) : multiset.subset h0 h1 := sorry --non-trivial
lemma new_lemma_159346 (h0 : functor.add_const (ring (canonically_ordered_monoid real)) (has_neg (has_neg name))) : @is_principal_ideal_ring.{0} (canonically_ordered_monoid.{0} real) (@functor.add_const.run.{0 0} (ring.{0} (canonically_ordered_monoid.{0} real)) (has_neg.{0} (has_neg.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_159347 (h0 : topological_space (linear_ordered_field (option (option empty)))) : totally_disconnected_space (linear_ordered_field (option (option empty))) := sorry --non-trivial
lemma new_lemma_159348 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem add_monoid)) : @add_monoid.fg.{0} unsigned (@function.extfun_app.{2 1} Type add_monoid.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) add_monoid.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) add_monoid.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) unsigned)  := sorry --non-trivial
lemma new_lemma_159349 (h1 : topological_space (denumerable linarith.comp_source)) : totally_disconnected_space (denumerable linarith.comp_source) := sorry --non-trivial
lemma new_lemma_159350 (h0 : functor.add_const (uniform_space (add_cancel_comm_monoid num)) empty) : @complete_space.{0} (add_cancel_comm_monoid.{0} num) (@functor.add_const.run.{0 0} (uniform_space.{0} (add_cancel_comm_monoid.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_159351 (h0 : group (with_bot (random_gen (has_top (has_top linarith.comp_source))))) : is_cyclic (with_bot (random_gen (has_top (has_top linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_159352 (h0 : functor.add_const (topological_space (boolean_algebra unsigned)) (has_nndist Type)) : @topological_space.separable_space.{0} (boolean_algebra.{0} unsigned) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.{0} unsigned)) (has_nndist.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_159353 (h0 : add_monoid (add_cancel_monoid (finset ennreal))) : add_monoid.fg (add_cancel_monoid (finset ennreal)) := sorry --non-trivial
lemma new_lemma_159354 (h0 : topological_space (semiring (has_norm (has_norm linarith.comp_source)))) : locally_compact_space (semiring (has_norm (has_norm linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_159355 (h0 : not (ring empty -> false)) : @strong_rank_condition.{0} empty (@classical.by_contradiction'.{1} (ring.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_159356 (h0 : functor.add_const (group (sub_neg_monoid name)) linarith.comp) : @is_simple_group.{0} (sub_neg_monoid.{0} name) (@functor.add_const.run.{0 0} (group.{0} (sub_neg_monoid.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159357 (h0 : ordered_comm_monoid (complete_distrib_lattice (has_add (has_Inf (has_neg (has_add pos)))))) : has_exists_mul_of_le (complete_distrib_lattice (has_add (has_Inf (has_neg (has_add pos))))) := sorry --non-trivial
lemma new_lemma_159358 (h0 : topological_space (add_cancel_monoid (has_add (comm_group Type)))) : totally_separated_space (add_cancel_monoid (has_add (comm_group Type))) := sorry --non-trivial
lemma new_lemma_159359 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (filter.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (filter.{0} empty))  := sorry --non-trivial
lemma new_lemma_159360 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : filter.ne_bot (function.extfun_app (function.extfun_app h0 filter) (add_group congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_159361 (h0 : not (ring char -> false)) : @strong_rank_condition.{0} char (@classical.by_contradiction'.{1} (ring.{0} char) h0)  := sorry --non-trivial
lemma new_lemma_159362 (h0 : topological_space (normed_comm_ring (finset pos))) : sequential_space (normed_comm_ring (finset pos)) := sorry --non-trivial
lemma new_lemma_159363 (h0 : functor.add_const (ordered_add_comm_monoid (boolean_algebra name)) unsigned) : @archimedean.{0} (boolean_algebra.{0} name) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (boolean_algebra.{0} name)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_159364 (h0 : functor.add_const (function.extfun Type add_group) pos) : @is_add_cyclic.{0} (normed_comm_ring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type add_group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type add_group.{0}) pos h0) (normed_comm_ring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_159365 (h0 : group (non_assoc_semiring congr_arg_kind)) : group.fg (non_assoc_semiring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_159366 (h0 : functor.comp filter has_nndist name) : countable_Inter_filter (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_159367 (h0 : functor.add_const (fin has_zero.zero) pos) : @unique_factorization_monoid.{1} (ordered_comm_monoid.{1} Type) (@matrix.vec_empty.{1} (cancel_comm_monoid_with_zero.{1} (ordered_comm_monoid.{1} Type)) (@functor.add_const.run.{0 0} (fin (@has_zero.zero.{0} nat nat.has_zero)) pos h0))  := sorry --non-trivial
lemma new_lemma_159368 (h0 : functor.add_const (ordered_comm_monoid (has_pos_part linarith.comp)) (has_neg Type)) : @has_exists_mul_of_le.{0} (has_pos_part.{0} linarith.comp) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (has_pos_part.{0} linarith.comp)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_159369 (h0 : has_nnnorm string_imp -> has_nnnorm string_imp -> Prop) : is_trans (has_nnnorm string_imp) h0 := sorry --non-trivial
lemma new_lemma_159370 (h0 : topological_space (add_cancel_monoid congr_arg_kind)) : path_connected_space (add_cancel_monoid congr_arg_kind) := sorry --non-trivial
lemma new_lemma_159371 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (semigroup.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (semigroup.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159372 (h0 : group (has_zero ennreal)) : group.fg (has_zero ennreal) := sorry --non-trivial
lemma new_lemma_159373 (h0 : group (finset (has_add (has_nndist pos)))) : is_simple_group (finset (has_add (has_nndist pos))) := sorry --non-trivial
lemma new_lemma_159374 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (left_cancel_monoid.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (left_cancel_monoid.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159375 (h1 : has_lt (has_nnnorm std_gen)) : no_max_order (has_nnnorm std_gen) := sorry --non-trivial
lemma new_lemma_159376 (h3 : has_mul linarith.ineq) (h4 : set (linarith.ineq -> con linarith.ineq)) : set.separates_points h4 := sorry --non-trivial
lemma new_lemma_159377 (h0 : add_group (with_one (has_top (has_norm empty)))) : is_add_cyclic (with_one (has_top (has_norm empty))) := sorry --non-trivial
lemma new_lemma_159378 (h0 : functor.add_const (topological_space (has_nndist unsigned)) pos) : @locally_compact_space.{0} (has_nndist.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (has_nndist.{0} unsigned)) pos h0)  := sorry --non-trivial
lemma new_lemma_159379 (h0 : topological_space (dlist (random_gen (has_ssubset (random_gen to_additive.value_type))))) : path_connected_space (dlist (random_gen (has_ssubset (random_gen to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_159380 (h0 : complete_lattice (has_ssubset (random_gen (has_lt linarith.comp_source)))) : complete_lattice.is_Sup_finite_compact (has_ssubset (random_gen (has_lt linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_159381 (h0 : measurable_space char) (h1 : has_sup char) : has_measurable_sup char := sorry --non-trivial
lemma new_lemma_159382 (h0 : function.extfun Type finset) (h1 : finset.nonempty (id (function.extfun_app h0 Prop))) : @finset.max'.{0} Prop Prop.linear_order (@id.{1} (finset.{0} Prop) (@function.extfun_app.{2 1} Type finset.{0} h0 Prop)) h1  := sorry --non-trivial
lemma new_lemma_159383 (h0 : topological_space (with_one (has_sub empty))) : totally_separated_space (with_one (has_sub empty)) := sorry --non-trivial
lemma new_lemma_159384 (h0 : functor.add_const (topological_space (add_cancel_monoid environment.implicit_infer_kind)) name) : @irreducible_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_159385 (h1 : complete_lattice (has_compl std_gen)) : complete_lattice.is_Sup_finite_compact (has_compl std_gen) := sorry --non-trivial
lemma new_lemma_159386 (h0 : topological_space (partial_order (has_top (has_top (has_top (semiring empty)))))) : totally_separated_space (partial_order (has_top (has_top (has_top (semiring empty))))) := sorry --non-trivial
lemma new_lemma_159387 (h0 : function.extfun Type multiset) : multiset.nodup (function.extfun_app h0 (linear_ordered_comm_monoid_with_zero unsigned)) := sorry --non-trivial
lemma new_lemma_159388 (h1 : not (topological_space (denumerable linarith.comp_source) -> false)) : @path_connected_space.{0} (denumerable.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (denumerable.{0} linarith.comp_source)) h1)  := sorry --non-trivial
lemma new_lemma_159389 (h0 : functor.add_const (ring (finset pos)) (has_nndist linarith.comp)) : @is_principal_ideal_ring.{0} (finset.{0} pos) (@functor.add_const.run.{0 0} (ring.{0} (finset.{0} pos)) (has_nndist.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_159390 (h0 : functor.add_const (ring (boolean_algebra.core name)) pos) : @rank_condition.{0} (boolean_algebra.core.{0} name) (@functor.add_const.run.{0 0} (ring.{0} (boolean_algebra.core.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_159391 (h0 : list (bin_tree num)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_159392 (h0 : fin has_zero.zero) : @t0_space.{0} (canonically_linear_ordered_monoid.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (canonically_linear_ordered_monoid.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_159393 (h0 : functor.add_const (topological_space (free_add_monoid congr_arg_kind)) congr_arg_kind) : @path_connected_space.{0} (free_add_monoid.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (free_add_monoid.{0} congr_arg_kind)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_159394 (h0 : not (topological_space (linear_ordered_add_comm_group char) -> false)) : @totally_disconnected_space.{0} (linear_ordered_add_comm_group.{0} char) (@classical.by_contradiction'.{1} (topological_space.{0} (linear_ordered_add_comm_group.{0} char)) h0)  := sorry --non-trivial
lemma new_lemma_159395 (h0 : functor.add_const (group (cancel_monoid Type)) Type) : @is_cyclic.{1} (cancel_monoid.{1} Type) (@functor.add_const.run.{1 1} (group.{1} (cancel_monoid.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_159396 (h0 : complete_lattice (semigroup (boolean_algebra.core (boolean_algebra.core name)))) : is_compactly_generated (semigroup (boolean_algebra.core (boolean_algebra.core name))) := sorry --non-trivial
lemma new_lemma_159397 (h0 : functor.add_const (function.extfun Type topological_space) linarith.comp) : @preirreducible_space.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) linarith.comp h0) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_159398 (h0 : function.extfun Type (functor.comp list canonically_ordered_comm_semiring)) : list.nodup (functor.comp.run (function.extfun_app h0 unsigned)) := sorry --non-trivial
lemma new_lemma_159399 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (has_inter.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_inter.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_159400 (h1 : ring (with_bot (has_top (has_top linarith.ineq)))) : is_domain (with_bot (has_top (has_top linarith.ineq))) := sorry --non-trivial
lemma new_lemma_159401 (h0 : topological_space num) : locally_compact_space num := sorry --non-trivial
lemma new_lemma_159402 (h0 : ring (semi_normed_comm_ring (random_gen linarith.ineq))) : is_domain (semi_normed_comm_ring (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_159403 (h0 : functor.add_const (list (boolean_algebra linarith.comp)) linarith.comp) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159404 (h0 : complete_lattice (complete_semilattice_Sup (semiring unsigned))) : is_atomistic (complete_semilattice_Sup (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_159405 (h0 : topological_space (semi_normed_ring (uniform_space (mul_one_class string.iterator_imp)))) : totally_disconnected_space (semi_normed_ring (uniform_space (mul_one_class string.iterator_imp))) := sorry --non-trivial
lemma new_lemma_159406 (h0 : group (has_top (random_gen congr_arg_kind))) : is_cyclic (has_top (random_gen congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_159407 (h0 : functor.add_const (topological_space (add_cancel_monoid linarith.comp)) (ring pos)) : @sequential_space.{0} (add_cancel_monoid.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} linarith.comp)) (ring.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_159408 (h0 : ring (semi_normed_comm_ring (has_lt reducibility_hints))) : strong_rank_condition (semi_normed_comm_ring (has_lt reducibility_hints)) := sorry --non-trivial
lemma new_lemma_159409 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (cancel_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (cancel_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159410 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem monoid)) : @monoid.fg.{0} fun_info (@function.extfun_app.{2 1} Type monoid.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) monoid.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) monoid.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) fun_info)  := sorry --non-trivial
lemma new_lemma_159411 (h0 : topological_space (ordered_comm_group (option (option (option empty))))) : irreducible_space (ordered_comm_group (option (option (option empty)))) := sorry --non-trivial
lemma new_lemma_159412 (h0 : topological_space (has_add ennreal)) : totally_separated_space (has_add ennreal) := sorry --non-trivial
lemma new_lemma_159413 (h0 : has_mem.mem (random_gen num) has_emptyc.emptyc) : @separated_space.{0} (random_gen.{0} num) (@finset.pi.empty.{1 0} Type uniform_space.{0} (random_gen.{0} num) h0)  := sorry --non-trivial
lemma new_lemma_159414 (h0 : function.extfun Type finset) : finset.nonempty (function.extfun_app h0 (pseudo_metric_space num)) := sorry --non-trivial
lemma new_lemma_159415 (h0 : functor.comp monoid has_to_string name) : @monoid.fg.{0} (has_to_string.{0} name) (@functor.comp.run.{0 0 0} monoid.{0} has_to_string.{0} name h0)  := sorry --non-trivial
lemma new_lemma_159416 (h0 : fin has_zero.zero) : @is_compactly_generated.{1} (has_pos_part.{1} Type) (@matrix.vec_empty.{1} (complete_lattice.{1} (has_pos_part.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_159417 (h0 : topological_space (semiring (random_gen to_additive.value_type))) : totally_disconnected_space (semiring (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_159418 (h0 : functor.comp topological_space semigroup name) : @topological_space.separable_space.{0} (semigroup.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} semigroup.{0} name h0)  := sorry --non-trivial
lemma new_lemma_159419 (h0 : topological_space (has_one (random_gen (semiring (has_top linarith.comp))))) : normal_space (has_one (random_gen (semiring (has_top linarith.comp)))) := sorry --non-trivial
lemma new_lemma_159420 (h0 : ring (normed_lattice_add_comm_group (has_bot pos))) : strong_rank_condition (normed_lattice_add_comm_group (has_bot pos)) := sorry --non-trivial
lemma new_lemma_159421 (h0 : ring (left_cancel_monoid (semiring empty))) : strong_rank_condition (left_cancel_monoid (semiring empty)) := sorry --non-trivial
lemma new_lemma_159422 (h0 : set linarith.ineq) : set.subsingleton h0 := sorry --non-trivial
lemma new_lemma_159423 (h0 : filter (has_pos_part (has_Inf Type))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_159424 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (comm_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (comm_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159425 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_noetherian_ring.{0} (comm_semigroup.{0} name) (@function.extfun_app.{2 1} Type semiring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 semiring.{0}) (comm_semigroup.{0} name))  := sorry --non-trivial
lemma new_lemma_159426 (h0 : uniform_space (linear_ordered_comm_ring (semiring (semiring (semiring congr_arg_kind))))) : separated_space (linear_ordered_comm_ring (semiring (semiring (semiring congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_159427 (h0 : topological_space (non_unital_semiring congr_arg_kind)) : t1_space (non_unital_semiring congr_arg_kind) := sorry --non-trivial
lemma new_lemma_159428 (h0 : filter (has_zero (has_pos_part linarith.comp))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159429 (h0 : semiring (nondiscrete_normed_field (add_comm_semigroup string.iterator_imp))) (h1 : ideal (nondiscrete_normed_field (add_comm_semigroup string.iterator_imp))) : ideal.is_prime h1 := sorry --non-trivial
lemma new_lemma_159430 (h0 : topological_space (has_bot (option unsigned))) : normal_space (has_bot (option unsigned)) := sorry --non-trivial
lemma new_lemma_159431 (h1 h4 : multiset ereal) : multiset.disjoint h1 h4 := sorry --non-trivial
lemma new_lemma_159432 (h0 : topological_space (has_Inf (has_Inf (has_Inf (has_add linarith.comp))))) : regular_space (has_Inf (has_Inf (has_Inf (has_add linarith.comp)))) := sorry --non-trivial
lemma new_lemma_159433 (h0 : topological_space (measurable_space.dynkin_system linarith.comp)) : normal_space (measurable_space.dynkin_system linarith.comp) := sorry --non-trivial
lemma new_lemma_159434 (h0 : add_monoid (boolean_algebra (finset environment.implicit_infer_kind))) : add_monoid.fg (boolean_algebra (finset environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_159435 (h0 : topological_space (canonically_ordered_monoid linarith.comp)) : t1_space (canonically_ordered_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_159436 (h0 : ring (boolean_algebra (finset (ring (finset linarith.comp))))) : rank_condition (boolean_algebra (finset (ring (finset linarith.comp)))) := sorry --non-trivial
lemma new_lemma_159437 (h0 : Type -> real -> Prop) : relator.bi_total h0 := sorry --non-trivial
lemma new_lemma_159438 (h0 : function.extfun Type ring) : @rank_condition.{0} (has_norm.{0} linarith.ineq) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_norm.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_159439 (h0 : topological_space (ring (option pos))) : sequential_space (ring (option pos)) := sorry --non-trivial
lemma new_lemma_159440 (h0 : function.extfun nat fin) : @normal_space.{0} (has_add.{0} real) (@matrix.vec_empty.{0} (topological_space.{0} (has_add.{0} real)) (@matrix.vec_empty.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (@function.extfun_app.{1 1} nat fin (@matrix.vec_empty.{0} (function.extfun.{1 1} nat fin) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero))) (@has_zero.zero.{0} nat nat.has_zero))))  := sorry --non-trivial
lemma new_lemma_159441 (h0 : functor.add_const (function.extfun (Type 1) topological_space) pos) : @sequential_space.{1} (has_Inf.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) topological_space.{1}) pos h0) (has_Inf.{1} Type))  := sorry --non-trivial
lemma new_lemma_159442 (h0 : uniform_space (ring (ring (ring (has_Inf pos))))) : complete_space (ring (ring (ring (has_Inf pos)))) := sorry --non-trivial
lemma new_lemma_159443 (h0 : topological_space (has_pos_part (ordered_comm_monoid name))) : t0_space (has_pos_part (ordered_comm_monoid name)) := sorry --non-trivial
lemma new_lemma_159444 (h0 : function.extfun (finset Type) (has_mem.mem (normed_group linarith.comp_source))) : @strong_rank_condition.{0} (normed_group.{0} linarith.comp_source) (@finset.pi.empty.{1 0} Type ring.{0} (normed_group.{0} linarith.comp_source) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (normed_group.{0} linarith.comp_source)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_159445 (h0 : functor.add_const (complete_lattice (boolean_algebra linarith.comp)) (finset linarith.comp)) : @complete_lattice.is_Sup_finite_compact.{0} (boolean_algebra.{0} linarith.comp) (@functor.add_const.run.{0 0} (complete_lattice.{0} (boolean_algebra.{0} linarith.comp)) (finset.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_159446 (h0 : topological_space (has_nndist (has_neg (canonically_ordered_comm_semiring ennreal)))) : t1_space (has_nndist (has_neg (canonically_ordered_comm_semiring ennreal))) := sorry --non-trivial
lemma new_lemma_159447 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (ordered_ring.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (ordered_ring.{0} empty))  := sorry --non-trivial
lemma new_lemma_159448 (h0 : functor.add_const (function.extfun Type add_group) (has_pos_part environment.implicit_infer_kind)) : @is_add_cyclic.{0} (ring.{0} pos) (@function.extfun_app.{2 1} Type add_group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type add_group.{0}) (has_pos_part.{0} environment.implicit_infer_kind) h0) (ring.{0} pos))  := sorry --non-trivial
lemma new_lemma_159449 (h0 : functor.add_const (topological_space (has_pos_part linarith.comp)) Type) : @t1_space.{0} (has_pos_part.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (has_pos_part.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_159450 (h0 : complete_lattice (has_to_string empty)) : is_compactly_generated (has_to_string empty) := sorry --non-trivial
lemma new_lemma_159451 (h0 : list (add_cancel_monoid (finset (finset linarith.comp)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_159452 (h0 : not (function.extfun Type uniform_space -> false)) : @separated_space.{0} (semiring.{0} num) (@function.extfun_app.{2 1} Type uniform_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type uniform_space.{0}) h0) (semiring.{0} num))  := sorry --non-trivial
lemma new_lemma_159453 (h0 : topological_space (add_comm_monoid (option pos))) : preirreducible_space (add_comm_monoid (option pos)) := sorry --non-trivial
lemma new_lemma_159454 (h0 : ring (normed_comm_ring (option (option empty)))) : is_principal_ideal_ring (normed_comm_ring (option (option empty))) := sorry --non-trivial
lemma new_lemma_159455 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159456 (h1 : measurable_space (mul_one_class enat)) (h2 : has_sup (mul_one_class enat)) : has_measurable_sup (mul_one_class enat) := sorry --non-trivial
lemma new_lemma_159457 (h0 : semiring std_gen) (h2 : std_gen) : even h2 := sorry --non-trivial
lemma new_lemma_159458 (h0 : functor.add_const (function.extfun (Type 1) finset) name) : finset.nonempty (function.extfun_app (functor.add_const.run h0) (ordered_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_159459 (h0 : topological_space (id (random_gen linarith.ineq))) : totally_separated_space (id (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_159460 (h0 : functor.add_const (topological_space (boolean_algebra unsigned)) linarith.comp) : @t1_space.{0} (boolean_algebra.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159461 (h0 : ulower (fin has_zero.zero)) : @ulower.up.{0} Prop encodable.Prop (@matrix.vec_empty.{0} (@ulower.{0} Prop encodable.Prop) (@ulower.up.{0} (fin (@has_zero.zero.{0} nat nat.has_zero)) (encodable.fin (@has_zero.zero.{0} nat nat.has_zero)) h0))  := sorry --non-trivial
lemma new_lemma_159462 (h0 : functor.add_const (monoid (has_nndist unsigned)) (option (option ennreal))) : @monoid.fg.{0} (has_nndist.{0} unsigned) (@functor.add_const.run.{0 0} (monoid.{0} (has_nndist.{0} unsigned)) (option.{0} (option.{0} ennreal)) h0)  := sorry --non-trivial
lemma new_lemma_159463 (h0 : functor.add_const (finset (finset Type)) (finset linarith.comp)) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159464 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @separated_space.{0} (complete_distrib_lattice.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (complete_distrib_lattice.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (uniform_space.{0} (complete_distrib_lattice.{0} empty))) (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 (functor.add_const.{0 0} (uniform_space.{0} (complete_distrib_lattice.{0} empty)))) empty))  := sorry --non-trivial
lemma new_lemma_159465 (h0 : topological_space (boolean_algebra (normed_comm_ring (finset (finset Type))))) : preirreducible_space (boolean_algebra (normed_comm_ring (finset (finset Type)))) := sorry --non-trivial
lemma new_lemma_159466 (h0 : topological_space (bin_tree unsigned)) : discrete_topology (bin_tree unsigned) := sorry --non-trivial
lemma new_lemma_159467 (h0 : topological_space (has_to_string (ring (finset (has_add name))))) : regular_space (has_to_string (ring (finset (has_add name)))) := sorry --non-trivial
lemma new_lemma_159468 (h0 : semiring (ordered_comm_ring (has_bot real))) : is_noetherian_ring (ordered_comm_ring (has_bot real)) := sorry --non-trivial
lemma new_lemma_159469 (h0 : topological_space (semiring (option empty))) : t1_space (semiring (option empty)) := sorry --non-trivial
lemma new_lemma_159470 (h0 : group (has_edist (semiring (semiring empty)))) : group.fg (has_edist (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_159471 (h0 : ring (with_bot (has_top to_additive.value_type))) : strong_rank_condition (with_bot (has_top to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_159472 (h0 : functor.add_const (complete_lattice (ring environment.implicit_infer_kind)) (has_add pos)) : @complete_lattice.is_Sup_finite_compact.{0} (ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (complete_lattice.{0} (ring.{0} environment.implicit_infer_kind)) (has_add.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_159473 (h0 : ring (has_norm (has_norm (semiring (random_gen congr_arg_kind))))) : strong_rank_condition (has_norm (has_norm (semiring (random_gen congr_arg_kind)))) := sorry --non-trivial
lemma new_lemma_159474 (h0 : function.extfun ((Type -> Type) -> Type 1) (function.extfun (Type -> Type))) : @complete_space.{0} (measurable_space.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@function.extfun_app.{3 2} ((Type → Type) → Type 1) (function.extfun.{2 2} (Type → Type)) h0 (function.extfun.{2 1} Type)) uniform_space.{0}) (measurable_space.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_159475 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (bin_tree.{0} unsigned) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (bin_tree.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159476 (h0 : topological_space (list Prop)) (h1 : set (list Prop)) : separated h1 list.head := sorry --non-trivial
lemma new_lemma_159477 (h0 : topological_space (ring (has_neg (has_Inf Type)))) : t0_space (ring (has_neg (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_159478 (h0 : topological_space (denumerable (has_lt (has_nnnorm linarith.ineq)))) : t0_space (denumerable (has_lt (has_nnnorm linarith.ineq))) := sorry --non-trivial
lemma new_lemma_159479 (h1 : group (normed_field to_additive.value_type)) : is_cyclic (normed_field to_additive.value_type) := sorry --non-trivial
lemma new_lemma_159480 (h0 : ring (non_unital_non_assoc_semiring string.iterator_imp)) : strong_rank_condition (non_unital_non_assoc_semiring string.iterator_imp) := sorry --non-trivial
lemma new_lemma_159481 (h0 : mul_zero_class congr_arg_kind -> mul_zero_class congr_arg_kind -> Prop) : is_strict_order (mul_zero_class congr_arg_kind) h0 := sorry --non-trivial
lemma new_lemma_159482 (h0 : ordered_comm_monoid (has_zero (has_add name))) : has_exists_mul_of_le (has_zero (has_add name)) := sorry --non-trivial
lemma new_lemma_159483 (h0 : topological_space (has_one (has_norm linarith.comp))) : totally_disconnected_space (has_one (has_norm linarith.comp)) := sorry --non-trivial
lemma new_lemma_159484 (h0 : add_monoid (ordered_cancel_add_comm_monoid (option (option num)))) : add_monoid.fg (ordered_cancel_add_comm_monoid (option (option num))) := sorry --non-trivial
lemma new_lemma_159485 (h0 : functor.add_const (uniform_space (has_Sup empty)) unsigned) : @separated_space.{0} (has_Sup.{0} empty) (@functor.add_const.run.{0 0} (uniform_space.{0} (has_Sup.{0} empty)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_159486 (h0 : function.extfun nat fin) : @t0_space.{1} (canonically_linear_ordered_monoid.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (canonically_linear_ordered_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_159487 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : archimedean real := sorry --non-trivial
lemma new_lemma_159488 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @strong_rank_condition.{0} (has_top.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (has_top.{0} empty))  := sorry --non-trivial
lemma new_lemma_159489 (h0 : fin has_zero.zero) : @complete_space.{0} (add_comm_monoid.{0} real) (@matrix.vec_empty.{0} (uniform_space.{0} (add_comm_monoid.{0} real)) h0)  := sorry --non-trivial
lemma new_lemma_159490 (h0 : function.extfun Type ring) : @strong_rank_condition.{0} (has_bot.{0} unsigned) (@function.extfun_app.{2 1} Type ring.{0} h0 (has_bot.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159491 (h0 : topological_space (linear_ordered_add_comm_group (random_gen (comm_ring to_additive.value_type)))) : path_connected_space (linear_ordered_add_comm_group (random_gen (comm_ring to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_159492 (h0 : not (topological_space (normed_field (has_nnnorm reducibility_hints)) -> false)) : @t0_space.{0} (normed_field.{0} (has_nnnorm.{0} reducibility_hints)) (@classical.by_contradiction'.{1} (topological_space.{0} (normed_field.{0} (has_nnnorm.{0} reducibility_hints))) h0)  := sorry --non-trivial
lemma new_lemma_159493 (h0 : functor.add_const (complete_lattice (has_add linarith.comp)) (finset linarith.comp)) : @complete_lattice.is_Sup_finite_compact.{0} (has_add.{0} linarith.comp) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_add.{0} linarith.comp)) (finset.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_159494 (h0 : add_monoid (left_cancel_monoid (option (option (option (option empty)))))) : add_monoid.fg (left_cancel_monoid (option (option (option (option empty))))) := sorry --non-trivial
lemma new_lemma_159495 (h1 : add_group (add_comm_semigroup std_gen)) : is_add_cyclic (add_comm_semigroup std_gen) := sorry --non-trivial
lemma new_lemma_159496 (h0 : topological_space (has_pos_part (has_zero (ring pos)))) : totally_disconnected_space (has_pos_part (has_zero (ring pos))) := sorry --non-trivial
lemma new_lemma_159497 (h0 : has_mem.mem (has_emptyc fun_info) has_emptyc.emptyc) : @strong_rank_condition.{0} (has_emptyc.{0} fun_info) (@finset.pi.empty.{1 0} Type ring.{0} (has_emptyc.{0} fun_info) h0)  := sorry --non-trivial
lemma new_lemma_159498 (h0 : topological_space (has_sub (semiring (semiring empty)))) : preirreducible_space (has_sub (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_159499 (h0 : add_group (cancel_monoid (finset (finset environment.implicit_infer_kind)))) : is_add_cyclic (cancel_monoid (finset (finset environment.implicit_infer_kind))) := sorry --non-trivial
lemma new_lemma_159500 (h0 : function.extfun Type (functor.comp add_monoid cancel_monoid)) : @add_monoid.fg.{0} (cancel_monoid.{0} pos) (@functor.comp.run.{0 0 0} add_monoid.{0} cancel_monoid.{0} pos (@function.extfun_app.{2 1} Type (functor.comp.{0 0 0} add_monoid.{0} cancel_monoid.{0}) h0 pos))  := sorry --non-trivial
lemma new_lemma_159501 (h0 : functor.add_const (topological_space (normed_comm_ring pos)) Type) : @path_connected_space.{0} (normed_comm_ring.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (normed_comm_ring.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_159502 (h0 : functor.add_const (function.extfun (Type 1) monoid) linarith.comp) : @monoid.fg.{1} (boolean_algebra.core.{1} Type) (@function.extfun_app.{3 2} (Type 1) monoid.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) monoid.{1}) linarith.comp h0) (boolean_algebra.core.{1} Type))  := sorry --non-trivial
lemma new_lemma_159503 (h0 : uniform_space (has_top empty)) : separated_space (has_top empty) := sorry --non-trivial
lemma new_lemma_159504 (h0 : topological_space (linear_order empty)) : path_connected_space (linear_order empty) := sorry --non-trivial
lemma new_lemma_159505 (h0 : functor.add_const (topological_space (linear_ordered_add_comm_monoid_with_top ennreal)) congr_arg_kind) : @irreducible_space.{0} (linear_ordered_add_comm_monoid_with_top.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (linear_ordered_add_comm_monoid_with_top.{0} ennreal)) congr_arg_kind h0)  := sorry --non-trivial
lemma new_lemma_159506 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (normed_group.{0} unsigned) (@function.extfun_app.{2 1} Type semiring.{0} h0 (normed_group.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159507 (h0 : functor.add_const (topological_space (generalized_boolean_algebra Type)) Type) : @preirreducible_space.{1} (generalized_boolean_algebra.{1} Type) (@functor.add_const.run.{1 1} (topological_space.{1} (generalized_boolean_algebra.{1} Type)) Type h0)  := sorry --non-trivial
lemma new_lemma_159508 (h0 : topological_space (boolean_algebra.core pos)) : normal_space (boolean_algebra.core pos) := sorry --non-trivial
lemma new_lemma_159509 (h0 : topological_space (with_bot (random_gen to_additive.value_type))) : locally_compact_space (with_bot (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_159510 (h0 : function.extfun Type topological_space) : @totally_disconnected_space.{0} (semigroup.{0} ennreal) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semigroup.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_159511 (h0 : group (dlist (random_gen (has_nnnorm (random_gen to_additive.value_type))))) : group.fg (dlist (random_gen (has_nnnorm (random_gen to_additive.value_type)))) := sorry --non-trivial
lemma new_lemma_159512 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (semiring.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semiring.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159513 (h0 : functor.add_const (add_monoid (finset linarith.comp)) linarith.comp) : @add_monoid.fg.{0} (finset.{0} linarith.comp) (@functor.add_const.run.{0 0} (add_monoid.{0} (finset.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159514 (h0 : uniform_space (has_zero (monoid ennreal))) : separated_space (has_zero (monoid ennreal)) := sorry --non-trivial
lemma new_lemma_159515 (h0 : functor.add_const (topological_space (ring pos)) pos) : @normal_space.{0} (ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_159516 (h0 : not (function.extfun Type topological_space -> false)) : @totally_disconnected_space.{0} (linear_ordered_semiring.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (linear_ordered_semiring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_159517 (h0 : list (normed_comm_ring (has_add Type))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_159518 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preconnected_space.{0} (semigroup.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (semigroup.{0} name))  := sorry --non-trivial
lemma new_lemma_159519 (h0 : complete_lattice (has_lt (mul_one_class (mul_one_class string.iterator_imp)))) : complete_lattice.is_Sup_finite_compact (has_lt (mul_one_class (mul_one_class string.iterator_imp))) := sorry --non-trivial
lemma new_lemma_159520 (h0 : topological_space (ordered_ring (semiring unsigned))) : topological_space.separable_space (ordered_ring (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_159521 (h0 : complete_lattice (denumerable (has_nnnorm (has_nnnorm linarith.comp_source)))) : complete_lattice.is_Sup_finite_compact (denumerable (has_nnnorm (has_nnnorm linarith.comp_source))) := sorry --non-trivial
lemma new_lemma_159522 (h0 : functor.add_const (topological_space (ordered_ring num)) num) : @totally_disconnected_space.{0} (ordered_ring.{0} num) (@functor.add_const.run.{0 0} (topological_space.{0} (ordered_ring.{0} num)) num h0)  := sorry --non-trivial
lemma new_lemma_159523 (h0 : topological_space (has_Inf (finset Type))) : loc_path_connected_space (has_Inf (finset Type)) := sorry --non-trivial
lemma new_lemma_159524 (h0 : ring (has_lt linarith.ineq)) : rank_condition (has_lt linarith.ineq) := sorry --non-trivial
lemma new_lemma_159525 (h0 h1 h2 : Prop) (h3 : false) : @ite.{1} Prop h2 (@false.elim.{1} (decidable h2) h3) h0 h1  := sorry --trivial
lemma new_lemma_159526 (h0 : prod (add_right_cancel_monoid (has_top (has_top empty))) (add_right_cancel_monoid (has_top (has_top empty)))) : id_rel h0 := sorry --non-trivial
lemma new_lemma_159527 (h0 : uniform_space (with_one (has_top (semiring fun_info)))) : complete_space (with_one (has_top (semiring fun_info))) := sorry --non-trivial
lemma new_lemma_159528 (h0 : group (simple_graph string.iterator_imp)) (h1 : subgroup (simple_graph string.iterator_imp)) : subgroup.is_commutative h1 := sorry --non-trivial
lemma new_lemma_159529 (h0 : topological_space (with_zero to_additive.value_type)) : path_connected_space (with_zero to_additive.value_type) := sorry --non-trivial
lemma new_lemma_159530 (h0 : function.extfun (Type 1) topological_space) : @preconnected_space.{1} (has_to_string.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (has_to_string.{1} Type))  := sorry --non-trivial
lemma new_lemma_159531 (h0 : function.extfun Type topological_space) : @irreducible_space.{0} (ring.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} name))  := sorry --non-trivial
lemma new_lemma_159532 (h0 : has_mem.mem (add_group unsigned) has_emptyc.emptyc) : @locally_compact_space.{0} (add_group.{0} unsigned) (@finset.pi.empty.{1 0} Type topological_space.{0} (add_group.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_159533 (h1 : topological_space (has_nnnorm string_imp)) : path_connected_space (has_nnnorm string_imp) := sorry --non-trivial
lemma new_lemma_159534 (h0 : function.extfun Type complete_lattice) : @is_compactly_generated.{0} (boolean_algebra.core.{0} pos) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (boolean_algebra.core.{0} pos))  := sorry --non-trivial
lemma new_lemma_159535 (h0 : topological_space (distrib_lattice (has_nnnorm linarith.comp_source))) : t0_space (distrib_lattice (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_159536 (h0 : ring (with_one (semiring (semiring empty)))) : is_domain (with_one (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_159537 (h0 : uniform_space (has_one (measurable_space.dynkin_system (has_norm unsigned)))) : separated_space (has_one (measurable_space.dynkin_system (has_norm unsigned))) := sorry --non-trivial
lemma new_lemma_159538 (h0 : functor.comp semiring has_nndist ennreal) : @is_noetherian_ring.{0} (has_nndist.{0} ennreal) (@functor.comp.run.{0 0 0} semiring.{0} has_nndist.{0} ennreal h0)  := sorry --non-trivial
lemma new_lemma_159539 (h0 : function.extfun nat fin) : @group.fg.{1} (linear_ordered_add_comm_group_with_top.{1} Type) (@matrix.vec_empty.{1} (group.{1} (linear_ordered_add_comm_group_with_top.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_159540 (h0 : topological_space (canonically_ordered_comm_semiring (has_add (has_add Type)))) : locally_compact_space (canonically_ordered_comm_semiring (has_add (has_add Type))) := sorry --non-trivial
lemma new_lemma_159541 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (has_dist.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (has_dist.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159542 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @loc_path_connected_space.{0} (linear_ordered_comm_group.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (linear_ordered_comm_group.{0} pos))  := sorry --non-trivial
lemma new_lemma_159543 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : list.nodup (function.extfun_app (function.extfun_app h0 list) (has_neg pos)) := sorry --non-trivial
lemma new_lemma_159544 (h0 : complete_lattice (measurable_space (random_gen linarith.ineq))) : is_atomistic (measurable_space (random_gen linarith.ineq)) := sorry --non-trivial
lemma new_lemma_159545 (h0 : filter (add_cancel_monoid (option unsigned))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159546 (h0 : topological_space (has_to_string (semigroup Type))) : discrete_topology (has_to_string (semigroup Type)) := sorry --non-trivial
lemma new_lemma_159547 (h0 : topological_space (has_to_string congr_arg_kind)) : topological_space.separable_space (has_to_string congr_arg_kind) := sorry --non-trivial
lemma new_lemma_159548 (h0 : function.extfun Type topological_space) : @discrete_topology.{0} (complete_linear_order.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_linear_order.{0} num))  := sorry --non-trivial
lemma new_lemma_159549 (h2 : complete_lattice (has_ssubset (random_gen to_additive.value_type))) : complete_lattice.is_Sup_finite_compact (has_ssubset (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_159550 (h0 : functor.add_const (topological_space (has_add Type)) (normed_comm_ring name)) : @totally_disconnected_space.{1} (has_add.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_add.{1} Type)) (normed_comm_ring.{0} name) h0)  := sorry --non-trivial
lemma new_lemma_159551 (h0 : functor.add_const (ring (has_to_string linarith.comp)) name) : @is_domain.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (has_to_string.{0} linarith.comp)) name h0)  := sorry --non-trivial
lemma new_lemma_159552 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (has_neg_part.{0} pos) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (has_neg_part.{0} pos))  := sorry --non-trivial
lemma new_lemma_159553 (h0 : group (normed_comm_ring (option (option congr_arg_kind)))) : is_cyclic (normed_comm_ring (option (option congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_159554 (h0 : function.extfun Type filter) : filter.ne_bot (function.extfun_app h0 (comm_group ennreal)) := sorry --non-trivial
lemma new_lemma_159555 (h0 : complete_lattice (random_gen unsigned)) : complete_lattice.is_Sup_finite_compact (random_gen unsigned) := sorry --non-trivial
lemma new_lemma_159556 (h0 : functor.add_const (complete_lattice ennreal) (option num)) : is_atomistic ennreal := sorry --non-trivial
lemma new_lemma_159557 (h0 : boolean_algebra Type -> Prop) : zzz_forall h0 := sorry --non-trivial
lemma new_lemma_159558 (h0 : topological_space (complete_distrib_lattice environment.implicit_infer_kind)) : normal_space (complete_distrib_lattice environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_159559 (h0 : ordered_add_comm_monoid (has_neg ennreal)) : archimedean (has_neg ennreal) := sorry --non-trivial
lemma new_lemma_159560 (h0 : topological_space (finset (finset (finset Type)))) : t1_space (finset (finset (finset Type))) := sorry --non-trivial
lemma new_lemma_159561 (h0 : topological_space (has_nndist (normed_comm_ring linarith.comp))) : totally_disconnected_space (has_nndist (normed_comm_ring linarith.comp)) := sorry --non-trivial
lemma new_lemma_159562 (h0 : semiring (has_bot pos)) : is_noetherian_ring (has_bot pos) := sorry --non-trivial
lemma new_lemma_159563 (h0 : topological_space (has_nndist (finset Type))) : preconnected_space (has_nndist (finset Type)) := sorry --non-trivial
lemma new_lemma_159564 (h0 : complete_lattice (complete_linear_order (semiring (semiring empty)))) : is_atomistic (complete_linear_order (semiring (semiring empty))) := sorry --non-trivial
lemma new_lemma_159565 (h0 : topological_space (add_comm_semigroup reducibility_hints)) (h1 : preorder (add_comm_semigroup reducibility_hints)) : order_topology (add_comm_semigroup reducibility_hints) := sorry --non-trivial
lemma new_lemma_159566 (h0 : not (monoid (metric_space unsigned) -> false)) : @monoid.fg.{0} (metric_space.{0} unsigned) (@classical.by_contradiction'.{1} (monoid.{0} (metric_space.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_159567 (h0 : group (normed_comm_ring (option (option empty)))) : normalizer_condition (normed_comm_ring (option (option empty))) := sorry --non-trivial
lemma new_lemma_159568 (h0 : topological_space (add_cancel_monoid (cancel_monoid Type))) : t1_space (add_cancel_monoid (cancel_monoid Type)) := sorry --non-trivial
lemma new_lemma_159569 (h0 : not (complete_lattice (semiring unsigned) -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (semiring.{0} unsigned) (@classical.by_contradiction'.{1} (complete_lattice.{0} (semiring.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_159570 (h0 : filter (normed_group (semiring (semiring (has_top empty))))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159571 (h0 : functor.add_const (topological_space (ring pos)) linarith.comp) : @topological_space.separable_space.{0} (ring.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (ring.{0} pos)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159572 (h0 : topological_space (uniform_space (mul_one_class linarith.comp_source))) : t0_space (uniform_space (mul_one_class linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_159573 (h0 : group (comm_semigroup pos)) : is_simple_group (comm_semigroup pos) := sorry --non-trivial
lemma new_lemma_159574 (h0 : not (topological_space (measurable_space linarith.comp_source) -> false)) : @irreducible_space.{0} (measurable_space.{0} linarith.comp_source) (@classical.by_contradiction'.{1} (topological_space.{0} (measurable_space.{0} linarith.comp_source)) h0)  := sorry --non-trivial
lemma new_lemma_159575 (h3 : add_group (monoid to_additive.value_type)) : is_add_cyclic (monoid to_additive.value_type) := sorry --non-trivial
lemma new_lemma_159576 (h0 : function.extfun Type group) : @normalizer_condition.{0} (has_zero.{0} name) (@function.extfun_app.{2 1} Type group.{0} h0 (has_zero.{0} name))  := sorry --non-trivial
lemma new_lemma_159577 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (pseudo_metric_space.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (pseudo_metric_space.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159578 (h0 : functor.add_const (filter (has_zero pos)) name) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159579 (h0 : functor.add_const (topological_space (comm_group name)) num) : @sequential_space.{0} (comm_group.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} name)) num h0)  := sorry --non-trivial
lemma new_lemma_159580 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @totally_separated_space.{0} (random_gen.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (random_gen.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159581 (h0 : functor.add_const (add_group (finset name)) (boolean_algebra (has_nndist Type))) : @is_add_cyclic.{0} (finset.{0} name) (@functor.add_const.run.{0 1} (add_group.{0} (finset.{0} name)) (boolean_algebra.{1} (has_nndist.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_159582 (h0 : functor.comp topological_space ring (has_neg_part environment.implicit_infer_kind)) : @sequential_space.{0} (ring.{0} (has_neg_part.{0} environment.implicit_infer_kind)) (@functor.comp.run.{0 0 0} topological_space.{0} ring.{0} (has_neg_part.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_159583 (h0 : functor.add_const (ordered_comm_monoid (semigroup linarith.comp)) Type) : @has_exists_mul_of_le.{0} (semigroup.{0} linarith.comp) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (semigroup.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_159584 (h0 : complete_lattice (plift (complete_linear_order num))) : is_compactly_generated (plift (complete_linear_order num)) := sorry --non-trivial
lemma new_lemma_159585 (h0 : filter (linear_ordered_field unsigned)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159586 (h0 : functor.add_const (semiring (add_left_cancel_semigroup unsigned)) unsigned) : @is_noetherian_ring.{0} (add_left_cancel_semigroup.{0} unsigned) (@functor.add_const.run.{0 0} (semiring.{0} (add_left_cancel_semigroup.{0} unsigned)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_159587 (h0 : functor.comp topological_space finset Type) : @sequential_space.{1} (finset.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} finset.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_159588 (h0 : topological_space (has_to_string (ring Type))) : t1_space (has_to_string (ring Type)) := sorry --non-trivial
lemma new_lemma_159589 (h0 : ordered_add_comm_monoid (canonically_ordered_monoid (has_pos_part real))) : archimedean (canonically_ordered_monoid (has_pos_part real)) := sorry --non-trivial
lemma new_lemma_159590 (h0 : functor.add_const (filter (has_nndist ennreal)) Type) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159591 (h0 : topological_space (boolean_algebra (finset (has_to_string (finset pos))))) : totally_disconnected_space (boolean_algebra (finset (has_to_string (finset pos)))) := sorry --non-trivial
lemma new_lemma_159592 (h0 : uniform_space (has_neg (add_comm_monoid (normed_comm_ring (normed_comm_ring name))))) : separated_space (has_neg (add_comm_monoid (normed_comm_ring (normed_comm_ring name)))) := sorry --non-trivial
lemma new_lemma_159593 (h0 : ring (normed_linear_ordered_group (option (option empty)))) : is_principal_ideal_ring (normed_linear_ordered_group (option (option empty))) := sorry --non-trivial
lemma new_lemma_159594 (h0 : not (function.extfun Type topological_space -> false)) : @irreducible_space.{0} (with_one.{0} fun_info) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (with_one.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_159595 (h3 : cancel_comm_monoid_with_zero (has_nnnorm char)) (h4 : complete_lattice (gcd_monoid (has_nnnorm char))) : complete_lattice.is_Sup_finite_compact (gcd_monoid (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_159596 (h0 : function.extfun Type (functor.add_const (function.extfun Type topological_space))) : @irreducible_space.{0} (simple_graph.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) pos (@function.extfun_app.{2 2} Type (functor.add_const.{1 0} (function.extfun.{2 1} Type topological_space.{0})) h0 pos)) (simple_graph.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_159597 (h0 : function.extfun Type ring) : @rank_condition.{0} (linear_ordered_semiring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type ring.{0} h0 (linear_ordered_semiring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_159598 (h0 : group (has_compl (random_gen to_additive.value_type))) : is_cyclic (has_compl (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_159599 (h1 : topological_space (random_gen linarith.comp)) : discrete_topology (random_gen linarith.comp) := sorry --non-trivial
lemma new_lemma_159600 (h0 : functor.comp topological_space has_nndist pos) : @sequential_space.{0} (has_nndist.{0} pos) (@functor.comp.run.{0 0 0} topological_space.{0} has_nndist.{0} pos h0)  := sorry --non-trivial
lemma new_lemma_159601 (h0 : semiring (complete_distrib_lattice Type)) : is_noetherian_ring (complete_distrib_lattice Type) := sorry --non-trivial
lemma new_lemma_159602 (h0 : functor.add_const (topological_space (ordered_comm_ring pos)) (has_neg Type)) : @totally_separated_space.{0} (ordered_comm_ring.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (ordered_comm_ring.{0} pos)) (has_neg.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_159603 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (ordered_cancel_add_comm_monoid.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (ordered_cancel_add_comm_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_159604 (h0 : functor.add_const (uniform_space (normed_comm_ring unsigned)) linarith.comp) : @complete_space.{0} (normed_comm_ring.{0} unsigned) (@functor.add_const.run.{0 0} (uniform_space.{0} (normed_comm_ring.{0} unsigned)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159605 (h0 : complete_lattice (has_zero (finset (option name)))) : is_atomistic (has_zero (finset (option name))) := sorry --non-trivial
lemma new_lemma_159606 (h0 : not (topological_space environment.implicit_infer_kind -> false)) : @totally_disconnected_space.{0} environment.implicit_infer_kind (@classical.by_contradiction'.{1} (topological_space.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_159607 (h0 : group (semigroup (ring (ring Type)))) : normalizer_condition (semigroup (ring (ring Type))) := sorry --non-trivial
lemma new_lemma_159608 (h0 : topological_space (has_compl linarith.comp_source)) (h1 : preorder (has_compl linarith.comp_source)) : order_topology (has_compl linarith.comp_source) := sorry --non-trivial
lemma new_lemma_159609 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (with_one.{0} empty) (@function.extfun_app.{2 1} Type semiring.{0} h0 (with_one.{0} empty))  := sorry --non-trivial
lemma new_lemma_159610 (h1 : topological_space (normed_group (random_gen to_additive.value_type))) : path_connected_space (normed_group (random_gen to_additive.value_type)) := sorry --non-trivial
lemma new_lemma_159611 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_cyclic.{0} (has_add.{0} name) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_add.{0} name))  := sorry --non-trivial
lemma new_lemma_159612 (h0 : complete_lattice (has_nndist (has_add (has_nndist pos)))) : is_compactly_generated (has_nndist (has_add (has_nndist pos))) := sorry --non-trivial
lemma new_lemma_159613 (h0 : functor.add_const (topological_space (complete_distrib_lattice congr_arg_kind)) unsigned) : @t0_space.{0} (complete_distrib_lattice.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_159614 (h0 : ring (has_add num)) : is_domain (has_add num) := sorry --non-trivial
lemma new_lemma_159615 (h0 : function.extfun Type complete_lattice) : @complete_lattice.is_Sup_finite_compact.{0} (semi_normed_comm_ring.{0} linarith.ineq) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (semi_normed_comm_ring.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_159616 (h0 : function.extfun Type monoid) : @monoid.fg.{0} (has_bot.{0} real) (@function.extfun_app.{2 1} Type monoid.{0} h0 (has_bot.{0} real))  := sorry --non-trivial
lemma new_lemma_159617 (h0 : functor.add_const (topological_space (has_neg name)) pos) : @preconnected_space.{0} (has_neg.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_159618 (h0 : uniform_space (simple_graph (mul_one_class (mul_one_class (mul_one_class string.iterator_imp))))) : complete_space (simple_graph (mul_one_class (mul_one_class (mul_one_class string.iterator_imp)))) := sorry --non-trivial
lemma new_lemma_159619 (h0 : topological_space (add_left_cancel_semigroup (option (option empty)))) : totally_separated_space (add_left_cancel_semigroup (option (option empty))) := sorry --non-trivial
lemma new_lemma_159620 (h0 : not (list (denumerable fun_info) -> false)) : list.nodup (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_159621 (h0 : semiring (ring (ring environment.implicit_infer_kind))) : is_noetherian_ring (ring (ring environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_159622 (h0 : ordered_comm_monoid (complete_distrib_lattice linarith.comp)) : has_exists_mul_of_le (complete_distrib_lattice linarith.comp) := sorry --non-trivial
lemma new_lemma_159623 (h1 : add_group (fintype (comm_ring char))) : is_add_cyclic (fintype (comm_ring char)) := sorry --non-trivial
lemma new_lemma_159624 (h0 : functor.add_const (ordered_comm_monoid (has_zero pos)) environment.implicit_infer_kind) : @has_exists_mul_of_le.{0} (has_zero.{0} pos) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (has_zero.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_159625 (h0 : topological_space (semi_normed_comm_ring linarith.comp_source)) (h1 : preorder (semi_normed_comm_ring linarith.comp_source)) : order_closed_topology (semi_normed_comm_ring linarith.comp_source) := sorry --non-trivial
lemma new_lemma_159626 (h0 : group (has_pos_part (has_add Type))) : is_simple_group (has_pos_part (has_add Type)) := sorry --non-trivial
lemma new_lemma_159627 (h0 : ring (comm_ring (has_nnnorm reducibility_hints))) : is_domain (comm_ring (has_nnnorm reducibility_hints)) := sorry --non-trivial
lemma new_lemma_159628 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (has_norm.{0} linarith.ineq) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (has_norm.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_159629 (h0 : cancel_comm_monoid_with_zero (left_cancel_semigroup (semiring unsigned))) : unique_factorization_monoid (left_cancel_semigroup (semiring unsigned)) := sorry --non-trivial
lemma new_lemma_159630 (h0 : not (add_monoid (with_bot linarith.comp) -> false)) : @add_monoid.fg.{0} (with_bot.{0} linarith.comp) (@classical.by_contradiction'.{1} (add_monoid.{0} (with_bot.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_159631 (h0 : group (measurable_space unsigned)) : normalizer_condition (measurable_space unsigned) := sorry --non-trivial
lemma new_lemma_159632 (h0 : not (function.extfun Type topological_space -> false)) : @t0_space.{0} (has_norm.{0} to_additive.value_type) (@function.extfun_app.{2 1} Type topological_space.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type topological_space.{0}) h0) (has_norm.{0} to_additive.value_type))  := sorry --non-trivial
lemma new_lemma_159633 (h0 : functor.add_const (ring (ring linarith.comp)) linarith.comp) : @rank_condition.{0} (ring.{0} linarith.comp) (@functor.add_const.run.{0 0} (ring.{0} (ring.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159634 (h2 : ring (has_ssubset to_additive.value_type)) : strong_rank_condition (has_ssubset to_additive.value_type) := sorry --non-trivial
lemma new_lemma_159635 (h0 : functor.comp topological_space mul_zero_class ennreal) : @totally_separated_space.{0} (mul_zero_class.{0} ennreal) (@functor.comp.run.{0 0 0} topological_space.{0} mul_zero_class.{0} ennreal h0)  := sorry --non-trivial
lemma new_lemma_159636 (h0 : topological_space (add_cancel_monoid (finset (finset (finset (finset pos)))))) : irreducible_space (add_cancel_monoid (finset (finset (finset (finset pos))))) := sorry --non-trivial
lemma new_lemma_159637 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (@id.{2} Type linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (@id.{2} Type linarith.comp))  := sorry --non-trivial
lemma new_lemma_159638 (h0 : set (has_ssubset (normed_field linarith.ineq))) : set.finite h0 := sorry --non-trivial
lemma new_lemma_159639 (h0 : ring (complete_distrib_lattice (cancel_monoid ennreal))) : rank_condition (complete_distrib_lattice (cancel_monoid ennreal)) := sorry --non-trivial
lemma new_lemma_159640 (h0 : not (function.extfun Type complete_lattice -> false)) : @is_atomistic.{0} (semiring.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_159641 (h0 : functor.add_const (uniform_space (finset environment.implicit_infer_kind)) environment.implicit_infer_kind) : @complete_space.{0} (finset.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (uniform_space.{0} (finset.{0} environment.implicit_infer_kind)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_159642 (h0 : function.extfun (nat -> Type) (function.extfun nat)) : @is_principal_ideal_ring.{0} (has_bot.{0} real) (@matrix.vec_empty.{0} (ring.{0} (has_bot.{0} real)) (@function.extfun_app.{1 1} nat fin (@function.extfun_app.{2 1} (nat → Type) (function.extfun.{1 1} nat) h0 fin) (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_159643 (h0 : complete_lattice (semiring num)) : is_compactly_generated (semiring num) := sorry --non-trivial
lemma new_lemma_159644 (h0 : functor.add_const (topological_space (has_neg_part ennreal)) name) : @regular_space.{0} (has_neg_part.{0} ennreal) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} ennreal)) name h0)  := sorry --non-trivial
lemma new_lemma_159645 (h0 : functor.add_const (ring (ring Type)) name) : @is_domain.{1} (ring.{1} Type) (@functor.add_const.run.{1 0} (ring.{1} (ring.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_159646 (h0 : topological_space (has_to_string (has_add name))) : sequential_space (has_to_string (has_add name)) := sorry --non-trivial
lemma new_lemma_159647 (h1 : not (add_group (random_gen to_additive.value_type) -> false)) : @is_add_cyclic.{0} (random_gen.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (add_group.{0} (random_gen.{0} to_additive.value_type)) h1)  := sorry --non-trivial
lemma new_lemma_159648 (h0 : uniform_space (boolean_algebra (has_neg_part Type))) : complete_space (boolean_algebra (has_neg_part Type)) := sorry --non-trivial
lemma new_lemma_159649 (h0 : filter (has_norm (semiring (semiring unsigned)))) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159650 (h0 : fin has_zero.zero) : @monoid.fg.{0} (add_comm_monoid.{0} name) (@matrix.vec_empty.{0} (monoid.{0} (add_comm_monoid.{0} name)) h0)  := sorry --non-trivial
lemma new_lemma_159651 (h0 : complete_lattice (normed_comm_ring (option ennreal))) : is_atomistic (normed_comm_ring (option ennreal)) := sorry --non-trivial
lemma new_lemma_159652 (h0 : functor.add_const (filter (has_nndist linarith.comp)) environment.implicit_infer_kind) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159653 (h0 : add_monoid (has_inter unsigned)) : add_monoid.fg (has_inter unsigned) := sorry --non-trivial
lemma new_lemma_159654 (h0 : topological_space (normed_comm_ring name)) : path_connected_space (normed_comm_ring name) := sorry --non-trivial
lemma new_lemma_159655 (h0 : functor.add_const (complete_lattice (complete_distrib_lattice unsigned)) name) : @is_compactly_generated.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 0} (complete_lattice.{0} (complete_distrib_lattice.{0} unsigned)) name h0)  := sorry --non-trivial
lemma new_lemma_159656 (h0 : functor.add_const (group (semigroup congr_arg_kind)) unsigned) : @normalizer_condition.{0} (semigroup.{0} congr_arg_kind) (@functor.add_const.run.{0 0} (group.{0} (semigroup.{0} congr_arg_kind)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_159657 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @locally_compact_space.{0} (normed_lattice_add_comm_group.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_lattice_add_comm_group.{0} real))  := sorry --non-trivial
lemma new_lemma_159658 (h0 : functor.add_const (ring (linear_ordered_cancel_comm_monoid num)) empty) : @rank_condition.{0} (linear_ordered_cancel_comm_monoid.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (linear_ordered_cancel_comm_monoid.{0} num)) empty h0)  := sorry --non-trivial
lemma new_lemma_159659 (h0 : group (metric_space num)) : normalizer_condition (metric_space num) := sorry --non-trivial
lemma new_lemma_159660 (h0 : function.extfun Type ring) : @rank_condition.{0} (generalized_boolean_algebra.{0} real) (@function.extfun_app.{2 1} Type ring.{0} h0 (generalized_boolean_algebra.{0} real))  := sorry --non-trivial
lemma new_lemma_159661 (h0 : measurable_space (add_comm_semigroup (add_comm_semigroup linarith.ineq))) (h1 : measure_theory.measure (add_comm_semigroup (add_comm_semigroup linarith.ineq))) : measure_theory.is_finite_measure h1 := sorry --non-trivial
lemma new_lemma_159662 (h0 : semiring (ordered_comm_group unsigned)) : is_noetherian_ring (ordered_comm_group unsigned) := sorry --non-trivial
lemma new_lemma_159663 (h1 : function.extfun (finset Type) (has_mem.mem (random_gen string_imp))) : @monoid.fg.{0} (random_gen.{0} string_imp) (@finset.pi.empty.{1 0} Type monoid.{0} (random_gen.{0} string_imp) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (random_gen.{0} string_imp)) h1 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_159664 (h0 : function.extfun ((finset Type -> Prop) -> Prop) (function.extfun (finset Type -> Prop))) : @is_cyclic.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} linarith.comp_source))))) (@finset.pi.empty.{1 0} Type group.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} linarith.comp_source))))) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} linarith.comp_source)))))) (@function.extfun_app.{2 0} (finset.{1} Type → Prop) (function.extfun.{2 0} (finset.{1} Type)) (@function.extfun_app.{2 0} ((finset.{1} Type → Prop) → Prop) (function.extfun.{2 0} (finset.{1} Type → Prop)) h0 (function.extfun.{2 0} (finset.{1} Type))) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} (random_gen.{0} linarith.comp_source))))))) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_159665 (h0 : add_group (has_edist (comm_monoid empty))) : is_add_cyclic (has_edist (comm_monoid empty)) := sorry --non-trivial
lemma new_lemma_159666 (h1 : Prop) (h2 : decidable h1) : as_true h1 := sorry --non-trivial
lemma new_lemma_159667 (h0 : topological_space (plift (option (semiring unsigned)))) : discrete_topology (plift (option (semiring unsigned))) := sorry --non-trivial
lemma new_lemma_159668 (h1 : function.extfun (finset (Type -> Type)) (has_mem.mem topological_space)) : @totally_disconnected_space.{0} (semiring.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) topological_space.{0}) h1 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (semiring.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_159669 (h0 : ordered_add_comm_monoid (canonically_ordered_monoid (sub_neg_monoid real))) : archimedean (canonically_ordered_monoid (sub_neg_monoid real)) := sorry --non-trivial
lemma new_lemma_159670 (h0 : topological_space (linear_ordered_semiring (random_gen congr_arg_kind))) : locally_compact_space (linear_ordered_semiring (random_gen congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_159671 (h0 : functor.add_const (ordered_comm_monoid (boolean_algebra.core environment.implicit_infer_kind)) Type) : @has_exists_mul_of_le.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 1} (ordered_comm_monoid.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind)) Type h0)  := sorry --non-trivial
lemma new_lemma_159672 (h0 : not (topological_space (has_norm unsigned) -> false)) : @discrete_topology.{0} (has_norm.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (has_norm.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_159673 (h0 : monoid (has_neg_part (has_add ennreal))) : monoid.fg (has_neg_part (has_add ennreal)) := sorry --non-trivial
lemma new_lemma_159674 (h1 : not (ring (has_div string_imp) -> false)) : @strong_rank_condition.{0} (has_div.{0} string_imp) (@classical.by_contradiction'.{1} (ring.{0} (has_div.{0} string_imp)) h1)  := sorry --non-trivial
lemma new_lemma_159675 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (linear_ordered_field.{0} (option.{0} ennreal)) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (linear_ordered_field.{0} (option.{0} ennreal)))  := sorry --non-trivial
lemma new_lemma_159676 (h0 : functor.add_const (monoid (add_comm_monoid unsigned)) (option (option empty))) : @monoid.fg.{0} (add_comm_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (monoid.{0} (add_comm_monoid.{0} unsigned)) (option.{0} (option.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_159677 (h0 : group (random_gen (random_gen char))) : group.fg (random_gen (random_gen char)) := sorry --non-trivial
lemma new_lemma_159678 (h0 : topological_space (has_compl (has_nnnorm (has_nnnorm linarith.ineq)))) : path_connected_space (has_compl (has_nnnorm (has_nnnorm linarith.ineq))) := sorry --non-trivial
lemma new_lemma_159679 (h0 : complete_lattice (has_emptyc linarith.comp)) : complete_lattice.is_Sup_finite_compact (has_emptyc linarith.comp) := sorry --non-trivial
lemma new_lemma_159680 (h0 : cancel_comm_monoid_with_zero (has_add (has_add (has_nndist name)))) : unique_factorization_monoid (has_add (has_add (has_nndist name))) := sorry --non-trivial
lemma new_lemma_159681 (h0 : topological_space (metric_space num)) : preirreducible_space (metric_space num) := sorry --non-trivial
lemma new_lemma_159682 (h0 : topological_space (has_nndist (finset (finset pos)))) : preirreducible_space (has_nndist (finset (finset pos))) := sorry --non-trivial
lemma new_lemma_159683 (h0 : functor.add_const (functor.add_const (topological_space Type) environment.implicit_infer_kind) linarith.comp) : @irreducible_space.{1} Type (@functor.add_const.run.{1 0} (topological_space.{1} Type) environment.implicit_infer_kind (@functor.add_const.run.{1 0} (functor.add_const.{1 0} (topological_space.{1} Type) environment.implicit_infer_kind) linarith.comp h0))  := sorry --non-trivial
lemma new_lemma_159684 (h0 : group (cancel_monoid (option pos))) : is_cyclic (cancel_monoid (option pos)) := sorry --non-trivial
lemma new_lemma_159685 (h0 : functor.add_const (finset (boolean_algebra environment.implicit_infer_kind)) linarith.comp) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159686 (h0 : functor.comp topological_space comm_group Type) : @regular_space.{1} (comm_group.{1} Type) (@functor.comp.run.{1 1 1} topological_space.{1} comm_group.{1} Type h0)  := sorry --non-trivial
lemma new_lemma_159687 (h0 : group (option (option unsigned))) : is_cyclic (option (option unsigned)) := sorry --non-trivial
lemma new_lemma_159688 (h0 : not (has_mem.mem (linear_ordered_semiring fun_info) has_emptyc.emptyc -> false)) : @rank_condition.{0} (linear_ordered_semiring.{0} fun_info) (@finset.pi.empty.{1 0} Type ring.{0} (linear_ordered_semiring.{0} fun_info) (@classical.by_contradiction'.{0} (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (linear_ordered_semiring.{0} fun_info) (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))) h0))  := sorry --non-trivial
lemma new_lemma_159689 (h0 : topological_space (random_gen (has_top (has_top (has_top linarith.comp_source))))) : totally_disconnected_space (random_gen (has_top (has_top (has_top linarith.comp_source)))) := sorry --non-trivial
lemma new_lemma_159690 (h0 : topological_space (normed_field char)) : t0_space (normed_field char) := sorry --non-trivial
lemma new_lemma_159691 (h0 : semiring (comm_monoid (option empty))) : is_noetherian_ring (comm_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_159692 (h0 : functor.add_const (topological_space (comm_group linarith.comp)) (has_neg (has_neg linarith.comp))) : @preconnected_space.{0} (comm_group.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} linarith.comp)) (has_neg.{0} (has_neg.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_159693 (h0 : group (add_group (semiring (semiring linarith.comp)))) : normalizer_condition (add_group (semiring (semiring linarith.comp))) := sorry --non-trivial
lemma new_lemma_159694 (h0 : group (canonically_ordered_monoid (has_Inf pos))) : group.fg (canonically_ordered_monoid (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_159695 (h0 : not (add_group (has_union unsigned) -> false)) : @is_add_cyclic.{0} (has_union.{0} unsigned) (@classical.by_contradiction'.{1} (add_group.{0} (has_union.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_159696 (h0 : not (ring (topological_space linarith.ineq) -> false)) : @rank_condition.{0} (topological_space.{0} linarith.ineq) (@classical.by_contradiction'.{1} (ring.{0} (topological_space.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_159697 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (ring.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (ring.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_159698 (h0 : list (ordered_comm_ring (has_pos_part (ring Type)))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_159699 (h0 : not (topological_space (measure_theory.measure_space unsigned) -> false)) : @normal_space.{0} (measure_theory.measure_space.{0} unsigned) (@classical.by_contradiction'.{1} (topological_space.{0} (measure_theory.measure_space.{0} unsigned)) h0)  := sorry --non-trivial
lemma new_lemma_159700 (h0 : complete_lattice (semiring linarith.comp)) : complete_lattice.is_Sup_finite_compact (semiring linarith.comp) := sorry --non-trivial
lemma new_lemma_159701 (h0 : ordered_comm_monoid (has_pos_part (boolean_algebra.core (boolean_algebra.core (has_Inf Type))))) : has_exists_mul_of_le (has_pos_part (boolean_algebra.core (boolean_algebra.core (has_Inf Type)))) := sorry --non-trivial
lemma new_lemma_159702 (h0 : topological_space (linear_order (option empty))) : topological_space.separable_space (linear_order (option empty)) := sorry --non-trivial
lemma new_lemma_159703 (h0 : topological_space (has_nndist (mul_zero_class unsigned))) : preconnected_space (has_nndist (mul_zero_class unsigned)) := sorry --non-trivial
lemma new_lemma_159704 (h0 : uniform_space (complete_semilattice_Sup (random_gen string_imp))) : complete_space (complete_semilattice_Sup (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_159705 (h0 : monoid (ring (has_neg (mul_one_class pos)))) : monoid.fg (ring (has_neg (mul_one_class pos))) := sorry --non-trivial
lemma new_lemma_159706 (h0 : monoid (plift unsigned)) : monoid.fg (plift unsigned) := sorry --non-trivial
lemma new_lemma_159707 (h0 : function.extfun Type topological_space) : @preirreducible_space.{0} (semigroup.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (semigroup.{0} empty))  := sorry --non-trivial
lemma new_lemma_159708 (h0 : not (add_group (non_unital_non_assoc_semiring string.iterator_imp) -> false)) : @is_add_cyclic.{0} (non_unital_non_assoc_semiring.{0} string.iterator_imp) (@classical.by_contradiction'.{1} (add_group.{0} (non_unital_non_assoc_semiring.{0} string.iterator_imp)) h0)  := sorry --non-trivial
lemma new_lemma_159709 (h0 : uniform_space (generalized_boolean_algebra (boolean_algebra.core (has_pos_part name)))) : separated_space (generalized_boolean_algebra (boolean_algebra.core (has_pos_part name))) := sorry --non-trivial
lemma new_lemma_159710 (h0 : ereal -> ereal -> Prop) : is_total ereal (relation.join h0) := sorry --non-trivial
lemma new_lemma_159711 (h0 : functor.add_const (function.extfun Type list) Type) : palindrome (function.extfun_app (functor.add_const.run h0) (has_Inf name)) := sorry --non-trivial
lemma new_lemma_159712 (h0 : ring (random_gen (has_nnnorm linarith.ineq))) : is_domain (random_gen (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_159713 (h0 : functor.add_const (topological_space (has_to_string linarith.comp)) pos) : @totally_separated_space.{0} (has_to_string.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_to_string.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_159714 (h0 : topological_space (denumerable fun_info)) : locally_compact_space (denumerable fun_info) := sorry --non-trivial
lemma new_lemma_159715 (h0 : function.extfun Type topological_space) : @path_connected_space.{0} (complete_distrib_lattice.{0} name) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (complete_distrib_lattice.{0} name))  := sorry --non-trivial
lemma new_lemma_159716 (h0 : ring (cancel_monoid (has_add environment.implicit_infer_kind))) : is_principal_ideal_ring (cancel_monoid (has_add environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_159717 (h0 : functor.add_const (ordered_add_comm_monoid (has_nndist ennreal)) pos) : @archimedean.{0} (has_nndist.{0} ennreal) (@functor.add_const.run.{0 0} (ordered_add_comm_monoid.{0} (has_nndist.{0} ennreal)) pos h0)  := sorry --non-trivial
lemma new_lemma_159718 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (has_Sup.{0} (semiring.{0} (semiring.{0} (semiring.{0} empty)))) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (has_Sup.{0} (semiring.{0} (semiring.{0} (semiring.{0} empty)))))  := sorry --non-trivial
lemma new_lemma_159719 (h0 : functor.add_const (complete_lattice (comm_group pos)) (option unsigned)) : @is_compactly_generated.{0} (comm_group.{0} pos) (@functor.add_const.run.{0 0} (complete_lattice.{0} (comm_group.{0} pos)) (option.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_159720 (h0 : topological_space (has_neg_part Type)) : preconnected_space (has_neg_part Type) := sorry --non-trivial
lemma new_lemma_159721 (h0 : group (has_norm (has_norm num))) : normalizer_condition (has_norm (has_norm num)) := sorry --non-trivial
lemma new_lemma_159722 (h0 : add_monoid (generalized_boolean_algebra (has_neg name))) : add_monoid.fg (generalized_boolean_algebra (has_neg name)) := sorry --non-trivial
lemma new_lemma_159723 (h1 : ring (simple_graph string_imp)) : is_domain (simple_graph string_imp) := sorry --non-trivial
lemma new_lemma_159724 (h0 : ring (sub_neg_monoid (has_Inf (has_Inf Type)))) : is_domain (sub_neg_monoid (has_Inf (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_159725 (h0 : list (denumerable to_additive.value_type)) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_159726 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : list.nodup (function.extfun_app (function.extfun_app h0 list) (linear_order empty)) := sorry --non-trivial
lemma new_lemma_159727 (h0 : functor.add_const (uniform_space (bin_tree unsigned)) empty) : @separated_space.{0} (bin_tree.{0} unsigned) (@functor.add_const.run.{0 0} (uniform_space.{0} (bin_tree.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_159728 (h0 : ring (has_Inf (has_add (finset pos)))) : is_domain (has_Inf (has_add (finset pos))) := sorry --non-trivial
lemma new_lemma_159729 (h0 : functor.add_const (finset (left_cancel_semigroup congr_arg_kind)) empty) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159730 (h0 : fin has_zero.zero) : @t1_space.{1} (has_Inf.{1} Type) (@matrix.vec_empty.{1} (topological_space.{1} (has_Inf.{1} Type)) h0)  := sorry --non-trivial
lemma new_lemma_159731 (h0 : ring (linear_ordered_semiring (has_top (semiring (semiring (has_top num)))))) : rank_condition (linear_ordered_semiring (has_top (semiring (semiring (has_top num))))) := sorry --non-trivial
lemma new_lemma_159732 (h0 : monoid (preorder (semiring (semiring (semiring (semiring num)))))) : monoid.fg (preorder (semiring (semiring (semiring (semiring num))))) := sorry --non-trivial
lemma new_lemma_159733 (h1 : Prop -> fun_info) (h2 : coe_sort (set.range h1)) : set.range_splitting h1 h2 := sorry --non-trivial
lemma new_lemma_159734 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @archimedean.{0} (finset.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ordered_add_comm_monoid.{0}) (finset.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159735 (h0 : fin has_zero.zero) : @totally_separated_space.{0} pos (@matrix.vec_empty.{0} (topological_space.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_159736 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (has_nndist.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_nndist.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159737 (h2 : ring (add_cancel_comm_monoid char)) : strong_rank_condition (add_cancel_comm_monoid char) := sorry --non-trivial
lemma new_lemma_159738 (h3 : filter (add_monoid to_additive.value_type)) : filter.ne_bot h3 := sorry --non-trivial
lemma new_lemma_159739 (h0 : functor.add_const (group (ring environment.implicit_infer_kind)) (finset pos)) : @normalizer_condition.{0} (ring.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (group.{0} (ring.{0} environment.implicit_infer_kind)) (finset.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_159740 (h0 : functor.add_const Prop (semiring (partial_order num))) : functor.add_const.run h0 := sorry --non-trivial
lemma new_lemma_159741 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (canonically_linear_ordered_monoid.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (canonically_linear_ordered_monoid.{0} num))  := sorry --non-trivial
lemma new_lemma_159742 (h1 : ring (semi_normed_comm_ring (has_ssubset reducibility_hints))) : is_domain (semi_normed_comm_ring (has_ssubset reducibility_hints)) := sorry --non-trivial
lemma new_lemma_159743 (h0 : function.extfun Type semiring) : @is_noetherian_ring.{0} (has_Sup.{0} empty) (@function.extfun_app.{2 1} Type semiring.{0} h0 (has_Sup.{0} empty))  := sorry --non-trivial
lemma new_lemma_159744 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (has_add.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_add.{0} pos))  := sorry --non-trivial
lemma new_lemma_159745 (h0 : functor.add_const (list (has_neg ennreal)) pos) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159746 (h0 : has_mem.mem (with_one empty) has_emptyc.emptyc) : @discrete_topology.{0} (with_one.{0} empty) (@finset.pi.empty.{1 0} Type topological_space.{0} (with_one.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_159747 (h0 : functor.add_const (topological_space (boolean_algebra.core environment.implicit_infer_kind)) linarith.comp) : @loc_path_connected_space.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} environment.implicit_infer_kind)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159748 (h0 : topological_space (add_comm_monoid (option ennreal))) : path_connected_space (add_comm_monoid (option ennreal)) := sorry --non-trivial
lemma new_lemma_159749 (h0 : functor.comp complete_lattice normed_group to_additive.value_type) : @is_compactly_generated.{0} (normed_group.{0} to_additive.value_type) (@functor.comp.run.{0 0 0} complete_lattice.{0} normed_group.{0} to_additive.value_type h0)  := sorry --non-trivial
lemma new_lemma_159750 (h0 : list (normed_comm_ring (has_add pos))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_159751 (h0 : add_monoid (left_cancel_monoid (option (option empty)))) : add_monoid.fg (left_cancel_monoid (option (option empty))) := sorry --non-trivial
lemma new_lemma_159752 (h0 : complete_lattice (mul_zero_class (has_nndist environment.implicit_infer_kind))) : complete_lattice.is_Sup_finite_compact (mul_zero_class (has_nndist environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_159753 (h0 : not (uniform_space (linear_ordered_comm_group_with_zero string_imp) -> false)) : @complete_space.{0} (linear_ordered_comm_group_with_zero.{0} string_imp) (@classical.by_contradiction'.{1} (uniform_space.{0} (linear_ordered_comm_group_with_zero.{0} string_imp)) h0)  := sorry --non-trivial
lemma new_lemma_159754 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (dlist.{0} linarith.ineq) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (dlist.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_159755 (h0 : function.extfun Type topological_space) : @loc_path_connected_space.{0} (linear_ordered_field.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (linear_ordered_field.{0} empty))  := sorry --non-trivial
lemma new_lemma_159756 (h0 : complete_lattice (canonically_ordered_comm_semiring unsigned)) : is_compactly_generated (canonically_ordered_comm_semiring unsigned) := sorry --non-trivial
lemma new_lemma_159757 (h0 : function.extfun (finset Type) (has_mem.mem (id linarith.comp))) : @totally_separated_space.{0} (@id.{2} Type linarith.comp) (@finset.pi.empty.{1 0} Type topological_space.{0} (@id.{2} Type linarith.comp) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (@id.{2} Type linarith.comp)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_159758 (h0 : add_group (linear_ordered_comm_group_with_zero string_imp)) : is_add_cyclic (linear_ordered_comm_group_with_zero string_imp) := sorry --non-trivial
lemma new_lemma_159759 (h0 : topological_space (random_gen (has_top (has_top fun_info)))) : t0_space (random_gen (has_top (has_top fun_info))) := sorry --non-trivial
lemma new_lemma_159760 (h0 : complete_lattice (non_assoc_semiring (semiring congr_arg_kind))) : complete_lattice.is_Sup_finite_compact (non_assoc_semiring (semiring congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_159761 (h0 : function.extfun Type ring) : @rank_condition.{0} (complete_semilattice_Sup.{0} num) (@function.extfun_app.{2 1} Type ring.{0} h0 (complete_semilattice_Sup.{0} num))  := sorry --non-trivial
lemma new_lemma_159762 (h0 : not (ring (mul_one_class to_additive.value_type) -> false)) : @strong_rank_condition.{0} (mul_one_class.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (ring.{0} (mul_one_class.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_159763 (h0 : functor.add_const (function.extfun Type group) (has_neg Type)) : @group.fg.{0} (add_cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 1} (function.extfun.{2 1} Type group.{0}) (has_neg.{1} Type) h0) (add_cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_159764 (h0 : function.extfun Type list) : palindrome (function.extfun_app h0 (has_neg environment.implicit_infer_kind)) := sorry --non-trivial
lemma new_lemma_159765 (h0 : function.extfun Type list) : list.nodup (function.extfun_app h0 (encodable linarith.ineq)) := sorry --non-trivial
lemma new_lemma_159766 (h0 : functor.add_const (topological_space (has_Inf linarith.comp)) linarith.comp) : @loc_path_connected_space.{0} (has_Inf.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_Inf.{0} linarith.comp)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159767 (h0 : topological_space (add_cancel_comm_monoid (mul_one_class (mul_one_class char)))) : totally_disconnected_space (add_cancel_comm_monoid (mul_one_class (mul_one_class char))) := sorry --non-trivial
lemma new_lemma_159768 (h2 : topological_space (random_gen linarith.comp_source)) : t0_space (random_gen linarith.comp_source) := sorry --non-trivial
lemma new_lemma_159769 (h0 : topological_space (normed_comm_ring (has_to_string pos))) : path_connected_space (normed_comm_ring (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_159770 (h0 : functor.add_const (ring (has_dist unsigned)) (option empty)) : @rank_condition.{0} (has_dist.{0} unsigned) (@functor.add_const.run.{0 0} (ring.{0} (has_dist.{0} unsigned)) (option.{0} empty) h0)  := sorry --non-trivial
lemma new_lemma_159771 (h0 : ring (distrib_lattice (random_gen (random_gen linarith.ineq)))) : rank_condition (distrib_lattice (random_gen (random_gen linarith.ineq))) := sorry --non-trivial
lemma new_lemma_159772 (h0 : functor.add_const (function.extfun (Type 1) group) environment.implicit_infer_kind) : @is_simple_group.{1} (add_comm_monoid.{1} Type) (@function.extfun_app.{3 2} (Type 1) group.{1} (@functor.add_const.run.{2 0} (function.extfun.{3 2} (Type 1) group.{1}) environment.implicit_infer_kind h0) (add_comm_monoid.{1} Type))  := sorry --non-trivial
lemma new_lemma_159773 (h0 : functor.add_const (topological_space (boolean_algebra pos)) Type) : @totally_disconnected_space.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (boolean_algebra.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_159774 (h0 : complete_lattice (add_comm_monoid pos)) : is_atomistic (add_comm_monoid pos) := sorry --non-trivial
lemma new_lemma_159775 (h0 : topological_space (uniform_space (mul_one_class (mul_one_class enat)))) : path_connected_space (uniform_space (mul_one_class (mul_one_class enat))) := sorry --non-trivial
lemma new_lemma_159776 (h0 : group (has_nndist (normed_comm_ring Type))) : group.fg (has_nndist (normed_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_159777 (h0 : function.extfun (finset (Type -> Type)) (has_mem.mem ring)) : @strong_rank_condition.{0} (semiring.{0} fun_info) (@function.extfun_app.{2 1} Type ring.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) ring.{0} (@function.extfun_app.{2 0} (finset.{1} (Type → Type)) (@has_mem.mem.{1 1} (Type → Type) (finset.{1} (Type → Type)) (@finset.has_mem.{1} (Type → Type)) ring.{0}) h0 (@has_emptyc.emptyc.{1} (finset.{1} (Type → Type)) (@finset.has_emptyc.{1} (Type → Type))))) (semiring.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_159778 (h0 : uniform_space (distrib (has_ssubset (mul_one_class reducibility_hints)))) : complete_space (distrib (has_ssubset (mul_one_class reducibility_hints))) := sorry --non-trivial
lemma new_lemma_159779 (h0 : functor.add_const (finset (has_neg environment.implicit_infer_kind)) (finset (has_Inf pos))) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159780 (h0 : function.extfun Type (functor.add_const (complete_lattice (linear_order empty)))) : @complete_lattice.is_Sup_finite_compact.{0} (linear_order.{0} empty) (@functor.add_const.run.{0 0} (complete_lattice.{0} (linear_order.{0} empty)) empty (@function.extfun_app.{2 1} Type (functor.add_const.{0 0} (complete_lattice.{0} (linear_order.{0} empty))) h0 empty))  := sorry --non-trivial
lemma new_lemma_159781 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @preirreducible_space.{0} (has_pos_part.{0} real) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_pos_part.{0} real))  := sorry --non-trivial
lemma new_lemma_159782 (h0 : list (has_nndist (has_zero name))) : list.nodup h0 := sorry --non-trivial
lemma new_lemma_159783 (h0 : complete_lattice (semigroup (semiring empty))) : is_atomistic (semigroup (semiring empty)) := sorry --non-trivial
lemma new_lemma_159784 (h0 : functor.add_const (topological_space (has_zero linarith.comp)) pos) : @discrete_topology.{0} (has_zero.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (has_zero.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_159785 (h0 : fin has_zero.zero) : @complete_space.{0} (complete_distrib_lattice.{0} linarith.comp) (@matrix.vec_empty.{0} (uniform_space.{0} (complete_distrib_lattice.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_159786 (h0 : topological_space (has_pos_part (normed_comm_ring Type))) : topological_space.separable_space (has_pos_part (normed_comm_ring Type)) := sorry --non-trivial
lemma new_lemma_159787 (h0 : functor.add_const (topological_space (complete_distrib_lattice unsigned)) num) : @preirreducible_space.{0} (complete_distrib_lattice.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (complete_distrib_lattice.{0} unsigned)) num h0)  := sorry --non-trivial
lemma new_lemma_159788 (h0 : functor.add_const (list (has_add name)) (has_nndist environment.implicit_infer_kind)) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159789 (h0 : ring (has_pos_part (finset (has_add Type)))) : is_domain (has_pos_part (finset (has_add Type))) := sorry --non-trivial
lemma new_lemma_159790 (h0 : topological_space (monoid_with_zero ennreal)) : totally_disconnected_space (monoid_with_zero ennreal) := sorry --non-trivial
lemma new_lemma_159791 (h0 : functor.add_const (topological_space (add_cancel_monoid name)) (has_to_string pos)) : @normal_space.{0} (add_cancel_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (add_cancel_monoid.{0} name)) (has_to_string.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_159792 (h0 : functor.add_const (filter (add_comm_monoid unsigned)) name) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159793 (h0 : functor.add_const (list (finset pos)) linarith.comp) : list.nodup (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159794 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_compactly_generated.{0} (complete_semilattice_Sup.{0} empty) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (complete_semilattice_Sup.{0} empty))  := sorry --non-trivial
lemma new_lemma_159795 (h0 : functor.add_const (topological_space (canonically_ordered_add_monoid unsigned)) empty) : @irreducible_space.{0} (canonically_ordered_add_monoid.{0} unsigned) (@functor.add_const.run.{0 0} (topological_space.{0} (canonically_ordered_add_monoid.{0} unsigned)) empty h0)  := sorry --non-trivial
lemma new_lemma_159796 (h0 : ring (mul_one_class (mul_one_class enat))) : is_domain (mul_one_class (mul_one_class enat)) := sorry --non-trivial
lemma new_lemma_159797 (h0 : uniform_space (has_nnnorm (has_nnnorm char))) : complete_space (has_nnnorm (has_nnnorm char)) := sorry --non-trivial
lemma new_lemma_159798 (h0 : functor.add_const (function.extfun Type topological_space) (has_nndist linarith.comp)) : @irreducible_space.{0} (has_pos_part.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type topological_space.{0}) (has_nndist.{0} linarith.comp) h0) (has_pos_part.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_159799 (h0 : function.extfun (finset Type) (has_mem.mem (with_one num))) : @complete_space.{0} (with_one.{0} num) (@finset.pi.empty.{1 0} Type uniform_space.{0} (with_one.{0} num) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (with_one.{0} num)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_159800 (h0 : not (add_group (measurable_space (random_gen fun_info)) -> false)) : @is_add_cyclic.{0} (measurable_space.{0} (random_gen.{0} fun_info)) (@classical.by_contradiction'.{1} (add_group.{0} (measurable_space.{0} (random_gen.{0} fun_info))) h0)  := sorry --non-trivial
lemma new_lemma_159801 (h0 : functor.add_const (group (has_zero Type)) linarith.comp) : @normalizer_condition.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (group.{1} (has_zero.{1} Type)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159802 (h0 : topological_space (boolean_algebra (mul_one_class pos))) : discrete_topology (boolean_algebra (mul_one_class pos)) := sorry --non-trivial
lemma new_lemma_159803 (h0 : group Type) : group.fg Type := sorry --non-trivial
lemma new_lemma_159804 (h0 : not (group (has_add to_additive.value_type) -> false)) : @is_cyclic.{0} (has_add.{0} to_additive.value_type) (@classical.by_contradiction'.{1} (group.{0} (has_add.{0} to_additive.value_type)) h0)  := sorry --non-trivial
lemma new_lemma_159805 (h1 : ring (metric_space string_imp)) : is_domain (metric_space string_imp) := sorry --non-trivial
lemma new_lemma_159806 (h0 : filter (ordered_cancel_add_comm_monoid empty)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159807 (h0 : topological_space (ordered_comm_ring (has_add (has_add pos)))) : totally_separated_space (ordered_comm_ring (has_add (has_add pos))) := sorry --non-trivial
lemma new_lemma_159808 (h0 : function.extfun Type topological_space) : @t1_space.{0} (ring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (ring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159809 (h0 : ring (ordered_comm_ring (has_pos_part linarith.comp))) : rank_condition (ordered_comm_ring (has_pos_part linarith.comp)) := sorry --non-trivial
lemma new_lemma_159810 (h0 : function.extfun Type ordered_add_comm_monoid) : @archimedean.{0} (is_R_or_C.{0} empty) (@function.extfun_app.{2 1} Type ordered_add_comm_monoid.{0} h0 (is_R_or_C.{0} empty))  := sorry --non-trivial
lemma new_lemma_159811 (h1 : ring (linear_ordered_add_comm_group linarith.comp_source)) : rank_condition (linear_ordered_add_comm_group linarith.comp_source) := sorry --non-trivial
lemma new_lemma_159812 (h1 : complete_lattice (dlist string_imp)) : is_compactly_generated (dlist string_imp) := sorry --non-trivial
lemma new_lemma_159813 (h3 : topological_space (has_ssubset char)) : t0_space (has_ssubset char) := sorry --non-trivial
lemma new_lemma_159814 (h0 : add_group (has_ssubset (mul_one_class (mul_one_class char)))) : is_add_cyclic (has_ssubset (mul_one_class (mul_one_class char))) := sorry --non-trivial
lemma new_lemma_159815 (h0 : function.extfun Type topological_space) : @locally_compact_space.{0} (partial_order.{0} empty) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (partial_order.{0} empty))  := sorry --non-trivial
lemma new_lemma_159816 (h0 : not (function.extfun Type complete_lattice -> false)) : @complete_lattice.is_Sup_finite_compact.{0} (semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type complete_lattice.{0}) h0) (semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159817 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @t0_space.{0} (option.{0} unsigned) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (option.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159818 (h0 : functor.add_const (ring (canonically_ordered_add_monoid empty)) (option (option empty))) : @is_domain.{0} (canonically_ordered_add_monoid.{0} empty) (@functor.add_const.run.{0 0} (ring.{0} (canonically_ordered_add_monoid.{0} empty)) (option.{0} (option.{0} empty)) h0)  := sorry --non-trivial
lemma new_lemma_159819 (h0 : not (filter (bin_tree congr_arg_kind) -> false)) : filter.ne_bot (classical.by_contradiction' h0) := sorry --non-trivial
lemma new_lemma_159820 (h0 : complete_lattice (semigroup ennreal)) : complete_lattice.is_Sup_finite_compact (semigroup ennreal) := sorry --non-trivial
lemma new_lemma_159821 (h0 : topological_space (free_add_monoid num)) : loc_path_connected_space (free_add_monoid num) := sorry --non-trivial
lemma new_lemma_159822 (h0 : add_group (has_union (has_union linarith.comp))) : is_add_cyclic (has_union (has_union linarith.comp)) := sorry --non-trivial
lemma new_lemma_159823 (h0 : function.extfun Type group) : @group.fg.{0} (canonically_ordered_add_monoid.{0} unsigned) (@function.extfun_app.{2 1} Type group.{0} h0 (canonically_ordered_add_monoid.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159824 (h0 : functor.add_const (function.extfun Type finset) name) : finset.nonempty (function.extfun_app (functor.add_const.run h0) (semigroup pos)) := sorry --non-trivial
lemma new_lemma_159825 (h0 : ring (has_neg (finset (ring linarith.comp)))) : rank_condition (has_neg (finset (ring linarith.comp))) := sorry --non-trivial
lemma new_lemma_159826 (h0 : functor.add_const (filter (has_zero (has_to_string linarith.comp))) Type) : filter.ne_bot (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159827 (h0 : complete_lattice (distrib (has_nnnorm linarith.ineq))) : is_compactly_generated (distrib (has_nnnorm linarith.ineq)) := sorry --non-trivial
lemma new_lemma_159828 (h0 : monoid (has_union (has_top empty))) : monoid.fg (has_union (has_top empty)) := sorry --non-trivial
lemma new_lemma_159829 (h0 : group (has_to_string (has_neg (finset Type)))) : is_cyclic (has_to_string (has_neg (finset Type))) := sorry --non-trivial
lemma new_lemma_159830 (h0 : uniform_space (linear_ordered_comm_group num)) : separated_space (linear_ordered_comm_group num) := sorry --non-trivial
lemma new_lemma_159831 (h0 : not (uniform_space (measurable_space linarith.comp) -> false)) : @separated_space.{0} (measurable_space.{0} linarith.comp) (@classical.by_contradiction'.{1} (uniform_space.{0} (measurable_space.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_159832 (h1 : function.extfun Type topological_space) : @locally_compact_space.{0} fun_info (@function.extfun_app.{2 1} Type topological_space.{0} h1 fun_info)  := sorry --non-trivial
lemma new_lemma_159833 (h0 : topological_space (has_Sup to_additive.value_type)) (h1 : add_group (has_Sup to_additive.value_type)) : topological_add_group (has_Sup to_additive.value_type) := sorry --non-trivial
lemma new_lemma_159834 (h0 : filter (measurable_space num)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159835 (h0 : topological_space (linear_ordered_semiring (semiring (has_top empty)))) : path_connected_space (linear_ordered_semiring (semiring (has_top empty))) := sorry --non-trivial
lemma new_lemma_159836 (h0 : function.extfun Type ring) : @is_domain.{0} to_additive.value_type (@function.extfun_app.{2 1} Type ring.{0} h0 to_additive.value_type)  := sorry --non-trivial
lemma new_lemma_159837 (h0 : topological_space (comm_group (has_to_string (cancel_monoid (option pos))))) : t1_space (comm_group (has_to_string (cancel_monoid (option pos)))) := sorry --non-trivial
lemma new_lemma_159838 (h0 : function.extfun Type group) : @is_cyclic.{0} (add_group.{0} empty) (@function.extfun_app.{2 1} Type group.{0} h0 (add_group.{0} empty))  := sorry --non-trivial
lemma new_lemma_159839 (h0 : uniform_space (with_bot linarith.ineq)) : complete_space (with_bot linarith.ineq) := sorry --non-trivial
lemma new_lemma_159840 (h0 : with_bot (ulower Prop)) (h1 : ne h0 has_bot.bot) (h2 : list (ulower Prop)) : @ulower.up.{0} Prop encodable.Prop (@list.ilast'.{0} (@ulower.{0} Prop encodable.Prop) (@with_bot.unbot.{0} (@ulower.{0} Prop encodable.Prop) h0 h1) h2)  := sorry --non-trivial
lemma new_lemma_159841 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @totally_separated_space.{0} (normed_group.{0} linarith.ineq) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (normed_group.{0} linarith.ineq))  := sorry --non-trivial
lemma new_lemma_159842 (h0 : has_mem.mem (has_top fun_info) has_emptyc.emptyc) : @add_monoid.fg.{0} (has_top.{0} fun_info) (@finset.pi.empty.{1 0} Type add_monoid.{0} (has_top.{0} fun_info) h0)  := sorry --non-trivial
lemma new_lemma_159843 (h0 : ring (has_append (has_nnnorm reducibility_hints))) : is_domain (has_append (has_nnnorm reducibility_hints)) := sorry --non-trivial
lemma new_lemma_159844 (h0 : list Prop) : list.head (id h0) := sorry --non-trivial
lemma new_lemma_159845 (h0 : ring (normed_field (has_nnnorm (has_nnnorm (has_ssubset fun_info))))) : is_domain (normed_field (has_nnnorm (has_nnnorm (has_ssubset fun_info)))) := sorry --non-trivial
lemma new_lemma_159846 (h0 : fin has_zero.zero) : @is_cyclic.{0} (boolean_algebra.{0} linarith.comp) (@matrix.vec_empty.{0} (group.{0} (boolean_algebra.{0} linarith.comp)) h0)  := sorry --non-trivial
lemma new_lemma_159847 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_principal_ideal_ring.{0} (semiring.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 ring.{0}) (semiring.{0} empty))  := sorry --non-trivial
lemma new_lemma_159848 (h4 h5 : multiset (mul_one_class (mul_one_class (mul_one_class std_gen)))) : multiset.subset h4 h5 := sorry --non-trivial
lemma new_lemma_159849 (h0 : not (function.extfun Type add_monoid -> false)) : @add_monoid.fg.{0} (linear_ordered_semiring.{0} fun_info) (@function.extfun_app.{2 1} Type add_monoid.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type add_monoid.{0}) h0) (linear_ordered_semiring.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_159850 (h0 : function.extfun Type (functor.comp list add_cancel_monoid)) : palindrome (functor.comp.run (function.extfun_app h0 pos)) := sorry --non-trivial
lemma new_lemma_159851 (h0 : topological_space (has_top (has_ssubset (has_inv to_additive.value_type)))) : irreducible_space (has_top (has_ssubset (has_inv to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_159852 (h0 : add_monoid (ordered_cancel_add_comm_monoid empty)) : add_monoid.fg (ordered_cancel_add_comm_monoid empty) := sorry --non-trivial
lemma new_lemma_159853 (h0 : group (has_inv char)) : is_cyclic (has_inv char) := sorry --non-trivial
lemma new_lemma_159854 (h0 : functor.add_const (topological_space (complete_distrib_lattice linarith.comp)) Type) : @topological_space.separable_space.{0} (complete_distrib_lattice.{0} linarith.comp) (@functor.add_const.run.{0 1} (topological_space.{0} (complete_distrib_lattice.{0} linarith.comp)) Type h0)  := sorry --non-trivial
lemma new_lemma_159855 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @t0_space.{0} (complete_semilattice_Sup.{0} num) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (complete_semilattice_Sup.{0} num))  := sorry --non-trivial
lemma new_lemma_159856 (h0 : complete_lattice (semi_normed_ring (with_bot linarith.comp_source))) : complete_lattice.is_Sup_finite_compact (semi_normed_ring (with_bot linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_159857 (h0 : functor.add_const (topological_space (has_Inf pos)) (ring Type)) : @totally_disconnected_space.{0} (has_Inf.{0} pos) (@functor.add_const.run.{0 1} (topological_space.{0} (has_Inf.{0} pos)) (ring.{1} Type) h0)  := sorry --non-trivial
lemma new_lemma_159858 (h0 : functor.add_const (topological_space (sub_neg_monoid name)) name) : @regular_space.{0} (sub_neg_monoid.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (sub_neg_monoid.{0} name)) name h0)  := sorry --non-trivial
lemma new_lemma_159859 (h0 : functor.add_const (complete_lattice (has_add name)) pos) : @complete_lattice.is_Sup_finite_compact.{0} (has_add.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_add.{0} name)) pos h0)  := sorry --non-trivial
lemma new_lemma_159860 (h0 : function.extfun Type cancel_comm_monoid_with_zero) : @unique_factorization_monoid.{0} (has_add.{0} ennreal) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} h0 (has_add.{0} ennreal))  := sorry --non-trivial
lemma new_lemma_159861 (h1 : measurable_space linarith.comp_source) (h2 : filter linarith.comp_source) : filter.is_measurably_generated h2 := sorry --non-trivial
lemma new_lemma_159862 (h0 : not (function.extfun Type ring -> false)) : @rank_condition.{0} (has_one.{0} num) (@function.extfun_app.{2 1} Type ring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type ring.{0}) h0) (has_one.{0} num))  := sorry --non-trivial
lemma new_lemma_159863 (h0 : not (cancel_comm_monoid_with_zero (mul_zero_class num) -> false)) : @unique_factorization_monoid.{0} (mul_zero_class.{0} num) (@classical.by_contradiction'.{1} (cancel_comm_monoid_with_zero.{0} (mul_zero_class.{0} num)) h0)  := sorry --non-trivial
lemma new_lemma_159864 (h0 : has_top (has_top (random_gen fun_info)) -> Prop) : @infi.{0 1} Prop (@conditionally_complete_lattice.to_has_Inf.{0} Prop (@complete_lattice.to_conditionally_complete_lattice.{0} Prop Prop.complete_lattice)) (has_top.{0} (has_top.{0} (random_gen.{0} fun_info))) h0  := sorry --non-trivial
lemma new_lemma_159865 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (has_add.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_add.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_159866 (h1 : uniform_space (has_compl to_additive.value_type)) : complete_space (has_compl to_additive.value_type) := sorry --non-trivial
lemma new_lemma_159867 (h0 : topological_space (normed_group (metric_space (semiring linarith.comp)))) : totally_separated_space (normed_group (metric_space (semiring linarith.comp))) := sorry --non-trivial
lemma new_lemma_159868 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (with_bot.{0} fun_info) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (with_bot.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_159869 (h0 : has_mem.mem (has_norm unsigned) has_emptyc.emptyc) : @is_add_cyclic.{0} (has_norm.{0} unsigned) (@finset.pi.empty.{1 0} Type add_group.{0} (has_norm.{0} unsigned) h0)  := sorry --non-trivial
lemma new_lemma_159870 (h0 : functor.add_const (topological_space (comm_group pos)) pos) : @discrete_topology.{0} (comm_group.{0} pos) (@functor.add_const.run.{0 0} (topological_space.{0} (comm_group.{0} pos)) pos h0)  := sorry --non-trivial
lemma new_lemma_159871 (h0 : functor.add_const (group pos) pos) : @group.fg.{0} pos (@functor.add_const.run.{0 0} (group.{0} pos) pos h0)  := sorry --non-trivial
lemma new_lemma_159872 (h0 : has_mul (distrib_lattice fun_info)) (h1 : has_zero (distrib_lattice fun_info)) : no_zero_divisors (distrib_lattice fun_info) := sorry --non-trivial
lemma new_lemma_159873 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (linear_ordered_semiring.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (linear_ordered_semiring.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159874 (h0 : has_mem.mem (linear_ordered_semiring linarith.comp) has_emptyc.emptyc) : @strong_rank_condition.{0} (linear_ordered_semiring.{0} linarith.comp) (@finset.pi.empty.{1 0} Type ring.{0} (linear_ordered_semiring.{0} linarith.comp) h0)  := sorry --non-trivial
lemma new_lemma_159875 (h0 : ring (semiring (has_top (has_norm (has_top (has_norm linarith.comp_source)))))) : is_domain (semiring (has_top (has_norm (has_top (has_norm linarith.comp_source))))) := sorry --non-trivial
lemma new_lemma_159876 (h0 : functor.add_const (finset (comm_group pos)) ennreal) : finset.nonempty (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159877 (h0 : ring (has_nndist (finset linarith.comp))) : strong_rank_condition (has_nndist (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_159878 (h0 : ring (monoid_with_zero (option pos))) : is_domain (monoid_with_zero (option pos)) := sorry --non-trivial
lemma new_lemma_159879 (h0 : group (linear_ordered_comm_ring (semiring (semiring congr_arg_kind)))) : normalizer_condition (linear_ordered_comm_ring (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_159880 (h0 : add_group (measurable_space.dynkin_system (has_norm unsigned))) : is_add_cyclic (measurable_space.dynkin_system (has_norm unsigned)) := sorry --non-trivial
lemma new_lemma_159881 (h0 : topological_space (with_bot (semiring empty))) : preirreducible_space (with_bot (semiring empty)) := sorry --non-trivial
lemma new_lemma_159882 (h0 : has_le (with_bot linarith.comp)) (h1 : not (bounded_order (with_bot linarith.comp) -> false)) : @is_simple_order.{0} (with_bot.{0} linarith.comp) h0 (@classical.by_contradiction'.{1} (@bounded_order.{0} (with_bot.{0} linarith.comp) h0) h1)  := sorry --non-trivial
lemma new_lemma_159883 (h0 : function.extfun nat fin) : @rank_condition.{0} (has_add.{0} real) (@matrix.vec_empty.{0} (ring.{0} (has_add.{0} real)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_159884 (h0 : functor.add_const (function.extfun (Type 1) topological_space) Type) : @preconnected_space.{1} (semigroup.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} (@functor.add_const.run.{2 1} (function.extfun.{3 2} (Type 1) topological_space.{1}) Type h0) (semigroup.{1} Type))  := sorry --non-trivial
lemma new_lemma_159885 (h0 : list (boolean_algebra (finset Type))) : palindrome h0 := sorry --non-trivial
lemma new_lemma_159886 (h0 : ring (linear_ordered_add_comm_group to_additive.value_type)) : is_domain (linear_ordered_add_comm_group to_additive.value_type) := sorry --non-trivial
lemma new_lemma_159887 (h0 : not (ring (has_append linarith.ineq) -> false)) : @strong_rank_condition.{0} (has_append.{0} linarith.ineq) (@classical.by_contradiction'.{1} (ring.{0} (has_append.{0} linarith.ineq)) h0)  := sorry --non-trivial
lemma new_lemma_159888 (h1 : filter (fintype to_additive.value_type)) : filter.ne_bot h1 := sorry --non-trivial
lemma new_lemma_159889 (h0 : functor.add_const (ordered_comm_monoid (canonically_ordered_comm_semiring Type)) pos) : @has_exists_mul_of_le.{1} (canonically_ordered_comm_semiring.{1} Type) (@functor.add_const.run.{1 0} (ordered_comm_monoid.{1} (canonically_ordered_comm_semiring.{1} Type)) pos h0)  := sorry --non-trivial
lemma new_lemma_159890 (h0 : not (function.extfun (Type -> Type) (function.extfun Type) -> false)) : @locally_compact_space.{0} (random_gen.{0} linarith.comp_source) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) (@classical.by_contradiction'.{2} (function.extfun.{2 2} (Type → Type) (function.extfun.{2 1} Type)) h0) topological_space.{0}) (random_gen.{0} linarith.comp_source))  := sorry --non-trivial
lemma new_lemma_159891 (h0 : cancel_comm_monoid_with_zero (add_group (has_top empty))) : unique_factorization_monoid (add_group (has_top empty)) := sorry --non-trivial
lemma new_lemma_159892 (h0 : ring (distrib (fintype char))) : is_domain (distrib (fintype char)) := sorry --non-trivial
lemma new_lemma_159893 (h0 : monoid (has_to_string (boolean_algebra linarith.comp))) : monoid.fg (has_to_string (boolean_algebra linarith.comp)) := sorry --non-trivial
lemma new_lemma_159894 (h0 : topological_space (add_cancel_monoid (has_Inf (has_Inf Type)))) : totally_disconnected_space (add_cancel_monoid (has_Inf (has_Inf Type))) := sorry --non-trivial
lemma new_lemma_159895 (h0 : function.extfun Type topological_space) : @t0_space.{0} (finset.{0} linarith.comp) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (finset.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_159896 (h0 : complete_lattice (semi_normed_ring (denumerable linarith.ineq))) : is_compactly_generated (semi_normed_ring (denumerable linarith.ineq)) := sorry --non-trivial
lemma new_lemma_159897 (h0 : functor.comp uniform_space comm_group (has_add environment.implicit_infer_kind)) : @separated_space.{0} (comm_group.{0} (has_add.{0} environment.implicit_infer_kind)) (@functor.comp.run.{0 0 0} uniform_space.{0} comm_group.{0} (has_add.{0} environment.implicit_infer_kind) h0)  := sorry --non-trivial
lemma new_lemma_159898 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_lattice.is_Sup_finite_compact.{0} (has_neg.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (has_neg.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_159899 (h0 : monoid (semigroup (has_to_string (finset (finset Type))))) : monoid.fg (semigroup (has_to_string (finset (finset Type)))) := sorry --non-trivial
lemma new_lemma_159900 (h0 : topological_space (canonically_ordered_monoid linarith.comp)) : totally_separated_space (canonically_ordered_monoid linarith.comp) := sorry --non-trivial
lemma new_lemma_159901 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_atomistic.{0} (metric_space.{0} num) (@function.extfun_app.{2 1} Type complete_lattice.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 complete_lattice.{0}) (metric_space.{0} num))  := sorry --non-trivial
lemma new_lemma_159902 (h0 : topological_space (monoid (option congr_arg_kind))) : t0_space (monoid (option congr_arg_kind)) := sorry --non-trivial
lemma new_lemma_159903 (h1 : set (linarith.ineq -> char)) : set.separates_points h1 := sorry --non-trivial
lemma new_lemma_159904 (h0 : function.extfun nat fin) : @is_principal_ideal_ring.{1} (normed_lattice_add_comm_group.{1} Type) (@matrix.vec_empty.{1} (ring.{1} (normed_lattice_add_comm_group.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_159905 (h0 : not (function.extfun Type group -> false)) : @group.fg.{0} (@id.{2} Type linarith.comp) (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) (@id.{2} Type linarith.comp))  := sorry --non-trivial
lemma new_lemma_159906 (h0 : function.extfun Type (functor.add_const (function.extfun Type group))) : @is_cyclic.{0} (add_cancel_monoid.{0} pos) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) pos (@function.extfun_app.{2 2} Type (functor.add_const.{1 0} (function.extfun.{2 1} Type group.{0})) h0 pos)) (add_cancel_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_159907 (h0 : topological_space (non_unital_non_assoc_semiring enat)) : path_connected_space (non_unital_non_assoc_semiring enat) := sorry --non-trivial
lemma new_lemma_159908 (h0 : ring (has_nndist (comm_group (comm_group pos)))) : is_principal_ideal_ring (has_nndist (comm_group (comm_group pos))) := sorry --non-trivial
lemma new_lemma_159909 (h0 : function.extfun (finset Type) (has_mem.mem (has_top congr_arg_kind))) : @locally_compact_space.{0} (has_top.{0} congr_arg_kind) (@finset.pi.empty.{1 0} Type topological_space.{0} (has_top.{0} congr_arg_kind) (@function.extfun_app.{2 0} (finset.{1} Type) (@has_mem.mem.{1 1} Type (finset.{1} Type) (@finset.has_mem.{1} Type) (has_top.{0} congr_arg_kind)) h0 (@has_emptyc.emptyc.{1} (finset.{1} Type) (@finset.has_emptyc.{1} Type))))  := sorry --non-trivial
lemma new_lemma_159910 (h0 : topological_space (has_zero (has_to_string (has_add Type)))) : regular_space (has_zero (has_to_string (has_add Type))) := sorry --non-trivial
lemma new_lemma_159911 (h0 : not (function.extfun Type group -> false)) : @is_cyclic.{0} num (@function.extfun_app.{2 1} Type group.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type group.{0}) h0) num)  := sorry --non-trivial
lemma new_lemma_159912 (h0 : topological_space (complete_semilattice_Sup (random_gen (random_gen to_additive.value_type)))) : locally_compact_space (complete_semilattice_Sup (random_gen (random_gen to_additive.value_type))) := sorry --non-trivial
lemma new_lemma_159913 (h0 : ring (non_unital_non_assoc_semiring (has_lt string_imp))) : is_domain (non_unital_non_assoc_semiring (has_lt string_imp)) := sorry --non-trivial
lemma new_lemma_159914 (h0 : functor.add_const (function.extfun Type group) (semigroup environment.implicit_infer_kind)) : @is_cyclic.{0} (semigroup.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type group.{0} (@functor.add_const.run.{1 0} (function.extfun.{2 1} Type group.{0}) (semigroup.{0} environment.implicit_infer_kind) h0) (semigroup.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_159915 (h0 : functor.add_const (topological_space (cancel_monoid Type)) name) : @regular_space.{1} (cancel_monoid.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (cancel_monoid.{1} Type)) name h0)  := sorry --non-trivial
lemma new_lemma_159916 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @is_add_cyclic.{0} (has_Inf.{0} linarith.comp) (@function.extfun_app.{2 1} Type add_group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 add_group.{0}) (has_Inf.{0} linarith.comp))  := sorry --non-trivial
lemma new_lemma_159917 (h0 : functor.add_const (filter (comm_group name)) (option pos)) : countable_Inter_filter (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159918 (h0 : topological_space (non_unital_non_assoc_semiring std_gen)) : path_connected_space (non_unital_non_assoc_semiring std_gen) := sorry --non-trivial
lemma new_lemma_159919 (h0 : uniform_space (linear_ordered_add_comm_group (has_nnnorm linarith.comp_source))) : complete_space (linear_ordered_add_comm_group (has_nnnorm linarith.comp_source)) := sorry --non-trivial
lemma new_lemma_159920 (h0 : functor.add_const (complete_lattice (has_to_string name)) linarith.comp) : @is_atomistic.{0} (has_to_string.{0} name) (@functor.add_const.run.{0 0} (complete_lattice.{0} (has_to_string.{0} name)) linarith.comp h0)  := sorry --non-trivial
lemma new_lemma_159921 (h0 : functor.add_const (topological_space (has_zero Type)) (finset pos)) : @t0_space.{1} (has_zero.{1} Type) (@functor.add_const.run.{1 0} (topological_space.{1} (has_zero.{1} Type)) (finset.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_159922 (h0 : add_monoid (ordered_ring empty)) : add_monoid.fg (ordered_ring empty) := sorry --non-trivial
lemma new_lemma_159923 (h1 : topological_space ordering) (h2 : preorder ordering) : order_closed_topology ordering := sorry --non-trivial
lemma new_lemma_159924 (h0 : auto.case_option -> auto.case_option -> Prop) : reflexive h0 := sorry --non-trivial
lemma new_lemma_159925 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @unique_factorization_monoid.{0} (normed_comm_ring.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type cancel_comm_monoid_with_zero.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 cancel_comm_monoid_with_zero.{0}) (normed_comm_ring.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_159926 (h0 : functor.add_const (ring (add_cancel_monoid num)) unsigned) : @is_principal_ideal_ring.{0} (add_cancel_monoid.{0} num) (@functor.add_const.run.{0 0} (ring.{0} (add_cancel_monoid.{0} num)) unsigned h0)  := sorry --non-trivial
lemma new_lemma_159927 (h0 : cancel_comm_monoid_with_zero (left_cancel_semigroup (semiring (semiring congr_arg_kind)))) : unique_factorization_monoid (left_cancel_semigroup (semiring (semiring congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_159928 (h0 : has_Inf (has_Inf real) -> has_Inf (has_Inf real) -> Prop) : transitive h0 := sorry --non-trivial
lemma new_lemma_159929 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @complete_space.{0} (has_norm.{0} num) (@function.extfun_app.{2 1} Type uniform_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 uniform_space.{0}) (has_norm.{0} num))  := sorry --non-trivial
lemma new_lemma_159930 (h0 : function.extfun Type topological_space) : @totally_separated_space.{0} (has_neg.{0} environment.implicit_infer_kind) (@function.extfun_app.{2 1} Type topological_space.{0} h0 (has_neg.{0} environment.implicit_infer_kind))  := sorry --non-trivial
lemma new_lemma_159931 (h0 : function.extfun (Type 1) topological_space) : @preirreducible_space.{1} (boolean_algebra.{1} Type) (@function.extfun_app.{3 2} (Type 1) topological_space.{1} h0 (boolean_algebra.{1} Type))  := sorry --non-trivial
lemma new_lemma_159932 (h1 : preorder char) (h2 : has_lt Type) (h3 : Type) : covby h3 (omega_complete_partial_order.chain char) := sorry --non-trivial
lemma new_lemma_159933 (h0 : function.extfun nat fin) : @is_simple_group.{1} (sub_neg_monoid.{1} Type) (@matrix.vec_empty.{1} (group.{1} (sub_neg_monoid.{1} Type)) (@function.extfun_app.{1 1} nat fin h0 (@has_zero.zero.{0} nat nat.has_zero)))  := sorry --non-trivial
lemma new_lemma_159934 (h0 : complete_lattice (with_zero (random_gen string_imp))) : is_compactly_generated (with_zero (random_gen string_imp)) := sorry --non-trivial
lemma new_lemma_159935 (h0 : functor.comp topological_space semigroup name) : @preirreducible_space.{0} (semigroup.{0} name) (@functor.comp.run.{0 0 0} topological_space.{0} semigroup.{0} name h0)  := sorry --non-trivial
lemma new_lemma_159936 (h0 : monoid (complete_semilattice_Sup (random_gen (random_gen congr_arg_kind)))) : monoid.fg (complete_semilattice_Sup (random_gen (random_gen congr_arg_kind))) := sorry --non-trivial
lemma new_lemma_159937 (h0 : topological_space (has_star num)) : locally_compact_space (has_star num) := sorry --non-trivial
lemma new_lemma_159938 (h0 : topological_space (has_zero (option (has_to_string pos)))) : path_connected_space (has_zero (option (has_to_string pos))) := sorry --non-trivial
lemma new_lemma_159939 (h1 : topological_space (with_zero to_additive.value_type)) : totally_disconnected_space (with_zero to_additive.value_type) := sorry --non-trivial
lemma new_lemma_159940 (h0 : complete_lattice (topological_space (has_ssubset char))) : is_compactly_generated (topological_space (has_ssubset char)) := sorry --non-trivial
lemma new_lemma_159941 (h0 : group (add_cancel_monoid (finset linarith.comp))) : is_cyclic (add_cancel_monoid (finset linarith.comp)) := sorry --non-trivial
lemma new_lemma_159942 (h0 : has_mem.mem topological_space has_emptyc.emptyc) : @totally_disconnected_space.{0} (has_norm.{0} congr_arg_kind) (@function.extfun_app.{2 1} Type topological_space.{0} (@finset.pi.empty.{1 1} (Type → Type) (function.extfun.{2 1} Type) topological_space.{0} h0) (has_norm.{0} congr_arg_kind))  := sorry --non-trivial
lemma new_lemma_159943 (h0 : function.extfun Type ring) : @is_domain.{0} (left_cancel_monoid.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (left_cancel_monoid.{0} empty))  := sorry --non-trivial
lemma new_lemma_159944 (h0 : function.extfun Type uniform_space) : @complete_space.{0} (boolean_algebra.{0} pos) (@function.extfun_app.{2 1} Type uniform_space.{0} h0 (boolean_algebra.{0} pos))  := sorry --non-trivial
lemma new_lemma_159945 (h0 : topological_space (add_comm_monoid environment.implicit_infer_kind)) : t1_space (add_comm_monoid environment.implicit_infer_kind) := sorry --non-trivial
lemma new_lemma_159946 (h0 : group (linear_ordered_add_comm_group (has_nnnorm (linear_ordered_add_comm_group fun_info)))) : is_cyclic (linear_ordered_add_comm_group (has_nnnorm (linear_ordered_add_comm_group fun_info))) := sorry --non-trivial
lemma new_lemma_159947 (h0 : filter (comm_group (comm_group name))) : countable_Inter_filter h0 := sorry --non-trivial
lemma new_lemma_159948 (h0 : functor.add_const (ordered_comm_monoid (boolean_algebra pos)) name) : @has_exists_mul_of_le.{0} (boolean_algebra.{0} pos) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (boolean_algebra.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_159949 (h0 : not (function.extfun Type semiring -> false)) : @is_noetherian_ring.{0} (has_union.{0} unsigned) (@function.extfun_app.{2 1} Type semiring.{0} (@classical.by_contradiction'.{2} (function.extfun.{2 1} Type semiring.{0}) h0) (has_union.{0} unsigned))  := sorry --non-trivial
lemma new_lemma_159950 (h1 : ring (nondiscrete_normed_field (normed_field char))) : strong_rank_condition (nondiscrete_normed_field (normed_field char)) := sorry --non-trivial
lemma new_lemma_159951 (h0 : topological_space (sub_neg_monoid (ordered_comm_monoid pos))) : t0_space (sub_neg_monoid (ordered_comm_monoid pos)) := sorry --non-trivial
lemma new_lemma_159952 (h0 : add_monoid (ordered_comm_ring (has_Inf pos))) : add_monoid.fg (ordered_comm_ring (has_Inf pos)) := sorry --non-trivial
lemma new_lemma_159953 (h1 : has_coe (mul_one_class (mul_one_class fun_info)) Prop) (h2 : mul_one_class (mul_one_class fun_info)) : @coe_b.{1 1} (mul_one_class.{0} (mul_one_class.{0} fun_info)) Prop h1 h2  := sorry --non-trivial
lemma new_lemma_159954 (h0 : functor.add_const (uniform_space (boolean_algebra.core pos)) name) : @complete_space.{0} (boolean_algebra.core.{0} pos) (@functor.add_const.run.{0 0} (uniform_space.{0} (boolean_algebra.core.{0} pos)) name h0)  := sorry --non-trivial
lemma new_lemma_159955 (h0 : complete_lattice linarith.comp) : is_atomistic linarith.comp := sorry --non-trivial
lemma new_lemma_159956 (h0 : functor.comp filter has_to_string Type) : countable_Inter_filter (functor.comp.run h0) := sorry --non-trivial
lemma new_lemma_159957 (h0 : functor.comp cancel_comm_monoid_with_zero finset environment.implicit_infer_kind) : @unique_factorization_monoid.{0} (finset.{0} environment.implicit_infer_kind) (@functor.comp.run.{0 0 0} cancel_comm_monoid_with_zero.{0} finset.{0} environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_159958 (h0 : function.extfun Type complete_lattice) : @is_atomistic.{0} (distrib_lattice.{0} fun_info) (@function.extfun_app.{2 1} Type complete_lattice.{0} h0 (distrib_lattice.{0} fun_info))  := sorry --non-trivial
lemma new_lemma_159959 (h0 : topological_space (complete_semilattice_Sup fun_info)) : locally_compact_space (complete_semilattice_Sup fun_info) := sorry --non-trivial
lemma new_lemma_159960 (h0 : functor.add_const (ordered_comm_monoid (ring name)) (has_Inf (has_pos_part (has_pos_part (has_pos_part pos))))) : @has_exists_mul_of_le.{0} (ring.{0} name) (@functor.add_const.run.{0 0} (ordered_comm_monoid.{0} (ring.{0} name)) (has_Inf.{0} (has_pos_part.{0} (has_pos_part.{0} (has_pos_part.{0} pos)))) h0)  := sorry --non-trivial
lemma new_lemma_159961 (h1 : group (canonically_ordered_add_monoid string_imp)) : is_cyclic (canonically_ordered_add_monoid string_imp) := sorry --non-trivial
lemma new_lemma_159962 (h0 : ring (mul_zero_class congr_arg_kind)) : is_principal_ideal_ring (mul_zero_class congr_arg_kind) := sorry --non-trivial
lemma new_lemma_159963 (h0 : functor.add_const (ring (has_to_string pos)) Type) : @is_domain.{0} (has_to_string.{0} pos) (@functor.add_const.run.{0 1} (ring.{0} (has_to_string.{0} pos)) Type h0)  := sorry --non-trivial
lemma new_lemma_159964 (h0 : functor.add_const (topological_space (boolean_algebra.core linarith.comp)) pos) : @t0_space.{0} (boolean_algebra.core.{0} linarith.comp) (@functor.add_const.run.{0 0} (topological_space.{0} (boolean_algebra.core.{0} linarith.comp)) pos h0)  := sorry --non-trivial
lemma new_lemma_159965 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @normalizer_condition.{0} (@id.{2} Type string_imp) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (@id.{2} Type string_imp))  := sorry --non-trivial
lemma new_lemma_159966 (h0 : topological_space (measure_theory.measure_space unsigned)) : path_connected_space (measure_theory.measure_space unsigned) := sorry --non-trivial
lemma new_lemma_159967 (h0 h1 : multiset (nondiscrete_normed_field reducibility_hints)) : multiset.disjoint h0 h1 := sorry --non-trivial
lemma new_lemma_159968 (h0 : uniform_space (id (has_inv (random_gen string_imp)))) : complete_space (id (has_inv (random_gen string_imp))) := sorry --non-trivial
lemma new_lemma_159969 (h0 : topological_space (cancel_monoid empty)) : locally_compact_space (cancel_monoid empty) := sorry --non-trivial
lemma new_lemma_159970 (h0 : list (with_bot Type)) : palindrome h0 := sorry --non-trivial
lemma new_lemma_159971 (h0 : group (mul_zero_class (cancel_monoid Type))) : is_simple_group (mul_zero_class (cancel_monoid Type)) := sorry --non-trivial
lemma new_lemma_159972 (h0 : functor.add_const (topological_space (has_neg_part name)) (has_neg pos)) : @preconnected_space.{0} (has_neg_part.{0} name) (@functor.add_const.run.{0 0} (topological_space.{0} (has_neg_part.{0} name)) (has_neg.{0} pos) h0)  := sorry --non-trivial
lemma new_lemma_159973 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @discrete_topology.{0} (has_pos_part.{0} pos) (@function.extfun_app.{2 1} Type topological_space.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 topological_space.{0}) (has_pos_part.{0} pos))  := sorry --non-trivial
lemma new_lemma_159974 (h0 : functor.add_const (monoid (add_cancel_monoid pos)) environment.implicit_infer_kind) : @monoid.fg.{0} (add_cancel_monoid.{0} pos) (@functor.add_const.run.{0 0} (monoid.{0} (add_cancel_monoid.{0} pos)) environment.implicit_infer_kind h0)  := sorry --non-trivial
lemma new_lemma_159975 (h1 : add_group (has_lt reducibility_hints)) : is_add_cyclic (has_lt reducibility_hints) := sorry --non-trivial
lemma new_lemma_159976 (h0 : function.extfun (Type -> Type) (function.extfun Type)) : @group.fg.{0} (has_nnnorm.{0} (has_nnnorm.{0} to_additive.value_type)) (@function.extfun_app.{2 1} Type group.{0} (@function.extfun_app.{2 2} (Type → Type) (function.extfun.{2 1} Type) h0 group.{0}) (has_nnnorm.{0} (has_nnnorm.{0} to_additive.value_type)))  := sorry --non-trivial
lemma new_lemma_159977 (h0 : filter (normed_comm_ring pos)) : filter.ne_bot h0 := sorry --non-trivial
lemma new_lemma_159978 (h0 : functor.add_const (add_group (has_to_string environment.implicit_infer_kind)) name) : @is_add_cyclic.{0} (has_to_string.{0} environment.implicit_infer_kind) (@functor.add_const.run.{0 0} (add_group.{0} (has_to_string.{0} environment.implicit_infer_kind)) name h0)  := sorry --non-trivial
lemma new_lemma_159979 (h0 : add_group (linear_ordered_comm_ring num)) : is_add_cyclic (linear_ordered_comm_ring num) := sorry --non-trivial
lemma new_lemma_159980 (h0 : topological_space (boolean_algebra (finset Type))) : discrete_topology (boolean_algebra (finset Type)) := sorry --non-trivial
lemma new_lemma_159981 (h0 : topological_space (canonically_ordered_comm_semiring (has_to_string pos))) : t1_space (canonically_ordered_comm_semiring (has_to_string pos)) := sorry --non-trivial
lemma new_lemma_159982 (h1 : ring (linear_ordered_comm_group_with_zero string_imp)) : is_domain (linear_ordered_comm_group_with_zero string_imp) := sorry --non-trivial
lemma new_lemma_159983 (h0 : function.extfun Type add_monoid) : @add_monoid.fg.{0} (boolean_algebra.{0} real) (@function.extfun_app.{2 1} Type add_monoid.{0} h0 (boolean_algebra.{0} real))  := sorry --non-trivial
lemma new_lemma_159984 (h0 : finset (left_cancel_semigroup (option (option unsigned)))) : finset.nonempty h0 := sorry --non-trivial
lemma new_lemma_159985 (h0 : group (canonically_ordered_add_monoid (option empty))) : group.fg (canonically_ordered_add_monoid (option empty)) := sorry --non-trivial
lemma new_lemma_159986 (h0 : complete_lattice (has_div (non_unital_non_assoc_semiring reducibility_hints))) : is_compactly_generated (has_div (non_unital_non_assoc_semiring reducibility_hints)) := sorry --non-trivial
lemma new_lemma_159987 (h0 : function.extfun Type (prod (mul_zero_class pos))) : id_rel (function.extfun_app h0 (mul_zero_class pos)) := sorry --non-trivial
lemma new_lemma_159988 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (ordered_cancel_add_comm_monoid.{0} pos) (@function.extfun_app.{2 1} Type ring.{0} h0 (ordered_cancel_add_comm_monoid.{0} pos))  := sorry --non-trivial
lemma new_lemma_159989 (h0 : functor.add_const (list ennreal) (option (option ennreal))) : palindrome (functor.add_const.run h0) := sorry --non-trivial
lemma new_lemma_159990 (h0 : topological_space (measurable_space unsigned)) : totally_disconnected_space (measurable_space unsigned) := sorry --non-trivial
lemma new_lemma_159991 (h0 : group (has_zero (semigroup name))) : group.fg (has_zero (semigroup name)) := sorry --non-trivial
lemma new_lemma_159992 (h0 : topological_space (canonically_ordered_monoid (has_Inf linarith.comp))) : preconnected_space (canonically_ordered_monoid (has_Inf linarith.comp)) := sorry --non-trivial
lemma new_lemma_159993 (h0 : ring (generalized_boolean_algebra (has_add (has_nndist (ring Type))))) : is_principal_ideal_ring (generalized_boolean_algebra (has_add (has_nndist (ring Type)))) := sorry --non-trivial
lemma new_lemma_159994 (h0 : not (multiset (ordered_add_comm_group char) -> false)) (h1 : multiset (ordered_add_comm_group char)) : multiset.disjoint (classical.by_contradiction' h0) h1 := sorry --non-trivial
lemma new_lemma_159995 (h0 : topological_space (mul_zero_class (finset (has_add (has_add Type))))) : path_connected_space (mul_zero_class (finset (has_add (has_add Type)))) := sorry --non-trivial
lemma new_lemma_159996 (h0 : topological_space (pseudo_metric_space (option ennreal))) : discrete_topology (pseudo_metric_space (option ennreal)) := sorry --non-trivial
lemma new_lemma_159997 (h0 : add_group (has_ssubset (has_inv linarith.ineq))) : is_add_cyclic (has_ssubset (has_inv linarith.ineq)) := sorry --non-trivial
lemma new_lemma_159998 (h0 : function.extfun Type ring) : @is_principal_ideal_ring.{0} (is_R_or_C.{0} empty) (@function.extfun_app.{2 1} Type ring.{0} h0 (is_R_or_C.{0} empty))  := sorry --non-trivial
lemma new_lemma_159999 (h0 : group (add_semigroup (option empty))) : normalizer_condition (add_semigroup (option empty)) := sorry --non-trivial
